jn.define("disk/rights",((t,e,s)=>{const{isEmpty:r}=t("utils/object");const{filesUpsertedFromServer:o}=t("disk/statemanager/redux/slices/files");const{selectById:n}=t("disk/statemanager/redux/slices/files/selector");const i=t("statemanager/redux/store");const{dispatch:c}=i;const a="diskmobile.Common.getTrackedByIdWithRights";const d="diskmobile.Common.getByIdWithRights";async function l(t){let e=n(i.getState(),t);const s=Boolean(e&&e.trackedId);if(!e||r(e.rights)){try{const r=s?a:d;const l=await BX.ajax.runAction(r,{data:{id:e?.trackedId??t}});if(l.errors.length>0){console.error(l.errors);return null}e=l.data.diskObject;c(o([e]));return n(i.getState(),t)}catch(t){console.error(t);return null}}return e}s.exports={fetchObjectWithRights:l}}));
//# sourceMappingURL=extension.map.js