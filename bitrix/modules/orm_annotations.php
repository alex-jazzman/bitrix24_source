<?php

/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\OrderTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Order
	 * @see \Bitrix\Sale\Internals\OrderTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_Order setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getLid()
	 * @method \Bitrix\Sale\Internals\EO_Order setLid(\string|\Bitrix\Main\DB\SqlExpression $lid)
	 * @method bool hasLid()
	 * @method bool isLidFilled()
	 * @method bool isLidChanged()
	 * @method \string remindActualLid()
	 * @method \string requireLid()
	 * @method \Bitrix\Sale\Internals\EO_Order resetLid()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetLid()
	 * @method \string fillLid()
	 * @method \string getAccountNumber()
	 * @method \Bitrix\Sale\Internals\EO_Order setAccountNumber(\string|\Bitrix\Main\DB\SqlExpression $accountNumber)
	 * @method bool hasAccountNumber()
	 * @method bool isAccountNumberFilled()
	 * @method bool isAccountNumberChanged()
	 * @method \string remindActualAccountNumber()
	 * @method \string requireAccountNumber()
	 * @method \Bitrix\Sale\Internals\EO_Order resetAccountNumber()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetAccountNumber()
	 * @method \string fillAccountNumber()
	 * @method \string getTrackingNumber()
	 * @method \Bitrix\Sale\Internals\EO_Order setTrackingNumber(\string|\Bitrix\Main\DB\SqlExpression $trackingNumber)
	 * @method bool hasTrackingNumber()
	 * @method bool isTrackingNumberFilled()
	 * @method bool isTrackingNumberChanged()
	 * @method \string remindActualTrackingNumber()
	 * @method \string requireTrackingNumber()
	 * @method \Bitrix\Sale\Internals\EO_Order resetTrackingNumber()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetTrackingNumber()
	 * @method \string fillTrackingNumber()
	 * @method \int getPaySystemId()
	 * @method \Bitrix\Sale\Internals\EO_Order setPaySystemId(\int|\Bitrix\Main\DB\SqlExpression $paySystemId)
	 * @method bool hasPaySystemId()
	 * @method bool isPaySystemIdFilled()
	 * @method bool isPaySystemIdChanged()
	 * @method \int remindActualPaySystemId()
	 * @method \int requirePaySystemId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPaySystemId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPaySystemId()
	 * @method \int fillPaySystemId()
	 * @method \int getDeliveryId()
	 * @method \Bitrix\Sale\Internals\EO_Order setDeliveryId(\int|\Bitrix\Main\DB\SqlExpression $deliveryId)
	 * @method bool hasDeliveryId()
	 * @method bool isDeliveryIdFilled()
	 * @method bool isDeliveryIdChanged()
	 * @method \int remindActualDeliveryId()
	 * @method \int requireDeliveryId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDeliveryId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDeliveryId()
	 * @method \int fillDeliveryId()
	 * @method \Bitrix\Main\Type\DateTime getDateInsert()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateInsert(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateInsert)
	 * @method bool hasDateInsert()
	 * @method bool isDateInsertFilled()
	 * @method bool isDateInsertChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateInsert()
	 * @method \Bitrix\Main\Type\DateTime requireDateInsert()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateInsert()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateInsert()
	 * @method \Bitrix\Main\Type\DateTime fillDateInsert()
	 * @method \Bitrix\Main\Type\DateTime getDateInsertShort()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateInsertShort()
	 * @method \Bitrix\Main\Type\DateTime requireDateInsertShort()
	 * @method bool hasDateInsertShort()
	 * @method bool isDateInsertShortFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateInsertShort()
	 * @method \Bitrix\Main\Type\DateTime fillDateInsertShort()
	 * @method \Bitrix\Main\Type\DateTime getDateInsertFormat()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateInsertFormat()
	 * @method \Bitrix\Main\Type\DateTime requireDateInsertFormat()
	 * @method bool hasDateInsertFormat()
	 * @method bool isDateInsertFormatFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateInsertFormat()
	 * @method \Bitrix\Main\Type\DateTime fillDateInsertFormat()
	 * @method \Bitrix\Main\Type\DateTime getDateUpdate()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateUpdate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateUpdate)
	 * @method bool hasDateUpdate()
	 * @method bool isDateUpdateFilled()
	 * @method bool isDateUpdateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime requireDateUpdate()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateUpdate()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime fillDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime getDateUpdateShort()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateUpdateShort()
	 * @method \Bitrix\Main\Type\DateTime requireDateUpdateShort()
	 * @method bool hasDateUpdateShort()
	 * @method bool isDateUpdateShortFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateUpdateShort()
	 * @method \Bitrix\Main\Type\DateTime fillDateUpdateShort()
	 * @method \string getProductsQuant()
	 * @method \string remindActualProductsQuant()
	 * @method \string requireProductsQuant()
	 * @method bool hasProductsQuant()
	 * @method bool isProductsQuantFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetProductsQuant()
	 * @method \string fillProductsQuant()
	 * @method \string getPersonTypeId()
	 * @method \Bitrix\Sale\Internals\EO_Order setPersonTypeId(\string|\Bitrix\Main\DB\SqlExpression $personTypeId)
	 * @method bool hasPersonTypeId()
	 * @method bool isPersonTypeIdFilled()
	 * @method bool isPersonTypeIdChanged()
	 * @method \string remindActualPersonTypeId()
	 * @method \string requirePersonTypeId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPersonTypeId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPersonTypeId()
	 * @method \string fillPersonTypeId()
	 * @method \int getUserId()
	 * @method \Bitrix\Sale\Internals\EO_Order setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \int remindActualUserId()
	 * @method \int requireUserId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetUserId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetUserId()
	 * @method \int fillUserId()
	 * @method \Bitrix\Main\EO_User getUser()
	 * @method \Bitrix\Main\EO_User remindActualUser()
	 * @method \Bitrix\Main\EO_User requireUser()
	 * @method \Bitrix\Sale\Internals\EO_Order setUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetUser()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Main\EO_User fillUser()
	 * @method \boolean getPayed()
	 * @method \Bitrix\Sale\Internals\EO_Order setPayed(\boolean|\Bitrix\Main\DB\SqlExpression $payed)
	 * @method bool hasPayed()
	 * @method bool isPayedFilled()
	 * @method bool isPayedChanged()
	 * @method \boolean remindActualPayed()
	 * @method \boolean requirePayed()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPayed()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPayed()
	 * @method \boolean fillPayed()
	 * @method \boolean getIsSyncB24()
	 * @method \Bitrix\Sale\Internals\EO_Order setIsSyncB24(\boolean|\Bitrix\Main\DB\SqlExpression $isSyncB24)
	 * @method bool hasIsSyncB24()
	 * @method bool isIsSyncB24Filled()
	 * @method bool isIsSyncB24Changed()
	 * @method \boolean remindActualIsSyncB24()
	 * @method \boolean requireIsSyncB24()
	 * @method \Bitrix\Sale\Internals\EO_Order resetIsSyncB24()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetIsSyncB24()
	 * @method \boolean fillIsSyncB24()
	 * @method \Bitrix\Main\Type\DateTime getDatePayed()
	 * @method \Bitrix\Sale\Internals\EO_Order setDatePayed(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $datePayed)
	 * @method bool hasDatePayed()
	 * @method bool isDatePayedFilled()
	 * @method bool isDatePayedChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDatePayed()
	 * @method \Bitrix\Main\Type\DateTime requireDatePayed()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDatePayed()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDatePayed()
	 * @method \Bitrix\Main\Type\DateTime fillDatePayed()
	 * @method \int getEmpPayedId()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpPayedId(\int|\Bitrix\Main\DB\SqlExpression $empPayedId)
	 * @method bool hasEmpPayedId()
	 * @method bool isEmpPayedIdFilled()
	 * @method bool isEmpPayedIdChanged()
	 * @method \int remindActualEmpPayedId()
	 * @method \int requireEmpPayedId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpPayedId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpPayedId()
	 * @method \int fillEmpPayedId()
	 * @method \boolean getDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order setDeducted(\boolean|\Bitrix\Main\DB\SqlExpression $deducted)
	 * @method bool hasDeducted()
	 * @method bool isDeductedFilled()
	 * @method bool isDeductedChanged()
	 * @method \boolean remindActualDeducted()
	 * @method \boolean requireDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDeducted()
	 * @method \boolean fillDeducted()
	 * @method \Bitrix\Main\Type\DateTime getDateDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateDeducted(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateDeducted)
	 * @method bool hasDateDeducted()
	 * @method bool isDateDeductedFilled()
	 * @method bool isDateDeductedChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateDeducted()
	 * @method \Bitrix\Main\Type\DateTime requireDateDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateDeducted()
	 * @method \Bitrix\Main\Type\DateTime fillDateDeducted()
	 * @method \int getEmpDeductedId()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpDeductedId(\int|\Bitrix\Main\DB\SqlExpression $empDeductedId)
	 * @method bool hasEmpDeductedId()
	 * @method bool isEmpDeductedIdFilled()
	 * @method bool isEmpDeductedIdChanged()
	 * @method \int remindActualEmpDeductedId()
	 * @method \int requireEmpDeductedId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpDeductedId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpDeductedId()
	 * @method \int fillEmpDeductedId()
	 * @method \string getReasonUndoDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order setReasonUndoDeducted(\string|\Bitrix\Main\DB\SqlExpression $reasonUndoDeducted)
	 * @method bool hasReasonUndoDeducted()
	 * @method bool isReasonUndoDeductedFilled()
	 * @method bool isReasonUndoDeductedChanged()
	 * @method \string remindActualReasonUndoDeducted()
	 * @method \string requireReasonUndoDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order resetReasonUndoDeducted()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetReasonUndoDeducted()
	 * @method \string fillReasonUndoDeducted()
	 * @method \string getStatusId()
	 * @method \Bitrix\Sale\Internals\EO_Order setStatusId(\string|\Bitrix\Main\DB\SqlExpression $statusId)
	 * @method bool hasStatusId()
	 * @method bool isStatusIdFilled()
	 * @method bool isStatusIdChanged()
	 * @method \string remindActualStatusId()
	 * @method \string requireStatusId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetStatusId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetStatusId()
	 * @method \string fillStatusId()
	 * @method \Bitrix\Sale\Internals\EO_StatusLang getStatus()
	 * @method \Bitrix\Sale\Internals\EO_StatusLang remindActualStatus()
	 * @method \Bitrix\Sale\Internals\EO_StatusLang requireStatus()
	 * @method \Bitrix\Sale\Internals\EO_Order setStatus(\Bitrix\Sale\Internals\EO_StatusLang $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetStatus()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetStatus()
	 * @method bool hasStatus()
	 * @method bool isStatusFilled()
	 * @method bool isStatusChanged()
	 * @method \Bitrix\Sale\Internals\EO_StatusLang fillStatus()
	 * @method \Bitrix\Main\Type\DateTime getDateStatus()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateStatus(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateStatus)
	 * @method bool hasDateStatus()
	 * @method bool isDateStatusFilled()
	 * @method bool isDateStatusChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateStatus()
	 * @method \Bitrix\Main\Type\DateTime requireDateStatus()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateStatus()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateStatus()
	 * @method \Bitrix\Main\Type\DateTime fillDateStatus()
	 * @method \Bitrix\Main\Type\DateTime getDateStatusShort()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateStatusShort()
	 * @method \Bitrix\Main\Type\DateTime requireDateStatusShort()
	 * @method bool hasDateStatusShort()
	 * @method bool isDateStatusShortFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateStatusShort()
	 * @method \Bitrix\Main\Type\DateTime fillDateStatusShort()
	 * @method \int getEmpStatusId()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpStatusId(\int|\Bitrix\Main\DB\SqlExpression $empStatusId)
	 * @method bool hasEmpStatusId()
	 * @method bool isEmpStatusIdFilled()
	 * @method bool isEmpStatusIdChanged()
	 * @method \int remindActualEmpStatusId()
	 * @method \int requireEmpStatusId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpStatusId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpStatusId()
	 * @method \int fillEmpStatusId()
	 * @method \Bitrix\Main\EO_User getEmpStatusBy()
	 * @method \Bitrix\Main\EO_User remindActualEmpStatusBy()
	 * @method \Bitrix\Main\EO_User requireEmpStatusBy()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpStatusBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpStatusBy()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpStatusBy()
	 * @method bool hasEmpStatusBy()
	 * @method bool isEmpStatusByFilled()
	 * @method bool isEmpStatusByChanged()
	 * @method \Bitrix\Main\EO_User fillEmpStatusBy()
	 * @method \boolean getMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order setMarked(\boolean|\Bitrix\Main\DB\SqlExpression $marked)
	 * @method bool hasMarked()
	 * @method bool isMarkedFilled()
	 * @method bool isMarkedChanged()
	 * @method \boolean remindActualMarked()
	 * @method \boolean requireMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order resetMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetMarked()
	 * @method \boolean fillMarked()
	 * @method \Bitrix\Main\Type\DateTime getDateMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateMarked(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateMarked)
	 * @method bool hasDateMarked()
	 * @method bool isDateMarkedFilled()
	 * @method bool isDateMarkedChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateMarked()
	 * @method \Bitrix\Main\Type\DateTime requireDateMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateMarked()
	 * @method \Bitrix\Main\Type\DateTime fillDateMarked()
	 * @method \int getEmpMarkedId()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpMarkedId(\int|\Bitrix\Main\DB\SqlExpression $empMarkedId)
	 * @method bool hasEmpMarkedId()
	 * @method bool isEmpMarkedIdFilled()
	 * @method bool isEmpMarkedIdChanged()
	 * @method \int remindActualEmpMarkedId()
	 * @method \int requireEmpMarkedId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpMarkedId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpMarkedId()
	 * @method \int fillEmpMarkedId()
	 * @method \Bitrix\Main\EO_User getEmpMarkedBy()
	 * @method \Bitrix\Main\EO_User remindActualEmpMarkedBy()
	 * @method \Bitrix\Main\EO_User requireEmpMarkedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpMarkedBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpMarkedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpMarkedBy()
	 * @method bool hasEmpMarkedBy()
	 * @method bool isEmpMarkedByFilled()
	 * @method bool isEmpMarkedByChanged()
	 * @method \Bitrix\Main\EO_User fillEmpMarkedBy()
	 * @method \string getReasonMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order setReasonMarked(\string|\Bitrix\Main\DB\SqlExpression $reasonMarked)
	 * @method bool hasReasonMarked()
	 * @method bool isReasonMarkedFilled()
	 * @method bool isReasonMarkedChanged()
	 * @method \string remindActualReasonMarked()
	 * @method \string requireReasonMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order resetReasonMarked()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetReasonMarked()
	 * @method \string fillReasonMarked()
	 * @method \float getPriceDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order setPriceDelivery(\float|\Bitrix\Main\DB\SqlExpression $priceDelivery)
	 * @method bool hasPriceDelivery()
	 * @method bool isPriceDeliveryFilled()
	 * @method bool isPriceDeliveryChanged()
	 * @method \float remindActualPriceDelivery()
	 * @method \float requirePriceDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPriceDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPriceDelivery()
	 * @method \float fillPriceDelivery()
	 * @method \boolean getAllowDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order setAllowDelivery(\boolean|\Bitrix\Main\DB\SqlExpression $allowDelivery)
	 * @method bool hasAllowDelivery()
	 * @method bool isAllowDeliveryFilled()
	 * @method bool isAllowDeliveryChanged()
	 * @method \boolean remindActualAllowDelivery()
	 * @method \boolean requireAllowDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order resetAllowDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetAllowDelivery()
	 * @method \boolean fillAllowDelivery()
	 * @method \Bitrix\Main\Type\DateTime getDateAllowDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateAllowDelivery(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateAllowDelivery)
	 * @method bool hasDateAllowDelivery()
	 * @method bool isDateAllowDeliveryFilled()
	 * @method bool isDateAllowDeliveryChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateAllowDelivery()
	 * @method \Bitrix\Main\Type\DateTime requireDateAllowDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateAllowDelivery()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateAllowDelivery()
	 * @method \Bitrix\Main\Type\DateTime fillDateAllowDelivery()
	 * @method \int getEmpAllowDeliveryId()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpAllowDeliveryId(\int|\Bitrix\Main\DB\SqlExpression $empAllowDeliveryId)
	 * @method bool hasEmpAllowDeliveryId()
	 * @method bool isEmpAllowDeliveryIdFilled()
	 * @method bool isEmpAllowDeliveryIdChanged()
	 * @method \int remindActualEmpAllowDeliveryId()
	 * @method \int requireEmpAllowDeliveryId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpAllowDeliveryId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpAllowDeliveryId()
	 * @method \int fillEmpAllowDeliveryId()
	 * @method \boolean getReserved()
	 * @method \Bitrix\Sale\Internals\EO_Order setReserved(\boolean|\Bitrix\Main\DB\SqlExpression $reserved)
	 * @method bool hasReserved()
	 * @method bool isReservedFilled()
	 * @method bool isReservedChanged()
	 * @method \boolean remindActualReserved()
	 * @method \boolean requireReserved()
	 * @method \Bitrix\Sale\Internals\EO_Order resetReserved()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetReserved()
	 * @method \boolean fillReserved()
	 * @method \float getPrice()
	 * @method \Bitrix\Sale\Internals\EO_Order setPrice(\float|\Bitrix\Main\DB\SqlExpression $price)
	 * @method bool hasPrice()
	 * @method bool isPriceFilled()
	 * @method bool isPriceChanged()
	 * @method \float remindActualPrice()
	 * @method \float requirePrice()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPrice()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPrice()
	 * @method \float fillPrice()
	 * @method \string getCurrency()
	 * @method \Bitrix\Sale\Internals\EO_Order setCurrency(\string|\Bitrix\Main\DB\SqlExpression $currency)
	 * @method bool hasCurrency()
	 * @method bool isCurrencyFilled()
	 * @method bool isCurrencyChanged()
	 * @method \string remindActualCurrency()
	 * @method \string requireCurrency()
	 * @method \Bitrix\Sale\Internals\EO_Order resetCurrency()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetCurrency()
	 * @method \string fillCurrency()
	 * @method \float getDiscountValue()
	 * @method \Bitrix\Sale\Internals\EO_Order setDiscountValue(\float|\Bitrix\Main\DB\SqlExpression $discountValue)
	 * @method bool hasDiscountValue()
	 * @method bool isDiscountValueFilled()
	 * @method bool isDiscountValueChanged()
	 * @method \float remindActualDiscountValue()
	 * @method \float requireDiscountValue()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDiscountValue()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDiscountValue()
	 * @method \float fillDiscountValue()
	 * @method \string getDiscountAll()
	 * @method \string remindActualDiscountAll()
	 * @method \string requireDiscountAll()
	 * @method bool hasDiscountAll()
	 * @method bool isDiscountAllFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDiscountAll()
	 * @method \string fillDiscountAll()
	 * @method \float getTaxValue()
	 * @method \Bitrix\Sale\Internals\EO_Order setTaxValue(\float|\Bitrix\Main\DB\SqlExpression $taxValue)
	 * @method bool hasTaxValue()
	 * @method bool isTaxValueFilled()
	 * @method bool isTaxValueChanged()
	 * @method \float remindActualTaxValue()
	 * @method \float requireTaxValue()
	 * @method \Bitrix\Sale\Internals\EO_Order resetTaxValue()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetTaxValue()
	 * @method \float fillTaxValue()
	 * @method \float getSumPaid()
	 * @method \Bitrix\Sale\Internals\EO_Order setSumPaid(\float|\Bitrix\Main\DB\SqlExpression $sumPaid)
	 * @method bool hasSumPaid()
	 * @method bool isSumPaidFilled()
	 * @method bool isSumPaidChanged()
	 * @method \float remindActualSumPaid()
	 * @method \float requireSumPaid()
	 * @method \Bitrix\Sale\Internals\EO_Order resetSumPaid()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetSumPaid()
	 * @method \float fillSumPaid()
	 * @method \string getSumPaidForrep()
	 * @method \string remindActualSumPaidForrep()
	 * @method \string requireSumPaidForrep()
	 * @method bool hasSumPaidForrep()
	 * @method bool isSumPaidForrepFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetSumPaidForrep()
	 * @method \string fillSumPaidForrep()
	 * @method \string getUserDescription()
	 * @method \Bitrix\Sale\Internals\EO_Order setUserDescription(\string|\Bitrix\Main\DB\SqlExpression $userDescription)
	 * @method bool hasUserDescription()
	 * @method bool isUserDescriptionFilled()
	 * @method bool isUserDescriptionChanged()
	 * @method \string remindActualUserDescription()
	 * @method \string requireUserDescription()
	 * @method \Bitrix\Sale\Internals\EO_Order resetUserDescription()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetUserDescription()
	 * @method \string fillUserDescription()
	 * @method \string getPayVoucherNum()
	 * @method \Bitrix\Sale\Internals\EO_Order setPayVoucherNum(\string|\Bitrix\Main\DB\SqlExpression $payVoucherNum)
	 * @method bool hasPayVoucherNum()
	 * @method bool isPayVoucherNumFilled()
	 * @method bool isPayVoucherNumChanged()
	 * @method \string remindActualPayVoucherNum()
	 * @method \string requirePayVoucherNum()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPayVoucherNum()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPayVoucherNum()
	 * @method \string fillPayVoucherNum()
	 * @method \Bitrix\Main\Type\Date getPayVoucherDate()
	 * @method \Bitrix\Sale\Internals\EO_Order setPayVoucherDate(\Bitrix\Main\Type\Date|\Bitrix\Main\DB\SqlExpression $payVoucherDate)
	 * @method bool hasPayVoucherDate()
	 * @method bool isPayVoucherDateFilled()
	 * @method bool isPayVoucherDateChanged()
	 * @method \Bitrix\Main\Type\Date remindActualPayVoucherDate()
	 * @method \Bitrix\Main\Type\Date requirePayVoucherDate()
	 * @method \Bitrix\Sale\Internals\EO_Order resetPayVoucherDate()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPayVoucherDate()
	 * @method \Bitrix\Main\Type\Date fillPayVoucherDate()
	 * @method \string getAdditionalInfo()
	 * @method \Bitrix\Sale\Internals\EO_Order setAdditionalInfo(\string|\Bitrix\Main\DB\SqlExpression $additionalInfo)
	 * @method bool hasAdditionalInfo()
	 * @method bool isAdditionalInfoFilled()
	 * @method bool isAdditionalInfoChanged()
	 * @method \string remindActualAdditionalInfo()
	 * @method \string requireAdditionalInfo()
	 * @method \Bitrix\Sale\Internals\EO_Order resetAdditionalInfo()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetAdditionalInfo()
	 * @method \string fillAdditionalInfo()
	 * @method \string getComments()
	 * @method \Bitrix\Sale\Internals\EO_Order setComments(\string|\Bitrix\Main\DB\SqlExpression $comments)
	 * @method bool hasComments()
	 * @method bool isCommentsFilled()
	 * @method bool isCommentsChanged()
	 * @method \string remindActualComments()
	 * @method \string requireComments()
	 * @method \Bitrix\Sale\Internals\EO_Order resetComments()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetComments()
	 * @method \string fillComments()
	 * @method \int getCompanyId()
	 * @method \Bitrix\Sale\Internals\EO_Order setCompanyId(\int|\Bitrix\Main\DB\SqlExpression $companyId)
	 * @method bool hasCompanyId()
	 * @method bool isCompanyIdFilled()
	 * @method bool isCompanyIdChanged()
	 * @method \int remindActualCompanyId()
	 * @method \int requireCompanyId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetCompanyId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetCompanyId()
	 * @method \int fillCompanyId()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order resetCreatedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \Bitrix\Main\EO_User getCreatedUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedUser()
	 * @method \Bitrix\Main\EO_User requireCreatedUser()
	 * @method \Bitrix\Sale\Internals\EO_Order setCreatedUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetCreatedUser()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetCreatedUser()
	 * @method bool hasCreatedUser()
	 * @method bool isCreatedUserFilled()
	 * @method bool isCreatedUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedUser()
	 * @method \int getResponsibleId()
	 * @method \Bitrix\Sale\Internals\EO_Order setResponsibleId(\int|\Bitrix\Main\DB\SqlExpression $responsibleId)
	 * @method bool hasResponsibleId()
	 * @method bool isResponsibleIdFilled()
	 * @method bool isResponsibleIdChanged()
	 * @method \int remindActualResponsibleId()
	 * @method \int requireResponsibleId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetResponsibleId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetResponsibleId()
	 * @method \int fillResponsibleId()
	 * @method \Bitrix\Main\EO_User getResponsibleBy()
	 * @method \Bitrix\Main\EO_User remindActualResponsibleBy()
	 * @method \Bitrix\Main\EO_User requireResponsibleBy()
	 * @method \Bitrix\Sale\Internals\EO_Order setResponsibleBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetResponsibleBy()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetResponsibleBy()
	 * @method bool hasResponsibleBy()
	 * @method bool isResponsibleByFilled()
	 * @method bool isResponsibleByChanged()
	 * @method \Bitrix\Main\EO_User fillResponsibleBy()
	 * @method \string getStatGid()
	 * @method \Bitrix\Sale\Internals\EO_Order setStatGid(\string|\Bitrix\Main\DB\SqlExpression $statGid)
	 * @method bool hasStatGid()
	 * @method bool isStatGidFilled()
	 * @method bool isStatGidChanged()
	 * @method \string remindActualStatGid()
	 * @method \string requireStatGid()
	 * @method \Bitrix\Sale\Internals\EO_Order resetStatGid()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetStatGid()
	 * @method \string fillStatGid()
	 * @method \Bitrix\Main\Type\Date getDatePayBefore()
	 * @method \Bitrix\Sale\Internals\EO_Order setDatePayBefore(\Bitrix\Main\Type\Date|\Bitrix\Main\DB\SqlExpression $datePayBefore)
	 * @method bool hasDatePayBefore()
	 * @method bool isDatePayBeforeFilled()
	 * @method bool isDatePayBeforeChanged()
	 * @method \Bitrix\Main\Type\Date remindActualDatePayBefore()
	 * @method \Bitrix\Main\Type\Date requireDatePayBefore()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDatePayBefore()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDatePayBefore()
	 * @method \Bitrix\Main\Type\Date fillDatePayBefore()
	 * @method \Bitrix\Main\Type\Date getDateBill()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateBill(\Bitrix\Main\Type\Date|\Bitrix\Main\DB\SqlExpression $dateBill)
	 * @method bool hasDateBill()
	 * @method bool isDateBillFilled()
	 * @method bool isDateBillChanged()
	 * @method \Bitrix\Main\Type\Date remindActualDateBill()
	 * @method \Bitrix\Main\Type\Date requireDateBill()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateBill()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateBill()
	 * @method \Bitrix\Main\Type\Date fillDateBill()
	 * @method \boolean getIsRecurring()
	 * @method \Bitrix\Sale\Internals\EO_Order setIsRecurring(\boolean|\Bitrix\Main\DB\SqlExpression $isRecurring)
	 * @method bool hasIsRecurring()
	 * @method bool isIsRecurringFilled()
	 * @method bool isIsRecurringChanged()
	 * @method \boolean remindActualIsRecurring()
	 * @method \boolean requireIsRecurring()
	 * @method \Bitrix\Sale\Internals\EO_Order resetIsRecurring()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetIsRecurring()
	 * @method \boolean fillIsRecurring()
	 * @method \int getRecurringId()
	 * @method \Bitrix\Sale\Internals\EO_Order setRecurringId(\int|\Bitrix\Main\DB\SqlExpression $recurringId)
	 * @method bool hasRecurringId()
	 * @method bool isRecurringIdFilled()
	 * @method bool isRecurringIdChanged()
	 * @method \int remindActualRecurringId()
	 * @method \int requireRecurringId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetRecurringId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetRecurringId()
	 * @method \int fillRecurringId()
	 * @method \int getLockedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order setLockedBy(\int|\Bitrix\Main\DB\SqlExpression $lockedBy)
	 * @method bool hasLockedBy()
	 * @method bool isLockedByFilled()
	 * @method bool isLockedByChanged()
	 * @method \int remindActualLockedBy()
	 * @method \int requireLockedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order resetLockedBy()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetLockedBy()
	 * @method \int fillLockedBy()
	 * @method \Bitrix\Main\EO_User getLockUser()
	 * @method \Bitrix\Main\EO_User remindActualLockUser()
	 * @method \Bitrix\Main\EO_User requireLockUser()
	 * @method \Bitrix\Sale\Internals\EO_Order setLockUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetLockUser()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetLockUser()
	 * @method bool hasLockUser()
	 * @method bool isLockUserFilled()
	 * @method bool isLockUserChanged()
	 * @method \Bitrix\Main\EO_User fillLockUser()
	 * @method \Bitrix\Main\Type\DateTime getDateLock()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateLock)
	 * @method bool hasDateLock()
	 * @method bool isDateLockFilled()
	 * @method bool isDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireDateLock()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateLock()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillDateLock()
	 * @method \string getLockUserName()
	 * @method \string remindActualLockUserName()
	 * @method \string requireLockUserName()
	 * @method bool hasLockUserName()
	 * @method bool isLockUserNameFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetLockUserName()
	 * @method \string fillLockUserName()
	 * @method \string getLockStatus()
	 * @method \string remindActualLockStatus()
	 * @method \string requireLockStatus()
	 * @method bool hasLockStatus()
	 * @method bool isLockStatusFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetLockStatus()
	 * @method \string fillLockStatus()
	 * @method \Bitrix\Main\EO_UserGroup getUserGroup()
	 * @method \Bitrix\Main\EO_UserGroup remindActualUserGroup()
	 * @method \Bitrix\Main\EO_UserGroup requireUserGroup()
	 * @method \Bitrix\Sale\Internals\EO_Order setUserGroup(\Bitrix\Main\EO_UserGroup $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetUserGroup()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetUserGroup()
	 * @method bool hasUserGroup()
	 * @method bool isUserGroupFilled()
	 * @method bool isUserGroupChanged()
	 * @method \Bitrix\Main\EO_UserGroup fillUserGroup()
	 * @method \Bitrix\Main\EO_User getResponsible()
	 * @method \Bitrix\Main\EO_User remindActualResponsible()
	 * @method \Bitrix\Main\EO_User requireResponsible()
	 * @method \Bitrix\Sale\Internals\EO_Order setResponsible(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetResponsible()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetResponsible()
	 * @method bool hasResponsible()
	 * @method bool isResponsibleFilled()
	 * @method bool isResponsibleChanged()
	 * @method \Bitrix\Main\EO_User fillResponsible()
	 * @method \Bitrix\Sale\Internals\EO_Basket getBasket()
	 * @method \Bitrix\Sale\Internals\EO_Basket remindActualBasket()
	 * @method \Bitrix\Sale\Internals\EO_Basket requireBasket()
	 * @method \Bitrix\Sale\Internals\EO_Order setBasket(\Bitrix\Sale\Internals\EO_Basket $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetBasket()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetBasket()
	 * @method bool hasBasket()
	 * @method bool isBasketFilled()
	 * @method bool isBasketChanged()
	 * @method \Bitrix\Sale\Internals\EO_Basket fillBasket()
	 * @method \string getBasketPriceTotal()
	 * @method \string remindActualBasketPriceTotal()
	 * @method \string requireBasketPriceTotal()
	 * @method bool hasBasketPriceTotal()
	 * @method bool isBasketPriceTotalFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetBasketPriceTotal()
	 * @method \string fillBasketPriceTotal()
	 * @method \Bitrix\Sale\Internals\EO_Payment getPayment()
	 * @method \Bitrix\Sale\Internals\EO_Payment remindActualPayment()
	 * @method \Bitrix\Sale\Internals\EO_Payment requirePayment()
	 * @method \Bitrix\Sale\Internals\EO_Order setPayment(\Bitrix\Sale\Internals\EO_Payment $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetPayment()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetPayment()
	 * @method bool hasPayment()
	 * @method bool isPaymentFilled()
	 * @method bool isPaymentChanged()
	 * @method \Bitrix\Sale\Internals\EO_Payment fillPayment()
	 * @method \Bitrix\Sale\Internals\EO_Shipment getShipment()
	 * @method \Bitrix\Sale\Internals\EO_Shipment remindActualShipment()
	 * @method \Bitrix\Sale\Internals\EO_Shipment requireShipment()
	 * @method \Bitrix\Sale\Internals\EO_Order setShipment(\Bitrix\Sale\Internals\EO_Shipment $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetShipment()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetShipment()
	 * @method bool hasShipment()
	 * @method bool isShipmentFilled()
	 * @method bool isShipmentChanged()
	 * @method \Bitrix\Sale\Internals\EO_Shipment fillShipment()
	 * @method \Bitrix\Sale\Internals\EO_OrderPropsValue getProperty()
	 * @method \Bitrix\Sale\Internals\EO_OrderPropsValue remindActualProperty()
	 * @method \Bitrix\Sale\Internals\EO_OrderPropsValue requireProperty()
	 * @method \Bitrix\Sale\Internals\EO_Order setProperty(\Bitrix\Sale\Internals\EO_OrderPropsValue $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetProperty()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetProperty()
	 * @method bool hasProperty()
	 * @method bool isPropertyFilled()
	 * @method bool isPropertyChanged()
	 * @method \Bitrix\Sale\Internals\EO_OrderPropsValue fillProperty()
	 * @method \boolean getRecountFlag()
	 * @method \Bitrix\Sale\Internals\EO_Order setRecountFlag(\boolean|\Bitrix\Main\DB\SqlExpression $recountFlag)
	 * @method bool hasRecountFlag()
	 * @method bool isRecountFlagFilled()
	 * @method bool isRecountFlagChanged()
	 * @method \boolean remindActualRecountFlag()
	 * @method \boolean requireRecountFlag()
	 * @method \Bitrix\Sale\Internals\EO_Order resetRecountFlag()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetRecountFlag()
	 * @method \boolean fillRecountFlag()
	 * @method \int getAffiliateId()
	 * @method \Bitrix\Sale\Internals\EO_Order setAffiliateId(\int|\Bitrix\Main\DB\SqlExpression $affiliateId)
	 * @method bool hasAffiliateId()
	 * @method bool isAffiliateIdFilled()
	 * @method bool isAffiliateIdChanged()
	 * @method \int remindActualAffiliateId()
	 * @method \int requireAffiliateId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetAffiliateId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetAffiliateId()
	 * @method \int fillAffiliateId()
	 * @method \string getDeliveryDocNum()
	 * @method \Bitrix\Sale\Internals\EO_Order setDeliveryDocNum(\string|\Bitrix\Main\DB\SqlExpression $deliveryDocNum)
	 * @method bool hasDeliveryDocNum()
	 * @method bool isDeliveryDocNumFilled()
	 * @method bool isDeliveryDocNumChanged()
	 * @method \string remindActualDeliveryDocNum()
	 * @method \string requireDeliveryDocNum()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDeliveryDocNum()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDeliveryDocNum()
	 * @method \string fillDeliveryDocNum()
	 * @method \Bitrix\Main\Type\DateTime getDeliveryDocDate()
	 * @method \Bitrix\Sale\Internals\EO_Order setDeliveryDocDate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $deliveryDocDate)
	 * @method bool hasDeliveryDocDate()
	 * @method bool isDeliveryDocDateFilled()
	 * @method bool isDeliveryDocDateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDeliveryDocDate()
	 * @method \Bitrix\Main\Type\DateTime requireDeliveryDocDate()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDeliveryDocDate()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDeliveryDocDate()
	 * @method \Bitrix\Main\Type\DateTime fillDeliveryDocDate()
	 * @method \boolean getUpdated1c()
	 * @method \Bitrix\Sale\Internals\EO_Order setUpdated1c(\boolean|\Bitrix\Main\DB\SqlExpression $updated1c)
	 * @method bool hasUpdated1c()
	 * @method bool isUpdated1cFilled()
	 * @method bool isUpdated1cChanged()
	 * @method \boolean remindActualUpdated1c()
	 * @method \boolean requireUpdated1c()
	 * @method \Bitrix\Sale\Internals\EO_Order resetUpdated1c()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetUpdated1c()
	 * @method \boolean fillUpdated1c()
	 * @method \string getOrderTopic()
	 * @method \Bitrix\Sale\Internals\EO_Order setOrderTopic(\string|\Bitrix\Main\DB\SqlExpression $orderTopic)
	 * @method bool hasOrderTopic()
	 * @method bool isOrderTopicFilled()
	 * @method bool isOrderTopicChanged()
	 * @method \string remindActualOrderTopic()
	 * @method \string requireOrderTopic()
	 * @method \Bitrix\Sale\Internals\EO_Order resetOrderTopic()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetOrderTopic()
	 * @method \string fillOrderTopic()
	 * @method \string getXmlId()
	 * @method \Bitrix\Sale\Internals\EO_Order setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetXmlId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getId1c()
	 * @method \Bitrix\Sale\Internals\EO_Order setId1c(\string|\Bitrix\Main\DB\SqlExpression $id1c)
	 * @method bool hasId1c()
	 * @method bool isId1cFilled()
	 * @method bool isId1cChanged()
	 * @method \string remindActualId1c()
	 * @method \string requireId1c()
	 * @method \Bitrix\Sale\Internals\EO_Order resetId1c()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetId1c()
	 * @method \string fillId1c()
	 * @method \string getVersion1c()
	 * @method \Bitrix\Sale\Internals\EO_Order setVersion1c(\string|\Bitrix\Main\DB\SqlExpression $version1c)
	 * @method bool hasVersion1c()
	 * @method bool isVersion1cFilled()
	 * @method bool isVersion1cChanged()
	 * @method \string remindActualVersion1c()
	 * @method \string requireVersion1c()
	 * @method \Bitrix\Sale\Internals\EO_Order resetVersion1c()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetVersion1c()
	 * @method \string fillVersion1c()
	 * @method \int getVersion()
	 * @method \Bitrix\Sale\Internals\EO_Order setVersion(\int|\Bitrix\Main\DB\SqlExpression $version)
	 * @method bool hasVersion()
	 * @method bool isVersionFilled()
	 * @method bool isVersionChanged()
	 * @method \int remindActualVersion()
	 * @method \int requireVersion()
	 * @method \Bitrix\Sale\Internals\EO_Order resetVersion()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetVersion()
	 * @method \int fillVersion()
	 * @method \boolean getExternalOrder()
	 * @method \Bitrix\Sale\Internals\EO_Order setExternalOrder(\boolean|\Bitrix\Main\DB\SqlExpression $externalOrder)
	 * @method bool hasExternalOrder()
	 * @method bool isExternalOrderFilled()
	 * @method bool isExternalOrderChanged()
	 * @method \boolean remindActualExternalOrder()
	 * @method \boolean requireExternalOrder()
	 * @method \Bitrix\Sale\Internals\EO_Order resetExternalOrder()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetExternalOrder()
	 * @method \boolean fillExternalOrder()
	 * @method \int getStoreId()
	 * @method \Bitrix\Sale\Internals\EO_Order setStoreId(\int|\Bitrix\Main\DB\SqlExpression $storeId)
	 * @method bool hasStoreId()
	 * @method bool isStoreIdFilled()
	 * @method bool isStoreIdChanged()
	 * @method \int remindActualStoreId()
	 * @method \int requireStoreId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetStoreId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetStoreId()
	 * @method \int fillStoreId()
	 * @method \boolean getCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order setCanceled(\boolean|\Bitrix\Main\DB\SqlExpression $canceled)
	 * @method bool hasCanceled()
	 * @method bool isCanceledFilled()
	 * @method bool isCanceledChanged()
	 * @method \boolean remindActualCanceled()
	 * @method \boolean requireCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order resetCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetCanceled()
	 * @method \boolean fillCanceled()
	 * @method \int getEmpCanceledId()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpCanceledId(\int|\Bitrix\Main\DB\SqlExpression $empCanceledId)
	 * @method bool hasEmpCanceledId()
	 * @method bool isEmpCanceledIdFilled()
	 * @method bool isEmpCanceledIdChanged()
	 * @method \int remindActualEmpCanceledId()
	 * @method \int requireEmpCanceledId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpCanceledId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpCanceledId()
	 * @method \int fillEmpCanceledId()
	 * @method \Bitrix\Main\EO_User getEmpCanceledBy()
	 * @method \Bitrix\Main\EO_User remindActualEmpCanceledBy()
	 * @method \Bitrix\Main\EO_User requireEmpCanceledBy()
	 * @method \Bitrix\Sale\Internals\EO_Order setEmpCanceledBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetEmpCanceledBy()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetEmpCanceledBy()
	 * @method bool hasEmpCanceledBy()
	 * @method bool isEmpCanceledByFilled()
	 * @method bool isEmpCanceledByChanged()
	 * @method \Bitrix\Main\EO_User fillEmpCanceledBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order setDateCanceled(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCanceled)
	 * @method bool hasDateCanceled()
	 * @method bool isDateCanceledFilled()
	 * @method bool isDateCanceledChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCanceled()
	 * @method \Bitrix\Main\Type\DateTime requireDateCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order resetDateCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateCanceled()
	 * @method \Bitrix\Main\Type\DateTime fillDateCanceled()
	 * @method \string getDateCanceledShort()
	 * @method \string remindActualDateCanceledShort()
	 * @method \string requireDateCanceledShort()
	 * @method bool hasDateCanceledShort()
	 * @method bool isDateCanceledShortFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetDateCanceledShort()
	 * @method \string fillDateCanceledShort()
	 * @method \string getReasonCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order setReasonCanceled(\string|\Bitrix\Main\DB\SqlExpression $reasonCanceled)
	 * @method bool hasReasonCanceled()
	 * @method bool isReasonCanceledFilled()
	 * @method bool isReasonCanceledChanged()
	 * @method \string remindActualReasonCanceled()
	 * @method \string requireReasonCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order resetReasonCanceled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetReasonCanceled()
	 * @method \string fillReasonCanceled()
	 * @method \string getBxUserId()
	 * @method \Bitrix\Sale\Internals\EO_Order setBxUserId(\string|\Bitrix\Main\DB\SqlExpression $bxUserId)
	 * @method bool hasBxUserId()
	 * @method bool isBxUserIdFilled()
	 * @method bool isBxUserIdChanged()
	 * @method \string remindActualBxUserId()
	 * @method \string requireBxUserId()
	 * @method \Bitrix\Sale\Internals\EO_Order resetBxUserId()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetBxUserId()
	 * @method \string fillBxUserId()
	 * @method \string getSearchContent()
	 * @method \Bitrix\Sale\Internals\EO_Order setSearchContent(\string|\Bitrix\Main\DB\SqlExpression $searchContent)
	 * @method bool hasSearchContent()
	 * @method bool isSearchContentFilled()
	 * @method bool isSearchContentChanged()
	 * @method \string remindActualSearchContent()
	 * @method \string requireSearchContent()
	 * @method \Bitrix\Sale\Internals\EO_Order resetSearchContent()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetSearchContent()
	 * @method \string fillSearchContent()
	 * @method \boolean getRunning()
	 * @method \Bitrix\Sale\Internals\EO_Order setRunning(\boolean|\Bitrix\Main\DB\SqlExpression $running)
	 * @method bool hasRunning()
	 * @method bool isRunningFilled()
	 * @method bool isRunningChanged()
	 * @method \boolean remindActualRunning()
	 * @method \boolean requireRunning()
	 * @method \Bitrix\Sale\Internals\EO_Order resetRunning()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetRunning()
	 * @method \boolean fillRunning()
	 * @method \Bitrix\Sale\Internals\EO_OrderCoupons getOrderCoupons()
	 * @method \Bitrix\Sale\Internals\EO_OrderCoupons remindActualOrderCoupons()
	 * @method \Bitrix\Sale\Internals\EO_OrderCoupons requireOrderCoupons()
	 * @method \Bitrix\Sale\Internals\EO_Order setOrderCoupons(\Bitrix\Sale\Internals\EO_OrderCoupons $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetOrderCoupons()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetOrderCoupons()
	 * @method bool hasOrderCoupons()
	 * @method bool isOrderCouponsFilled()
	 * @method bool isOrderCouponsChanged()
	 * @method \Bitrix\Sale\Internals\EO_OrderCoupons fillOrderCoupons()
	 * @method \Bitrix\Sale\Internals\EO_OrderDiscountData getOrderDiscountData()
	 * @method \Bitrix\Sale\Internals\EO_OrderDiscountData remindActualOrderDiscountData()
	 * @method \Bitrix\Sale\Internals\EO_OrderDiscountData requireOrderDiscountData()
	 * @method \Bitrix\Sale\Internals\EO_Order setOrderDiscountData(\Bitrix\Sale\Internals\EO_OrderDiscountData $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetOrderDiscountData()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetOrderDiscountData()
	 * @method bool hasOrderDiscountData()
	 * @method bool isOrderDiscountDataFilled()
	 * @method bool isOrderDiscountDataChanged()
	 * @method \Bitrix\Sale\Internals\EO_OrderDiscountData fillOrderDiscountData()
	 * @method \Bitrix\Sale\Internals\EO_OrderRules getOrderDiscountRules()
	 * @method \Bitrix\Sale\Internals\EO_OrderRules remindActualOrderDiscountRules()
	 * @method \Bitrix\Sale\Internals\EO_OrderRules requireOrderDiscountRules()
	 * @method \Bitrix\Sale\Internals\EO_Order setOrderDiscountRules(\Bitrix\Sale\Internals\EO_OrderRules $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetOrderDiscountRules()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetOrderDiscountRules()
	 * @method bool hasOrderDiscountRules()
	 * @method bool isOrderDiscountRulesFilled()
	 * @method bool isOrderDiscountRulesChanged()
	 * @method \Bitrix\Sale\Internals\EO_OrderRules fillOrderDiscountRules()
	 * @method \string getByRecommendation()
	 * @method \string remindActualByRecommendation()
	 * @method \string requireByRecommendation()
	 * @method bool hasByRecommendation()
	 * @method bool isByRecommendationFilled()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetByRecommendation()
	 * @method \string fillByRecommendation()
	 * @method \Bitrix\Sale\TradingPlatform\EO_Order getTradingPlatform()
	 * @method \Bitrix\Sale\TradingPlatform\EO_Order remindActualTradingPlatform()
	 * @method \Bitrix\Sale\TradingPlatform\EO_Order requireTradingPlatform()
	 * @method \Bitrix\Sale\Internals\EO_Order setTradingPlatform(\Bitrix\Sale\TradingPlatform\EO_Order $object)
	 * @method \Bitrix\Sale\Internals\EO_Order resetTradingPlatform()
	 * @method \Bitrix\Sale\Internals\EO_Order unsetTradingPlatform()
	 * @method bool hasTradingPlatform()
	 * @method bool isTradingPlatformFilled()
	 * @method bool isTradingPlatformChanged()
	 * @method \Bitrix\Sale\TradingPlatform\EO_Order fillTradingPlatform()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Order set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_Order reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Order unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_Order wakeUp($data)
	 */
	class EO_Order {
		/* @var \Bitrix\Sale\Internals\OrderTable */
		static public $dataClass = '\Bitrix\Sale\Internals\OrderTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Order_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getLidList()
	 * @method \string[] fillLid()
	 * @method \string[] getAccountNumberList()
	 * @method \string[] fillAccountNumber()
	 * @method \string[] getTrackingNumberList()
	 * @method \string[] fillTrackingNumber()
	 * @method \int[] getPaySystemIdList()
	 * @method \int[] fillPaySystemId()
	 * @method \int[] getDeliveryIdList()
	 * @method \int[] fillDeliveryId()
	 * @method \Bitrix\Main\Type\DateTime[] getDateInsertList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateInsert()
	 * @method \Bitrix\Main\Type\DateTime[] getDateInsertShortList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateInsertShort()
	 * @method \Bitrix\Main\Type\DateTime[] getDateInsertFormatList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateInsertFormat()
	 * @method \Bitrix\Main\Type\DateTime[] getDateUpdateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime[] getDateUpdateShortList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateUpdateShort()
	 * @method \string[] getProductsQuantList()
	 * @method \string[] fillProductsQuant()
	 * @method \string[] getPersonTypeIdList()
	 * @method \string[] fillPersonTypeId()
	 * @method \int[] getUserIdList()
	 * @method \int[] fillUserId()
	 * @method \Bitrix\Main\EO_User[] getUserList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillUser()
	 * @method \boolean[] getPayedList()
	 * @method \boolean[] fillPayed()
	 * @method \boolean[] getIsSyncB24List()
	 * @method \boolean[] fillIsSyncB24()
	 * @method \Bitrix\Main\Type\DateTime[] getDatePayedList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDatePayed()
	 * @method \int[] getEmpPayedIdList()
	 * @method \int[] fillEmpPayedId()
	 * @method \boolean[] getDeductedList()
	 * @method \boolean[] fillDeducted()
	 * @method \Bitrix\Main\Type\DateTime[] getDateDeductedList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateDeducted()
	 * @method \int[] getEmpDeductedIdList()
	 * @method \int[] fillEmpDeductedId()
	 * @method \string[] getReasonUndoDeductedList()
	 * @method \string[] fillReasonUndoDeducted()
	 * @method \string[] getStatusIdList()
	 * @method \string[] fillStatusId()
	 * @method \Bitrix\Sale\Internals\EO_StatusLang[] getStatusList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getStatusCollection()
	 * @method \Bitrix\Sale\Internals\EO_StatusLang_Collection fillStatus()
	 * @method \Bitrix\Main\Type\DateTime[] getDateStatusList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateStatus()
	 * @method \Bitrix\Main\Type\DateTime[] getDateStatusShortList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateStatusShort()
	 * @method \int[] getEmpStatusIdList()
	 * @method \int[] fillEmpStatusId()
	 * @method \Bitrix\Main\EO_User[] getEmpStatusByList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getEmpStatusByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillEmpStatusBy()
	 * @method \boolean[] getMarkedList()
	 * @method \boolean[] fillMarked()
	 * @method \Bitrix\Main\Type\DateTime[] getDateMarkedList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateMarked()
	 * @method \int[] getEmpMarkedIdList()
	 * @method \int[] fillEmpMarkedId()
	 * @method \Bitrix\Main\EO_User[] getEmpMarkedByList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getEmpMarkedByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillEmpMarkedBy()
	 * @method \string[] getReasonMarkedList()
	 * @method \string[] fillReasonMarked()
	 * @method \float[] getPriceDeliveryList()
	 * @method \float[] fillPriceDelivery()
	 * @method \boolean[] getAllowDeliveryList()
	 * @method \boolean[] fillAllowDelivery()
	 * @method \Bitrix\Main\Type\DateTime[] getDateAllowDeliveryList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateAllowDelivery()
	 * @method \int[] getEmpAllowDeliveryIdList()
	 * @method \int[] fillEmpAllowDeliveryId()
	 * @method \boolean[] getReservedList()
	 * @method \boolean[] fillReserved()
	 * @method \float[] getPriceList()
	 * @method \float[] fillPrice()
	 * @method \string[] getCurrencyList()
	 * @method \string[] fillCurrency()
	 * @method \float[] getDiscountValueList()
	 * @method \float[] fillDiscountValue()
	 * @method \string[] getDiscountAllList()
	 * @method \string[] fillDiscountAll()
	 * @method \float[] getTaxValueList()
	 * @method \float[] fillTaxValue()
	 * @method \float[] getSumPaidList()
	 * @method \float[] fillSumPaid()
	 * @method \string[] getSumPaidForrepList()
	 * @method \string[] fillSumPaidForrep()
	 * @method \string[] getUserDescriptionList()
	 * @method \string[] fillUserDescription()
	 * @method \string[] getPayVoucherNumList()
	 * @method \string[] fillPayVoucherNum()
	 * @method \Bitrix\Main\Type\Date[] getPayVoucherDateList()
	 * @method \Bitrix\Main\Type\Date[] fillPayVoucherDate()
	 * @method \string[] getAdditionalInfoList()
	 * @method \string[] fillAdditionalInfo()
	 * @method \string[] getCommentsList()
	 * @method \string[] fillComments()
	 * @method \int[] getCompanyIdList()
	 * @method \int[] fillCompanyId()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \Bitrix\Main\EO_User[] getCreatedUserList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getCreatedUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedUser()
	 * @method \int[] getResponsibleIdList()
	 * @method \int[] fillResponsibleId()
	 * @method \Bitrix\Main\EO_User[] getResponsibleByList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getResponsibleByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillResponsibleBy()
	 * @method \string[] getStatGidList()
	 * @method \string[] fillStatGid()
	 * @method \Bitrix\Main\Type\Date[] getDatePayBeforeList()
	 * @method \Bitrix\Main\Type\Date[] fillDatePayBefore()
	 * @method \Bitrix\Main\Type\Date[] getDateBillList()
	 * @method \Bitrix\Main\Type\Date[] fillDateBill()
	 * @method \boolean[] getIsRecurringList()
	 * @method \boolean[] fillIsRecurring()
	 * @method \int[] getRecurringIdList()
	 * @method \int[] fillRecurringId()
	 * @method \int[] getLockedByList()
	 * @method \int[] fillLockedBy()
	 * @method \Bitrix\Main\EO_User[] getLockUserList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getLockUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillLockUser()
	 * @method \Bitrix\Main\Type\DateTime[] getDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateLock()
	 * @method \string[] getLockUserNameList()
	 * @method \string[] fillLockUserName()
	 * @method \string[] getLockStatusList()
	 * @method \string[] fillLockStatus()
	 * @method \Bitrix\Main\EO_UserGroup[] getUserGroupList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getUserGroupCollection()
	 * @method \Bitrix\Main\EO_UserGroup_Collection fillUserGroup()
	 * @method \Bitrix\Main\EO_User[] getResponsibleList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getResponsibleCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillResponsible()
	 * @method \Bitrix\Sale\Internals\EO_Basket[] getBasketList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getBasketCollection()
	 * @method \Bitrix\Sale\Internals\EO_Basket_Collection fillBasket()
	 * @method \string[] getBasketPriceTotalList()
	 * @method \string[] fillBasketPriceTotal()
	 * @method \Bitrix\Sale\Internals\EO_Payment[] getPaymentList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getPaymentCollection()
	 * @method \Bitrix\Sale\Internals\EO_Payment_Collection fillPayment()
	 * @method \Bitrix\Sale\Internals\EO_Shipment[] getShipmentList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getShipmentCollection()
	 * @method \Bitrix\Sale\Internals\EO_Shipment_Collection fillShipment()
	 * @method \Bitrix\Sale\Internals\EO_OrderPropsValue[] getPropertyList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getPropertyCollection()
	 * @method \Bitrix\Sale\Internals\EO_OrderPropsValue_Collection fillProperty()
	 * @method \boolean[] getRecountFlagList()
	 * @method \boolean[] fillRecountFlag()
	 * @method \int[] getAffiliateIdList()
	 * @method \int[] fillAffiliateId()
	 * @method \string[] getDeliveryDocNumList()
	 * @method \string[] fillDeliveryDocNum()
	 * @method \Bitrix\Main\Type\DateTime[] getDeliveryDocDateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDeliveryDocDate()
	 * @method \boolean[] getUpdated1cList()
	 * @method \boolean[] fillUpdated1c()
	 * @method \string[] getOrderTopicList()
	 * @method \string[] fillOrderTopic()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getId1cList()
	 * @method \string[] fillId1c()
	 * @method \string[] getVersion1cList()
	 * @method \string[] fillVersion1c()
	 * @method \int[] getVersionList()
	 * @method \int[] fillVersion()
	 * @method \boolean[] getExternalOrderList()
	 * @method \boolean[] fillExternalOrder()
	 * @method \int[] getStoreIdList()
	 * @method \int[] fillStoreId()
	 * @method \boolean[] getCanceledList()
	 * @method \boolean[] fillCanceled()
	 * @method \int[] getEmpCanceledIdList()
	 * @method \int[] fillEmpCanceledId()
	 * @method \Bitrix\Main\EO_User[] getEmpCanceledByList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getEmpCanceledByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillEmpCanceledBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCanceledList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCanceled()
	 * @method \string[] getDateCanceledShortList()
	 * @method \string[] fillDateCanceledShort()
	 * @method \string[] getReasonCanceledList()
	 * @method \string[] fillReasonCanceled()
	 * @method \string[] getBxUserIdList()
	 * @method \string[] fillBxUserId()
	 * @method \string[] getSearchContentList()
	 * @method \string[] fillSearchContent()
	 * @method \boolean[] getRunningList()
	 * @method \boolean[] fillRunning()
	 * @method \Bitrix\Sale\Internals\EO_OrderCoupons[] getOrderCouponsList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getOrderCouponsCollection()
	 * @method \Bitrix\Sale\Internals\EO_OrderCoupons_Collection fillOrderCoupons()
	 * @method \Bitrix\Sale\Internals\EO_OrderDiscountData[] getOrderDiscountDataList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getOrderDiscountDataCollection()
	 * @method \Bitrix\Sale\Internals\EO_OrderDiscountData_Collection fillOrderDiscountData()
	 * @method \Bitrix\Sale\Internals\EO_OrderRules[] getOrderDiscountRulesList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getOrderDiscountRulesCollection()
	 * @method \Bitrix\Sale\Internals\EO_OrderRules_Collection fillOrderDiscountRules()
	 * @method \string[] getByRecommendationList()
	 * @method \string[] fillByRecommendation()
	 * @method \Bitrix\Sale\TradingPlatform\EO_Order[] getTradingPlatformList()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection getTradingPlatformCollection()
	 * @method \Bitrix\Sale\TradingPlatform\EO_Order_Collection fillTradingPlatform()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_Order $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_Order $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Order getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Order[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_Order $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_Order_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_Order current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Order_Collection merge(?EO_Order_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Order_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\OrderTable */
		static public $dataClass = '\Bitrix\Sale\Internals\OrderTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_Order_Query query()
	 * @method static EO_Order_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Order_Result getById($id)
	 * @method static EO_Order_Result getList(array $parameters = [])
	 * @method static EO_Order_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_Order createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_Order_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_Order wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_Order_Collection wakeUpCollection($rows)
	 */
	class OrderTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Order_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_Order fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Order_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Order fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection fetchCollection()
	 */
	class EO_Order_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Order createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_Order wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection wakeUpCollection($rows)
	 */
	class EO_Order_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\FuserTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Fuser
	 * @see \Bitrix\Sale\Internals\FuserTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_Fuser setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getDateInsert()
	 * @method \Bitrix\Sale\Internals\EO_Fuser setDateInsert(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateInsert)
	 * @method bool hasDateInsert()
	 * @method bool isDateInsertFilled()
	 * @method bool isDateInsertChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateInsert()
	 * @method \Bitrix\Main\Type\DateTime requireDateInsert()
	 * @method \Bitrix\Sale\Internals\EO_Fuser resetDateInsert()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetDateInsert()
	 * @method \Bitrix\Main\Type\DateTime fillDateInsert()
	 * @method \Bitrix\Main\Type\DateTime getDateIns()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateIns()
	 * @method \Bitrix\Main\Type\DateTime requireDateIns()
	 * @method bool hasDateIns()
	 * @method bool isDateInsFilled()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetDateIns()
	 * @method \Bitrix\Main\Type\DateTime fillDateIns()
	 * @method \Bitrix\Main\Type\DateTime getDateUpdate()
	 * @method \Bitrix\Sale\Internals\EO_Fuser setDateUpdate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateUpdate)
	 * @method bool hasDateUpdate()
	 * @method bool isDateUpdateFilled()
	 * @method bool isDateUpdateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime requireDateUpdate()
	 * @method \Bitrix\Sale\Internals\EO_Fuser resetDateUpdate()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime fillDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime getDateUpd()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateUpd()
	 * @method \Bitrix\Main\Type\DateTime requireDateUpd()
	 * @method bool hasDateUpd()
	 * @method bool isDateUpdFilled()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetDateUpd()
	 * @method \Bitrix\Main\Type\DateTime fillDateUpd()
	 * @method \int getUserId()
	 * @method \Bitrix\Sale\Internals\EO_Fuser setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \int remindActualUserId()
	 * @method \int requireUserId()
	 * @method \Bitrix\Sale\Internals\EO_Fuser resetUserId()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetUserId()
	 * @method \int fillUserId()
	 * @method \Bitrix\Main\EO_User getUser()
	 * @method \Bitrix\Main\EO_User remindActualUser()
	 * @method \Bitrix\Main\EO_User requireUser()
	 * @method \Bitrix\Sale\Internals\EO_Fuser setUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Sale\Internals\EO_Fuser resetUser()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Main\EO_User fillUser()
	 * @method \string getCode()
	 * @method \Bitrix\Sale\Internals\EO_Fuser setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Sale\Internals\EO_Fuser resetCode()
	 * @method \Bitrix\Sale\Internals\EO_Fuser unsetCode()
	 * @method \string fillCode()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Fuser set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_Fuser reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Fuser unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_Fuser wakeUp($data)
	 */
	class EO_Fuser {
		/* @var \Bitrix\Sale\Internals\FuserTable */
		static public $dataClass = '\Bitrix\Sale\Internals\FuserTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Fuser_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getDateInsertList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateInsert()
	 * @method \Bitrix\Main\Type\DateTime[] getDateInsList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateIns()
	 * @method \Bitrix\Main\Type\DateTime[] getDateUpdateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateUpdate()
	 * @method \Bitrix\Main\Type\DateTime[] getDateUpdList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateUpd()
	 * @method \int[] getUserIdList()
	 * @method \int[] fillUserId()
	 * @method \Bitrix\Main\EO_User[] getUserList()
	 * @method \Bitrix\Sale\Internals\EO_Fuser_Collection getUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillUser()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_Fuser $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_Fuser $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Fuser getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Fuser[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_Fuser $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_Fuser_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_Fuser current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Fuser_Collection merge(?EO_Fuser_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Fuser_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\FuserTable */
		static public $dataClass = '\Bitrix\Sale\Internals\FuserTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_Fuser_Query query()
	 * @method static EO_Fuser_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Fuser_Result getById($id)
	 * @method static EO_Fuser_Result getList(array $parameters = [])
	 * @method static EO_Fuser_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_Fuser createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_Fuser_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_Fuser wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_Fuser_Collection wakeUpCollection($rows)
	 */
	class FuserTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Fuser_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_Fuser fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Fuser_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Fuser_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Fuser fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Fuser_Collection fetchCollection()
	 */
	class EO_Fuser_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Fuser createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_Fuser_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_Fuser wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_Fuser_Collection wakeUpCollection($rows)
	 */
	class EO_Fuser_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\Product2ProductTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Product2Product
	 * @see \Bitrix\Sale\Internals\Product2ProductTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product setProductId(\int|\Bitrix\Main\DB\SqlExpression $productId)
	 * @method bool hasProductId()
	 * @method bool isProductIdFilled()
	 * @method bool isProductIdChanged()
	 * @method \int remindActualProductId()
	 * @method \int requireProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product resetProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product unsetProductId()
	 * @method \int fillProductId()
	 * @method \int getParentProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product setParentProductId(\int|\Bitrix\Main\DB\SqlExpression $parentProductId)
	 * @method bool hasParentProductId()
	 * @method bool isParentProductIdFilled()
	 * @method bool isParentProductIdChanged()
	 * @method \int remindActualParentProductId()
	 * @method \int requireParentProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product resetParentProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product unsetParentProductId()
	 * @method \int fillParentProductId()
	 * @method \int getCnt()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product setCnt(\int|\Bitrix\Main\DB\SqlExpression $cnt)
	 * @method bool hasCnt()
	 * @method bool isCntFilled()
	 * @method bool isCntChanged()
	 * @method \int remindActualCnt()
	 * @method \int requireCnt()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product resetCnt()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product unsetCnt()
	 * @method \int fillCnt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_Product2Product wakeUp($data)
	 */
	class EO_Product2Product {
		/* @var \Bitrix\Sale\Internals\Product2ProductTable */
		static public $dataClass = '\Bitrix\Sale\Internals\Product2ProductTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Product2Product_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getProductIdList()
	 * @method \int[] fillProductId()
	 * @method \int[] getParentProductIdList()
	 * @method \int[] fillParentProductId()
	 * @method \int[] getCntList()
	 * @method \int[] fillCnt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_Product2Product $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_Product2Product $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_Product2Product $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_Product2Product_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_Product2Product current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Product2Product_Collection merge(?EO_Product2Product_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Product2Product_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\Product2ProductTable */
		static public $dataClass = '\Bitrix\Sale\Internals\Product2ProductTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_Product2Product_Query query()
	 * @method static EO_Product2Product_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Product2Product_Result getById($id)
	 * @method static EO_Product2Product_Result getList(array $parameters = [])
	 * @method static EO_Product2Product_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_Product2Product createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_Product2Product_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_Product2Product wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_Product2Product_Collection wakeUpCollection($rows)
	 */
	class Product2ProductTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Product2Product_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Product2Product_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Product2Product fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product_Collection fetchCollection()
	 */
	class EO_Product2Product_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Product2Product createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_Product2Product wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_Product2Product_Collection wakeUpCollection($rows)
	 */
	class EO_Product2Product_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\StoreProductTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_StoreProduct
	 * @see \Bitrix\Sale\Internals\StoreProductTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getProductId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct setProductId(\int|\Bitrix\Main\DB\SqlExpression $productId)
	 * @method bool hasProductId()
	 * @method bool isProductIdFilled()
	 * @method bool isProductIdChanged()
	 * @method \int remindActualProductId()
	 * @method \int requireProductId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct resetProductId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct unsetProductId()
	 * @method \int fillProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product getSaleProduct()
	 * @method \Bitrix\Sale\Internals\EO_Product remindActualSaleProduct()
	 * @method \Bitrix\Sale\Internals\EO_Product requireSaleProduct()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct setSaleProduct(\Bitrix\Sale\Internals\EO_Product $object)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct resetSaleProduct()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct unsetSaleProduct()
	 * @method bool hasSaleProduct()
	 * @method bool isSaleProductFilled()
	 * @method bool isSaleProductChanged()
	 * @method \Bitrix\Sale\Internals\EO_Product fillSaleProduct()
	 * @method \float getAmount()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct setAmount(\float|\Bitrix\Main\DB\SqlExpression $amount)
	 * @method bool hasAmount()
	 * @method bool isAmountFilled()
	 * @method bool isAmountChanged()
	 * @method \float remindActualAmount()
	 * @method \float requireAmount()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct resetAmount()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct unsetAmount()
	 * @method \float fillAmount()
	 * @method \int getStoreId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct setStoreId(\int|\Bitrix\Main\DB\SqlExpression $storeId)
	 * @method bool hasStoreId()
	 * @method bool isStoreIdFilled()
	 * @method bool isStoreIdChanged()
	 * @method \int remindActualStoreId()
	 * @method \int requireStoreId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct resetStoreId()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct unsetStoreId()
	 * @method \int fillStoreId()
	 * @method \Bitrix\Catalog\EO_Store getStore()
	 * @method \Bitrix\Catalog\EO_Store remindActualStore()
	 * @method \Bitrix\Catalog\EO_Store requireStore()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct setStore(\Bitrix\Catalog\EO_Store $object)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct resetStore()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct unsetStore()
	 * @method bool hasStore()
	 * @method bool isStoreFilled()
	 * @method bool isStoreChanged()
	 * @method \Bitrix\Catalog\EO_Store fillStore()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_StoreProduct wakeUp($data)
	 */
	class EO_StoreProduct {
		/* @var \Bitrix\Sale\Internals\StoreProductTable */
		static public $dataClass = '\Bitrix\Sale\Internals\StoreProductTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_StoreProduct_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getProductIdList()
	 * @method \int[] fillProductId()
	 * @method \Bitrix\Sale\Internals\EO_Product[] getSaleProductList()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct_Collection getSaleProductCollection()
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection fillSaleProduct()
	 * @method \float[] getAmountList()
	 * @method \float[] fillAmount()
	 * @method \int[] getStoreIdList()
	 * @method \int[] fillStoreId()
	 * @method \Bitrix\Catalog\EO_Store[] getStoreList()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct_Collection getStoreCollection()
	 * @method \Bitrix\Catalog\EO_Store_Collection fillStore()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_StoreProduct $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_StoreProduct $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_StoreProduct $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_StoreProduct_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_StoreProduct_Collection merge(?EO_StoreProduct_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_StoreProduct_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\StoreProductTable */
		static public $dataClass = '\Bitrix\Sale\Internals\StoreProductTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_StoreProduct_Query query()
	 * @method static EO_StoreProduct_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_StoreProduct_Result getById($id)
	 * @method static EO_StoreProduct_Result getList(array $parameters = [])
	 * @method static EO_StoreProduct_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_StoreProduct createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_StoreProduct_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_StoreProduct wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_StoreProduct_Collection wakeUpCollection($rows)
	 */
	class StoreProductTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_StoreProduct_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_StoreProduct_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct_Collection fetchCollection()
	 */
	class EO_StoreProduct_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_StoreProduct_Collection wakeUpCollection($rows)
	 */
	class EO_StoreProduct_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\PersonTypeTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_PersonType
	 * @see \Bitrix\Sale\Internals\PersonTypeTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getLid()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setLid(\string|\Bitrix\Main\DB\SqlExpression $lid)
	 * @method bool hasLid()
	 * @method bool isLidFilled()
	 * @method bool isLidChanged()
	 * @method \string remindActualLid()
	 * @method \string requireLid()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetLid()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetLid()
	 * @method \string fillLid()
	 * @method \Bitrix\Sale\Internals\EO_PersonTypeSite getPersonTypeSite()
	 * @method \Bitrix\Sale\Internals\EO_PersonTypeSite remindActualPersonTypeSite()
	 * @method \Bitrix\Sale\Internals\EO_PersonTypeSite requirePersonTypeSite()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setPersonTypeSite(\Bitrix\Sale\Internals\EO_PersonTypeSite $object)
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetPersonTypeSite()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetPersonTypeSite()
	 * @method bool hasPersonTypeSite()
	 * @method bool isPersonTypeSiteFilled()
	 * @method bool isPersonTypeSiteChanged()
	 * @method \Bitrix\Sale\Internals\EO_PersonTypeSite fillPersonTypeSite()
	 * @method \string getName()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetName()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetName()
	 * @method \string fillName()
	 * @method \string getCode()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetCode()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetCode()
	 * @method \string fillCode()
	 * @method \int getSort()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetSort()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetSort()
	 * @method \int fillSort()
	 * @method \boolean getActive()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetActive()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetActive()
	 * @method \boolean fillActive()
	 * @method \string getXmlId()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetXmlId()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getEntityRegistryType()
	 * @method \Bitrix\Sale\Internals\EO_PersonType setEntityRegistryType(\string|\Bitrix\Main\DB\SqlExpression $entityRegistryType)
	 * @method bool hasEntityRegistryType()
	 * @method bool isEntityRegistryTypeFilled()
	 * @method bool isEntityRegistryTypeChanged()
	 * @method \string remindActualEntityRegistryType()
	 * @method \string requireEntityRegistryType()
	 * @method \Bitrix\Sale\Internals\EO_PersonType resetEntityRegistryType()
	 * @method \Bitrix\Sale\Internals\EO_PersonType unsetEntityRegistryType()
	 * @method \string fillEntityRegistryType()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_PersonType set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_PersonType reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_PersonType unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_PersonType wakeUp($data)
	 */
	class EO_PersonType {
		/* @var \Bitrix\Sale\Internals\PersonTypeTable */
		static public $dataClass = '\Bitrix\Sale\Internals\PersonTypeTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_PersonType_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getLidList()
	 * @method \string[] fillLid()
	 * @method \Bitrix\Sale\Internals\EO_PersonTypeSite[] getPersonTypeSiteList()
	 * @method \Bitrix\Sale\Internals\EO_PersonType_Collection getPersonTypeSiteCollection()
	 * @method \Bitrix\Sale\Internals\EO_PersonTypeSite_Collection fillPersonTypeSite()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getEntityRegistryTypeList()
	 * @method \string[] fillEntityRegistryType()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_PersonType $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_PersonType $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_PersonType getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_PersonType[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_PersonType $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_PersonType_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_PersonType current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_PersonType_Collection merge(?EO_PersonType_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_PersonType_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\PersonTypeTable */
		static public $dataClass = '\Bitrix\Sale\Internals\PersonTypeTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_PersonType_Query query()
	 * @method static EO_PersonType_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_PersonType_Result getById($id)
	 * @method static EO_PersonType_Result getList(array $parameters = [])
	 * @method static EO_PersonType_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_PersonType createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_PersonType_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_PersonType wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_PersonType_Collection wakeUpCollection($rows)
	 */
	class PersonTypeTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_PersonType_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_PersonType fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_PersonType_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_PersonType_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_PersonType fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_PersonType_Collection fetchCollection()
	 */
	class EO_PersonType_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_PersonType createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_PersonType_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_PersonType wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_PersonType_Collection wakeUpCollection($rows)
	 */
	class EO_PersonType_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\ProductTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Product
	 * @see \Bitrix\Sale\Internals\ProductTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_Product setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getTimestampX()
	 * @method \Bitrix\Sale\Internals\EO_Product setTimestampX(\int|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \int remindActualTimestampX()
	 * @method \int requireTimestampX()
	 * @method \Bitrix\Sale\Internals\EO_Product resetTimestampX()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetTimestampX()
	 * @method \int fillTimestampX()
	 * @method \Bitrix\Main\Type\DateTime getDateUpdated()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateUpdated()
	 * @method \Bitrix\Main\Type\DateTime requireDateUpdated()
	 * @method bool hasDateUpdated()
	 * @method bool isDateUpdatedFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetDateUpdated()
	 * @method \Bitrix\Main\Type\DateTime fillDateUpdated()
	 * @method \float getQuantity()
	 * @method \Bitrix\Sale\Internals\EO_Product setQuantity(\float|\Bitrix\Main\DB\SqlExpression $quantity)
	 * @method bool hasQuantity()
	 * @method bool isQuantityFilled()
	 * @method bool isQuantityChanged()
	 * @method \float remindActualQuantity()
	 * @method \float requireQuantity()
	 * @method \Bitrix\Sale\Internals\EO_Product resetQuantity()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetQuantity()
	 * @method \float fillQuantity()
	 * @method \int getMeasure()
	 * @method \Bitrix\Sale\Internals\EO_Product setMeasure(\int|\Bitrix\Main\DB\SqlExpression $measure)
	 * @method bool hasMeasure()
	 * @method bool isMeasureFilled()
	 * @method bool isMeasureChanged()
	 * @method \int remindActualMeasure()
	 * @method \int requireMeasure()
	 * @method \Bitrix\Sale\Internals\EO_Product resetMeasure()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetMeasure()
	 * @method \int fillMeasure()
	 * @method \float getPurchasingPrice()
	 * @method \Bitrix\Sale\Internals\EO_Product setPurchasingPrice(\float|\Bitrix\Main\DB\SqlExpression $purchasingPrice)
	 * @method bool hasPurchasingPrice()
	 * @method bool isPurchasingPriceFilled()
	 * @method bool isPurchasingPriceChanged()
	 * @method \float remindActualPurchasingPrice()
	 * @method \float requirePurchasingPrice()
	 * @method \Bitrix\Sale\Internals\EO_Product resetPurchasingPrice()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPurchasingPrice()
	 * @method \float fillPurchasingPrice()
	 * @method \string getPurchasingCurrency()
	 * @method \Bitrix\Sale\Internals\EO_Product setPurchasingCurrency(\string|\Bitrix\Main\DB\SqlExpression $purchasingCurrency)
	 * @method bool hasPurchasingCurrency()
	 * @method bool isPurchasingCurrencyFilled()
	 * @method bool isPurchasingCurrencyChanged()
	 * @method \string remindActualPurchasingCurrency()
	 * @method \string requirePurchasingCurrency()
	 * @method \Bitrix\Sale\Internals\EO_Product resetPurchasingCurrency()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPurchasingCurrency()
	 * @method \string fillPurchasingCurrency()
	 * @method \Bitrix\Iblock\EO_Element getIblock()
	 * @method \Bitrix\Iblock\EO_Element remindActualIblock()
	 * @method \Bitrix\Iblock\EO_Element requireIblock()
	 * @method \Bitrix\Sale\Internals\EO_Product setIblock(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Sale\Internals\EO_Product resetIblock()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\EO_Element fillIblock()
	 * @method \string getName()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetName()
	 * @method \string fillName()
	 * @method \string getNameWithIdent()
	 * @method \string remindActualNameWithIdent()
	 * @method \string requireNameWithIdent()
	 * @method bool hasNameWithIdent()
	 * @method bool isNameWithIdentFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetNameWithIdent()
	 * @method \string fillNameWithIdent()
	 * @method \boolean getActive()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetActive()
	 * @method \boolean fillActive()
	 * @method \float getWeight()
	 * @method \Bitrix\Sale\Internals\EO_Product setWeight(\float|\Bitrix\Main\DB\SqlExpression $weight)
	 * @method bool hasWeight()
	 * @method bool isWeightFilled()
	 * @method bool isWeightChanged()
	 * @method \float remindActualWeight()
	 * @method \float requireWeight()
	 * @method \Bitrix\Sale\Internals\EO_Product resetWeight()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetWeight()
	 * @method \float fillWeight()
	 * @method \float getWeightInSiteUnits()
	 * @method \float remindActualWeightInSiteUnits()
	 * @method \float requireWeightInSiteUnits()
	 * @method bool hasWeightInSiteUnits()
	 * @method bool isWeightInSiteUnitsFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetWeightInSiteUnits()
	 * @method \float fillWeightInSiteUnits()
	 * @method \float getPrice()
	 * @method \float remindActualPrice()
	 * @method \float requirePrice()
	 * @method bool hasPrice()
	 * @method bool isPriceFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPrice()
	 * @method \float fillPrice()
	 * @method \string getCurrency()
	 * @method \string remindActualCurrency()
	 * @method \string requireCurrency()
	 * @method bool hasCurrency()
	 * @method bool isCurrencyFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetCurrency()
	 * @method \string fillCurrency()
	 * @method \float getSummaryPrice()
	 * @method \float remindActualSummaryPrice()
	 * @method \float requireSummaryPrice()
	 * @method bool hasSummaryPrice()
	 * @method bool isSummaryPriceFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetSummaryPrice()
	 * @method \float fillSummaryPrice()
	 * @method \float getCurrentCurrencyRate()
	 * @method \float remindActualCurrentCurrencyRate()
	 * @method \float requireCurrentCurrencyRate()
	 * @method bool hasCurrentCurrencyRate()
	 * @method bool isCurrentCurrencyRateFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetCurrentCurrencyRate()
	 * @method \float fillCurrentCurrencyRate()
	 * @method \float getCurrentCurrencyRateCnt()
	 * @method \float remindActualCurrentCurrencyRateCnt()
	 * @method \float requireCurrentCurrencyRateCnt()
	 * @method bool hasCurrentCurrencyRateCnt()
	 * @method bool isCurrentCurrencyRateCntFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetCurrentCurrencyRateCnt()
	 * @method \float fillCurrentCurrencyRateCnt()
	 * @method \float getCurrentSiteCurrencyRate()
	 * @method \float remindActualCurrentSiteCurrencyRate()
	 * @method \float requireCurrentSiteCurrencyRate()
	 * @method bool hasCurrentSiteCurrencyRate()
	 * @method bool isCurrentSiteCurrencyRateFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetCurrentSiteCurrencyRate()
	 * @method \float fillCurrentSiteCurrencyRate()
	 * @method \float getCurrentSiteCurrencyRateCnt()
	 * @method \float remindActualCurrentSiteCurrencyRateCnt()
	 * @method \float requireCurrentSiteCurrencyRateCnt()
	 * @method bool hasCurrentSiteCurrencyRateCnt()
	 * @method bool isCurrentSiteCurrencyRateCntFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetCurrentSiteCurrencyRateCnt()
	 * @method \float fillCurrentSiteCurrencyRateCnt()
	 * @method \float getPurchasingCurrencyRate()
	 * @method \float remindActualPurchasingCurrencyRate()
	 * @method \float requirePurchasingCurrencyRate()
	 * @method bool hasPurchasingCurrencyRate()
	 * @method bool isPurchasingCurrencyRateFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPurchasingCurrencyRate()
	 * @method \float fillPurchasingCurrencyRate()
	 * @method \float getPurchasingCurrencyRateCnt()
	 * @method \float remindActualPurchasingCurrencyRateCnt()
	 * @method \float requirePurchasingCurrencyRateCnt()
	 * @method bool hasPurchasingCurrencyRateCnt()
	 * @method bool isPurchasingCurrencyRateCntFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPurchasingCurrencyRateCnt()
	 * @method \float fillPurchasingCurrencyRateCnt()
	 * @method \float getPriceInSiteCurrency()
	 * @method \float remindActualPriceInSiteCurrency()
	 * @method \float requirePriceInSiteCurrency()
	 * @method bool hasPriceInSiteCurrency()
	 * @method bool isPriceInSiteCurrencyFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPriceInSiteCurrency()
	 * @method \float fillPriceInSiteCurrency()
	 * @method \float getPurchasingPriceInSiteCurrency()
	 * @method \float remindActualPurchasingPriceInSiteCurrency()
	 * @method \float requirePurchasingPriceInSiteCurrency()
	 * @method bool hasPurchasingPriceInSiteCurrency()
	 * @method bool isPurchasingPriceInSiteCurrencyFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetPurchasingPriceInSiteCurrency()
	 * @method \float fillPurchasingPriceInSiteCurrency()
	 * @method \float getSummaryPriceInSiteCurrency()
	 * @method \float remindActualSummaryPriceInSiteCurrency()
	 * @method \float requireSummaryPriceInSiteCurrency()
	 * @method bool hasSummaryPriceInSiteCurrency()
	 * @method bool isSummaryPriceInSiteCurrencyFilled()
	 * @method \Bitrix\Sale\Internals\EO_Product unsetSummaryPriceInSiteCurrency()
	 * @method \float fillSummaryPriceInSiteCurrency()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Product set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_Product reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Product unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_Product wakeUp($data)
	 */
	class EO_Product {
		/* @var \Bitrix\Sale\Internals\ProductTable */
		static public $dataClass = '\Bitrix\Sale\Internals\ProductTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Product_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getTimestampXList()
	 * @method \int[] fillTimestampX()
	 * @method \Bitrix\Main\Type\DateTime[] getDateUpdatedList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateUpdated()
	 * @method \float[] getQuantityList()
	 * @method \float[] fillQuantity()
	 * @method \int[] getMeasureList()
	 * @method \int[] fillMeasure()
	 * @method \float[] getPurchasingPriceList()
	 * @method \float[] fillPurchasingPrice()
	 * @method \string[] getPurchasingCurrencyList()
	 * @method \string[] fillPurchasingCurrency()
	 * @method \Bitrix\Iblock\EO_Element[] getIblockList()
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillIblock()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \string[] getNameWithIdentList()
	 * @method \string[] fillNameWithIdent()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \float[] getWeightList()
	 * @method \float[] fillWeight()
	 * @method \float[] getWeightInSiteUnitsList()
	 * @method \float[] fillWeightInSiteUnits()
	 * @method \float[] getPriceList()
	 * @method \float[] fillPrice()
	 * @method \string[] getCurrencyList()
	 * @method \string[] fillCurrency()
	 * @method \float[] getSummaryPriceList()
	 * @method \float[] fillSummaryPrice()
	 * @method \float[] getCurrentCurrencyRateList()
	 * @method \float[] fillCurrentCurrencyRate()
	 * @method \float[] getCurrentCurrencyRateCntList()
	 * @method \float[] fillCurrentCurrencyRateCnt()
	 * @method \float[] getCurrentSiteCurrencyRateList()
	 * @method \float[] fillCurrentSiteCurrencyRate()
	 * @method \float[] getCurrentSiteCurrencyRateCntList()
	 * @method \float[] fillCurrentSiteCurrencyRateCnt()
	 * @method \float[] getPurchasingCurrencyRateList()
	 * @method \float[] fillPurchasingCurrencyRate()
	 * @method \float[] getPurchasingCurrencyRateCntList()
	 * @method \float[] fillPurchasingCurrencyRateCnt()
	 * @method \float[] getPriceInSiteCurrencyList()
	 * @method \float[] fillPriceInSiteCurrency()
	 * @method \float[] getPurchasingPriceInSiteCurrencyList()
	 * @method \float[] fillPurchasingPriceInSiteCurrency()
	 * @method \float[] getSummaryPriceInSiteCurrencyList()
	 * @method \float[] fillSummaryPriceInSiteCurrency()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_Product $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_Product $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Product getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Product[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_Product $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_Product_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_Product current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Product_Collection merge(?EO_Product_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Product_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\ProductTable */
		static public $dataClass = '\Bitrix\Sale\Internals\ProductTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_Product_Query query()
	 * @method static EO_Product_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Product_Result getById($id)
	 * @method static EO_Product_Result getList(array $parameters = [])
	 * @method static EO_Product_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_Product createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_Product_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_Product wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_Product_Collection wakeUpCollection($rows)
	 */
	class ProductTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Product_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_Product fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Product_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Product fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection fetchCollection()
	 */
	class EO_Product_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Product createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_Product wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection wakeUpCollection($rows)
	 */
	class EO_Product_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\SectionTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Section
	 * @see \Bitrix\Sale\Internals\SectionTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Sale\Internals\EO_Section setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getName()
	 * @method \Bitrix\Sale\Internals\EO_Section setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Sale\Internals\EO_Section resetName()
	 * @method \Bitrix\Sale\Internals\EO_Section unsetName()
	 * @method \string fillName()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Section set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_Section reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_Section unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_Section wakeUp($data)
	 */
	class EO_Section {
		/* @var \Bitrix\Sale\Internals\SectionTable */
		static public $dataClass = '\Bitrix\Sale\Internals\SectionTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_Section_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_Section $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_Section $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Section getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_Section[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_Section $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_Section_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_Section current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Section_Collection merge(?EO_Section_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Section_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\SectionTable */
		static public $dataClass = '\Bitrix\Sale\Internals\SectionTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_Section_Query query()
	 * @method static EO_Section_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Section_Result getById($id)
	 * @method static EO_Section_Result getList(array $parameters = [])
	 * @method static EO_Section_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_Section createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_Section_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_Section wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_Section_Collection wakeUpCollection($rows)
	 */
	class SectionTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Section_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_Section fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Section_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Section_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Section fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_Section_Collection fetchCollection()
	 */
	class EO_Section_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_Section createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_Section_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_Section wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_Section_Collection wakeUpCollection($rows)
	 */
	class EO_Section_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\OrderProcessingTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_OrderProcessing
	 * @see \Bitrix\Sale\Internals\OrderProcessingTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getOrderId()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing setOrderId(\int|\Bitrix\Main\DB\SqlExpression $orderId)
	 * @method bool hasOrderId()
	 * @method bool isOrderIdFilled()
	 * @method bool isOrderIdChanged()
	 * @method \boolean getProductsAdded()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing setProductsAdded(\boolean|\Bitrix\Main\DB\SqlExpression $productsAdded)
	 * @method bool hasProductsAdded()
	 * @method bool isProductsAddedFilled()
	 * @method bool isProductsAddedChanged()
	 * @method \boolean remindActualProductsAdded()
	 * @method \boolean requireProductsAdded()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing resetProductsAdded()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing unsetProductsAdded()
	 * @method \boolean fillProductsAdded()
	 * @method \boolean getProductsRemoved()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing setProductsRemoved(\boolean|\Bitrix\Main\DB\SqlExpression $productsRemoved)
	 * @method bool hasProductsRemoved()
	 * @method bool isProductsRemovedFilled()
	 * @method bool isProductsRemovedChanged()
	 * @method \boolean remindActualProductsRemoved()
	 * @method \boolean requireProductsRemoved()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing resetProductsRemoved()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing unsetProductsRemoved()
	 * @method \boolean fillProductsRemoved()
	 * @method \Bitrix\Sale\Internals\EO_Order getOrder()
	 * @method \Bitrix\Sale\Internals\EO_Order remindActualOrder()
	 * @method \Bitrix\Sale\Internals\EO_Order requireOrder()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing setOrder(\Bitrix\Sale\Internals\EO_Order $object)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing resetOrder()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing unsetOrder()
	 * @method bool hasOrder()
	 * @method bool isOrderFilled()
	 * @method bool isOrderChanged()
	 * @method \Bitrix\Sale\Internals\EO_Order fillOrder()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_OrderProcessing wakeUp($data)
	 */
	class EO_OrderProcessing {
		/* @var \Bitrix\Sale\Internals\OrderProcessingTable */
		static public $dataClass = '\Bitrix\Sale\Internals\OrderProcessingTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_OrderProcessing_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getOrderIdList()
	 * @method \boolean[] getProductsAddedList()
	 * @method \boolean[] fillProductsAdded()
	 * @method \boolean[] getProductsRemovedList()
	 * @method \boolean[] fillProductsRemoved()
	 * @method \Bitrix\Sale\Internals\EO_Order[] getOrderList()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing_Collection getOrderCollection()
	 * @method \Bitrix\Sale\Internals\EO_Order_Collection fillOrder()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_OrderProcessing $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_OrderProcessing $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_OrderProcessing $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_OrderProcessing_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_OrderProcessing_Collection merge(?EO_OrderProcessing_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_OrderProcessing_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\OrderProcessingTable */
		static public $dataClass = '\Bitrix\Sale\Internals\OrderProcessingTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_OrderProcessing_Query query()
	 * @method static EO_OrderProcessing_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_OrderProcessing_Result getById($id)
	 * @method static EO_OrderProcessing_Result getList(array $parameters = [])
	 * @method static EO_OrderProcessing_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_OrderProcessing createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_OrderProcessing_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_OrderProcessing wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_OrderProcessing_Collection wakeUpCollection($rows)
	 */
	class OrderProcessingTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_OrderProcessing_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_OrderProcessing_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing_Collection fetchCollection()
	 */
	class EO_OrderProcessing_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_OrderProcessing_Collection wakeUpCollection($rows)
	 */
	class EO_OrderProcessing_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Sale\Internals\GoodsSectionTable */
namespace Bitrix\Sale\Internals {
	/**
	 * EO_GoodsSection
	 * @see \Bitrix\Sale\Internals\GoodsSectionTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \Bitrix\Sale\Internals\EO_Product getProduct()
	 * @method \Bitrix\Sale\Internals\EO_Product remindActualProduct()
	 * @method \Bitrix\Sale\Internals\EO_Product requireProduct()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection setProduct(\Bitrix\Sale\Internals\EO_Product $object)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection resetProduct()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection unsetProduct()
	 * @method bool hasProduct()
	 * @method bool isProductFilled()
	 * @method bool isProductChanged()
	 * @method \Bitrix\Sale\Internals\EO_Product fillProduct()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \Bitrix\Sale\Internals\EO_Section getSect()
	 * @method \Bitrix\Sale\Internals\EO_Section remindActualSect()
	 * @method \Bitrix\Sale\Internals\EO_Section requireSect()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection setSect(\Bitrix\Sale\Internals\EO_Section $object)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection resetSect()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection unsetSect()
	 * @method bool hasSect()
	 * @method bool isSectFilled()
	 * @method bool isSectChanged()
	 * @method \Bitrix\Sale\Internals\EO_Section fillSect()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection set($fieldName, $value)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection reset($fieldName)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Sale\Internals\EO_GoodsSection wakeUp($data)
	 */
	class EO_GoodsSection {
		/* @var \Bitrix\Sale\Internals\GoodsSectionTable */
		static public $dataClass = '\Bitrix\Sale\Internals\GoodsSectionTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * EO_GoodsSection_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIblockElementIdList()
	 * @method \Bitrix\Sale\Internals\EO_Product[] getProductList()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection_Collection getProductCollection()
	 * @method \Bitrix\Sale\Internals\EO_Product_Collection fillProduct()
	 * @method \int[] getIblockSectionIdList()
	 * @method \Bitrix\Sale\Internals\EO_Section[] getSectList()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection_Collection getSectCollection()
	 * @method \Bitrix\Sale\Internals\EO_Section_Collection fillSect()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Sale\Internals\EO_GoodsSection $object)
	 * @method bool has(\Bitrix\Sale\Internals\EO_GoodsSection $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection getByPrimary($primary)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection[] getAll()
	 * @method bool remove(\Bitrix\Sale\Internals\EO_GoodsSection $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Sale\Internals\EO_GoodsSection_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_GoodsSection_Collection merge(?EO_GoodsSection_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_GoodsSection_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Sale\Internals\GoodsSectionTable */
		static public $dataClass = '\Bitrix\Sale\Internals\GoodsSectionTable';
	}
}
namespace Bitrix\Sale\Internals {
	/**
	 * @method static EO_GoodsSection_Query query()
	 * @method static EO_GoodsSection_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_GoodsSection_Result getById($id)
	 * @method static EO_GoodsSection_Result getList(array $parameters = [])
	 * @method static EO_GoodsSection_Entity getEntity()
	 * @method static \Bitrix\Sale\Internals\EO_GoodsSection createObject($setDefaultValues = true)
	 * @method static \Bitrix\Sale\Internals\EO_GoodsSection_Collection createCollection()
	 * @method static \Bitrix\Sale\Internals\EO_GoodsSection wakeUpObject($row)
	 * @method static \Bitrix\Sale\Internals\EO_GoodsSection_Collection wakeUpCollection($rows)
	 */
	class GoodsSectionTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_GoodsSection_Result exec()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_GoodsSection_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection fetchObject()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection_Collection fetchCollection()
	 */
	class EO_GoodsSection_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection createObject($setDefaultValues = true)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection_Collection createCollection()
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection wakeUpObject($row)
	 * @method \Bitrix\Sale\Internals\EO_GoodsSection_Collection wakeUpCollection($rows)
	 */
	class EO_GoodsSection_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\ProductRowTable */
namespace Bitrix\Crm {
	/**
	 * ProductRow
	 * @see \Bitrix\Crm\ProductRowTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\ProductRow setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getOwnerId()
	 * @method \Bitrix\Crm\ProductRow setOwnerId(\int|\Bitrix\Main\DB\SqlExpression $ownerId)
	 * @method bool hasOwnerId()
	 * @method bool isOwnerIdFilled()
	 * @method bool isOwnerIdChanged()
	 * @method \int remindActualOwnerId()
	 * @method \int requireOwnerId()
	 * @method \Bitrix\Crm\ProductRow resetOwnerId()
	 * @method \Bitrix\Crm\ProductRow unsetOwnerId()
	 * @method \int fillOwnerId()
	 * @method \string getOwnerType()
	 * @method \Bitrix\Crm\ProductRow setOwnerType(\string|\Bitrix\Main\DB\SqlExpression $ownerType)
	 * @method bool hasOwnerType()
	 * @method bool isOwnerTypeFilled()
	 * @method bool isOwnerTypeChanged()
	 * @method \string remindActualOwnerType()
	 * @method \string requireOwnerType()
	 * @method \Bitrix\Crm\ProductRow resetOwnerType()
	 * @method \Bitrix\Crm\ProductRow unsetOwnerType()
	 * @method \string fillOwnerType()
	 * @method \Bitrix\Crm\EO_Deal getOwner()
	 * @method \Bitrix\Crm\EO_Deal remindActualOwner()
	 * @method \Bitrix\Crm\EO_Deal requireOwner()
	 * @method \Bitrix\Crm\ProductRow setOwner(\Bitrix\Crm\EO_Deal $object)
	 * @method \Bitrix\Crm\ProductRow resetOwner()
	 * @method \Bitrix\Crm\ProductRow unsetOwner()
	 * @method bool hasOwner()
	 * @method bool isOwnerFilled()
	 * @method bool isOwnerChanged()
	 * @method \Bitrix\Crm\EO_Deal fillOwner()
	 * @method \Bitrix\Crm\EO_Deal getDealOwner()
	 * @method \Bitrix\Crm\EO_Deal remindActualDealOwner()
	 * @method \Bitrix\Crm\EO_Deal requireDealOwner()
	 * @method \Bitrix\Crm\ProductRow setDealOwner(\Bitrix\Crm\EO_Deal $object)
	 * @method \Bitrix\Crm\ProductRow resetDealOwner()
	 * @method \Bitrix\Crm\ProductRow unsetDealOwner()
	 * @method bool hasDealOwner()
	 * @method bool isDealOwnerFilled()
	 * @method bool isDealOwnerChanged()
	 * @method \Bitrix\Crm\EO_Deal fillDealOwner()
	 * @method \Bitrix\Crm\EO_Lead getLeadOwner()
	 * @method \Bitrix\Crm\EO_Lead remindActualLeadOwner()
	 * @method \Bitrix\Crm\EO_Lead requireLeadOwner()
	 * @method \Bitrix\Crm\ProductRow setLeadOwner(\Bitrix\Crm\EO_Lead $object)
	 * @method \Bitrix\Crm\ProductRow resetLeadOwner()
	 * @method \Bitrix\Crm\ProductRow unsetLeadOwner()
	 * @method bool hasLeadOwner()
	 * @method bool isLeadOwnerFilled()
	 * @method bool isLeadOwnerChanged()
	 * @method \Bitrix\Crm\EO_Lead fillLeadOwner()
	 * @method \Bitrix\Crm\EO_Quote getQuoteOwner()
	 * @method \Bitrix\Crm\EO_Quote remindActualQuoteOwner()
	 * @method \Bitrix\Crm\EO_Quote requireQuoteOwner()
	 * @method \Bitrix\Crm\ProductRow setQuoteOwner(\Bitrix\Crm\EO_Quote $object)
	 * @method \Bitrix\Crm\ProductRow resetQuoteOwner()
	 * @method \Bitrix\Crm\ProductRow unsetQuoteOwner()
	 * @method bool hasQuoteOwner()
	 * @method bool isQuoteOwnerFilled()
	 * @method bool isQuoteOwnerChanged()
	 * @method \Bitrix\Crm\EO_Quote fillQuoteOwner()
	 * @method \int getProductId()
	 * @method \Bitrix\Crm\ProductRow setProductId(\int|\Bitrix\Main\DB\SqlExpression $productId)
	 * @method bool hasProductId()
	 * @method bool isProductIdFilled()
	 * @method bool isProductIdChanged()
	 * @method \int remindActualProductId()
	 * @method \int requireProductId()
	 * @method \Bitrix\Crm\ProductRow resetProductId()
	 * @method \Bitrix\Crm\ProductRow unsetProductId()
	 * @method \int fillProductId()
	 * @method \string getProductName()
	 * @method \Bitrix\Crm\ProductRow setProductName(\string|\Bitrix\Main\DB\SqlExpression $productName)
	 * @method bool hasProductName()
	 * @method bool isProductNameFilled()
	 * @method bool isProductNameChanged()
	 * @method \string remindActualProductName()
	 * @method \string requireProductName()
	 * @method \Bitrix\Crm\ProductRow resetProductName()
	 * @method \Bitrix\Crm\ProductRow unsetProductName()
	 * @method \string fillProductName()
	 * @method \Bitrix\Crm\EO_IBlockElementProxy getIblockElement()
	 * @method \Bitrix\Crm\EO_IBlockElementProxy remindActualIblockElement()
	 * @method \Bitrix\Crm\EO_IBlockElementProxy requireIblockElement()
	 * @method \Bitrix\Crm\ProductRow setIblockElement(\Bitrix\Crm\EO_IBlockElementProxy $object)
	 * @method \Bitrix\Crm\ProductRow resetIblockElement()
	 * @method \Bitrix\Crm\ProductRow unsetIblockElement()
	 * @method bool hasIblockElement()
	 * @method bool isIblockElementFilled()
	 * @method bool isIblockElementChanged()
	 * @method \Bitrix\Crm\EO_IBlockElementProxy fillIblockElement()
	 * @method \Bitrix\Crm\EO_IBlockElementGrcProxy getIblockElementGrc()
	 * @method \Bitrix\Crm\EO_IBlockElementGrcProxy remindActualIblockElementGrc()
	 * @method \Bitrix\Crm\EO_IBlockElementGrcProxy requireIblockElementGrc()
	 * @method \Bitrix\Crm\ProductRow setIblockElementGrc(\Bitrix\Crm\EO_IBlockElementGrcProxy $object)
	 * @method \Bitrix\Crm\ProductRow resetIblockElementGrc()
	 * @method \Bitrix\Crm\ProductRow unsetIblockElementGrc()
	 * @method bool hasIblockElementGrc()
	 * @method bool isIblockElementGrcFilled()
	 * @method bool isIblockElementGrcChanged()
	 * @method \Bitrix\Crm\EO_IBlockElementGrcProxy fillIblockElementGrc()
	 * @method \string getCpProductName()
	 * @method \string remindActualCpProductName()
	 * @method \string requireCpProductName()
	 * @method bool hasCpProductName()
	 * @method bool isCpProductNameFilled()
	 * @method \Bitrix\Crm\ProductRow unsetCpProductName()
	 * @method \string fillCpProductName()
	 * @method \float getPrice()
	 * @method \Bitrix\Crm\ProductRow setPrice(\float|\Bitrix\Main\DB\SqlExpression $price)
	 * @method bool hasPrice()
	 * @method bool isPriceFilled()
	 * @method bool isPriceChanged()
	 * @method \float remindActualPrice()
	 * @method \float requirePrice()
	 * @method \Bitrix\Crm\ProductRow resetPrice()
	 * @method \Bitrix\Crm\ProductRow unsetPrice()
	 * @method \float fillPrice()
	 * @method \float getPriceAccount()
	 * @method \Bitrix\Crm\ProductRow setPriceAccount(\float|\Bitrix\Main\DB\SqlExpression $priceAccount)
	 * @method bool hasPriceAccount()
	 * @method bool isPriceAccountFilled()
	 * @method bool isPriceAccountChanged()
	 * @method \float remindActualPriceAccount()
	 * @method \float requirePriceAccount()
	 * @method \Bitrix\Crm\ProductRow resetPriceAccount()
	 * @method \Bitrix\Crm\ProductRow unsetPriceAccount()
	 * @method \float fillPriceAccount()
	 * @method \float getPriceExclusive()
	 * @method \Bitrix\Crm\ProductRow setPriceExclusive(\float|\Bitrix\Main\DB\SqlExpression $priceExclusive)
	 * @method bool hasPriceExclusive()
	 * @method bool isPriceExclusiveFilled()
	 * @method bool isPriceExclusiveChanged()
	 * @method \float remindActualPriceExclusive()
	 * @method \float requirePriceExclusive()
	 * @method \Bitrix\Crm\ProductRow resetPriceExclusive()
	 * @method \Bitrix\Crm\ProductRow unsetPriceExclusive()
	 * @method \float fillPriceExclusive()
	 * @method \float getPriceNetto()
	 * @method \Bitrix\Crm\ProductRow setPriceNetto(\float|\Bitrix\Main\DB\SqlExpression $priceNetto)
	 * @method bool hasPriceNetto()
	 * @method bool isPriceNettoFilled()
	 * @method bool isPriceNettoChanged()
	 * @method \float remindActualPriceNetto()
	 * @method \float requirePriceNetto()
	 * @method \Bitrix\Crm\ProductRow resetPriceNetto()
	 * @method \Bitrix\Crm\ProductRow unsetPriceNetto()
	 * @method \float fillPriceNetto()
	 * @method \float getPriceBrutto()
	 * @method \Bitrix\Crm\ProductRow setPriceBrutto(\float|\Bitrix\Main\DB\SqlExpression $priceBrutto)
	 * @method bool hasPriceBrutto()
	 * @method bool isPriceBruttoFilled()
	 * @method bool isPriceBruttoChanged()
	 * @method \float remindActualPriceBrutto()
	 * @method \float requirePriceBrutto()
	 * @method \Bitrix\Crm\ProductRow resetPriceBrutto()
	 * @method \Bitrix\Crm\ProductRow unsetPriceBrutto()
	 * @method \float fillPriceBrutto()
	 * @method \float getQuantity()
	 * @method \Bitrix\Crm\ProductRow setQuantity(\float|\Bitrix\Main\DB\SqlExpression $quantity)
	 * @method bool hasQuantity()
	 * @method bool isQuantityFilled()
	 * @method bool isQuantityChanged()
	 * @method \float remindActualQuantity()
	 * @method \float requireQuantity()
	 * @method \Bitrix\Crm\ProductRow resetQuantity()
	 * @method \Bitrix\Crm\ProductRow unsetQuantity()
	 * @method \float fillQuantity()
	 * @method \float getSumAccount()
	 * @method \float remindActualSumAccount()
	 * @method \float requireSumAccount()
	 * @method bool hasSumAccount()
	 * @method bool isSumAccountFilled()
	 * @method \Bitrix\Crm\ProductRow unsetSumAccount()
	 * @method \float fillSumAccount()
	 * @method \int getDiscountTypeId()
	 * @method \Bitrix\Crm\ProductRow setDiscountTypeId(\int|\Bitrix\Main\DB\SqlExpression $discountTypeId)
	 * @method bool hasDiscountTypeId()
	 * @method bool isDiscountTypeIdFilled()
	 * @method bool isDiscountTypeIdChanged()
	 * @method \int remindActualDiscountTypeId()
	 * @method \int requireDiscountTypeId()
	 * @method \Bitrix\Crm\ProductRow resetDiscountTypeId()
	 * @method \Bitrix\Crm\ProductRow unsetDiscountTypeId()
	 * @method \int fillDiscountTypeId()
	 * @method \float getDiscountRate()
	 * @method \Bitrix\Crm\ProductRow setDiscountRate(\float|\Bitrix\Main\DB\SqlExpression $discountRate)
	 * @method bool hasDiscountRate()
	 * @method bool isDiscountRateFilled()
	 * @method bool isDiscountRateChanged()
	 * @method \float remindActualDiscountRate()
	 * @method \float requireDiscountRate()
	 * @method \Bitrix\Crm\ProductRow resetDiscountRate()
	 * @method \Bitrix\Crm\ProductRow unsetDiscountRate()
	 * @method \float fillDiscountRate()
	 * @method \float getDiscountSum()
	 * @method \Bitrix\Crm\ProductRow setDiscountSum(\float|\Bitrix\Main\DB\SqlExpression $discountSum)
	 * @method bool hasDiscountSum()
	 * @method bool isDiscountSumFilled()
	 * @method bool isDiscountSumChanged()
	 * @method \float remindActualDiscountSum()
	 * @method \float requireDiscountSum()
	 * @method \Bitrix\Crm\ProductRow resetDiscountSum()
	 * @method \Bitrix\Crm\ProductRow unsetDiscountSum()
	 * @method \float fillDiscountSum()
	 * @method \float getTaxRate()
	 * @method \Bitrix\Crm\ProductRow setTaxRate(\float|\Bitrix\Main\DB\SqlExpression $taxRate)
	 * @method bool hasTaxRate()
	 * @method bool isTaxRateFilled()
	 * @method bool isTaxRateChanged()
	 * @method \float remindActualTaxRate()
	 * @method \float requireTaxRate()
	 * @method \Bitrix\Crm\ProductRow resetTaxRate()
	 * @method \Bitrix\Crm\ProductRow unsetTaxRate()
	 * @method \float fillTaxRate()
	 * @method \boolean getTaxIncluded()
	 * @method \Bitrix\Crm\ProductRow setTaxIncluded(\boolean|\Bitrix\Main\DB\SqlExpression $taxIncluded)
	 * @method bool hasTaxIncluded()
	 * @method bool isTaxIncludedFilled()
	 * @method bool isTaxIncludedChanged()
	 * @method \boolean remindActualTaxIncluded()
	 * @method \boolean requireTaxIncluded()
	 * @method \Bitrix\Crm\ProductRow resetTaxIncluded()
	 * @method \Bitrix\Crm\ProductRow unsetTaxIncluded()
	 * @method \boolean fillTaxIncluded()
	 * @method \boolean getCustomized()
	 * @method \Bitrix\Crm\ProductRow setCustomized(\boolean|\Bitrix\Main\DB\SqlExpression $customized)
	 * @method bool hasCustomized()
	 * @method bool isCustomizedFilled()
	 * @method bool isCustomizedChanged()
	 * @method \boolean remindActualCustomized()
	 * @method \boolean requireCustomized()
	 * @method \Bitrix\Crm\ProductRow resetCustomized()
	 * @method \Bitrix\Crm\ProductRow unsetCustomized()
	 * @method \boolean fillCustomized()
	 * @method \int getMeasureCode()
	 * @method \Bitrix\Crm\ProductRow setMeasureCode(\int|\Bitrix\Main\DB\SqlExpression $measureCode)
	 * @method bool hasMeasureCode()
	 * @method bool isMeasureCodeFilled()
	 * @method bool isMeasureCodeChanged()
	 * @method \int remindActualMeasureCode()
	 * @method \int requireMeasureCode()
	 * @method \Bitrix\Crm\ProductRow resetMeasureCode()
	 * @method \Bitrix\Crm\ProductRow unsetMeasureCode()
	 * @method \int fillMeasureCode()
	 * @method \string getMeasureName()
	 * @method \Bitrix\Crm\ProductRow setMeasureName(\string|\Bitrix\Main\DB\SqlExpression $measureName)
	 * @method bool hasMeasureName()
	 * @method bool isMeasureNameFilled()
	 * @method bool isMeasureNameChanged()
	 * @method \string remindActualMeasureName()
	 * @method \string requireMeasureName()
	 * @method \Bitrix\Crm\ProductRow resetMeasureName()
	 * @method \Bitrix\Crm\ProductRow unsetMeasureName()
	 * @method \string fillMeasureName()
	 * @method \int getSort()
	 * @method \Bitrix\Crm\ProductRow setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Crm\ProductRow resetSort()
	 * @method \Bitrix\Crm\ProductRow unsetSort()
	 * @method \int fillSort()
	 * @method \string getXmlId()
	 * @method \Bitrix\Crm\ProductRow setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Crm\ProductRow resetXmlId()
	 * @method \Bitrix\Crm\ProductRow unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \int getType()
	 * @method \Bitrix\Crm\ProductRow setType(\int|\Bitrix\Main\DB\SqlExpression $type)
	 * @method bool hasType()
	 * @method bool isTypeFilled()
	 * @method bool isTypeChanged()
	 * @method \int remindActualType()
	 * @method \int requireType()
	 * @method \Bitrix\Crm\ProductRow resetType()
	 * @method \Bitrix\Crm\ProductRow unsetType()
	 * @method \int fillType()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation getProductRowReservation()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation remindActualProductRowReservation()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation requireProductRowReservation()
	 * @method \Bitrix\Crm\ProductRow setProductRowReservation(\Bitrix\Crm\Reservation\ProductRowReservation $object)
	 * @method \Bitrix\Crm\ProductRow resetProductRowReservation()
	 * @method \Bitrix\Crm\ProductRow unsetProductRowReservation()
	 * @method bool hasProductRowReservation()
	 * @method bool isProductRowReservationFilled()
	 * @method bool isProductRowReservationChanged()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation fillProductRowReservation()
	 * @method \Bitrix\Crm\ProductRow resetAppointmentOwner()
	 * @method \Bitrix\Crm\ProductRow unsetAppointmentOwner()
	 * @method bool hasAppointmentOwner()
	 * @method bool isAppointmentOwnerFilled()
	 * @method bool isAppointmentOwnerChanged()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\ProductRow set($fieldName, $value)
	 * @method \Bitrix\Crm\ProductRow reset($fieldName)
	 * @method \Bitrix\Crm\ProductRow unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\ProductRow wakeUp($data)
	 */
	class EO_ProductRow {
		/* @var \Bitrix\Crm\ProductRowTable */
		static public $dataClass = '\Bitrix\Crm\ProductRowTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * ProductRowCollection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getOwnerIdList()
	 * @method \int[] fillOwnerId()
	 * @method \string[] getOwnerTypeList()
	 * @method \string[] fillOwnerType()
	 * @method \Bitrix\Crm\EO_Deal[] getOwnerList()
	 * @method \Bitrix\Crm\ProductRowCollection getOwnerCollection()
	 * @method \Bitrix\Crm\EO_Deal_Collection fillOwner()
	 * @method \Bitrix\Crm\EO_Deal[] getDealOwnerList()
	 * @method \Bitrix\Crm\ProductRowCollection getDealOwnerCollection()
	 * @method \Bitrix\Crm\EO_Deal_Collection fillDealOwner()
	 * @method \Bitrix\Crm\EO_Lead[] getLeadOwnerList()
	 * @method \Bitrix\Crm\ProductRowCollection getLeadOwnerCollection()
	 * @method \Bitrix\Crm\EO_Lead_Collection fillLeadOwner()
	 * @method \Bitrix\Crm\EO_Quote[] getQuoteOwnerList()
	 * @method \Bitrix\Crm\ProductRowCollection getQuoteOwnerCollection()
	 * @method \Bitrix\Crm\EO_Quote_Collection fillQuoteOwner()
	 * @method \int[] getProductIdList()
	 * @method \int[] fillProductId()
	 * @method \string[] getProductNameList()
	 * @method \string[] fillProductName()
	 * @method \Bitrix\Crm\EO_IBlockElementProxy[] getIblockElementList()
	 * @method \Bitrix\Crm\ProductRowCollection getIblockElementCollection()
	 * @method \Bitrix\Crm\EO_IBlockElementProxy_Collection fillIblockElement()
	 * @method \Bitrix\Crm\EO_IBlockElementGrcProxy[] getIblockElementGrcList()
	 * @method \Bitrix\Crm\ProductRowCollection getIblockElementGrcCollection()
	 * @method \Bitrix\Crm\EO_IBlockElementGrcProxy_Collection fillIblockElementGrc()
	 * @method \string[] getCpProductNameList()
	 * @method \string[] fillCpProductName()
	 * @method \float[] getPriceList()
	 * @method \float[] fillPrice()
	 * @method \float[] getPriceAccountList()
	 * @method \float[] fillPriceAccount()
	 * @method \float[] getPriceExclusiveList()
	 * @method \float[] fillPriceExclusive()
	 * @method \float[] getPriceNettoList()
	 * @method \float[] fillPriceNetto()
	 * @method \float[] getPriceBruttoList()
	 * @method \float[] fillPriceBrutto()
	 * @method \float[] getQuantityList()
	 * @method \float[] fillQuantity()
	 * @method \float[] getSumAccountList()
	 * @method \float[] fillSumAccount()
	 * @method \int[] getDiscountTypeIdList()
	 * @method \int[] fillDiscountTypeId()
	 * @method \float[] getDiscountRateList()
	 * @method \float[] fillDiscountRate()
	 * @method \float[] getDiscountSumList()
	 * @method \float[] fillDiscountSum()
	 * @method \float[] getTaxRateList()
	 * @method \float[] fillTaxRate()
	 * @method \boolean[] getTaxIncludedList()
	 * @method \boolean[] fillTaxIncluded()
	 * @method \boolean[] getCustomizedList()
	 * @method \boolean[] fillCustomized()
	 * @method \int[] getMeasureCodeList()
	 * @method \int[] fillMeasureCode()
	 * @method \string[] getMeasureNameList()
	 * @method \string[] fillMeasureName()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \int[] getTypeList()
	 * @method \int[] fillType()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation[] getProductRowReservationList()
	 * @method \Bitrix\Crm\ProductRowCollection getProductRowReservationCollection()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection fillProductRowReservation()
	 * @method \Bitrix\Crm\ProductRowCollection getAppointmentOwnerCollection()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\ProductRow $object)
	 * @method bool has(\Bitrix\Crm\ProductRow $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\ProductRow getByPrimary($primary)
	 * @method \Bitrix\Crm\ProductRow[] getAll()
	 * @method bool remove(\Bitrix\Crm\ProductRow $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\ProductRowCollection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\ProductRow current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method ProductRowCollection merge(?ProductRowCollection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ProductRow_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\ProductRowTable */
		static public $dataClass = '\Bitrix\Crm\ProductRowTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_ProductRow_Query query()
	 * @method static EO_ProductRow_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ProductRow_Result getById($id)
	 * @method static EO_ProductRow_Result getList(array $parameters = [])
	 * @method static EO_ProductRow_Entity getEntity()
	 * @method static \Bitrix\Crm\ProductRow createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\ProductRowCollection createCollection()
	 * @method static \Bitrix\Crm\ProductRow wakeUpObject($row)
	 * @method static \Bitrix\Crm\ProductRowCollection wakeUpCollection($rows)
	 */
	class ProductRowTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ProductRow_Result exec()
	 * @method \Bitrix\Crm\ProductRow fetchObject()
	 * @method \Bitrix\Crm\ProductRowCollection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ProductRow_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\ProductRow fetchObject()
	 * @method \Bitrix\Crm\ProductRowCollection fetchCollection()
	 */
	class EO_ProductRow_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\ProductRow createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\ProductRowCollection createCollection()
	 * @method \Bitrix\Crm\ProductRow wakeUpObject($row)
	 * @method \Bitrix\Crm\ProductRowCollection wakeUpCollection($rows)
	 */
	class EO_ProductRow_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\Reservation\Internals\ProductRowReservationTable */
namespace Bitrix\Crm\Reservation\Internals {
	/**
	 * ProductRowReservation
	 * @see \Bitrix\Crm\Reservation\Internals\ProductRowReservationTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getRowId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setRowId(\int|\Bitrix\Main\DB\SqlExpression $rowId)
	 * @method bool hasRowId()
	 * @method bool isRowIdFilled()
	 * @method bool isRowIdChanged()
	 * @method \int remindActualRowId()
	 * @method \int requireRowId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetRowId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetRowId()
	 * @method \int fillRowId()
	 * @method \float getReserveQuantity()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setReserveQuantity(\float|\Bitrix\Main\DB\SqlExpression $reserveQuantity)
	 * @method bool hasReserveQuantity()
	 * @method bool isReserveQuantityFilled()
	 * @method bool isReserveQuantityChanged()
	 * @method \float remindActualReserveQuantity()
	 * @method \float requireReserveQuantity()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetReserveQuantity()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetReserveQuantity()
	 * @method \float fillReserveQuantity()
	 * @method \Bitrix\Main\Type\Date getDateReserveEnd()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setDateReserveEnd(\Bitrix\Main\Type\Date|\Bitrix\Main\DB\SqlExpression $dateReserveEnd)
	 * @method bool hasDateReserveEnd()
	 * @method bool isDateReserveEndFilled()
	 * @method bool isDateReserveEndChanged()
	 * @method \Bitrix\Main\Type\Date remindActualDateReserveEnd()
	 * @method \Bitrix\Main\Type\Date requireDateReserveEnd()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetDateReserveEnd()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetDateReserveEnd()
	 * @method \Bitrix\Main\Type\Date fillDateReserveEnd()
	 * @method \int getStoreId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setStoreId(\int|\Bitrix\Main\DB\SqlExpression $storeId)
	 * @method bool hasStoreId()
	 * @method bool isStoreIdFilled()
	 * @method bool isStoreIdChanged()
	 * @method \int remindActualStoreId()
	 * @method \int requireStoreId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetStoreId()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetStoreId()
	 * @method \int fillStoreId()
	 * @method \boolean getIsAuto()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setIsAuto(\boolean|\Bitrix\Main\DB\SqlExpression $isAuto)
	 * @method bool hasIsAuto()
	 * @method bool isIsAutoFilled()
	 * @method bool isIsAutoChanged()
	 * @method \boolean remindActualIsAuto()
	 * @method \boolean requireIsAuto()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetIsAuto()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetIsAuto()
	 * @method \boolean fillIsAuto()
	 * @method \Bitrix\Crm\ProductRow getProductRow()
	 * @method \Bitrix\Crm\ProductRow remindActualProductRow()
	 * @method \Bitrix\Crm\ProductRow requireProductRow()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setProductRow(\Bitrix\Crm\ProductRow $object)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetProductRow()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetProductRow()
	 * @method bool hasProductRow()
	 * @method bool isProductRowFilled()
	 * @method bool isProductRowChanged()
	 * @method \Bitrix\Crm\ProductRow fillProductRow()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap getProductReservationMap()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap remindActualProductReservationMap()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap requireProductReservationMap()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation setProductReservationMap(\Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap $object)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation resetProductReservationMap()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unsetProductReservationMap()
	 * @method bool hasProductReservationMap()
	 * @method bool isProductReservationMapFilled()
	 * @method bool isProductReservationMapChanged()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap fillProductReservationMap()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation set($fieldName, $value)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation reset($fieldName)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\Reservation\ProductRowReservation wakeUp($data)
	 */
	class EO_ProductRowReservation {
		/* @var \Bitrix\Crm\Reservation\Internals\ProductRowReservationTable */
		static public $dataClass = '\Bitrix\Crm\Reservation\Internals\ProductRowReservationTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm\Reservation\Internals {
	/**
	 * EO_ProductRowReservation_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getRowIdList()
	 * @method \int[] fillRowId()
	 * @method \float[] getReserveQuantityList()
	 * @method \float[] fillReserveQuantity()
	 * @method \Bitrix\Main\Type\Date[] getDateReserveEndList()
	 * @method \Bitrix\Main\Type\Date[] fillDateReserveEnd()
	 * @method \int[] getStoreIdList()
	 * @method \int[] fillStoreId()
	 * @method \boolean[] getIsAutoList()
	 * @method \boolean[] fillIsAuto()
	 * @method \Bitrix\Crm\ProductRow[] getProductRowList()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection getProductRowCollection()
	 * @method \Bitrix\Crm\ProductRowCollection fillProductRow()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap[] getProductReservationMapList()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection getProductReservationMapCollection()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductReservationMap_Collection fillProductReservationMap()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\Reservation\ProductRowReservation $object)
	 * @method bool has(\Bitrix\Crm\Reservation\ProductRowReservation $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation getByPrimary($primary)
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation[] getAll()
	 * @method bool remove(\Bitrix\Crm\Reservation\ProductRowReservation $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ProductRowReservation_Collection merge(?EO_ProductRowReservation_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ProductRowReservation_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\Reservation\Internals\ProductRowReservationTable */
		static public $dataClass = '\Bitrix\Crm\Reservation\Internals\ProductRowReservationTable';
	}
}
namespace Bitrix\Crm\Reservation\Internals {
	/**
	 * @method static EO_ProductRowReservation_Query query()
	 * @method static EO_ProductRowReservation_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ProductRowReservation_Result getById($id)
	 * @method static EO_ProductRowReservation_Result getList(array $parameters = [])
	 * @method static EO_ProductRowReservation_Entity getEntity()
	 * @method static \Bitrix\Crm\Reservation\ProductRowReservation createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection createCollection()
	 * @method static \Bitrix\Crm\Reservation\ProductRowReservation wakeUpObject($row)
	 * @method static \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection wakeUpCollection($rows)
	 */
	class ProductRowReservationTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ProductRowReservation_Result exec()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation fetchObject()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ProductRowReservation_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation fetchObject()
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection fetchCollection()
	 */
	class EO_ProductRowReservation_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection createCollection()
	 * @method \Bitrix\Crm\Reservation\ProductRowReservation wakeUpObject($row)
	 * @method \Bitrix\Crm\Reservation\Internals\EO_ProductRowReservation_Collection wakeUpCollection($rows)
	 */
	class EO_ProductRowReservation_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\CompanyTable */
namespace Bitrix\Crm {
	/**
	 * Company
	 * @see \Bitrix\Crm\CompanyTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\Company setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Crm\Company setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Crm\Company resetDateCreate()
	 * @method \Bitrix\Crm\Company unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \Bitrix\Main\Type\DateTime getDateModify()
	 * @method \Bitrix\Crm\Company setDateModify(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateModify)
	 * @method bool hasDateModify()
	 * @method bool isDateModifyFilled()
	 * @method bool isDateModifyChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateModify()
	 * @method \Bitrix\Main\Type\DateTime requireDateModify()
	 * @method \Bitrix\Crm\Company resetDateModify()
	 * @method \Bitrix\Crm\Company unsetDateModify()
	 * @method \Bitrix\Main\Type\DateTime fillDateModify()
	 * @method \int getCreatedById()
	 * @method \Bitrix\Crm\Company setCreatedById(\int|\Bitrix\Main\DB\SqlExpression $createdById)
	 * @method bool hasCreatedById()
	 * @method bool isCreatedByIdFilled()
	 * @method bool isCreatedByIdChanged()
	 * @method \int remindActualCreatedById()
	 * @method \int requireCreatedById()
	 * @method \Bitrix\Crm\Company resetCreatedById()
	 * @method \Bitrix\Crm\Company unsetCreatedById()
	 * @method \int fillCreatedById()
	 * @method \Bitrix\Main\EO_User getCreatedBy()
	 * @method \Bitrix\Main\EO_User remindActualCreatedBy()
	 * @method \Bitrix\Main\EO_User requireCreatedBy()
	 * @method \Bitrix\Crm\Company setCreatedBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Crm\Company resetCreatedBy()
	 * @method \Bitrix\Crm\Company unsetCreatedBy()
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedBy()
	 * @method \int getModifyById()
	 * @method \Bitrix\Crm\Company setModifyById(\int|\Bitrix\Main\DB\SqlExpression $modifyById)
	 * @method bool hasModifyById()
	 * @method bool isModifyByIdFilled()
	 * @method bool isModifyByIdChanged()
	 * @method \int remindActualModifyById()
	 * @method \int requireModifyById()
	 * @method \Bitrix\Crm\Company resetModifyById()
	 * @method \Bitrix\Crm\Company unsetModifyById()
	 * @method \int fillModifyById()
	 * @method \Bitrix\Main\EO_User getModifyBy()
	 * @method \Bitrix\Main\EO_User remindActualModifyBy()
	 * @method \Bitrix\Main\EO_User requireModifyBy()
	 * @method \Bitrix\Crm\Company setModifyBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Crm\Company resetModifyBy()
	 * @method \Bitrix\Crm\Company unsetModifyBy()
	 * @method bool hasModifyBy()
	 * @method bool isModifyByFilled()
	 * @method bool isModifyByChanged()
	 * @method \Bitrix\Main\EO_User fillModifyBy()
	 * @method \int getAssignedById()
	 * @method \Bitrix\Crm\Company setAssignedById(\int|\Bitrix\Main\DB\SqlExpression $assignedById)
	 * @method bool hasAssignedById()
	 * @method bool isAssignedByIdFilled()
	 * @method bool isAssignedByIdChanged()
	 * @method \int remindActualAssignedById()
	 * @method \int requireAssignedById()
	 * @method \Bitrix\Crm\Company resetAssignedById()
	 * @method \Bitrix\Crm\Company unsetAssignedById()
	 * @method \int fillAssignedById()
	 * @method \Bitrix\Main\EO_User getAssignedBy()
	 * @method \Bitrix\Main\EO_User remindActualAssignedBy()
	 * @method \Bitrix\Main\EO_User requireAssignedBy()
	 * @method \Bitrix\Crm\Company setAssignedBy(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Crm\Company resetAssignedBy()
	 * @method \Bitrix\Crm\Company unsetAssignedBy()
	 * @method bool hasAssignedBy()
	 * @method bool isAssignedByFilled()
	 * @method bool isAssignedByChanged()
	 * @method \Bitrix\Main\EO_User fillAssignedBy()
	 * @method \boolean getOpened()
	 * @method \Bitrix\Crm\Company setOpened(\boolean|\Bitrix\Main\DB\SqlExpression $opened)
	 * @method bool hasOpened()
	 * @method bool isOpenedFilled()
	 * @method bool isOpenedChanged()
	 * @method \boolean remindActualOpened()
	 * @method \boolean requireOpened()
	 * @method \Bitrix\Crm\Company resetOpened()
	 * @method \Bitrix\Crm\Company unsetOpened()
	 * @method \boolean fillOpened()
	 * @method \string getTitle()
	 * @method \Bitrix\Crm\Company setTitle(\string|\Bitrix\Main\DB\SqlExpression $title)
	 * @method bool hasTitle()
	 * @method bool isTitleFilled()
	 * @method bool isTitleChanged()
	 * @method \string remindActualTitle()
	 * @method \string requireTitle()
	 * @method \Bitrix\Crm\Company resetTitle()
	 * @method \Bitrix\Crm\Company unsetTitle()
	 * @method \string fillTitle()
	 * @method \string getLogo()
	 * @method \Bitrix\Crm\Company setLogo(\string|\Bitrix\Main\DB\SqlExpression $logo)
	 * @method bool hasLogo()
	 * @method bool isLogoFilled()
	 * @method bool isLogoChanged()
	 * @method \string remindActualLogo()
	 * @method \string requireLogo()
	 * @method \Bitrix\Crm\Company resetLogo()
	 * @method \Bitrix\Crm\Company unsetLogo()
	 * @method \string fillLogo()
	 * @method \string getAddress()
	 * @method \Bitrix\Crm\Company setAddress(\string|\Bitrix\Main\DB\SqlExpression $address)
	 * @method bool hasAddress()
	 * @method bool isAddressFilled()
	 * @method bool isAddressChanged()
	 * @method \string remindActualAddress()
	 * @method \string requireAddress()
	 * @method \Bitrix\Crm\Company resetAddress()
	 * @method \Bitrix\Crm\Company unsetAddress()
	 * @method \string fillAddress()
	 * @method \string getAddressLegal()
	 * @method \Bitrix\Crm\Company setAddressLegal(\string|\Bitrix\Main\DB\SqlExpression $addressLegal)
	 * @method bool hasAddressLegal()
	 * @method bool isAddressLegalFilled()
	 * @method bool isAddressLegalChanged()
	 * @method \string remindActualAddressLegal()
	 * @method \string requireAddressLegal()
	 * @method \Bitrix\Crm\Company resetAddressLegal()
	 * @method \Bitrix\Crm\Company unsetAddressLegal()
	 * @method \string fillAddressLegal()
	 * @method \string getBankingDetails()
	 * @method \Bitrix\Crm\Company setBankingDetails(\string|\Bitrix\Main\DB\SqlExpression $bankingDetails)
	 * @method bool hasBankingDetails()
	 * @method bool isBankingDetailsFilled()
	 * @method bool isBankingDetailsChanged()
	 * @method \string remindActualBankingDetails()
	 * @method \string requireBankingDetails()
	 * @method \Bitrix\Crm\Company resetBankingDetails()
	 * @method \Bitrix\Crm\Company unsetBankingDetails()
	 * @method \string fillBankingDetails()
	 * @method \string getComments()
	 * @method \Bitrix\Crm\Company setComments(\string|\Bitrix\Main\DB\SqlExpression $comments)
	 * @method bool hasComments()
	 * @method bool isCommentsFilled()
	 * @method bool isCommentsChanged()
	 * @method \string remindActualComments()
	 * @method \string requireComments()
	 * @method \Bitrix\Crm\Company resetComments()
	 * @method \Bitrix\Crm\Company unsetComments()
	 * @method \string fillComments()
	 * @method \string getCompanyType()
	 * @method \Bitrix\Crm\Company setCompanyType(\string|\Bitrix\Main\DB\SqlExpression $companyType)
	 * @method bool hasCompanyType()
	 * @method bool isCompanyTypeFilled()
	 * @method bool isCompanyTypeChanged()
	 * @method \string remindActualCompanyType()
	 * @method \string requireCompanyType()
	 * @method \Bitrix\Crm\Company resetCompanyType()
	 * @method \Bitrix\Crm\Company unsetCompanyType()
	 * @method \string fillCompanyType()
	 * @method \Bitrix\Crm\EO_Status getCompanyTypeBy()
	 * @method \Bitrix\Crm\EO_Status remindActualCompanyTypeBy()
	 * @method \Bitrix\Crm\EO_Status requireCompanyTypeBy()
	 * @method \Bitrix\Crm\Company setCompanyTypeBy(\Bitrix\Crm\EO_Status $object)
	 * @method \Bitrix\Crm\Company resetCompanyTypeBy()
	 * @method \Bitrix\Crm\Company unsetCompanyTypeBy()
	 * @method bool hasCompanyTypeBy()
	 * @method bool isCompanyTypeByFilled()
	 * @method bool isCompanyTypeByChanged()
	 * @method \Bitrix\Crm\EO_Status fillCompanyTypeBy()
	 * @method \string getIndustry()
	 * @method \Bitrix\Crm\Company setIndustry(\string|\Bitrix\Main\DB\SqlExpression $industry)
	 * @method bool hasIndustry()
	 * @method bool isIndustryFilled()
	 * @method bool isIndustryChanged()
	 * @method \string remindActualIndustry()
	 * @method \string requireIndustry()
	 * @method \Bitrix\Crm\Company resetIndustry()
	 * @method \Bitrix\Crm\Company unsetIndustry()
	 * @method \string fillIndustry()
	 * @method \Bitrix\Crm\EO_Status getIndustryBy()
	 * @method \Bitrix\Crm\EO_Status remindActualIndustryBy()
	 * @method \Bitrix\Crm\EO_Status requireIndustryBy()
	 * @method \Bitrix\Crm\Company setIndustryBy(\Bitrix\Crm\EO_Status $object)
	 * @method \Bitrix\Crm\Company resetIndustryBy()
	 * @method \Bitrix\Crm\Company unsetIndustryBy()
	 * @method bool hasIndustryBy()
	 * @method bool isIndustryByFilled()
	 * @method bool isIndustryByChanged()
	 * @method \Bitrix\Crm\EO_Status fillIndustryBy()
	 * @method \float getRevenue()
	 * @method \Bitrix\Crm\Company setRevenue(\float|\Bitrix\Main\DB\SqlExpression $revenue)
	 * @method bool hasRevenue()
	 * @method bool isRevenueFilled()
	 * @method bool isRevenueChanged()
	 * @method \float remindActualRevenue()
	 * @method \float requireRevenue()
	 * @method \Bitrix\Crm\Company resetRevenue()
	 * @method \Bitrix\Crm\Company unsetRevenue()
	 * @method \float fillRevenue()
	 * @method \string getCurrencyId()
	 * @method \Bitrix\Crm\Company setCurrencyId(\string|\Bitrix\Main\DB\SqlExpression $currencyId)
	 * @method bool hasCurrencyId()
	 * @method bool isCurrencyIdFilled()
	 * @method bool isCurrencyIdChanged()
	 * @method \string remindActualCurrencyId()
	 * @method \string requireCurrencyId()
	 * @method \Bitrix\Crm\Company resetCurrencyId()
	 * @method \Bitrix\Crm\Company unsetCurrencyId()
	 * @method \string fillCurrencyId()
	 * @method \string getEmployees()
	 * @method \Bitrix\Crm\Company setEmployees(\string|\Bitrix\Main\DB\SqlExpression $employees)
	 * @method bool hasEmployees()
	 * @method bool isEmployeesFilled()
	 * @method bool isEmployeesChanged()
	 * @method \string remindActualEmployees()
	 * @method \string requireEmployees()
	 * @method \Bitrix\Crm\Company resetEmployees()
	 * @method \Bitrix\Crm\Company unsetEmployees()
	 * @method \string fillEmployees()
	 * @method \Bitrix\Crm\EO_Status getEmployeesBy()
	 * @method \Bitrix\Crm\EO_Status remindActualEmployeesBy()
	 * @method \Bitrix\Crm\EO_Status requireEmployeesBy()
	 * @method \Bitrix\Crm\Company setEmployeesBy(\Bitrix\Crm\EO_Status $object)
	 * @method \Bitrix\Crm\Company resetEmployeesBy()
	 * @method \Bitrix\Crm\Company unsetEmployeesBy()
	 * @method bool hasEmployeesBy()
	 * @method bool isEmployeesByFilled()
	 * @method bool isEmployeesByChanged()
	 * @method \Bitrix\Crm\EO_Status fillEmployeesBy()
	 * @method \int getLeadId()
	 * @method \Bitrix\Crm\Company setLeadId(\int|\Bitrix\Main\DB\SqlExpression $leadId)
	 * @method bool hasLeadId()
	 * @method bool isLeadIdFilled()
	 * @method bool isLeadIdChanged()
	 * @method \int remindActualLeadId()
	 * @method \int requireLeadId()
	 * @method \Bitrix\Crm\Company resetLeadId()
	 * @method \Bitrix\Crm\Company unsetLeadId()
	 * @method \int fillLeadId()
	 * @method \int getWebformId()
	 * @method \Bitrix\Crm\Company setWebformId(\int|\Bitrix\Main\DB\SqlExpression $webformId)
	 * @method bool hasWebformId()
	 * @method bool isWebformIdFilled()
	 * @method bool isWebformIdChanged()
	 * @method \int remindActualWebformId()
	 * @method \int requireWebformId()
	 * @method \Bitrix\Crm\Company resetWebformId()
	 * @method \Bitrix\Crm\Company unsetWebformId()
	 * @method \int fillWebformId()
	 * @method \string getOriginatorId()
	 * @method \Bitrix\Crm\Company setOriginatorId(\string|\Bitrix\Main\DB\SqlExpression $originatorId)
	 * @method bool hasOriginatorId()
	 * @method bool isOriginatorIdFilled()
	 * @method bool isOriginatorIdChanged()
	 * @method \string remindActualOriginatorId()
	 * @method \string requireOriginatorId()
	 * @method \Bitrix\Crm\Company resetOriginatorId()
	 * @method \Bitrix\Crm\Company unsetOriginatorId()
	 * @method \string fillOriginatorId()
	 * @method \string getOriginId()
	 * @method \Bitrix\Crm\Company setOriginId(\string|\Bitrix\Main\DB\SqlExpression $originId)
	 * @method bool hasOriginId()
	 * @method bool isOriginIdFilled()
	 * @method bool isOriginIdChanged()
	 * @method \string remindActualOriginId()
	 * @method \string requireOriginId()
	 * @method \Bitrix\Crm\Company resetOriginId()
	 * @method \Bitrix\Crm\Company unsetOriginId()
	 * @method \string fillOriginId()
	 * @method \string getOriginVersion()
	 * @method \Bitrix\Crm\Company setOriginVersion(\string|\Bitrix\Main\DB\SqlExpression $originVersion)
	 * @method bool hasOriginVersion()
	 * @method bool isOriginVersionFilled()
	 * @method bool isOriginVersionChanged()
	 * @method \string remindActualOriginVersion()
	 * @method \string requireOriginVersion()
	 * @method \Bitrix\Crm\Company resetOriginVersion()
	 * @method \Bitrix\Crm\Company unsetOriginVersion()
	 * @method \string fillOriginVersion()
	 * @method \boolean getHasPhone()
	 * @method \Bitrix\Crm\Company setHasPhone(\boolean|\Bitrix\Main\DB\SqlExpression $hasPhone)
	 * @method bool hasHasPhone()
	 * @method bool isHasPhoneFilled()
	 * @method bool isHasPhoneChanged()
	 * @method \boolean remindActualHasPhone()
	 * @method \boolean requireHasPhone()
	 * @method \Bitrix\Crm\Company resetHasPhone()
	 * @method \Bitrix\Crm\Company unsetHasPhone()
	 * @method \boolean fillHasPhone()
	 * @method \boolean getHasEmail()
	 * @method \Bitrix\Crm\Company setHasEmail(\boolean|\Bitrix\Main\DB\SqlExpression $hasEmail)
	 * @method bool hasHasEmail()
	 * @method bool isHasEmailFilled()
	 * @method bool isHasEmailChanged()
	 * @method \boolean remindActualHasEmail()
	 * @method \boolean requireHasEmail()
	 * @method \Bitrix\Crm\Company resetHasEmail()
	 * @method \Bitrix\Crm\Company unsetHasEmail()
	 * @method \boolean fillHasEmail()
	 * @method \boolean getHasImol()
	 * @method \Bitrix\Crm\Company setHasImol(\boolean|\Bitrix\Main\DB\SqlExpression $hasImol)
	 * @method bool hasHasImol()
	 * @method bool isHasImolFilled()
	 * @method bool isHasImolChanged()
	 * @method \boolean remindActualHasImol()
	 * @method \boolean requireHasImol()
	 * @method \Bitrix\Crm\Company resetHasImol()
	 * @method \Bitrix\Crm\Company unsetHasImol()
	 * @method \boolean fillHasImol()
	 * @method \boolean getIsMyCompany()
	 * @method \Bitrix\Crm\Company setIsMyCompany(\boolean|\Bitrix\Main\DB\SqlExpression $isMyCompany)
	 * @method bool hasIsMyCompany()
	 * @method bool isIsMyCompanyFilled()
	 * @method bool isIsMyCompanyChanged()
	 * @method \boolean remindActualIsMyCompany()
	 * @method \boolean requireIsMyCompany()
	 * @method \Bitrix\Crm\Company resetIsMyCompany()
	 * @method \Bitrix\Crm\Company unsetIsMyCompany()
	 * @method \boolean fillIsMyCompany()
	 * @method \string getSearchContent()
	 * @method \Bitrix\Crm\Company setSearchContent(\string|\Bitrix\Main\DB\SqlExpression $searchContent)
	 * @method bool hasSearchContent()
	 * @method bool isSearchContentFilled()
	 * @method bool isSearchContentChanged()
	 * @method \string remindActualSearchContent()
	 * @method \string requireSearchContent()
	 * @method \Bitrix\Crm\Company resetSearchContent()
	 * @method \Bitrix\Crm\Company unsetSearchContent()
	 * @method \string fillSearchContent()
	 * @method \int getCategoryId()
	 * @method \Bitrix\Crm\Company setCategoryId(\int|\Bitrix\Main\DB\SqlExpression $categoryId)
	 * @method bool hasCategoryId()
	 * @method bool isCategoryIdFilled()
	 * @method bool isCategoryIdChanged()
	 * @method \int remindActualCategoryId()
	 * @method \int requireCategoryId()
	 * @method \Bitrix\Crm\Company resetCategoryId()
	 * @method \Bitrix\Crm\Company unsetCategoryId()
	 * @method \int fillCategoryId()
	 * @method \int getLastActivityBy()
	 * @method \Bitrix\Crm\Company setLastActivityBy(\int|\Bitrix\Main\DB\SqlExpression $lastActivityBy)
	 * @method bool hasLastActivityBy()
	 * @method bool isLastActivityByFilled()
	 * @method bool isLastActivityByChanged()
	 * @method \int remindActualLastActivityBy()
	 * @method \int requireLastActivityBy()
	 * @method \Bitrix\Crm\Company resetLastActivityBy()
	 * @method \Bitrix\Crm\Company unsetLastActivityBy()
	 * @method \int fillLastActivityBy()
	 * @method \Bitrix\Main\Type\DateTime getLastActivityTime()
	 * @method \Bitrix\Crm\Company setLastActivityTime(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $lastActivityTime)
	 * @method bool hasLastActivityTime()
	 * @method bool isLastActivityTimeFilled()
	 * @method bool isLastActivityTimeChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualLastActivityTime()
	 * @method \Bitrix\Main\Type\DateTime requireLastActivityTime()
	 * @method \Bitrix\Crm\Company resetLastActivityTime()
	 * @method \Bitrix\Crm\Company unsetLastActivityTime()
	 * @method \Bitrix\Main\Type\DateTime fillLastActivityTime()
	 * @method \Bitrix\Crm\Binding\EO_ContactCompany_Collection getContactBindings()
	 * @method \Bitrix\Crm\Binding\EO_ContactCompany_Collection requireContactBindings()
	 * @method \Bitrix\Crm\Binding\EO_ContactCompany_Collection fillContactBindings()
	 * @method bool hasContactBindings()
	 * @method bool isContactBindingsFilled()
	 * @method bool isContactBindingsChanged()
	 * @method void addToContactBindings(\Bitrix\Crm\Binding\EO_ContactCompany $contactCompany)
	 * @method void removeFromContactBindings(\Bitrix\Crm\Binding\EO_ContactCompany $contactCompany)
	 * @method void removeAllContactBindings()
	 * @method \Bitrix\Crm\Company resetContactBindings()
	 * @method \Bitrix\Crm\Company unsetContactBindings()
	 * @method \Bitrix\Crm\EO_EventRelations getEventRelation()
	 * @method \Bitrix\Crm\EO_EventRelations remindActualEventRelation()
	 * @method \Bitrix\Crm\EO_EventRelations requireEventRelation()
	 * @method \Bitrix\Crm\Company setEventRelation(\Bitrix\Crm\EO_EventRelations $object)
	 * @method \Bitrix\Crm\Company resetEventRelation()
	 * @method \Bitrix\Crm\Company unsetEventRelation()
	 * @method bool hasEventRelation()
	 * @method bool isEventRelationFilled()
	 * @method bool isEventRelationChanged()
	 * @method \Bitrix\Crm\EO_EventRelations fillEventRelation()
	 * @method \string getEmailHome()
	 * @method \string remindActualEmailHome()
	 * @method \string requireEmailHome()
	 * @method bool hasEmailHome()
	 * @method bool isEmailHomeFilled()
	 * @method \Bitrix\Crm\Company unsetEmailHome()
	 * @method \string fillEmailHome()
	 * @method \string getEmailWork()
	 * @method \string remindActualEmailWork()
	 * @method \string requireEmailWork()
	 * @method bool hasEmailWork()
	 * @method bool isEmailWorkFilled()
	 * @method \Bitrix\Crm\Company unsetEmailWork()
	 * @method \string fillEmailWork()
	 * @method \string getEmailMailing()
	 * @method \string remindActualEmailMailing()
	 * @method \string requireEmailMailing()
	 * @method bool hasEmailMailing()
	 * @method bool isEmailMailingFilled()
	 * @method \Bitrix\Crm\Company unsetEmailMailing()
	 * @method \string fillEmailMailing()
	 * @method \string getPhoneMobile()
	 * @method \string remindActualPhoneMobile()
	 * @method \string requirePhoneMobile()
	 * @method bool hasPhoneMobile()
	 * @method bool isPhoneMobileFilled()
	 * @method \Bitrix\Crm\Company unsetPhoneMobile()
	 * @method \string fillPhoneMobile()
	 * @method \string getPhoneWork()
	 * @method \string remindActualPhoneWork()
	 * @method \string requirePhoneWork()
	 * @method bool hasPhoneWork()
	 * @method bool isPhoneWorkFilled()
	 * @method \Bitrix\Crm\Company unsetPhoneWork()
	 * @method \string fillPhoneWork()
	 * @method \string getPhoneMailing()
	 * @method \string remindActualPhoneMailing()
	 * @method \string requirePhoneMailing()
	 * @method bool hasPhoneMailing()
	 * @method bool isPhoneMailingFilled()
	 * @method \Bitrix\Crm\Company unsetPhoneMailing()
	 * @method \string fillPhoneMailing()
	 * @method \string getImol()
	 * @method \string remindActualImol()
	 * @method \string requireImol()
	 * @method bool hasImol()
	 * @method bool isImolFilled()
	 * @method \Bitrix\Crm\Company unsetImol()
	 * @method \string fillImol()
	 * @method \string getEmail()
	 * @method \string remindActualEmail()
	 * @method \string requireEmail()
	 * @method bool hasEmail()
	 * @method bool isEmailFilled()
	 * @method \Bitrix\Crm\Company unsetEmail()
	 * @method \string fillEmail()
	 * @method \string getPhone()
	 * @method \string remindActualPhone()
	 * @method \string requirePhone()
	 * @method bool hasPhone()
	 * @method bool isPhoneFilled()
	 * @method \Bitrix\Crm\Company unsetPhone()
	 * @method \string fillPhone()
	 * @method \Bitrix\Crm\EO_Utm getUtmSource()
	 * @method \Bitrix\Crm\EO_Utm remindActualUtmSource()
	 * @method \Bitrix\Crm\EO_Utm requireUtmSource()
	 * @method \Bitrix\Crm\Company setUtmSource(\Bitrix\Crm\EO_Utm $object)
	 * @method \Bitrix\Crm\Company resetUtmSource()
	 * @method \Bitrix\Crm\Company unsetUtmSource()
	 * @method bool hasUtmSource()
	 * @method bool isUtmSourceFilled()
	 * @method bool isUtmSourceChanged()
	 * @method \Bitrix\Crm\EO_Utm fillUtmSource()
	 * @method \Bitrix\Crm\EO_Utm getUtmMedium()
	 * @method \Bitrix\Crm\EO_Utm remindActualUtmMedium()
	 * @method \Bitrix\Crm\EO_Utm requireUtmMedium()
	 * @method \Bitrix\Crm\Company setUtmMedium(\Bitrix\Crm\EO_Utm $object)
	 * @method \Bitrix\Crm\Company resetUtmMedium()
	 * @method \Bitrix\Crm\Company unsetUtmMedium()
	 * @method bool hasUtmMedium()
	 * @method bool isUtmMediumFilled()
	 * @method bool isUtmMediumChanged()
	 * @method \Bitrix\Crm\EO_Utm fillUtmMedium()
	 * @method \Bitrix\Crm\EO_Utm getUtmCampaign()
	 * @method \Bitrix\Crm\EO_Utm remindActualUtmCampaign()
	 * @method \Bitrix\Crm\EO_Utm requireUtmCampaign()
	 * @method \Bitrix\Crm\Company setUtmCampaign(\Bitrix\Crm\EO_Utm $object)
	 * @method \Bitrix\Crm\Company resetUtmCampaign()
	 * @method \Bitrix\Crm\Company unsetUtmCampaign()
	 * @method bool hasUtmCampaign()
	 * @method bool isUtmCampaignFilled()
	 * @method bool isUtmCampaignChanged()
	 * @method \Bitrix\Crm\EO_Utm fillUtmCampaign()
	 * @method \Bitrix\Crm\EO_Utm getUtmContent()
	 * @method \Bitrix\Crm\EO_Utm remindActualUtmContent()
	 * @method \Bitrix\Crm\EO_Utm requireUtmContent()
	 * @method \Bitrix\Crm\Company setUtmContent(\Bitrix\Crm\EO_Utm $object)
	 * @method \Bitrix\Crm\Company resetUtmContent()
	 * @method \Bitrix\Crm\Company unsetUtmContent()
	 * @method bool hasUtmContent()
	 * @method bool isUtmContentFilled()
	 * @method bool isUtmContentChanged()
	 * @method \Bitrix\Crm\EO_Utm fillUtmContent()
	 * @method \Bitrix\Crm\EO_Utm getUtmTerm()
	 * @method \Bitrix\Crm\EO_Utm remindActualUtmTerm()
	 * @method \Bitrix\Crm\EO_Utm requireUtmTerm()
	 * @method \Bitrix\Crm\Company setUtmTerm(\Bitrix\Crm\EO_Utm $object)
	 * @method \Bitrix\Crm\Company resetUtmTerm()
	 * @method \Bitrix\Crm\Company unsetUtmTerm()
	 * @method bool hasUtmTerm()
	 * @method bool isUtmTermFilled()
	 * @method bool isUtmTermChanged()
	 * @method \Bitrix\Crm\EO_Utm fillUtmTerm()
	 * @method \Bitrix\Crm\EO_CompanyUts getUtsObject()
	 * @method \Bitrix\Crm\EO_CompanyUts remindActualUtsObject()
	 * @method \Bitrix\Crm\EO_CompanyUts requireUtsObject()
	 * @method \Bitrix\Crm\Company setUtsObject(\Bitrix\Crm\EO_CompanyUts $object)
	 * @method \Bitrix\Crm\Company resetUtsObject()
	 * @method \Bitrix\Crm\Company unsetUtsObject()
	 * @method bool hasUtsObject()
	 * @method bool isUtsObjectFilled()
	 * @method bool isUtsObjectChanged()
	 * @method \Bitrix\Crm\EO_CompanyUts fillUtsObject()
	 * @method \int getUfLogo()
	 * @method \int remindActualUfLogo()
	 * @method \int requireUfLogo()
	 * @method bool hasUfLogo()
	 * @method bool isUfLogoFilled()
	 * @method \Bitrix\Crm\Company unsetUfLogo()
	 * @method \int fillUfLogo()
	 * @method \Bitrix\Crm\Company setUfLogo(\int $ufLogo)
	 * @method bool isUfLogoChanged()
	 * @method \float getUfCrm63566067e40bf()
	 * @method \float remindActualUfCrm63566067e40bf()
	 * @method \float requireUfCrm63566067e40bf()
	 * @method bool hasUfCrm63566067e40bf()
	 * @method bool isUfCrm63566067e40bfFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566067e40bf()
	 * @method \float fillUfCrm63566067e40bf()
	 * @method \Bitrix\Crm\Company setUfCrm63566067e40bf(\float $ufCrm63566067e40bf)
	 * @method bool isUfCrm63566067e40bfChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm63566067e7ecd()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm63566067e7ecd()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm63566067e7ecd()
	 * @method bool hasUfCrm63566067e7ecd()
	 * @method bool isUfCrm63566067e7ecdFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566067e7ecd()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm63566067e7ecd()
	 * @method \Bitrix\Crm\Company setUfCrm63566067e7ecd(\Bitrix\Main\Type\DateTime $ufCrm63566067e7ecd)
	 * @method bool isUfCrm63566067e7ecdChanged()
	 * @method \float getUfCrm63566067eb7ba()
	 * @method \float remindActualUfCrm63566067eb7ba()
	 * @method \float requireUfCrm63566067eb7ba()
	 * @method bool hasUfCrm63566067eb7ba()
	 * @method bool isUfCrm63566067eb7baFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566067eb7ba()
	 * @method \float fillUfCrm63566067eb7ba()
	 * @method \Bitrix\Crm\Company setUfCrm63566067eb7ba(\float $ufCrm63566067eb7ba)
	 * @method bool isUfCrm63566067eb7baChanged()
	 * @method \float getUfCrm63566067eed92()
	 * @method \float remindActualUfCrm63566067eed92()
	 * @method \float requireUfCrm63566067eed92()
	 * @method bool hasUfCrm63566067eed92()
	 * @method bool isUfCrm63566067eed92Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566067eed92()
	 * @method \float fillUfCrm63566067eed92()
	 * @method \Bitrix\Crm\Company setUfCrm63566067eed92(\float $ufCrm63566067eed92)
	 * @method bool isUfCrm63566067eed92Changed()
	 * @method \float getUfCrm63566067f29c1()
	 * @method \float remindActualUfCrm63566067f29c1()
	 * @method \float requireUfCrm63566067f29c1()
	 * @method bool hasUfCrm63566067f29c1()
	 * @method bool isUfCrm63566067f29c1Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566067f29c1()
	 * @method \float fillUfCrm63566067f29c1()
	 * @method \Bitrix\Crm\Company setUfCrm63566067f29c1(\float $ufCrm63566067f29c1)
	 * @method bool isUfCrm63566067f29c1Changed()
	 * @method \float getUfCrm6356606801e65()
	 * @method \float remindActualUfCrm6356606801e65()
	 * @method \float requireUfCrm6356606801e65()
	 * @method bool hasUfCrm6356606801e65()
	 * @method bool isUfCrm6356606801e65Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606801e65()
	 * @method \float fillUfCrm6356606801e65()
	 * @method \Bitrix\Crm\Company setUfCrm6356606801e65(\float $ufCrm6356606801e65)
	 * @method bool isUfCrm6356606801e65Changed()
	 * @method \string getUfCrm635660680526f()
	 * @method \string remindActualUfCrm635660680526f()
	 * @method \string requireUfCrm635660680526f()
	 * @method bool hasUfCrm635660680526f()
	 * @method bool isUfCrm635660680526fFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660680526f()
	 * @method \string fillUfCrm635660680526f()
	 * @method \Bitrix\Crm\Company setUfCrm635660680526f(\string[] $ufCrm635660680526f)
	 * @method bool isUfCrm635660680526fChanged()
	 * @method \float getUfCrm63566068099f8()
	 * @method \float remindActualUfCrm63566068099f8()
	 * @method \float requireUfCrm63566068099f8()
	 * @method bool hasUfCrm63566068099f8()
	 * @method bool isUfCrm63566068099f8Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566068099f8()
	 * @method \float fillUfCrm63566068099f8()
	 * @method \Bitrix\Crm\Company setUfCrm63566068099f8(\float $ufCrm63566068099f8)
	 * @method bool isUfCrm63566068099f8Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm635660680cefe()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm635660680cefe()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm635660680cefe()
	 * @method bool hasUfCrm635660680cefe()
	 * @method bool isUfCrm635660680cefeFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660680cefe()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm635660680cefe()
	 * @method \Bitrix\Crm\Company setUfCrm635660680cefe(\Bitrix\Main\Type\DateTime $ufCrm635660680cefe)
	 * @method bool isUfCrm635660680cefeChanged()
	 * @method \string getUfCrm6356606810870()
	 * @method \string remindActualUfCrm6356606810870()
	 * @method \string requireUfCrm6356606810870()
	 * @method bool hasUfCrm6356606810870()
	 * @method bool isUfCrm6356606810870Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606810870()
	 * @method \string fillUfCrm6356606810870()
	 * @method \Bitrix\Crm\Company setUfCrm6356606810870(\string $ufCrm6356606810870)
	 * @method bool isUfCrm6356606810870Changed()
	 * @method \int getUfCrm635660681445f()
	 * @method \int remindActualUfCrm635660681445f()
	 * @method \int requireUfCrm635660681445f()
	 * @method bool hasUfCrm635660681445f()
	 * @method bool isUfCrm635660681445fFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660681445f()
	 * @method \int fillUfCrm635660681445f()
	 * @method \Bitrix\Crm\Company setUfCrm635660681445f(\int $ufCrm635660681445f)
	 * @method bool isUfCrm635660681445fChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6356606817a80()
	 * @method bool hasUfCrm6356606817a80()
	 * @method bool isUfCrm6356606817a80Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6356606817a80()
	 * @method \Bitrix\Crm\Company setUfCrm6356606817a80(\Bitrix\Main\Type\DateTime $ufCrm6356606817a80)
	 * @method bool isUfCrm6356606817a80Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm635660681ad33()
	 * @method bool hasUfCrm635660681ad33()
	 * @method bool isUfCrm635660681ad33Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm635660681ad33()
	 * @method \Bitrix\Crm\Company setUfCrm635660681ad33(\Bitrix\Main\Type\DateTime $ufCrm635660681ad33)
	 * @method bool isUfCrm635660681ad33Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6356606824dab()
	 * @method bool hasUfCrm6356606824dab()
	 * @method bool isUfCrm6356606824dabFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6356606824dab()
	 * @method \Bitrix\Crm\Company setUfCrm6356606824dab(\Bitrix\Main\Type\DateTime $ufCrm6356606824dab)
	 * @method bool isUfCrm6356606824dabChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm635660682981e()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm635660682981e()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm635660682981e()
	 * @method bool hasUfCrm635660682981e()
	 * @method bool isUfCrm635660682981eFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660682981e()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm635660682981e()
	 * @method \Bitrix\Crm\Company setUfCrm635660682981e(\Bitrix\Main\Type\DateTime $ufCrm635660682981e)
	 * @method bool isUfCrm635660682981eChanged()
	 * @method \int getUfCrm635660682cf24()
	 * @method \int remindActualUfCrm635660682cf24()
	 * @method \int requireUfCrm635660682cf24()
	 * @method bool hasUfCrm635660682cf24()
	 * @method bool isUfCrm635660682cf24Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660682cf24()
	 * @method \int fillUfCrm635660682cf24()
	 * @method \Bitrix\Crm\Company setUfCrm635660682cf24(\int $ufCrm635660682cf24)
	 * @method bool isUfCrm635660682cf24Changed()
	 * @method \string getUfCrm63566068314d7()
	 * @method \string remindActualUfCrm63566068314d7()
	 * @method \string requireUfCrm63566068314d7()
	 * @method bool hasUfCrm63566068314d7()
	 * @method bool isUfCrm63566068314d7Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566068314d7()
	 * @method \string fillUfCrm63566068314d7()
	 * @method \Bitrix\Crm\Company setUfCrm63566068314d7(\string[] $ufCrm63566068314d7)
	 * @method bool isUfCrm63566068314d7Changed()
	 * @method \int getUfCrm6356606834cb4()
	 * @method \int remindActualUfCrm6356606834cb4()
	 * @method \int requireUfCrm6356606834cb4()
	 * @method bool hasUfCrm6356606834cb4()
	 * @method bool isUfCrm6356606834cb4Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606834cb4()
	 * @method \int fillUfCrm6356606834cb4()
	 * @method \Bitrix\Crm\Company setUfCrm6356606834cb4(\int $ufCrm6356606834cb4)
	 * @method bool isUfCrm6356606834cb4Changed()
	 * @method \string getUfCrm6356606838370()
	 * @method \string remindActualUfCrm6356606838370()
	 * @method \string requireUfCrm6356606838370()
	 * @method bool hasUfCrm6356606838370()
	 * @method bool isUfCrm6356606838370Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606838370()
	 * @method \string fillUfCrm6356606838370()
	 * @method \Bitrix\Crm\Company setUfCrm6356606838370(\string $ufCrm6356606838370)
	 * @method bool isUfCrm6356606838370Changed()
	 * @method \int getUfCrm635660683bec7()
	 * @method \int remindActualUfCrm635660683bec7()
	 * @method \int requireUfCrm635660683bec7()
	 * @method bool hasUfCrm635660683bec7()
	 * @method bool isUfCrm635660683bec7Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660683bec7()
	 * @method \int fillUfCrm635660683bec7()
	 * @method \Bitrix\Crm\Company setUfCrm635660683bec7(\int $ufCrm635660683bec7)
	 * @method bool isUfCrm635660683bec7Changed()
	 * @method \int getUfCrm63566068408c0()
	 * @method \int remindActualUfCrm63566068408c0()
	 * @method \int requireUfCrm63566068408c0()
	 * @method bool hasUfCrm63566068408c0()
	 * @method bool isUfCrm63566068408c0Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566068408c0()
	 * @method \int fillUfCrm63566068408c0()
	 * @method \Bitrix\Crm\Company setUfCrm63566068408c0(\int $ufCrm63566068408c0)
	 * @method bool isUfCrm63566068408c0Changed()
	 * @method \string getUfCrm6356606844f4e()
	 * @method \string remindActualUfCrm6356606844f4e()
	 * @method \string requireUfCrm6356606844f4e()
	 * @method bool hasUfCrm6356606844f4e()
	 * @method bool isUfCrm6356606844f4eFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606844f4e()
	 * @method \string fillUfCrm6356606844f4e()
	 * @method \Bitrix\Crm\Company setUfCrm6356606844f4e(\string $ufCrm6356606844f4e)
	 * @method bool isUfCrm6356606844f4eChanged()
	 * @method \int getUfCrm63566068485d3()
	 * @method \int remindActualUfCrm63566068485d3()
	 * @method \int requireUfCrm63566068485d3()
	 * @method bool hasUfCrm63566068485d3()
	 * @method bool isUfCrm63566068485d3Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566068485d3()
	 * @method \int fillUfCrm63566068485d3()
	 * @method \Bitrix\Crm\Company setUfCrm63566068485d3(\int $ufCrm63566068485d3)
	 * @method bool isUfCrm63566068485d3Changed()
	 * @method \string getUfCrm635660684bfb2()
	 * @method \string remindActualUfCrm635660684bfb2()
	 * @method \string requireUfCrm635660684bfb2()
	 * @method bool hasUfCrm635660684bfb2()
	 * @method bool isUfCrm635660684bfb2Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660684bfb2()
	 * @method \string fillUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\Company setUfCrm635660684bfb2(\string[] $ufCrm635660684bfb2)
	 * @method bool isUfCrm635660684bfb2Changed()
	 * @method \string getUfCrm635660684f7df()
	 * @method \string remindActualUfCrm635660684f7df()
	 * @method \string requireUfCrm635660684f7df()
	 * @method bool hasUfCrm635660684f7df()
	 * @method bool isUfCrm635660684f7dfFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660684f7df()
	 * @method \string fillUfCrm635660684f7df()
	 * @method \Bitrix\Crm\Company setUfCrm635660684f7df(\string $ufCrm635660684f7df)
	 * @method bool isUfCrm635660684f7dfChanged()
	 * @method \string getUfCrm6356606853229()
	 * @method \string remindActualUfCrm6356606853229()
	 * @method \string requireUfCrm6356606853229()
	 * @method bool hasUfCrm6356606853229()
	 * @method bool isUfCrm6356606853229Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606853229()
	 * @method \string fillUfCrm6356606853229()
	 * @method \Bitrix\Crm\Company setUfCrm6356606853229(\string $ufCrm6356606853229)
	 * @method bool isUfCrm6356606853229Changed()
	 * @method \int getUfCrm6356606856fad()
	 * @method \int remindActualUfCrm6356606856fad()
	 * @method \int requireUfCrm6356606856fad()
	 * @method bool hasUfCrm6356606856fad()
	 * @method bool isUfCrm6356606856fadFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606856fad()
	 * @method \int fillUfCrm6356606856fad()
	 * @method \Bitrix\Crm\Company setUfCrm6356606856fad(\int $ufCrm6356606856fad)
	 * @method bool isUfCrm6356606856fadChanged()
	 * @method \string getUfCrm635660685b8c3()
	 * @method \string remindActualUfCrm635660685b8c3()
	 * @method \string requireUfCrm635660685b8c3()
	 * @method bool hasUfCrm635660685b8c3()
	 * @method bool isUfCrm635660685b8c3Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660685b8c3()
	 * @method \string fillUfCrm635660685b8c3()
	 * @method \Bitrix\Crm\Company setUfCrm635660685b8c3(\string $ufCrm635660685b8c3)
	 * @method bool isUfCrm635660685b8c3Changed()
	 * @method \string getUfCrm635660685f1cf()
	 * @method \string remindActualUfCrm635660685f1cf()
	 * @method \string requireUfCrm635660685f1cf()
	 * @method bool hasUfCrm635660685f1cf()
	 * @method bool isUfCrm635660685f1cfFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660685f1cf()
	 * @method \string fillUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\Company setUfCrm635660685f1cf(\string[] $ufCrm635660685f1cf)
	 * @method bool isUfCrm635660685f1cfChanged()
	 * @method \string getUfCrm6356606862c37()
	 * @method \string remindActualUfCrm6356606862c37()
	 * @method \string requireUfCrm6356606862c37()
	 * @method bool hasUfCrm6356606862c37()
	 * @method bool isUfCrm6356606862c37Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606862c37()
	 * @method \string fillUfCrm6356606862c37()
	 * @method \Bitrix\Crm\Company setUfCrm6356606862c37(\string[] $ufCrm6356606862c37)
	 * @method bool isUfCrm6356606862c37Changed()
	 * @method \int getUfCrm6356606866832()
	 * @method \int remindActualUfCrm6356606866832()
	 * @method \int requireUfCrm6356606866832()
	 * @method bool hasUfCrm6356606866832()
	 * @method bool isUfCrm6356606866832Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606866832()
	 * @method \int fillUfCrm6356606866832()
	 * @method \Bitrix\Crm\Company setUfCrm6356606866832(\int $ufCrm6356606866832)
	 * @method bool isUfCrm6356606866832Changed()
	 * @method \string getUfCrmLastPayments()
	 * @method \string remindActualUfCrmLastPayments()
	 * @method \string requireUfCrmLastPayments()
	 * @method bool hasUfCrmLastPayments()
	 * @method bool isUfCrmLastPaymentsFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrmLastPayments()
	 * @method \string fillUfCrmLastPayments()
	 * @method \Bitrix\Crm\Company setUfCrmLastPayments(\string $ufCrmLastPayments)
	 * @method bool isUfCrmLastPaymentsChanged()
	 * @method \string getUfCrmKassaBankAccount()
	 * @method \string remindActualUfCrmKassaBankAccount()
	 * @method \string requireUfCrmKassaBankAccount()
	 * @method bool hasUfCrmKassaBankAccount()
	 * @method bool isUfCrmKassaBankAccountFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrmKassaBankAccount()
	 * @method \string fillUfCrmKassaBankAccount()
	 * @method \Bitrix\Crm\Company setUfCrmKassaBankAccount(\string $ufCrmKassaBankAccount)
	 * @method bool isUfCrmKassaBankAccountChanged()
	 * @method \int getUfStamp()
	 * @method \int remindActualUfStamp()
	 * @method \int requireUfStamp()
	 * @method bool hasUfStamp()
	 * @method bool isUfStampFilled()
	 * @method \Bitrix\Crm\Company unsetUfStamp()
	 * @method \int fillUfStamp()
	 * @method \Bitrix\Crm\Company setUfStamp(\int $ufStamp)
	 * @method bool isUfStampChanged()
	 * @method \int getUfDirectorSign()
	 * @method \int remindActualUfDirectorSign()
	 * @method \int requireUfDirectorSign()
	 * @method bool hasUfDirectorSign()
	 * @method bool isUfDirectorSignFilled()
	 * @method \Bitrix\Crm\Company unsetUfDirectorSign()
	 * @method \int fillUfDirectorSign()
	 * @method \Bitrix\Crm\Company setUfDirectorSign(\int $ufDirectorSign)
	 * @method bool isUfDirectorSignChanged()
	 * @method \int getUfAccountantSign()
	 * @method \int remindActualUfAccountantSign()
	 * @method \int requireUfAccountantSign()
	 * @method bool hasUfAccountantSign()
	 * @method bool isUfAccountantSignFilled()
	 * @method \Bitrix\Crm\Company unsetUfAccountantSign()
	 * @method \int fillUfAccountantSign()
	 * @method \Bitrix\Crm\Company setUfAccountantSign(\int $ufAccountantSign)
	 * @method bool isUfAccountantSignChanged()
	 * @method \string getUfCrm635660686a627()
	 * @method \string remindActualUfCrm635660686a627()
	 * @method \string requireUfCrm635660686a627()
	 * @method bool hasUfCrm635660686a627()
	 * @method bool isUfCrm635660686a627Filled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660686a627()
	 * @method \string fillUfCrm635660686a627()
	 * @method \Bitrix\Crm\Company setUfCrm635660686a627(\string $ufCrm635660686a627)
	 * @method bool isUfCrm635660686a627Changed()
	 * @method \int getUfCrm635660680526fSingle()
	 * @method \int remindActualUfCrm635660680526fSingle()
	 * @method \int requireUfCrm635660680526fSingle()
	 * @method bool hasUfCrm635660680526fSingle()
	 * @method bool isUfCrm635660680526fSingleFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660680526fSingle()
	 * @method \int fillUfCrm635660680526fSingle()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm63566068314d7Single()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm63566068314d7Single()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm63566068314d7Single()
	 * @method bool hasUfCrm63566068314d7Single()
	 * @method bool isUfCrm63566068314d7SingleFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm63566068314d7Single()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm63566068314d7Single()
	 * @method \int getUfCrm635660684bfb2Single()
	 * @method \int remindActualUfCrm635660684bfb2Single()
	 * @method \int requireUfCrm635660684bfb2Single()
	 * @method bool hasUfCrm635660684bfb2Single()
	 * @method bool isUfCrm635660684bfb2SingleFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660684bfb2Single()
	 * @method \int fillUfCrm635660684bfb2Single()
	 * @method \string getUfCrm635660685f1cfSingle()
	 * @method \string remindActualUfCrm635660685f1cfSingle()
	 * @method \string requireUfCrm635660685f1cfSingle()
	 * @method bool hasUfCrm635660685f1cfSingle()
	 * @method bool isUfCrm635660685f1cfSingleFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm635660685f1cfSingle()
	 * @method \string fillUfCrm635660685f1cfSingle()
	 * @method \float getUfCrm6356606862c37Single()
	 * @method \float remindActualUfCrm6356606862c37Single()
	 * @method \float requireUfCrm6356606862c37Single()
	 * @method bool hasUfCrm6356606862c37Single()
	 * @method bool isUfCrm6356606862c37SingleFilled()
	 * @method \Bitrix\Crm\Company unsetUfCrm6356606862c37Single()
	 * @method \float fillUfCrm6356606862c37Single()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\Company set($fieldName, $value)
	 * @method \Bitrix\Crm\Company reset($fieldName)
	 * @method \Bitrix\Crm\Company unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\Company wakeUp($data)
	 */
	class EO_Company {
		/* @var \Bitrix\Crm\CompanyTable */
		static public $dataClass = '\Bitrix\Crm\CompanyTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_Company_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \Bitrix\Main\Type\DateTime[] getDateModifyList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateModify()
	 * @method \int[] getCreatedByIdList()
	 * @method \int[] fillCreatedById()
	 * @method \Bitrix\Main\EO_User[] getCreatedByList()
	 * @method \Bitrix\Crm\EO_Company_Collection getCreatedByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedBy()
	 * @method \int[] getModifyByIdList()
	 * @method \int[] fillModifyById()
	 * @method \Bitrix\Main\EO_User[] getModifyByList()
	 * @method \Bitrix\Crm\EO_Company_Collection getModifyByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifyBy()
	 * @method \int[] getAssignedByIdList()
	 * @method \int[] fillAssignedById()
	 * @method \Bitrix\Main\EO_User[] getAssignedByList()
	 * @method \Bitrix\Crm\EO_Company_Collection getAssignedByCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillAssignedBy()
	 * @method \boolean[] getOpenedList()
	 * @method \boolean[] fillOpened()
	 * @method \string[] getTitleList()
	 * @method \string[] fillTitle()
	 * @method \string[] getLogoList()
	 * @method \string[] fillLogo()
	 * @method \string[] getAddressList()
	 * @method \string[] fillAddress()
	 * @method \string[] getAddressLegalList()
	 * @method \string[] fillAddressLegal()
	 * @method \string[] getBankingDetailsList()
	 * @method \string[] fillBankingDetails()
	 * @method \string[] getCommentsList()
	 * @method \string[] fillComments()
	 * @method \string[] getCompanyTypeList()
	 * @method \string[] fillCompanyType()
	 * @method \Bitrix\Crm\EO_Status[] getCompanyTypeByList()
	 * @method \Bitrix\Crm\EO_Company_Collection getCompanyTypeByCollection()
	 * @method \Bitrix\Crm\EO_Status_Collection fillCompanyTypeBy()
	 * @method \string[] getIndustryList()
	 * @method \string[] fillIndustry()
	 * @method \Bitrix\Crm\EO_Status[] getIndustryByList()
	 * @method \Bitrix\Crm\EO_Company_Collection getIndustryByCollection()
	 * @method \Bitrix\Crm\EO_Status_Collection fillIndustryBy()
	 * @method \float[] getRevenueList()
	 * @method \float[] fillRevenue()
	 * @method \string[] getCurrencyIdList()
	 * @method \string[] fillCurrencyId()
	 * @method \string[] getEmployeesList()
	 * @method \string[] fillEmployees()
	 * @method \Bitrix\Crm\EO_Status[] getEmployeesByList()
	 * @method \Bitrix\Crm\EO_Company_Collection getEmployeesByCollection()
	 * @method \Bitrix\Crm\EO_Status_Collection fillEmployeesBy()
	 * @method \int[] getLeadIdList()
	 * @method \int[] fillLeadId()
	 * @method \int[] getWebformIdList()
	 * @method \int[] fillWebformId()
	 * @method \string[] getOriginatorIdList()
	 * @method \string[] fillOriginatorId()
	 * @method \string[] getOriginIdList()
	 * @method \string[] fillOriginId()
	 * @method \string[] getOriginVersionList()
	 * @method \string[] fillOriginVersion()
	 * @method \boolean[] getHasPhoneList()
	 * @method \boolean[] fillHasPhone()
	 * @method \boolean[] getHasEmailList()
	 * @method \boolean[] fillHasEmail()
	 * @method \boolean[] getHasImolList()
	 * @method \boolean[] fillHasImol()
	 * @method \boolean[] getIsMyCompanyList()
	 * @method \boolean[] fillIsMyCompany()
	 * @method \string[] getSearchContentList()
	 * @method \string[] fillSearchContent()
	 * @method \int[] getCategoryIdList()
	 * @method \int[] fillCategoryId()
	 * @method \int[] getLastActivityByList()
	 * @method \int[] fillLastActivityBy()
	 * @method \Bitrix\Main\Type\DateTime[] getLastActivityTimeList()
	 * @method \Bitrix\Main\Type\DateTime[] fillLastActivityTime()
	 * @method \Bitrix\Crm\Binding\EO_ContactCompany_Collection[] getContactBindingsList()
	 * @method \Bitrix\Crm\Binding\EO_ContactCompany_Collection getContactBindingsCollection()
	 * @method \Bitrix\Crm\Binding\EO_ContactCompany_Collection fillContactBindings()
	 * @method \Bitrix\Crm\EO_EventRelations[] getEventRelationList()
	 * @method \Bitrix\Crm\EO_Company_Collection getEventRelationCollection()
	 * @method \Bitrix\Crm\EO_EventRelations_Collection fillEventRelation()
	 * @method \string[] getEmailHomeList()
	 * @method \string[] fillEmailHome()
	 * @method \string[] getEmailWorkList()
	 * @method \string[] fillEmailWork()
	 * @method \string[] getEmailMailingList()
	 * @method \string[] fillEmailMailing()
	 * @method \string[] getPhoneMobileList()
	 * @method \string[] fillPhoneMobile()
	 * @method \string[] getPhoneWorkList()
	 * @method \string[] fillPhoneWork()
	 * @method \string[] getPhoneMailingList()
	 * @method \string[] fillPhoneMailing()
	 * @method \string[] getImolList()
	 * @method \string[] fillImol()
	 * @method \string[] getEmailList()
	 * @method \string[] fillEmail()
	 * @method \string[] getPhoneList()
	 * @method \string[] fillPhone()
	 * @method \Bitrix\Crm\EO_Utm[] getUtmSourceList()
	 * @method \Bitrix\Crm\EO_Company_Collection getUtmSourceCollection()
	 * @method \Bitrix\Crm\EO_Utm_Collection fillUtmSource()
	 * @method \Bitrix\Crm\EO_Utm[] getUtmMediumList()
	 * @method \Bitrix\Crm\EO_Company_Collection getUtmMediumCollection()
	 * @method \Bitrix\Crm\EO_Utm_Collection fillUtmMedium()
	 * @method \Bitrix\Crm\EO_Utm[] getUtmCampaignList()
	 * @method \Bitrix\Crm\EO_Company_Collection getUtmCampaignCollection()
	 * @method \Bitrix\Crm\EO_Utm_Collection fillUtmCampaign()
	 * @method \Bitrix\Crm\EO_Utm[] getUtmContentList()
	 * @method \Bitrix\Crm\EO_Company_Collection getUtmContentCollection()
	 * @method \Bitrix\Crm\EO_Utm_Collection fillUtmContent()
	 * @method \Bitrix\Crm\EO_Utm[] getUtmTermList()
	 * @method \Bitrix\Crm\EO_Company_Collection getUtmTermCollection()
	 * @method \Bitrix\Crm\EO_Utm_Collection fillUtmTerm()
	 * @method \Bitrix\Crm\EO_CompanyUts[] getUtsObjectList()
	 * @method \Bitrix\Crm\EO_Company_Collection getUtsObjectCollection()
	 * @method \Bitrix\Crm\EO_CompanyUts_Collection fillUtsObject()
	 * @method \int[] getUfLogoList()
	 * @method \int[] fillUfLogo()
	 * @method \float[] getUfCrm63566067e40bfList()
	 * @method \float[] fillUfCrm63566067e40bf()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm63566067e7ecdList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm63566067e7ecd()
	 * @method \float[] getUfCrm63566067eb7baList()
	 * @method \float[] fillUfCrm63566067eb7ba()
	 * @method \float[] getUfCrm63566067eed92List()
	 * @method \float[] fillUfCrm63566067eed92()
	 * @method \float[] getUfCrm63566067f29c1List()
	 * @method \float[] fillUfCrm63566067f29c1()
	 * @method \float[] getUfCrm6356606801e65List()
	 * @method \float[] fillUfCrm6356606801e65()
	 * @method \string[] getUfCrm635660680526fList()
	 * @method \string[] fillUfCrm635660680526f()
	 * @method \float[] getUfCrm63566068099f8List()
	 * @method \float[] fillUfCrm63566068099f8()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm635660680cefeList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm635660680cefe()
	 * @method \string[] getUfCrm6356606810870List()
	 * @method \string[] fillUfCrm6356606810870()
	 * @method \int[] getUfCrm635660681445fList()
	 * @method \int[] fillUfCrm635660681445f()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6356606817a80List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm635660681ad33List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6356606824dabList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm635660682981eList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm635660682981e()
	 * @method \int[] getUfCrm635660682cf24List()
	 * @method \int[] fillUfCrm635660682cf24()
	 * @method \string[] getUfCrm63566068314d7List()
	 * @method \string[] fillUfCrm63566068314d7()
	 * @method \int[] getUfCrm6356606834cb4List()
	 * @method \int[] fillUfCrm6356606834cb4()
	 * @method \string[] getUfCrm6356606838370List()
	 * @method \string[] fillUfCrm6356606838370()
	 * @method \int[] getUfCrm635660683bec7List()
	 * @method \int[] fillUfCrm635660683bec7()
	 * @method \int[] getUfCrm63566068408c0List()
	 * @method \int[] fillUfCrm63566068408c0()
	 * @method \string[] getUfCrm6356606844f4eList()
	 * @method \string[] fillUfCrm6356606844f4e()
	 * @method \int[] getUfCrm63566068485d3List()
	 * @method \int[] fillUfCrm63566068485d3()
	 * @method \string[] getUfCrm635660684bfb2List()
	 * @method \string[] fillUfCrm635660684bfb2()
	 * @method \string[] getUfCrm635660684f7dfList()
	 * @method \string[] fillUfCrm635660684f7df()
	 * @method \string[] getUfCrm6356606853229List()
	 * @method \string[] fillUfCrm6356606853229()
	 * @method \int[] getUfCrm6356606856fadList()
	 * @method \int[] fillUfCrm6356606856fad()
	 * @method \string[] getUfCrm635660685b8c3List()
	 * @method \string[] fillUfCrm635660685b8c3()
	 * @method \string[] getUfCrm635660685f1cfList()
	 * @method \string[] fillUfCrm635660685f1cf()
	 * @method \string[] getUfCrm6356606862c37List()
	 * @method \string[] fillUfCrm6356606862c37()
	 * @method \int[] getUfCrm6356606866832List()
	 * @method \int[] fillUfCrm6356606866832()
	 * @method \string[] getUfCrmLastPaymentsList()
	 * @method \string[] fillUfCrmLastPayments()
	 * @method \string[] getUfCrmKassaBankAccountList()
	 * @method \string[] fillUfCrmKassaBankAccount()
	 * @method \int[] getUfStampList()
	 * @method \int[] fillUfStamp()
	 * @method \int[] getUfDirectorSignList()
	 * @method \int[] fillUfDirectorSign()
	 * @method \int[] getUfAccountantSignList()
	 * @method \int[] fillUfAccountantSign()
	 * @method \string[] getUfCrm635660686a627List()
	 * @method \string[] fillUfCrm635660686a627()
	 * @method \int[] getUfCrm635660680526fSingleList()
	 * @method \int[] fillUfCrm635660680526fSingle()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm63566068314d7SingleList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm63566068314d7Single()
	 * @method \int[] getUfCrm635660684bfb2SingleList()
	 * @method \int[] fillUfCrm635660684bfb2Single()
	 * @method \string[] getUfCrm635660685f1cfSingleList()
	 * @method \string[] fillUfCrm635660685f1cfSingle()
	 * @method \float[] getUfCrm6356606862c37SingleList()
	 * @method \float[] fillUfCrm6356606862c37Single()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\Company $object)
	 * @method bool has(\Bitrix\Crm\Company $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\Company getByPrimary($primary)
	 * @method \Bitrix\Crm\Company[] getAll()
	 * @method bool remove(\Bitrix\Crm\Company $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\EO_Company_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\Company current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Company_Collection merge(?EO_Company_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Company_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\CompanyTable */
		static public $dataClass = '\Bitrix\Crm\CompanyTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_Company_Query query()
	 * @method static EO_Company_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Company_Result getById($id)
	 * @method static EO_Company_Result getList(array $parameters = [])
	 * @method static EO_Company_Entity getEntity()
	 * @method static \Bitrix\Crm\Company createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\EO_Company_Collection createCollection()
	 * @method static \Bitrix\Crm\Company wakeUpObject($row)
	 * @method static \Bitrix\Crm\EO_Company_Collection wakeUpCollection($rows)
	 */
	class CompanyTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Company_Result exec()
	 * @method \Bitrix\Crm\Company fetchObject()
	 * @method \Bitrix\Crm\EO_Company_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Company_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\Company fetchObject()
	 * @method \Bitrix\Crm\EO_Company_Collection fetchCollection()
	 */
	class EO_Company_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\Company createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\EO_Company_Collection createCollection()
	 * @method \Bitrix\Crm\Company wakeUpObject($row)
	 * @method \Bitrix\Crm\EO_Company_Collection wakeUpCollection($rows)
	 */
	class EO_Company_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\StatusTable */
namespace Bitrix\Crm {
	/**
	 * EO_Status
	 * @see \Bitrix\Crm\StatusTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\EO_Status setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getEntityId()
	 * @method \Bitrix\Crm\EO_Status setEntityId(\string|\Bitrix\Main\DB\SqlExpression $entityId)
	 * @method bool hasEntityId()
	 * @method bool isEntityIdFilled()
	 * @method bool isEntityIdChanged()
	 * @method \string remindActualEntityId()
	 * @method \string requireEntityId()
	 * @method \Bitrix\Crm\EO_Status resetEntityId()
	 * @method \Bitrix\Crm\EO_Status unsetEntityId()
	 * @method \string fillEntityId()
	 * @method \string getStatusId()
	 * @method \Bitrix\Crm\EO_Status setStatusId(\string|\Bitrix\Main\DB\SqlExpression $statusId)
	 * @method bool hasStatusId()
	 * @method bool isStatusIdFilled()
	 * @method bool isStatusIdChanged()
	 * @method \string remindActualStatusId()
	 * @method \string requireStatusId()
	 * @method \Bitrix\Crm\EO_Status resetStatusId()
	 * @method \Bitrix\Crm\EO_Status unsetStatusId()
	 * @method \string fillStatusId()
	 * @method \string getName()
	 * @method \Bitrix\Crm\EO_Status setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Crm\EO_Status resetName()
	 * @method \Bitrix\Crm\EO_Status unsetName()
	 * @method \string fillName()
	 * @method \string getNameInit()
	 * @method \Bitrix\Crm\EO_Status setNameInit(\string|\Bitrix\Main\DB\SqlExpression $nameInit)
	 * @method bool hasNameInit()
	 * @method bool isNameInitFilled()
	 * @method bool isNameInitChanged()
	 * @method \string remindActualNameInit()
	 * @method \string requireNameInit()
	 * @method \Bitrix\Crm\EO_Status resetNameInit()
	 * @method \Bitrix\Crm\EO_Status unsetNameInit()
	 * @method \string fillNameInit()
	 * @method \int getSort()
	 * @method \Bitrix\Crm\EO_Status setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Crm\EO_Status resetSort()
	 * @method \Bitrix\Crm\EO_Status unsetSort()
	 * @method \int fillSort()
	 * @method \boolean getSystem()
	 * @method \Bitrix\Crm\EO_Status setSystem(\boolean|\Bitrix\Main\DB\SqlExpression $system)
	 * @method bool hasSystem()
	 * @method bool isSystemFilled()
	 * @method bool isSystemChanged()
	 * @method \boolean remindActualSystem()
	 * @method \boolean requireSystem()
	 * @method \Bitrix\Crm\EO_Status resetSystem()
	 * @method \Bitrix\Crm\EO_Status unsetSystem()
	 * @method \boolean fillSystem()
	 * @method \string getColor()
	 * @method \Bitrix\Crm\EO_Status setColor(\string|\Bitrix\Main\DB\SqlExpression $color)
	 * @method bool hasColor()
	 * @method bool isColorFilled()
	 * @method bool isColorChanged()
	 * @method \string remindActualColor()
	 * @method \string requireColor()
	 * @method \Bitrix\Crm\EO_Status resetColor()
	 * @method \Bitrix\Crm\EO_Status unsetColor()
	 * @method \string fillColor()
	 * @method \string getSemantics()
	 * @method \Bitrix\Crm\EO_Status setSemantics(\string|\Bitrix\Main\DB\SqlExpression $semantics)
	 * @method bool hasSemantics()
	 * @method bool isSemanticsFilled()
	 * @method bool isSemanticsChanged()
	 * @method \string remindActualSemantics()
	 * @method \string requireSemantics()
	 * @method \Bitrix\Crm\EO_Status resetSemantics()
	 * @method \Bitrix\Crm\EO_Status unsetSemantics()
	 * @method \string fillSemantics()
	 * @method \int getCategoryId()
	 * @method \Bitrix\Crm\EO_Status setCategoryId(\int|\Bitrix\Main\DB\SqlExpression $categoryId)
	 * @method bool hasCategoryId()
	 * @method bool isCategoryIdFilled()
	 * @method bool isCategoryIdChanged()
	 * @method \int remindActualCategoryId()
	 * @method \int requireCategoryId()
	 * @method \Bitrix\Crm\EO_Status resetCategoryId()
	 * @method \Bitrix\Crm\EO_Status unsetCategoryId()
	 * @method \int fillCategoryId()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\EO_Status set($fieldName, $value)
	 * @method \Bitrix\Crm\EO_Status reset($fieldName)
	 * @method \Bitrix\Crm\EO_Status unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\EO_Status wakeUp($data)
	 */
	class EO_Status {
		/* @var \Bitrix\Crm\StatusTable */
		static public $dataClass = '\Bitrix\Crm\StatusTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_Status_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getEntityIdList()
	 * @method \string[] fillEntityId()
	 * @method \string[] getStatusIdList()
	 * @method \string[] fillStatusId()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \string[] getNameInitList()
	 * @method \string[] fillNameInit()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \boolean[] getSystemList()
	 * @method \boolean[] fillSystem()
	 * @method \string[] getColorList()
	 * @method \string[] fillColor()
	 * @method \string[] getSemanticsList()
	 * @method \string[] fillSemantics()
	 * @method \int[] getCategoryIdList()
	 * @method \int[] fillCategoryId()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\EO_Status $object)
	 * @method bool has(\Bitrix\Crm\EO_Status $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\EO_Status getByPrimary($primary)
	 * @method \Bitrix\Crm\EO_Status[] getAll()
	 * @method bool remove(\Bitrix\Crm\EO_Status $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\EO_Status_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\EO_Status current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Status_Collection merge(?EO_Status_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Status_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\StatusTable */
		static public $dataClass = '\Bitrix\Crm\StatusTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_Status_Query query()
	 * @method static EO_Status_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Status_Result getById($id)
	 * @method static EO_Status_Result getList(array $parameters = [])
	 * @method static EO_Status_Entity getEntity()
	 * @method static \Bitrix\Crm\EO_Status createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\EO_Status_Collection createCollection()
	 * @method static \Bitrix\Crm\EO_Status wakeUpObject($row)
	 * @method static \Bitrix\Crm\EO_Status_Collection wakeUpCollection($rows)
	 */
	class StatusTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Status_Result exec()
	 * @method \Bitrix\Crm\EO_Status fetchObject()
	 * @method \Bitrix\Crm\EO_Status_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Status_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\EO_Status fetchObject()
	 * @method \Bitrix\Crm\EO_Status_Collection fetchCollection()
	 */
	class EO_Status_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\EO_Status createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\EO_Status_Collection createCollection()
	 * @method \Bitrix\Crm\EO_Status wakeUpObject($row)
	 * @method \Bitrix\Crm\EO_Status_Collection wakeUpCollection($rows)
	 */
	class EO_Status_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\Model\Dynamic\TypeTable */
namespace Bitrix\Crm\Model\Dynamic {
	/**
	 * Type
	 * @see \Bitrix\Crm\Model\Dynamic\TypeTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getName()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetName()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetName()
	 * @method \string fillName()
	 * @method \string getTableName()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setTableName(\string|\Bitrix\Main\DB\SqlExpression $tableName)
	 * @method bool hasTableName()
	 * @method bool isTableNameFilled()
	 * @method bool isTableNameChanged()
	 * @method \string remindActualTableName()
	 * @method \string requireTableName()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetTableName()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetTableName()
	 * @method \string fillTableName()
	 * @method \string getTitle()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setTitle(\string|\Bitrix\Main\DB\SqlExpression $title)
	 * @method bool hasTitle()
	 * @method bool isTitleFilled()
	 * @method bool isTitleChanged()
	 * @method \string remindActualTitle()
	 * @method \string requireTitle()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetTitle()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetTitle()
	 * @method \string fillTitle()
	 * @method \string getCode()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetCode()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetCode()
	 * @method \string fillCode()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetCreatedBy()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getEntityTypeId()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setEntityTypeId(\int|\Bitrix\Main\DB\SqlExpression $entityTypeId)
	 * @method bool hasEntityTypeId()
	 * @method bool isEntityTypeIdFilled()
	 * @method bool isEntityTypeIdChanged()
	 * @method \int remindActualEntityTypeId()
	 * @method \int requireEntityTypeId()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetEntityTypeId()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetEntityTypeId()
	 * @method \int fillEntityTypeId()
	 * @method \boolean getIsCategoriesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsCategoriesEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isCategoriesEnabled)
	 * @method bool hasIsCategoriesEnabled()
	 * @method bool isIsCategoriesEnabledFilled()
	 * @method bool isIsCategoriesEnabledChanged()
	 * @method \boolean remindActualIsCategoriesEnabled()
	 * @method \boolean requireIsCategoriesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsCategoriesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsCategoriesEnabled()
	 * @method \boolean fillIsCategoriesEnabled()
	 * @method \boolean getIsStagesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsStagesEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isStagesEnabled)
	 * @method bool hasIsStagesEnabled()
	 * @method bool isIsStagesEnabledFilled()
	 * @method bool isIsStagesEnabledChanged()
	 * @method \boolean remindActualIsStagesEnabled()
	 * @method \boolean requireIsStagesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsStagesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsStagesEnabled()
	 * @method \boolean fillIsStagesEnabled()
	 * @method \boolean getIsBeginCloseDatesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsBeginCloseDatesEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isBeginCloseDatesEnabled)
	 * @method bool hasIsBeginCloseDatesEnabled()
	 * @method bool isIsBeginCloseDatesEnabledFilled()
	 * @method bool isIsBeginCloseDatesEnabledChanged()
	 * @method \boolean remindActualIsBeginCloseDatesEnabled()
	 * @method \boolean requireIsBeginCloseDatesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsBeginCloseDatesEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsBeginCloseDatesEnabled()
	 * @method \boolean fillIsBeginCloseDatesEnabled()
	 * @method \boolean getIsClientEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsClientEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isClientEnabled)
	 * @method bool hasIsClientEnabled()
	 * @method bool isIsClientEnabledFilled()
	 * @method bool isIsClientEnabledChanged()
	 * @method \boolean remindActualIsClientEnabled()
	 * @method \boolean requireIsClientEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsClientEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsClientEnabled()
	 * @method \boolean fillIsClientEnabled()
	 * @method \boolean getIsUseInUserfieldEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsUseInUserfieldEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isUseInUserfieldEnabled)
	 * @method bool hasIsUseInUserfieldEnabled()
	 * @method bool isIsUseInUserfieldEnabledFilled()
	 * @method bool isIsUseInUserfieldEnabledChanged()
	 * @method \boolean remindActualIsUseInUserfieldEnabled()
	 * @method \boolean requireIsUseInUserfieldEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsUseInUserfieldEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsUseInUserfieldEnabled()
	 * @method \boolean fillIsUseInUserfieldEnabled()
	 * @method \boolean getIsLinkWithProductsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsLinkWithProductsEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isLinkWithProductsEnabled)
	 * @method bool hasIsLinkWithProductsEnabled()
	 * @method bool isIsLinkWithProductsEnabledFilled()
	 * @method bool isIsLinkWithProductsEnabledChanged()
	 * @method \boolean remindActualIsLinkWithProductsEnabled()
	 * @method \boolean requireIsLinkWithProductsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsLinkWithProductsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsLinkWithProductsEnabled()
	 * @method \boolean fillIsLinkWithProductsEnabled()
	 * @method \boolean getIsCrmTrackingEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsCrmTrackingEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isCrmTrackingEnabled)
	 * @method bool hasIsCrmTrackingEnabled()
	 * @method bool isIsCrmTrackingEnabledFilled()
	 * @method bool isIsCrmTrackingEnabledChanged()
	 * @method \boolean remindActualIsCrmTrackingEnabled()
	 * @method \boolean requireIsCrmTrackingEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsCrmTrackingEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsCrmTrackingEnabled()
	 * @method \boolean fillIsCrmTrackingEnabled()
	 * @method \boolean getIsMycompanyEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsMycompanyEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isMycompanyEnabled)
	 * @method bool hasIsMycompanyEnabled()
	 * @method bool isIsMycompanyEnabledFilled()
	 * @method bool isIsMycompanyEnabledChanged()
	 * @method \boolean remindActualIsMycompanyEnabled()
	 * @method \boolean requireIsMycompanyEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsMycompanyEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsMycompanyEnabled()
	 * @method \boolean fillIsMycompanyEnabled()
	 * @method \boolean getIsDocumentsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsDocumentsEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isDocumentsEnabled)
	 * @method bool hasIsDocumentsEnabled()
	 * @method bool isIsDocumentsEnabledFilled()
	 * @method bool isIsDocumentsEnabledChanged()
	 * @method \boolean remindActualIsDocumentsEnabled()
	 * @method \boolean requireIsDocumentsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsDocumentsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsDocumentsEnabled()
	 * @method \boolean fillIsDocumentsEnabled()
	 * @method \boolean getIsSourceEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsSourceEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isSourceEnabled)
	 * @method bool hasIsSourceEnabled()
	 * @method bool isIsSourceEnabledFilled()
	 * @method bool isIsSourceEnabledChanged()
	 * @method \boolean remindActualIsSourceEnabled()
	 * @method \boolean requireIsSourceEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsSourceEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsSourceEnabled()
	 * @method \boolean fillIsSourceEnabled()
	 * @method \boolean getIsObserversEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsObserversEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isObserversEnabled)
	 * @method bool hasIsObserversEnabled()
	 * @method bool isIsObserversEnabledFilled()
	 * @method bool isIsObserversEnabledChanged()
	 * @method \boolean remindActualIsObserversEnabled()
	 * @method \boolean requireIsObserversEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsObserversEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsObserversEnabled()
	 * @method \boolean fillIsObserversEnabled()
	 * @method \boolean getIsRecyclebinEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsRecyclebinEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isRecyclebinEnabled)
	 * @method bool hasIsRecyclebinEnabled()
	 * @method bool isIsRecyclebinEnabledFilled()
	 * @method bool isIsRecyclebinEnabledChanged()
	 * @method \boolean remindActualIsRecyclebinEnabled()
	 * @method \boolean requireIsRecyclebinEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsRecyclebinEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsRecyclebinEnabled()
	 * @method \boolean fillIsRecyclebinEnabled()
	 * @method \boolean getIsAutomationEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsAutomationEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isAutomationEnabled)
	 * @method bool hasIsAutomationEnabled()
	 * @method bool isIsAutomationEnabledFilled()
	 * @method bool isIsAutomationEnabledChanged()
	 * @method \boolean remindActualIsAutomationEnabled()
	 * @method \boolean requireIsAutomationEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsAutomationEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsAutomationEnabled()
	 * @method \boolean fillIsAutomationEnabled()
	 * @method \boolean getIsBizProcEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsBizProcEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isBizProcEnabled)
	 * @method bool hasIsBizProcEnabled()
	 * @method bool isIsBizProcEnabledFilled()
	 * @method bool isIsBizProcEnabledChanged()
	 * @method \boolean remindActualIsBizProcEnabled()
	 * @method \boolean requireIsBizProcEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsBizProcEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsBizProcEnabled()
	 * @method \boolean fillIsBizProcEnabled()
	 * @method \boolean getIsSetOpenPermissions()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsSetOpenPermissions(\boolean|\Bitrix\Main\DB\SqlExpression $isSetOpenPermissions)
	 * @method bool hasIsSetOpenPermissions()
	 * @method bool isIsSetOpenPermissionsFilled()
	 * @method bool isIsSetOpenPermissionsChanged()
	 * @method \boolean remindActualIsSetOpenPermissions()
	 * @method \boolean requireIsSetOpenPermissions()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsSetOpenPermissions()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsSetOpenPermissions()
	 * @method \boolean fillIsSetOpenPermissions()
	 * @method \boolean getIsPaymentsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsPaymentsEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isPaymentsEnabled)
	 * @method bool hasIsPaymentsEnabled()
	 * @method bool isIsPaymentsEnabledFilled()
	 * @method bool isIsPaymentsEnabledChanged()
	 * @method \boolean remindActualIsPaymentsEnabled()
	 * @method \boolean requireIsPaymentsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsPaymentsEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsPaymentsEnabled()
	 * @method \boolean fillIsPaymentsEnabled()
	 * @method \boolean getIsCountersEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type setIsCountersEnabled(\boolean|\Bitrix\Main\DB\SqlExpression $isCountersEnabled)
	 * @method bool hasIsCountersEnabled()
	 * @method bool isIsCountersEnabledFilled()
	 * @method bool isIsCountersEnabledChanged()
	 * @method \boolean remindActualIsCountersEnabled()
	 * @method \boolean requireIsCountersEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type resetIsCountersEnabled()
	 * @method \Bitrix\Crm\Model\Dynamic\Type unsetIsCountersEnabled()
	 * @method \boolean fillIsCountersEnabled()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\Model\Dynamic\Type set($fieldName, $value)
	 * @method \Bitrix\Crm\Model\Dynamic\Type reset($fieldName)
	 * @method \Bitrix\Crm\Model\Dynamic\Type unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\Model\Dynamic\Type wakeUp($data)
	 */
	class EO_Type {
		/* @var \Bitrix\Crm\Model\Dynamic\TypeTable */
		static public $dataClass = '\Bitrix\Crm\Model\Dynamic\TypeTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm\Model\Dynamic {
	/**
	 * EO_Type_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \string[] getTableNameList()
	 * @method \string[] fillTableName()
	 * @method \string[] getTitleList()
	 * @method \string[] fillTitle()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getEntityTypeIdList()
	 * @method \int[] fillEntityTypeId()
	 * @method \boolean[] getIsCategoriesEnabledList()
	 * @method \boolean[] fillIsCategoriesEnabled()
	 * @method \boolean[] getIsStagesEnabledList()
	 * @method \boolean[] fillIsStagesEnabled()
	 * @method \boolean[] getIsBeginCloseDatesEnabledList()
	 * @method \boolean[] fillIsBeginCloseDatesEnabled()
	 * @method \boolean[] getIsClientEnabledList()
	 * @method \boolean[] fillIsClientEnabled()
	 * @method \boolean[] getIsUseInUserfieldEnabledList()
	 * @method \boolean[] fillIsUseInUserfieldEnabled()
	 * @method \boolean[] getIsLinkWithProductsEnabledList()
	 * @method \boolean[] fillIsLinkWithProductsEnabled()
	 * @method \boolean[] getIsCrmTrackingEnabledList()
	 * @method \boolean[] fillIsCrmTrackingEnabled()
	 * @method \boolean[] getIsMycompanyEnabledList()
	 * @method \boolean[] fillIsMycompanyEnabled()
	 * @method \boolean[] getIsDocumentsEnabledList()
	 * @method \boolean[] fillIsDocumentsEnabled()
	 * @method \boolean[] getIsSourceEnabledList()
	 * @method \boolean[] fillIsSourceEnabled()
	 * @method \boolean[] getIsObserversEnabledList()
	 * @method \boolean[] fillIsObserversEnabled()
	 * @method \boolean[] getIsRecyclebinEnabledList()
	 * @method \boolean[] fillIsRecyclebinEnabled()
	 * @method \boolean[] getIsAutomationEnabledList()
	 * @method \boolean[] fillIsAutomationEnabled()
	 * @method \boolean[] getIsBizProcEnabledList()
	 * @method \boolean[] fillIsBizProcEnabled()
	 * @method \boolean[] getIsSetOpenPermissionsList()
	 * @method \boolean[] fillIsSetOpenPermissions()
	 * @method \boolean[] getIsPaymentsEnabledList()
	 * @method \boolean[] fillIsPaymentsEnabled()
	 * @method \boolean[] getIsCountersEnabledList()
	 * @method \boolean[] fillIsCountersEnabled()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\Model\Dynamic\Type $object)
	 * @method bool has(\Bitrix\Crm\Model\Dynamic\Type $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\Model\Dynamic\Type getByPrimary($primary)
	 * @method \Bitrix\Crm\Model\Dynamic\Type[] getAll()
	 * @method bool remove(\Bitrix\Crm\Model\Dynamic\Type $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\Model\Dynamic\EO_Type_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\Model\Dynamic\Type current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Type_Collection merge(?EO_Type_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Type_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\Model\Dynamic\TypeTable */
		static public $dataClass = '\Bitrix\Crm\Model\Dynamic\TypeTable';
	}
}
namespace Bitrix\Crm\Model\Dynamic {
	/**
	 * @method static EO_Type_Query query()
	 * @method static EO_Type_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Type_Result getById($id)
	 * @method static EO_Type_Result getList(array $parameters = [])
	 * @method static EO_Type_Entity getEntity()
	 * @method static \Bitrix\Crm\Model\Dynamic\Type createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\Model\Dynamic\EO_Type_Collection createCollection()
	 * @method static \Bitrix\Crm\Model\Dynamic\Type wakeUpObject($row)
	 * @method static \Bitrix\Crm\Model\Dynamic\EO_Type_Collection wakeUpCollection($rows)
	 */
	class TypeTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Type_Result exec()
	 * @method \Bitrix\Crm\Model\Dynamic\Type fetchObject()
	 * @method \Bitrix\Crm\Model\Dynamic\EO_Type_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Type_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\Model\Dynamic\Type fetchObject()
	 * @method \Bitrix\Crm\Model\Dynamic\EO_Type_Collection fetchCollection()
	 */
	class EO_Type_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\Model\Dynamic\Type createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\Model\Dynamic\EO_Type_Collection createCollection()
	 * @method \Bitrix\Crm\Model\Dynamic\Type wakeUpObject($row)
	 * @method \Bitrix\Crm\Model\Dynamic\EO_Type_Collection wakeUpCollection($rows)
	 */
	class EO_Type_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\FieldMultiTable */
namespace Bitrix\Crm {
	/**
	 * EO_FieldMulti
	 * @see \Bitrix\Crm\FieldMultiTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\EO_FieldMulti setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getEntityId()
	 * @method \Bitrix\Crm\EO_FieldMulti setEntityId(\string|\Bitrix\Main\DB\SqlExpression $entityId)
	 * @method bool hasEntityId()
	 * @method bool isEntityIdFilled()
	 * @method bool isEntityIdChanged()
	 * @method \string remindActualEntityId()
	 * @method \string requireEntityId()
	 * @method \Bitrix\Crm\EO_FieldMulti resetEntityId()
	 * @method \Bitrix\Crm\EO_FieldMulti unsetEntityId()
	 * @method \string fillEntityId()
	 * @method \int getElementId()
	 * @method \Bitrix\Crm\EO_FieldMulti setElementId(\int|\Bitrix\Main\DB\SqlExpression $elementId)
	 * @method bool hasElementId()
	 * @method bool isElementIdFilled()
	 * @method bool isElementIdChanged()
	 * @method \int remindActualElementId()
	 * @method \int requireElementId()
	 * @method \Bitrix\Crm\EO_FieldMulti resetElementId()
	 * @method \Bitrix\Crm\EO_FieldMulti unsetElementId()
	 * @method \int fillElementId()
	 * @method \string getTypeId()
	 * @method \Bitrix\Crm\EO_FieldMulti setTypeId(\string|\Bitrix\Main\DB\SqlExpression $typeId)
	 * @method bool hasTypeId()
	 * @method bool isTypeIdFilled()
	 * @method bool isTypeIdChanged()
	 * @method \string remindActualTypeId()
	 * @method \string requireTypeId()
	 * @method \Bitrix\Crm\EO_FieldMulti resetTypeId()
	 * @method \Bitrix\Crm\EO_FieldMulti unsetTypeId()
	 * @method \string fillTypeId()
	 * @method \string getValueType()
	 * @method \Bitrix\Crm\EO_FieldMulti setValueType(\string|\Bitrix\Main\DB\SqlExpression $valueType)
	 * @method bool hasValueType()
	 * @method bool isValueTypeFilled()
	 * @method bool isValueTypeChanged()
	 * @method \string remindActualValueType()
	 * @method \string requireValueType()
	 * @method \Bitrix\Crm\EO_FieldMulti resetValueType()
	 * @method \Bitrix\Crm\EO_FieldMulti unsetValueType()
	 * @method \string fillValueType()
	 * @method \string getComplexId()
	 * @method \Bitrix\Crm\EO_FieldMulti setComplexId(\string|\Bitrix\Main\DB\SqlExpression $complexId)
	 * @method bool hasComplexId()
	 * @method bool isComplexIdFilled()
	 * @method bool isComplexIdChanged()
	 * @method \string remindActualComplexId()
	 * @method \string requireComplexId()
	 * @method \Bitrix\Crm\EO_FieldMulti resetComplexId()
	 * @method \Bitrix\Crm\EO_FieldMulti unsetComplexId()
	 * @method \string fillComplexId()
	 * @method \string getValue()
	 * @method \Bitrix\Crm\EO_FieldMulti setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Crm\EO_FieldMulti resetValue()
	 * @method \Bitrix\Crm\EO_FieldMulti unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\EO_FieldMulti set($fieldName, $value)
	 * @method \Bitrix\Crm\EO_FieldMulti reset($fieldName)
	 * @method \Bitrix\Crm\EO_FieldMulti unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\EO_FieldMulti wakeUp($data)
	 */
	class EO_FieldMulti {
		/* @var \Bitrix\Crm\FieldMultiTable */
		static public $dataClass = '\Bitrix\Crm\FieldMultiTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_FieldMulti_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getEntityIdList()
	 * @method \string[] fillEntityId()
	 * @method \int[] getElementIdList()
	 * @method \int[] fillElementId()
	 * @method \string[] getTypeIdList()
	 * @method \string[] fillTypeId()
	 * @method \string[] getValueTypeList()
	 * @method \string[] fillValueType()
	 * @method \string[] getComplexIdList()
	 * @method \string[] fillComplexId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\EO_FieldMulti $object)
	 * @method bool has(\Bitrix\Crm\EO_FieldMulti $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\EO_FieldMulti getByPrimary($primary)
	 * @method \Bitrix\Crm\EO_FieldMulti[] getAll()
	 * @method bool remove(\Bitrix\Crm\EO_FieldMulti $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\EO_FieldMulti_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\EO_FieldMulti current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_FieldMulti_Collection merge(?EO_FieldMulti_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_FieldMulti_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\FieldMultiTable */
		static public $dataClass = '\Bitrix\Crm\FieldMultiTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_FieldMulti_Query query()
	 * @method static EO_FieldMulti_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_FieldMulti_Result getById($id)
	 * @method static EO_FieldMulti_Result getList(array $parameters = [])
	 * @method static EO_FieldMulti_Entity getEntity()
	 * @method static \Bitrix\Crm\EO_FieldMulti createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\EO_FieldMulti_Collection createCollection()
	 * @method static \Bitrix\Crm\EO_FieldMulti wakeUpObject($row)
	 * @method static \Bitrix\Crm\EO_FieldMulti_Collection wakeUpCollection($rows)
	 */
	class FieldMultiTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_FieldMulti_Result exec()
	 * @method \Bitrix\Crm\EO_FieldMulti fetchObject()
	 * @method \Bitrix\Crm\EO_FieldMulti_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_FieldMulti_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\EO_FieldMulti fetchObject()
	 * @method \Bitrix\Crm\EO_FieldMulti_Collection fetchCollection()
	 */
	class EO_FieldMulti_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\EO_FieldMulti createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\EO_FieldMulti_Collection createCollection()
	 * @method \Bitrix\Crm\EO_FieldMulti wakeUpObject($row)
	 * @method \Bitrix\Crm\EO_FieldMulti_Collection wakeUpCollection($rows)
	 */
	class EO_FieldMulti_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\UtmTable */
namespace Bitrix\Crm {
	/**
	 * EO_Utm
	 * @see \Bitrix\Crm\UtmTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getEntityTypeId()
	 * @method \Bitrix\Crm\EO_Utm setEntityTypeId(\int|\Bitrix\Main\DB\SqlExpression $entityTypeId)
	 * @method bool hasEntityTypeId()
	 * @method bool isEntityTypeIdFilled()
	 * @method bool isEntityTypeIdChanged()
	 * @method \int getEntityId()
	 * @method \Bitrix\Crm\EO_Utm setEntityId(\int|\Bitrix\Main\DB\SqlExpression $entityId)
	 * @method bool hasEntityId()
	 * @method bool isEntityIdFilled()
	 * @method bool isEntityIdChanged()
	 * @method \string getCode()
	 * @method \Bitrix\Crm\EO_Utm setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string getValue()
	 * @method \Bitrix\Crm\EO_Utm setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Crm\EO_Utm resetValue()
	 * @method \Bitrix\Crm\EO_Utm unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\EO_Utm set($fieldName, $value)
	 * @method \Bitrix\Crm\EO_Utm reset($fieldName)
	 * @method \Bitrix\Crm\EO_Utm unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\EO_Utm wakeUp($data)
	 */
	class EO_Utm {
		/* @var \Bitrix\Crm\UtmTable */
		static public $dataClass = '\Bitrix\Crm\UtmTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_Utm_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getEntityTypeIdList()
	 * @method \int[] getEntityIdList()
	 * @method \string[] getCodeList()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\EO_Utm $object)
	 * @method bool has(\Bitrix\Crm\EO_Utm $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\EO_Utm getByPrimary($primary)
	 * @method \Bitrix\Crm\EO_Utm[] getAll()
	 * @method bool remove(\Bitrix\Crm\EO_Utm $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\EO_Utm_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\EO_Utm current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Utm_Collection merge(?EO_Utm_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Utm_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\UtmTable */
		static public $dataClass = '\Bitrix\Crm\UtmTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_Utm_Query query()
	 * @method static EO_Utm_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Utm_Result getById($id)
	 * @method static EO_Utm_Result getList(array $parameters = [])
	 * @method static EO_Utm_Entity getEntity()
	 * @method static \Bitrix\Crm\EO_Utm createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\EO_Utm_Collection createCollection()
	 * @method static \Bitrix\Crm\EO_Utm wakeUpObject($row)
	 * @method static \Bitrix\Crm\EO_Utm_Collection wakeUpCollection($rows)
	 */
	class UtmTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Utm_Result exec()
	 * @method \Bitrix\Crm\EO_Utm fetchObject()
	 * @method \Bitrix\Crm\EO_Utm_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Utm_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\EO_Utm fetchObject()
	 * @method \Bitrix\Crm\EO_Utm_Collection fetchCollection()
	 */
	class EO_Utm_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\EO_Utm createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\EO_Utm_Collection createCollection()
	 * @method \Bitrix\Crm\EO_Utm wakeUpObject($row)
	 * @method \Bitrix\Crm\EO_Utm_Collection wakeUpCollection($rows)
	 */
	class EO_Utm_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Main\UserFieldTable */
namespace Bitrix\Main {
	/**
	 * EO_UserField
	 * @see \Bitrix\Main\UserFieldTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Main\EO_UserField setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getEntityId()
	 * @method \Bitrix\Main\EO_UserField setEntityId(\string|\Bitrix\Main\DB\SqlExpression $entityId)
	 * @method bool hasEntityId()
	 * @method bool isEntityIdFilled()
	 * @method bool isEntityIdChanged()
	 * @method \string remindActualEntityId()
	 * @method \string requireEntityId()
	 * @method \Bitrix\Main\EO_UserField resetEntityId()
	 * @method \Bitrix\Main\EO_UserField unsetEntityId()
	 * @method \string fillEntityId()
	 * @method \string getFieldName()
	 * @method \Bitrix\Main\EO_UserField setFieldName(\string|\Bitrix\Main\DB\SqlExpression $fieldName)
	 * @method bool hasFieldName()
	 * @method bool isFieldNameFilled()
	 * @method bool isFieldNameChanged()
	 * @method \string remindActualFieldName()
	 * @method \string requireFieldName()
	 * @method \Bitrix\Main\EO_UserField resetFieldName()
	 * @method \Bitrix\Main\EO_UserField unsetFieldName()
	 * @method \string fillFieldName()
	 * @method \string getUserTypeId()
	 * @method \Bitrix\Main\EO_UserField setUserTypeId(\string|\Bitrix\Main\DB\SqlExpression $userTypeId)
	 * @method bool hasUserTypeId()
	 * @method bool isUserTypeIdFilled()
	 * @method bool isUserTypeIdChanged()
	 * @method \string remindActualUserTypeId()
	 * @method \string requireUserTypeId()
	 * @method \Bitrix\Main\EO_UserField resetUserTypeId()
	 * @method \Bitrix\Main\EO_UserField unsetUserTypeId()
	 * @method \string fillUserTypeId()
	 * @method \string getXmlId()
	 * @method \Bitrix\Main\EO_UserField setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Main\EO_UserField resetXmlId()
	 * @method \Bitrix\Main\EO_UserField unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \int getSort()
	 * @method \Bitrix\Main\EO_UserField setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Main\EO_UserField resetSort()
	 * @method \Bitrix\Main\EO_UserField unsetSort()
	 * @method \int fillSort()
	 * @method \boolean getMultiple()
	 * @method \Bitrix\Main\EO_UserField setMultiple(\boolean|\Bitrix\Main\DB\SqlExpression $multiple)
	 * @method bool hasMultiple()
	 * @method bool isMultipleFilled()
	 * @method bool isMultipleChanged()
	 * @method \boolean remindActualMultiple()
	 * @method \boolean requireMultiple()
	 * @method \Bitrix\Main\EO_UserField resetMultiple()
	 * @method \Bitrix\Main\EO_UserField unsetMultiple()
	 * @method \boolean fillMultiple()
	 * @method \boolean getMandatory()
	 * @method \Bitrix\Main\EO_UserField setMandatory(\boolean|\Bitrix\Main\DB\SqlExpression $mandatory)
	 * @method bool hasMandatory()
	 * @method bool isMandatoryFilled()
	 * @method bool isMandatoryChanged()
	 * @method \boolean remindActualMandatory()
	 * @method \boolean requireMandatory()
	 * @method \Bitrix\Main\EO_UserField resetMandatory()
	 * @method \Bitrix\Main\EO_UserField unsetMandatory()
	 * @method \boolean fillMandatory()
	 * @method \boolean getShowFilter()
	 * @method \Bitrix\Main\EO_UserField setShowFilter(\boolean|\Bitrix\Main\DB\SqlExpression $showFilter)
	 * @method bool hasShowFilter()
	 * @method bool isShowFilterFilled()
	 * @method bool isShowFilterChanged()
	 * @method \boolean remindActualShowFilter()
	 * @method \boolean requireShowFilter()
	 * @method \Bitrix\Main\EO_UserField resetShowFilter()
	 * @method \Bitrix\Main\EO_UserField unsetShowFilter()
	 * @method \boolean fillShowFilter()
	 * @method \boolean getShowInList()
	 * @method \Bitrix\Main\EO_UserField setShowInList(\boolean|\Bitrix\Main\DB\SqlExpression $showInList)
	 * @method bool hasShowInList()
	 * @method bool isShowInListFilled()
	 * @method bool isShowInListChanged()
	 * @method \boolean remindActualShowInList()
	 * @method \boolean requireShowInList()
	 * @method \Bitrix\Main\EO_UserField resetShowInList()
	 * @method \Bitrix\Main\EO_UserField unsetShowInList()
	 * @method \boolean fillShowInList()
	 * @method \boolean getEditInList()
	 * @method \Bitrix\Main\EO_UserField setEditInList(\boolean|\Bitrix\Main\DB\SqlExpression $editInList)
	 * @method bool hasEditInList()
	 * @method bool isEditInListFilled()
	 * @method bool isEditInListChanged()
	 * @method \boolean remindActualEditInList()
	 * @method \boolean requireEditInList()
	 * @method \Bitrix\Main\EO_UserField resetEditInList()
	 * @method \Bitrix\Main\EO_UserField unsetEditInList()
	 * @method \boolean fillEditInList()
	 * @method \boolean getIsSearchable()
	 * @method \Bitrix\Main\EO_UserField setIsSearchable(\boolean|\Bitrix\Main\DB\SqlExpression $isSearchable)
	 * @method bool hasIsSearchable()
	 * @method bool isIsSearchableFilled()
	 * @method bool isIsSearchableChanged()
	 * @method \boolean remindActualIsSearchable()
	 * @method \boolean requireIsSearchable()
	 * @method \Bitrix\Main\EO_UserField resetIsSearchable()
	 * @method \Bitrix\Main\EO_UserField unsetIsSearchable()
	 * @method \boolean fillIsSearchable()
	 * @method \string getSettings()
	 * @method \Bitrix\Main\EO_UserField setSettings(\string|\Bitrix\Main\DB\SqlExpression $settings)
	 * @method bool hasSettings()
	 * @method bool isSettingsFilled()
	 * @method bool isSettingsChanged()
	 * @method \string remindActualSettings()
	 * @method \string requireSettings()
	 * @method \Bitrix\Main\EO_UserField resetSettings()
	 * @method \Bitrix\Main\EO_UserField unsetSettings()
	 * @method \string fillSettings()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Main\EO_UserField set($fieldName, $value)
	 * @method \Bitrix\Main\EO_UserField reset($fieldName)
	 * @method \Bitrix\Main\EO_UserField unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Main\EO_UserField wakeUp($data)
	 */
	class EO_UserField {
		/* @var \Bitrix\Main\UserFieldTable */
		static public $dataClass = '\Bitrix\Main\UserFieldTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Main {
	/**
	 * EO_UserField_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getEntityIdList()
	 * @method \string[] fillEntityId()
	 * @method \string[] getFieldNameList()
	 * @method \string[] fillFieldName()
	 * @method \string[] getUserTypeIdList()
	 * @method \string[] fillUserTypeId()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \boolean[] getMultipleList()
	 * @method \boolean[] fillMultiple()
	 * @method \boolean[] getMandatoryList()
	 * @method \boolean[] fillMandatory()
	 * @method \boolean[] getShowFilterList()
	 * @method \boolean[] fillShowFilter()
	 * @method \boolean[] getShowInListList()
	 * @method \boolean[] fillShowInList()
	 * @method \boolean[] getEditInListList()
	 * @method \boolean[] fillEditInList()
	 * @method \boolean[] getIsSearchableList()
	 * @method \boolean[] fillIsSearchable()
	 * @method \string[] getSettingsList()
	 * @method \string[] fillSettings()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Main\EO_UserField $object)
	 * @method bool has(\Bitrix\Main\EO_UserField $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Main\EO_UserField getByPrimary($primary)
	 * @method \Bitrix\Main\EO_UserField[] getAll()
	 * @method bool remove(\Bitrix\Main\EO_UserField $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Main\EO_UserField_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Main\EO_UserField current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_UserField_Collection merge(?EO_UserField_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_UserField_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Main\UserFieldTable */
		static public $dataClass = '\Bitrix\Main\UserFieldTable';
	}
}
namespace Bitrix\Main {
	/**
	 * @method static EO_UserField_Query query()
	 * @method static EO_UserField_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_UserField_Result getById($id)
	 * @method static EO_UserField_Result getList(array $parameters = [])
	 * @method static EO_UserField_Entity getEntity()
	 * @method static \Bitrix\Main\EO_UserField createObject($setDefaultValues = true)
	 * @method static \Bitrix\Main\EO_UserField_Collection createCollection()
	 * @method static \Bitrix\Main\EO_UserField wakeUpObject($row)
	 * @method static \Bitrix\Main\EO_UserField_Collection wakeUpCollection($rows)
	 */
	class UserFieldTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_UserField_Result exec()
	 * @method \Bitrix\Main\EO_UserField fetchObject()
	 * @method \Bitrix\Main\EO_UserField_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_UserField_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Main\EO_UserField fetchObject()
	 * @method \Bitrix\Main\EO_UserField_Collection fetchCollection()
	 */
	class EO_UserField_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Main\EO_UserField createObject($setDefaultValues = true)
	 * @method \Bitrix\Main\EO_UserField_Collection createCollection()
	 * @method \Bitrix\Main\EO_UserField wakeUpObject($row)
	 * @method \Bitrix\Main\EO_UserField_Collection wakeUpCollection($rows)
	 */
	class EO_UserField_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Rest\PlacementTable */
namespace Bitrix\Rest {
	/**
	 * EO_Placement
	 * @see \Bitrix\Rest\PlacementTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Rest\EO_Placement setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getAppId()
	 * @method \Bitrix\Rest\EO_Placement setAppId(\int|\Bitrix\Main\DB\SqlExpression $appId)
	 * @method bool hasAppId()
	 * @method bool isAppIdFilled()
	 * @method bool isAppIdChanged()
	 * @method \int remindActualAppId()
	 * @method \int requireAppId()
	 * @method \Bitrix\Rest\EO_Placement resetAppId()
	 * @method \Bitrix\Rest\EO_Placement unsetAppId()
	 * @method \int fillAppId()
	 * @method \int getUserId()
	 * @method \Bitrix\Rest\EO_Placement setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \int remindActualUserId()
	 * @method \int requireUserId()
	 * @method \Bitrix\Rest\EO_Placement resetUserId()
	 * @method \Bitrix\Rest\EO_Placement unsetUserId()
	 * @method \int fillUserId()
	 * @method \string getPlacement()
	 * @method \Bitrix\Rest\EO_Placement setPlacement(\string|\Bitrix\Main\DB\SqlExpression $placement)
	 * @method bool hasPlacement()
	 * @method bool isPlacementFilled()
	 * @method bool isPlacementChanged()
	 * @method \string remindActualPlacement()
	 * @method \string requirePlacement()
	 * @method \Bitrix\Rest\EO_Placement resetPlacement()
	 * @method \Bitrix\Rest\EO_Placement unsetPlacement()
	 * @method \string fillPlacement()
	 * @method \string getPlacementHandler()
	 * @method \Bitrix\Rest\EO_Placement setPlacementHandler(\string|\Bitrix\Main\DB\SqlExpression $placementHandler)
	 * @method bool hasPlacementHandler()
	 * @method bool isPlacementHandlerFilled()
	 * @method bool isPlacementHandlerChanged()
	 * @method \string remindActualPlacementHandler()
	 * @method \string requirePlacementHandler()
	 * @method \Bitrix\Rest\EO_Placement resetPlacementHandler()
	 * @method \Bitrix\Rest\EO_Placement unsetPlacementHandler()
	 * @method \string fillPlacementHandler()
	 * @method \string getGroupName()
	 * @method \Bitrix\Rest\EO_Placement setGroupName(\string|\Bitrix\Main\DB\SqlExpression $groupName)
	 * @method bool hasGroupName()
	 * @method bool isGroupNameFilled()
	 * @method bool isGroupNameChanged()
	 * @method \string remindActualGroupName()
	 * @method \string requireGroupName()
	 * @method \Bitrix\Rest\EO_Placement resetGroupName()
	 * @method \Bitrix\Rest\EO_Placement unsetGroupName()
	 * @method \string fillGroupName()
	 * @method \int getIconId()
	 * @method \Bitrix\Rest\EO_Placement setIconId(\int|\Bitrix\Main\DB\SqlExpression $iconId)
	 * @method bool hasIconId()
	 * @method bool isIconIdFilled()
	 * @method bool isIconIdChanged()
	 * @method \int remindActualIconId()
	 * @method \int requireIconId()
	 * @method \Bitrix\Rest\EO_Placement resetIconId()
	 * @method \Bitrix\Rest\EO_Placement unsetIconId()
	 * @method \int fillIconId()
	 * @method \string getTitle()
	 * @method \Bitrix\Rest\EO_Placement setTitle(\string|\Bitrix\Main\DB\SqlExpression $title)
	 * @method bool hasTitle()
	 * @method bool isTitleFilled()
	 * @method bool isTitleChanged()
	 * @method \string remindActualTitle()
	 * @method \string requireTitle()
	 * @method \Bitrix\Rest\EO_Placement resetTitle()
	 * @method \Bitrix\Rest\EO_Placement unsetTitle()
	 * @method \string fillTitle()
	 * @method \string getComment()
	 * @method \Bitrix\Rest\EO_Placement setComment(\string|\Bitrix\Main\DB\SqlExpression $comment)
	 * @method bool hasComment()
	 * @method bool isCommentFilled()
	 * @method bool isCommentChanged()
	 * @method \string remindActualComment()
	 * @method \string requireComment()
	 * @method \Bitrix\Rest\EO_Placement resetComment()
	 * @method \Bitrix\Rest\EO_Placement unsetComment()
	 * @method \string fillComment()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Rest\EO_Placement setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Rest\EO_Placement resetDateCreate()
	 * @method \Bitrix\Rest\EO_Placement unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \string getAdditional()
	 * @method \Bitrix\Rest\EO_Placement setAdditional(\string|\Bitrix\Main\DB\SqlExpression $additional)
	 * @method bool hasAdditional()
	 * @method bool isAdditionalFilled()
	 * @method bool isAdditionalChanged()
	 * @method \string remindActualAdditional()
	 * @method \string requireAdditional()
	 * @method \Bitrix\Rest\EO_Placement resetAdditional()
	 * @method \Bitrix\Rest\EO_Placement unsetAdditional()
	 * @method \string fillAdditional()
	 * @method array getOptions()
	 * @method \Bitrix\Rest\EO_Placement setOptions(array|\Bitrix\Main\DB\SqlExpression $options)
	 * @method bool hasOptions()
	 * @method bool isOptionsFilled()
	 * @method bool isOptionsChanged()
	 * @method array remindActualOptions()
	 * @method array requireOptions()
	 * @method \Bitrix\Rest\EO_Placement resetOptions()
	 * @method \Bitrix\Rest\EO_Placement unsetOptions()
	 * @method array fillOptions()
	 * @method \Bitrix\Rest\EO_App getRestApp()
	 * @method \Bitrix\Rest\EO_App remindActualRestApp()
	 * @method \Bitrix\Rest\EO_App requireRestApp()
	 * @method \Bitrix\Rest\EO_Placement setRestApp(\Bitrix\Rest\EO_App $object)
	 * @method \Bitrix\Rest\EO_Placement resetRestApp()
	 * @method \Bitrix\Rest\EO_Placement unsetRestApp()
	 * @method bool hasRestApp()
	 * @method bool isRestAppFilled()
	 * @method bool isRestAppChanged()
	 * @method \Bitrix\Rest\EO_App fillRestApp()
	 * @method \Bitrix\Rest\EO_PlacementLang_Collection getLangAll()
	 * @method \Bitrix\Rest\EO_PlacementLang_Collection requireLangAll()
	 * @method \Bitrix\Rest\EO_PlacementLang_Collection fillLangAll()
	 * @method bool hasLangAll()
	 * @method bool isLangAllFilled()
	 * @method bool isLangAllChanged()
	 * @method void addToLangAll(\Bitrix\Rest\EO_PlacementLang $placementLang)
	 * @method void removeFromLangAll(\Bitrix\Rest\EO_PlacementLang $placementLang)
	 * @method void removeAllLangAll()
	 * @method \Bitrix\Rest\EO_Placement resetLangAll()
	 * @method \Bitrix\Rest\EO_Placement unsetLangAll()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Rest\EO_Placement set($fieldName, $value)
	 * @method \Bitrix\Rest\EO_Placement reset($fieldName)
	 * @method \Bitrix\Rest\EO_Placement unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Rest\EO_Placement wakeUp($data)
	 */
	class EO_Placement {
		/* @var \Bitrix\Rest\PlacementTable */
		static public $dataClass = '\Bitrix\Rest\PlacementTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Rest {
	/**
	 * EO_Placement_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getAppIdList()
	 * @method \int[] fillAppId()
	 * @method \int[] getUserIdList()
	 * @method \int[] fillUserId()
	 * @method \string[] getPlacementList()
	 * @method \string[] fillPlacement()
	 * @method \string[] getPlacementHandlerList()
	 * @method \string[] fillPlacementHandler()
	 * @method \string[] getGroupNameList()
	 * @method \string[] fillGroupName()
	 * @method \int[] getIconIdList()
	 * @method \int[] fillIconId()
	 * @method \string[] getTitleList()
	 * @method \string[] fillTitle()
	 * @method \string[] getCommentList()
	 * @method \string[] fillComment()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \string[] getAdditionalList()
	 * @method \string[] fillAdditional()
	 * @method array[] getOptionsList()
	 * @method array[] fillOptions()
	 * @method \Bitrix\Rest\EO_App[] getRestAppList()
	 * @method \Bitrix\Rest\EO_Placement_Collection getRestAppCollection()
	 * @method \Bitrix\Rest\EO_App_Collection fillRestApp()
	 * @method \Bitrix\Rest\EO_PlacementLang_Collection[] getLangAllList()
	 * @method \Bitrix\Rest\EO_PlacementLang_Collection getLangAllCollection()
	 * @method \Bitrix\Rest\EO_PlacementLang_Collection fillLangAll()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Rest\EO_Placement $object)
	 * @method bool has(\Bitrix\Rest\EO_Placement $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Rest\EO_Placement getByPrimary($primary)
	 * @method \Bitrix\Rest\EO_Placement[] getAll()
	 * @method bool remove(\Bitrix\Rest\EO_Placement $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Rest\EO_Placement_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Rest\EO_Placement current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Placement_Collection merge(?EO_Placement_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Placement_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Rest\PlacementTable */
		static public $dataClass = '\Bitrix\Rest\PlacementTable';
	}
}
namespace Bitrix\Rest {
	/**
	 * @method static EO_Placement_Query query()
	 * @method static EO_Placement_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Placement_Result getById($id)
	 * @method static EO_Placement_Result getList(array $parameters = [])
	 * @method static EO_Placement_Entity getEntity()
	 * @method static \Bitrix\Rest\EO_Placement createObject($setDefaultValues = true)
	 * @method static \Bitrix\Rest\EO_Placement_Collection createCollection()
	 * @method static \Bitrix\Rest\EO_Placement wakeUpObject($row)
	 * @method static \Bitrix\Rest\EO_Placement_Collection wakeUpCollection($rows)
	 */
	class PlacementTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Placement_Result exec()
	 * @method \Bitrix\Rest\EO_Placement fetchObject()
	 * @method \Bitrix\Rest\EO_Placement_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Placement_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Rest\EO_Placement fetchObject()
	 * @method \Bitrix\Rest\EO_Placement_Collection fetchCollection()
	 */
	class EO_Placement_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Rest\EO_Placement createObject($setDefaultValues = true)
	 * @method \Bitrix\Rest\EO_Placement_Collection createCollection()
	 * @method \Bitrix\Rest\EO_Placement wakeUpObject($row)
	 * @method \Bitrix\Rest\EO_Placement_Collection wakeUpCollection($rows)
	 */
	class EO_Placement_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\IblockTable */
namespace Bitrix\Iblock {
	/**
	 * Iblock
	 * @see \Bitrix\Iblock\IblockTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Iblock setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Iblock setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Iblock resetTimestampX()
	 * @method \Bitrix\Iblock\Iblock unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \string getIblockTypeId()
	 * @method \Bitrix\Iblock\Iblock setIblockTypeId(\string|\Bitrix\Main\DB\SqlExpression $iblockTypeId)
	 * @method bool hasIblockTypeId()
	 * @method bool isIblockTypeIdFilled()
	 * @method bool isIblockTypeIdChanged()
	 * @method \string remindActualIblockTypeId()
	 * @method \string requireIblockTypeId()
	 * @method \Bitrix\Iblock\Iblock resetIblockTypeId()
	 * @method \Bitrix\Iblock\Iblock unsetIblockTypeId()
	 * @method \string fillIblockTypeId()
	 * @method \string getLid()
	 * @method \Bitrix\Iblock\Iblock setLid(\string|\Bitrix\Main\DB\SqlExpression $lid)
	 * @method bool hasLid()
	 * @method bool isLidFilled()
	 * @method bool isLidChanged()
	 * @method \string remindActualLid()
	 * @method \string requireLid()
	 * @method \Bitrix\Iblock\Iblock resetLid()
	 * @method \Bitrix\Iblock\Iblock unsetLid()
	 * @method \string fillLid()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Iblock setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Iblock resetCode()
	 * @method \Bitrix\Iblock\Iblock unsetCode()
	 * @method \string fillCode()
	 * @method \string getApiCode()
	 * @method \Bitrix\Iblock\Iblock setApiCode(\string|\Bitrix\Main\DB\SqlExpression $apiCode)
	 * @method bool hasApiCode()
	 * @method bool isApiCodeFilled()
	 * @method bool isApiCodeChanged()
	 * @method \string remindActualApiCode()
	 * @method \string requireApiCode()
	 * @method \Bitrix\Iblock\Iblock resetApiCode()
	 * @method \Bitrix\Iblock\Iblock unsetApiCode()
	 * @method \string fillApiCode()
	 * @method \boolean getRestOn()
	 * @method \Bitrix\Iblock\Iblock setRestOn(\boolean|\Bitrix\Main\DB\SqlExpression $restOn)
	 * @method bool hasRestOn()
	 * @method bool isRestOnFilled()
	 * @method bool isRestOnChanged()
	 * @method \boolean remindActualRestOn()
	 * @method \boolean requireRestOn()
	 * @method \Bitrix\Iblock\Iblock resetRestOn()
	 * @method \Bitrix\Iblock\Iblock unsetRestOn()
	 * @method \boolean fillRestOn()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Iblock setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Iblock resetName()
	 * @method \Bitrix\Iblock\Iblock unsetName()
	 * @method \string fillName()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Iblock setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Iblock resetActive()
	 * @method \Bitrix\Iblock\Iblock unsetActive()
	 * @method \boolean fillActive()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Iblock setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Iblock resetSort()
	 * @method \Bitrix\Iblock\Iblock unsetSort()
	 * @method \int fillSort()
	 * @method \string getListPageUrl()
	 * @method \Bitrix\Iblock\Iblock setListPageUrl(\string|\Bitrix\Main\DB\SqlExpression $listPageUrl)
	 * @method bool hasListPageUrl()
	 * @method bool isListPageUrlFilled()
	 * @method bool isListPageUrlChanged()
	 * @method \string remindActualListPageUrl()
	 * @method \string requireListPageUrl()
	 * @method \Bitrix\Iblock\Iblock resetListPageUrl()
	 * @method \Bitrix\Iblock\Iblock unsetListPageUrl()
	 * @method \string fillListPageUrl()
	 * @method \string getDetailPageUrl()
	 * @method \Bitrix\Iblock\Iblock setDetailPageUrl(\string|\Bitrix\Main\DB\SqlExpression $detailPageUrl)
	 * @method bool hasDetailPageUrl()
	 * @method bool isDetailPageUrlFilled()
	 * @method bool isDetailPageUrlChanged()
	 * @method \string remindActualDetailPageUrl()
	 * @method \string requireDetailPageUrl()
	 * @method \Bitrix\Iblock\Iblock resetDetailPageUrl()
	 * @method \Bitrix\Iblock\Iblock unsetDetailPageUrl()
	 * @method \string fillDetailPageUrl()
	 * @method \string getSectionPageUrl()
	 * @method \Bitrix\Iblock\Iblock setSectionPageUrl(\string|\Bitrix\Main\DB\SqlExpression $sectionPageUrl)
	 * @method bool hasSectionPageUrl()
	 * @method bool isSectionPageUrlFilled()
	 * @method bool isSectionPageUrlChanged()
	 * @method \string remindActualSectionPageUrl()
	 * @method \string requireSectionPageUrl()
	 * @method \Bitrix\Iblock\Iblock resetSectionPageUrl()
	 * @method \Bitrix\Iblock\Iblock unsetSectionPageUrl()
	 * @method \string fillSectionPageUrl()
	 * @method \string getCanonicalPageUrl()
	 * @method \Bitrix\Iblock\Iblock setCanonicalPageUrl(\string|\Bitrix\Main\DB\SqlExpression $canonicalPageUrl)
	 * @method bool hasCanonicalPageUrl()
	 * @method bool isCanonicalPageUrlFilled()
	 * @method bool isCanonicalPageUrlChanged()
	 * @method \string remindActualCanonicalPageUrl()
	 * @method \string requireCanonicalPageUrl()
	 * @method \Bitrix\Iblock\Iblock resetCanonicalPageUrl()
	 * @method \Bitrix\Iblock\Iblock unsetCanonicalPageUrl()
	 * @method \string fillCanonicalPageUrl()
	 * @method \int getPicture()
	 * @method \Bitrix\Iblock\Iblock setPicture(\int|\Bitrix\Main\DB\SqlExpression $picture)
	 * @method bool hasPicture()
	 * @method bool isPictureFilled()
	 * @method bool isPictureChanged()
	 * @method \int remindActualPicture()
	 * @method \int requirePicture()
	 * @method \Bitrix\Iblock\Iblock resetPicture()
	 * @method \Bitrix\Iblock\Iblock unsetPicture()
	 * @method \int fillPicture()
	 * @method \string getDescription()
	 * @method \Bitrix\Iblock\Iblock setDescription(\string|\Bitrix\Main\DB\SqlExpression $description)
	 * @method bool hasDescription()
	 * @method bool isDescriptionFilled()
	 * @method bool isDescriptionChanged()
	 * @method \string remindActualDescription()
	 * @method \string requireDescription()
	 * @method \Bitrix\Iblock\Iblock resetDescription()
	 * @method \Bitrix\Iblock\Iblock unsetDescription()
	 * @method \string fillDescription()
	 * @method \string getDescriptionType()
	 * @method \Bitrix\Iblock\Iblock setDescriptionType(\string|\Bitrix\Main\DB\SqlExpression $descriptionType)
	 * @method bool hasDescriptionType()
	 * @method bool isDescriptionTypeFilled()
	 * @method bool isDescriptionTypeChanged()
	 * @method \string remindActualDescriptionType()
	 * @method \string requireDescriptionType()
	 * @method \Bitrix\Iblock\Iblock resetDescriptionType()
	 * @method \Bitrix\Iblock\Iblock unsetDescriptionType()
	 * @method \string fillDescriptionType()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Iblock setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Iblock resetXmlId()
	 * @method \Bitrix\Iblock\Iblock unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Iblock setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Iblock resetTmpId()
	 * @method \Bitrix\Iblock\Iblock unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \boolean getIndexElement()
	 * @method \Bitrix\Iblock\Iblock setIndexElement(\boolean|\Bitrix\Main\DB\SqlExpression $indexElement)
	 * @method bool hasIndexElement()
	 * @method bool isIndexElementFilled()
	 * @method bool isIndexElementChanged()
	 * @method \boolean remindActualIndexElement()
	 * @method \boolean requireIndexElement()
	 * @method \Bitrix\Iblock\Iblock resetIndexElement()
	 * @method \Bitrix\Iblock\Iblock unsetIndexElement()
	 * @method \boolean fillIndexElement()
	 * @method \boolean getIndexSection()
	 * @method \Bitrix\Iblock\Iblock setIndexSection(\boolean|\Bitrix\Main\DB\SqlExpression $indexSection)
	 * @method bool hasIndexSection()
	 * @method bool isIndexSectionFilled()
	 * @method bool isIndexSectionChanged()
	 * @method \boolean remindActualIndexSection()
	 * @method \boolean requireIndexSection()
	 * @method \Bitrix\Iblock\Iblock resetIndexSection()
	 * @method \Bitrix\Iblock\Iblock unsetIndexSection()
	 * @method \boolean fillIndexSection()
	 * @method \boolean getWorkflow()
	 * @method \Bitrix\Iblock\Iblock setWorkflow(\boolean|\Bitrix\Main\DB\SqlExpression $workflow)
	 * @method bool hasWorkflow()
	 * @method bool isWorkflowFilled()
	 * @method bool isWorkflowChanged()
	 * @method \boolean remindActualWorkflow()
	 * @method \boolean requireWorkflow()
	 * @method \Bitrix\Iblock\Iblock resetWorkflow()
	 * @method \Bitrix\Iblock\Iblock unsetWorkflow()
	 * @method \boolean fillWorkflow()
	 * @method \boolean getBizproc()
	 * @method \Bitrix\Iblock\Iblock setBizproc(\boolean|\Bitrix\Main\DB\SqlExpression $bizproc)
	 * @method bool hasBizproc()
	 * @method bool isBizprocFilled()
	 * @method bool isBizprocChanged()
	 * @method \boolean remindActualBizproc()
	 * @method \boolean requireBizproc()
	 * @method \Bitrix\Iblock\Iblock resetBizproc()
	 * @method \Bitrix\Iblock\Iblock unsetBizproc()
	 * @method \boolean fillBizproc()
	 * @method \string getSectionChooser()
	 * @method \Bitrix\Iblock\Iblock setSectionChooser(\string|\Bitrix\Main\DB\SqlExpression $sectionChooser)
	 * @method bool hasSectionChooser()
	 * @method bool isSectionChooserFilled()
	 * @method bool isSectionChooserChanged()
	 * @method \string remindActualSectionChooser()
	 * @method \string requireSectionChooser()
	 * @method \Bitrix\Iblock\Iblock resetSectionChooser()
	 * @method \Bitrix\Iblock\Iblock unsetSectionChooser()
	 * @method \string fillSectionChooser()
	 * @method \string getListMode()
	 * @method \Bitrix\Iblock\Iblock setListMode(\string|\Bitrix\Main\DB\SqlExpression $listMode)
	 * @method bool hasListMode()
	 * @method bool isListModeFilled()
	 * @method bool isListModeChanged()
	 * @method \string remindActualListMode()
	 * @method \string requireListMode()
	 * @method \Bitrix\Iblock\Iblock resetListMode()
	 * @method \Bitrix\Iblock\Iblock unsetListMode()
	 * @method \string fillListMode()
	 * @method \string getRightsMode()
	 * @method \Bitrix\Iblock\Iblock setRightsMode(\string|\Bitrix\Main\DB\SqlExpression $rightsMode)
	 * @method bool hasRightsMode()
	 * @method bool isRightsModeFilled()
	 * @method bool isRightsModeChanged()
	 * @method \string remindActualRightsMode()
	 * @method \string requireRightsMode()
	 * @method \Bitrix\Iblock\Iblock resetRightsMode()
	 * @method \Bitrix\Iblock\Iblock unsetRightsMode()
	 * @method \string fillRightsMode()
	 * @method \boolean getSectionProperty()
	 * @method \Bitrix\Iblock\Iblock setSectionProperty(\boolean|\Bitrix\Main\DB\SqlExpression $sectionProperty)
	 * @method bool hasSectionProperty()
	 * @method bool isSectionPropertyFilled()
	 * @method bool isSectionPropertyChanged()
	 * @method \boolean remindActualSectionProperty()
	 * @method \boolean requireSectionProperty()
	 * @method \Bitrix\Iblock\Iblock resetSectionProperty()
	 * @method \Bitrix\Iblock\Iblock unsetSectionProperty()
	 * @method \boolean fillSectionProperty()
	 * @method \string getPropertyIndex()
	 * @method \Bitrix\Iblock\Iblock setPropertyIndex(\string|\Bitrix\Main\DB\SqlExpression $propertyIndex)
	 * @method bool hasPropertyIndex()
	 * @method bool isPropertyIndexFilled()
	 * @method bool isPropertyIndexChanged()
	 * @method \string remindActualPropertyIndex()
	 * @method \string requirePropertyIndex()
	 * @method \Bitrix\Iblock\Iblock resetPropertyIndex()
	 * @method \Bitrix\Iblock\Iblock unsetPropertyIndex()
	 * @method \string fillPropertyIndex()
	 * @method \string getVersion()
	 * @method \Bitrix\Iblock\Iblock setVersion(\string|\Bitrix\Main\DB\SqlExpression $version)
	 * @method bool hasVersion()
	 * @method bool isVersionFilled()
	 * @method bool isVersionChanged()
	 * @method \string remindActualVersion()
	 * @method \string requireVersion()
	 * @method \Bitrix\Iblock\Iblock resetVersion()
	 * @method \Bitrix\Iblock\Iblock unsetVersion()
	 * @method \string fillVersion()
	 * @method \int getLastConvElement()
	 * @method \Bitrix\Iblock\Iblock setLastConvElement(\int|\Bitrix\Main\DB\SqlExpression $lastConvElement)
	 * @method bool hasLastConvElement()
	 * @method bool isLastConvElementFilled()
	 * @method bool isLastConvElementChanged()
	 * @method \int remindActualLastConvElement()
	 * @method \int requireLastConvElement()
	 * @method \Bitrix\Iblock\Iblock resetLastConvElement()
	 * @method \Bitrix\Iblock\Iblock unsetLastConvElement()
	 * @method \int fillLastConvElement()
	 * @method \int getSocnetGroupId()
	 * @method \Bitrix\Iblock\Iblock setSocnetGroupId(\int|\Bitrix\Main\DB\SqlExpression $socnetGroupId)
	 * @method bool hasSocnetGroupId()
	 * @method bool isSocnetGroupIdFilled()
	 * @method bool isSocnetGroupIdChanged()
	 * @method \int remindActualSocnetGroupId()
	 * @method \int requireSocnetGroupId()
	 * @method \Bitrix\Iblock\Iblock resetSocnetGroupId()
	 * @method \Bitrix\Iblock\Iblock unsetSocnetGroupId()
	 * @method \int fillSocnetGroupId()
	 * @method \string getEditFileBefore()
	 * @method \Bitrix\Iblock\Iblock setEditFileBefore(\string|\Bitrix\Main\DB\SqlExpression $editFileBefore)
	 * @method bool hasEditFileBefore()
	 * @method bool isEditFileBeforeFilled()
	 * @method bool isEditFileBeforeChanged()
	 * @method \string remindActualEditFileBefore()
	 * @method \string requireEditFileBefore()
	 * @method \Bitrix\Iblock\Iblock resetEditFileBefore()
	 * @method \Bitrix\Iblock\Iblock unsetEditFileBefore()
	 * @method \string fillEditFileBefore()
	 * @method \string getEditFileAfter()
	 * @method \Bitrix\Iblock\Iblock setEditFileAfter(\string|\Bitrix\Main\DB\SqlExpression $editFileAfter)
	 * @method bool hasEditFileAfter()
	 * @method bool isEditFileAfterFilled()
	 * @method bool isEditFileAfterChanged()
	 * @method \string remindActualEditFileAfter()
	 * @method \string requireEditFileAfter()
	 * @method \Bitrix\Iblock\Iblock resetEditFileAfter()
	 * @method \Bitrix\Iblock\Iblock unsetEditFileAfter()
	 * @method \string fillEditFileAfter()
	 * @method \Bitrix\Iblock\EO_Type getType()
	 * @method \Bitrix\Iblock\EO_Type remindActualType()
	 * @method \Bitrix\Iblock\EO_Type requireType()
	 * @method \Bitrix\Iblock\Iblock setType(\Bitrix\Iblock\EO_Type $object)
	 * @method \Bitrix\Iblock\Iblock resetType()
	 * @method \Bitrix\Iblock\Iblock unsetType()
	 * @method bool hasType()
	 * @method bool isTypeFilled()
	 * @method bool isTypeChanged()
	 * @method \Bitrix\Iblock\EO_Type fillType()
	 * @method \Bitrix\Iblock\EO_Property_Collection getProperties()
	 * @method \Bitrix\Iblock\EO_Property_Collection requireProperties()
	 * @method \Bitrix\Iblock\EO_Property_Collection fillProperties()
	 * @method bool hasProperties()
	 * @method bool isPropertiesFilled()
	 * @method bool isPropertiesChanged()
	 * @method void addToProperties(\Bitrix\Iblock\Property $property)
	 * @method void removeFromProperties(\Bitrix\Iblock\Property $property)
	 * @method void removeAllProperties()
	 * @method \Bitrix\Iblock\Iblock resetProperties()
	 * @method \Bitrix\Iblock\Iblock unsetProperties()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Iblock set($fieldName, $value)
	 * @method \Bitrix\Iblock\Iblock reset($fieldName)
	 * @method \Bitrix\Iblock\Iblock unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Iblock wakeUp($data)
	 */
	class EO_Iblock {
		/* @var \Bitrix\Iblock\IblockTable */
		static public $dataClass = '\Bitrix\Iblock\IblockTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock {
	/**
	 * EO_Iblock_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \string[] getIblockTypeIdList()
	 * @method \string[] fillIblockTypeId()
	 * @method \string[] getLidList()
	 * @method \string[] fillLid()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getApiCodeList()
	 * @method \string[] fillApiCode()
	 * @method \boolean[] getRestOnList()
	 * @method \boolean[] fillRestOn()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getListPageUrlList()
	 * @method \string[] fillListPageUrl()
	 * @method \string[] getDetailPageUrlList()
	 * @method \string[] fillDetailPageUrl()
	 * @method \string[] getSectionPageUrlList()
	 * @method \string[] fillSectionPageUrl()
	 * @method \string[] getCanonicalPageUrlList()
	 * @method \string[] fillCanonicalPageUrl()
	 * @method \int[] getPictureList()
	 * @method \int[] fillPicture()
	 * @method \string[] getDescriptionList()
	 * @method \string[] fillDescription()
	 * @method \string[] getDescriptionTypeList()
	 * @method \string[] fillDescriptionType()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \boolean[] getIndexElementList()
	 * @method \boolean[] fillIndexElement()
	 * @method \boolean[] getIndexSectionList()
	 * @method \boolean[] fillIndexSection()
	 * @method \boolean[] getWorkflowList()
	 * @method \boolean[] fillWorkflow()
	 * @method \boolean[] getBizprocList()
	 * @method \boolean[] fillBizproc()
	 * @method \string[] getSectionChooserList()
	 * @method \string[] fillSectionChooser()
	 * @method \string[] getListModeList()
	 * @method \string[] fillListMode()
	 * @method \string[] getRightsModeList()
	 * @method \string[] fillRightsMode()
	 * @method \boolean[] getSectionPropertyList()
	 * @method \boolean[] fillSectionProperty()
	 * @method \string[] getPropertyIndexList()
	 * @method \string[] fillPropertyIndex()
	 * @method \string[] getVersionList()
	 * @method \string[] fillVersion()
	 * @method \int[] getLastConvElementList()
	 * @method \int[] fillLastConvElement()
	 * @method \int[] getSocnetGroupIdList()
	 * @method \int[] fillSocnetGroupId()
	 * @method \string[] getEditFileBeforeList()
	 * @method \string[] fillEditFileBefore()
	 * @method \string[] getEditFileAfterList()
	 * @method \string[] fillEditFileAfter()
	 * @method \Bitrix\Iblock\EO_Type[] getTypeList()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection getTypeCollection()
	 * @method \Bitrix\Iblock\EO_Type_Collection fillType()
	 * @method \Bitrix\Iblock\EO_Property_Collection[] getPropertiesList()
	 * @method \Bitrix\Iblock\EO_Property_Collection getPropertiesCollection()
	 * @method \Bitrix\Iblock\EO_Property_Collection fillProperties()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Iblock $object)
	 * @method bool has(\Bitrix\Iblock\Iblock $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Iblock getByPrimary($primary)
	 * @method \Bitrix\Iblock\Iblock[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Iblock $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\EO_Iblock_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Iblock current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Iblock_Collection merge(?EO_Iblock_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Iblock_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\IblockTable */
		static public $dataClass = '\Bitrix\Iblock\IblockTable';
	}
}
namespace Bitrix\Iblock {
	/**
	 * @method static EO_Iblock_Query query()
	 * @method static EO_Iblock_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Iblock_Result getById($id)
	 * @method static EO_Iblock_Result getList(array $parameters = [])
	 * @method static EO_Iblock_Entity getEntity()
	 * @method static \Bitrix\Iblock\Iblock createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\EO_Iblock_Collection createCollection()
	 * @method static \Bitrix\Iblock\Iblock wakeUpObject($row)
	 * @method static \Bitrix\Iblock\EO_Iblock_Collection wakeUpCollection($rows)
	 */
	class IblockTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Iblock_Result exec()
	 * @method \Bitrix\Iblock\Iblock fetchObject()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Iblock_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Iblock fetchObject()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fetchCollection()
	 */
	class EO_Iblock_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Iblock createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\EO_Iblock_Collection createCollection()
	 * @method \Bitrix\Iblock\Iblock wakeUpObject($row)
	 * @method \Bitrix\Iblock\EO_Iblock_Collection wakeUpCollection($rows)
	 */
	class EO_Iblock_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\CompanyUtsTable */
namespace Bitrix\Crm {
	/**
	 * EO_CompanyUts
	 * @see \Bitrix\Crm\CompanyUtsTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getValueId()
	 * @method \Bitrix\Crm\EO_CompanyUts setValueId(\int|\Bitrix\Main\DB\SqlExpression $valueId)
	 * @method bool hasValueId()
	 * @method bool isValueIdFilled()
	 * @method bool isValueIdChanged()
	 * @method \Bitrix\Crm\Company getParent()
	 * @method \Bitrix\Crm\Company remindActualParent()
	 * @method \Bitrix\Crm\Company requireParent()
	 * @method \Bitrix\Crm\EO_CompanyUts setParent(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUts resetParent()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetParent()
	 * @method bool hasParent()
	 * @method bool isParentFilled()
	 * @method bool isParentChanged()
	 * @method \Bitrix\Crm\Company fillParent()
	 * @method \int getUfLogo()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfLogo(\int|\Bitrix\Main\DB\SqlExpression $ufLogo)
	 * @method bool hasUfLogo()
	 * @method bool isUfLogoFilled()
	 * @method bool isUfLogoChanged()
	 * @method \int remindActualUfLogo()
	 * @method \int requireUfLogo()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfLogo()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfLogo()
	 * @method \int fillUfLogo()
	 * @method \float getUfCrm63566067e40bf()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566067e40bf(\float|\Bitrix\Main\DB\SqlExpression $ufCrm63566067e40bf)
	 * @method bool hasUfCrm63566067e40bf()
	 * @method bool isUfCrm63566067e40bfFilled()
	 * @method bool isUfCrm63566067e40bfChanged()
	 * @method \float remindActualUfCrm63566067e40bf()
	 * @method \float requireUfCrm63566067e40bf()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566067e40bf()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566067e40bf()
	 * @method \float fillUfCrm63566067e40bf()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm63566067e7ecd()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566067e7ecd(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm63566067e7ecd)
	 * @method bool hasUfCrm63566067e7ecd()
	 * @method bool isUfCrm63566067e7ecdFilled()
	 * @method bool isUfCrm63566067e7ecdChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm63566067e7ecd()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm63566067e7ecd()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566067e7ecd()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566067e7ecd()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm63566067e7ecd()
	 * @method \float getUfCrm63566067eb7ba()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566067eb7ba(\float|\Bitrix\Main\DB\SqlExpression $ufCrm63566067eb7ba)
	 * @method bool hasUfCrm63566067eb7ba()
	 * @method bool isUfCrm63566067eb7baFilled()
	 * @method bool isUfCrm63566067eb7baChanged()
	 * @method \float remindActualUfCrm63566067eb7ba()
	 * @method \float requireUfCrm63566067eb7ba()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566067eb7ba()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566067eb7ba()
	 * @method \float fillUfCrm63566067eb7ba()
	 * @method \float getUfCrm63566067eed92()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566067eed92(\float|\Bitrix\Main\DB\SqlExpression $ufCrm63566067eed92)
	 * @method bool hasUfCrm63566067eed92()
	 * @method bool isUfCrm63566067eed92Filled()
	 * @method bool isUfCrm63566067eed92Changed()
	 * @method \float remindActualUfCrm63566067eed92()
	 * @method \float requireUfCrm63566067eed92()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566067eed92()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566067eed92()
	 * @method \float fillUfCrm63566067eed92()
	 * @method \float getUfCrm63566067f29c1()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566067f29c1(\float|\Bitrix\Main\DB\SqlExpression $ufCrm63566067f29c1)
	 * @method bool hasUfCrm63566067f29c1()
	 * @method bool isUfCrm63566067f29c1Filled()
	 * @method bool isUfCrm63566067f29c1Changed()
	 * @method \float remindActualUfCrm63566067f29c1()
	 * @method \float requireUfCrm63566067f29c1()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566067f29c1()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566067f29c1()
	 * @method \float fillUfCrm63566067f29c1()
	 * @method \float getUfCrm6356606801e65()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606801e65(\float|\Bitrix\Main\DB\SqlExpression $ufCrm6356606801e65)
	 * @method bool hasUfCrm6356606801e65()
	 * @method bool isUfCrm6356606801e65Filled()
	 * @method bool isUfCrm6356606801e65Changed()
	 * @method \float remindActualUfCrm6356606801e65()
	 * @method \float requireUfCrm6356606801e65()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606801e65()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606801e65()
	 * @method \float fillUfCrm6356606801e65()
	 * @method \float getUfCrm63566068099f8()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566068099f8(\float|\Bitrix\Main\DB\SqlExpression $ufCrm63566068099f8)
	 * @method bool hasUfCrm63566068099f8()
	 * @method bool isUfCrm63566068099f8Filled()
	 * @method bool isUfCrm63566068099f8Changed()
	 * @method \float remindActualUfCrm63566068099f8()
	 * @method \float requireUfCrm63566068099f8()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566068099f8()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566068099f8()
	 * @method \float fillUfCrm63566068099f8()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm635660680cefe()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660680cefe(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm635660680cefe)
	 * @method bool hasUfCrm635660680cefe()
	 * @method bool isUfCrm635660680cefeFilled()
	 * @method bool isUfCrm635660680cefeChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm635660680cefe()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm635660680cefe()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660680cefe()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660680cefe()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm635660680cefe()
	 * @method \string getUfCrm6356606810870()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606810870(\string|\Bitrix\Main\DB\SqlExpression $ufCrm6356606810870)
	 * @method bool hasUfCrm6356606810870()
	 * @method bool isUfCrm6356606810870Filled()
	 * @method bool isUfCrm6356606810870Changed()
	 * @method \string remindActualUfCrm6356606810870()
	 * @method \string requireUfCrm6356606810870()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606810870()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606810870()
	 * @method \string fillUfCrm6356606810870()
	 * @method \int getUfCrm635660681445f()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660681445f(\int|\Bitrix\Main\DB\SqlExpression $ufCrm635660681445f)
	 * @method bool hasUfCrm635660681445f()
	 * @method bool isUfCrm635660681445fFilled()
	 * @method bool isUfCrm635660681445fChanged()
	 * @method \int remindActualUfCrm635660681445f()
	 * @method \int requireUfCrm635660681445f()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660681445f()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660681445f()
	 * @method \int fillUfCrm635660681445f()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6356606817a80()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606817a80(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm6356606817a80)
	 * @method bool hasUfCrm6356606817a80()
	 * @method bool isUfCrm6356606817a80Filled()
	 * @method bool isUfCrm6356606817a80Changed()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6356606817a80()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606817a80()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm635660681ad33()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660681ad33(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm635660681ad33)
	 * @method bool hasUfCrm635660681ad33()
	 * @method bool isUfCrm635660681ad33Filled()
	 * @method bool isUfCrm635660681ad33Changed()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm635660681ad33()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660681ad33()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6356606824dab()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606824dab(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm6356606824dab)
	 * @method bool hasUfCrm6356606824dab()
	 * @method bool isUfCrm6356606824dabFilled()
	 * @method bool isUfCrm6356606824dabChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6356606824dab()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606824dab()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm635660682981e()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660682981e(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm635660682981e)
	 * @method bool hasUfCrm635660682981e()
	 * @method bool isUfCrm635660682981eFilled()
	 * @method bool isUfCrm635660682981eChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm635660682981e()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm635660682981e()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660682981e()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660682981e()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm635660682981e()
	 * @method \int getUfCrm635660682cf24()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660682cf24(\int|\Bitrix\Main\DB\SqlExpression $ufCrm635660682cf24)
	 * @method bool hasUfCrm635660682cf24()
	 * @method bool isUfCrm635660682cf24Filled()
	 * @method bool isUfCrm635660682cf24Changed()
	 * @method \int remindActualUfCrm635660682cf24()
	 * @method \int requireUfCrm635660682cf24()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660682cf24()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660682cf24()
	 * @method \int fillUfCrm635660682cf24()
	 * @method \int getUfCrm6356606834cb4()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606834cb4(\int|\Bitrix\Main\DB\SqlExpression $ufCrm6356606834cb4)
	 * @method bool hasUfCrm6356606834cb4()
	 * @method bool isUfCrm6356606834cb4Filled()
	 * @method bool isUfCrm6356606834cb4Changed()
	 * @method \int remindActualUfCrm6356606834cb4()
	 * @method \int requireUfCrm6356606834cb4()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606834cb4()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606834cb4()
	 * @method \int fillUfCrm6356606834cb4()
	 * @method \string getUfCrm6356606838370()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606838370(\string|\Bitrix\Main\DB\SqlExpression $ufCrm6356606838370)
	 * @method bool hasUfCrm6356606838370()
	 * @method bool isUfCrm6356606838370Filled()
	 * @method bool isUfCrm6356606838370Changed()
	 * @method \string remindActualUfCrm6356606838370()
	 * @method \string requireUfCrm6356606838370()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606838370()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606838370()
	 * @method \string fillUfCrm6356606838370()
	 * @method \int getUfCrm635660683bec7()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660683bec7(\int|\Bitrix\Main\DB\SqlExpression $ufCrm635660683bec7)
	 * @method bool hasUfCrm635660683bec7()
	 * @method bool isUfCrm635660683bec7Filled()
	 * @method bool isUfCrm635660683bec7Changed()
	 * @method \int remindActualUfCrm635660683bec7()
	 * @method \int requireUfCrm635660683bec7()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660683bec7()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660683bec7()
	 * @method \int fillUfCrm635660683bec7()
	 * @method \int getUfCrm63566068408c0()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566068408c0(\int|\Bitrix\Main\DB\SqlExpression $ufCrm63566068408c0)
	 * @method bool hasUfCrm63566068408c0()
	 * @method bool isUfCrm63566068408c0Filled()
	 * @method bool isUfCrm63566068408c0Changed()
	 * @method \int remindActualUfCrm63566068408c0()
	 * @method \int requireUfCrm63566068408c0()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566068408c0()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566068408c0()
	 * @method \int fillUfCrm63566068408c0()
	 * @method \string getUfCrm6356606844f4e()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606844f4e(\string|\Bitrix\Main\DB\SqlExpression $ufCrm6356606844f4e)
	 * @method bool hasUfCrm6356606844f4e()
	 * @method bool isUfCrm6356606844f4eFilled()
	 * @method bool isUfCrm6356606844f4eChanged()
	 * @method \string remindActualUfCrm6356606844f4e()
	 * @method \string requireUfCrm6356606844f4e()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606844f4e()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606844f4e()
	 * @method \string fillUfCrm6356606844f4e()
	 * @method \int getUfCrm63566068485d3()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566068485d3(\int|\Bitrix\Main\DB\SqlExpression $ufCrm63566068485d3)
	 * @method bool hasUfCrm63566068485d3()
	 * @method bool isUfCrm63566068485d3Filled()
	 * @method bool isUfCrm63566068485d3Changed()
	 * @method \int remindActualUfCrm63566068485d3()
	 * @method \int requireUfCrm63566068485d3()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566068485d3()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566068485d3()
	 * @method \int fillUfCrm63566068485d3()
	 * @method \string getUfCrm635660684f7df()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660684f7df(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660684f7df)
	 * @method bool hasUfCrm635660684f7df()
	 * @method bool isUfCrm635660684f7dfFilled()
	 * @method bool isUfCrm635660684f7dfChanged()
	 * @method \string remindActualUfCrm635660684f7df()
	 * @method \string requireUfCrm635660684f7df()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660684f7df()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660684f7df()
	 * @method \string fillUfCrm635660684f7df()
	 * @method \string getUfCrm6356606853229()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606853229(\string|\Bitrix\Main\DB\SqlExpression $ufCrm6356606853229)
	 * @method bool hasUfCrm6356606853229()
	 * @method bool isUfCrm6356606853229Filled()
	 * @method bool isUfCrm6356606853229Changed()
	 * @method \string remindActualUfCrm6356606853229()
	 * @method \string requireUfCrm6356606853229()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606853229()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606853229()
	 * @method \string fillUfCrm6356606853229()
	 * @method \int getUfCrm6356606856fad()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606856fad(\int|\Bitrix\Main\DB\SqlExpression $ufCrm6356606856fad)
	 * @method bool hasUfCrm6356606856fad()
	 * @method bool isUfCrm6356606856fadFilled()
	 * @method bool isUfCrm6356606856fadChanged()
	 * @method \int remindActualUfCrm6356606856fad()
	 * @method \int requireUfCrm6356606856fad()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606856fad()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606856fad()
	 * @method \int fillUfCrm6356606856fad()
	 * @method \string getUfCrm635660685b8c3()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660685b8c3(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660685b8c3)
	 * @method bool hasUfCrm635660685b8c3()
	 * @method bool isUfCrm635660685b8c3Filled()
	 * @method bool isUfCrm635660685b8c3Changed()
	 * @method \string remindActualUfCrm635660685b8c3()
	 * @method \string requireUfCrm635660685b8c3()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660685b8c3()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660685b8c3()
	 * @method \string fillUfCrm635660685b8c3()
	 * @method \int getUfCrm6356606866832()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606866832(\int|\Bitrix\Main\DB\SqlExpression $ufCrm6356606866832)
	 * @method bool hasUfCrm6356606866832()
	 * @method bool isUfCrm6356606866832Filled()
	 * @method bool isUfCrm6356606866832Changed()
	 * @method \int remindActualUfCrm6356606866832()
	 * @method \int requireUfCrm6356606866832()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606866832()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606866832()
	 * @method \int fillUfCrm6356606866832()
	 * @method \string getUfCrmLastPayments()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrmLastPayments(\string|\Bitrix\Main\DB\SqlExpression $ufCrmLastPayments)
	 * @method bool hasUfCrmLastPayments()
	 * @method bool isUfCrmLastPaymentsFilled()
	 * @method bool isUfCrmLastPaymentsChanged()
	 * @method \string remindActualUfCrmLastPayments()
	 * @method \string requireUfCrmLastPayments()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrmLastPayments()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrmLastPayments()
	 * @method \string fillUfCrmLastPayments()
	 * @method \string getUfCrmKassaBankAccount()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrmKassaBankAccount(\string|\Bitrix\Main\DB\SqlExpression $ufCrmKassaBankAccount)
	 * @method bool hasUfCrmKassaBankAccount()
	 * @method bool isUfCrmKassaBankAccountFilled()
	 * @method bool isUfCrmKassaBankAccountChanged()
	 * @method \string remindActualUfCrmKassaBankAccount()
	 * @method \string requireUfCrmKassaBankAccount()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrmKassaBankAccount()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrmKassaBankAccount()
	 * @method \string fillUfCrmKassaBankAccount()
	 * @method \int getUfStamp()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfStamp(\int|\Bitrix\Main\DB\SqlExpression $ufStamp)
	 * @method bool hasUfStamp()
	 * @method bool isUfStampFilled()
	 * @method bool isUfStampChanged()
	 * @method \int remindActualUfStamp()
	 * @method \int requireUfStamp()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfStamp()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfStamp()
	 * @method \int fillUfStamp()
	 * @method \int getUfDirectorSign()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfDirectorSign(\int|\Bitrix\Main\DB\SqlExpression $ufDirectorSign)
	 * @method bool hasUfDirectorSign()
	 * @method bool isUfDirectorSignFilled()
	 * @method bool isUfDirectorSignChanged()
	 * @method \int remindActualUfDirectorSign()
	 * @method \int requireUfDirectorSign()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfDirectorSign()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfDirectorSign()
	 * @method \int fillUfDirectorSign()
	 * @method \int getUfAccountantSign()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfAccountantSign(\int|\Bitrix\Main\DB\SqlExpression $ufAccountantSign)
	 * @method bool hasUfAccountantSign()
	 * @method bool isUfAccountantSignFilled()
	 * @method bool isUfAccountantSignChanged()
	 * @method \int remindActualUfAccountantSign()
	 * @method \int requireUfAccountantSign()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfAccountantSign()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfAccountantSign()
	 * @method \int fillUfAccountantSign()
	 * @method \string getUfCrm635660686a627()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660686a627(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660686a627)
	 * @method bool hasUfCrm635660686a627()
	 * @method bool isUfCrm635660686a627Filled()
	 * @method bool isUfCrm635660686a627Changed()
	 * @method \string remindActualUfCrm635660686a627()
	 * @method \string requireUfCrm635660686a627()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660686a627()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660686a627()
	 * @method \string fillUfCrm635660686a627()
	 * @method \string getUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660680526f(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660680526f)
	 * @method bool hasUfCrm635660680526f()
	 * @method bool isUfCrm635660680526fFilled()
	 * @method bool isUfCrm635660680526fChanged()
	 * @method \string remindActualUfCrm635660680526f()
	 * @method \string requireUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660680526f()
	 * @method \string fillUfCrm635660680526f()
	 * @method \string getUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm63566068314d7(\string|\Bitrix\Main\DB\SqlExpression $ufCrm63566068314d7)
	 * @method bool hasUfCrm63566068314d7()
	 * @method bool isUfCrm63566068314d7Filled()
	 * @method bool isUfCrm63566068314d7Changed()
	 * @method \string remindActualUfCrm63566068314d7()
	 * @method \string requireUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm63566068314d7()
	 * @method \string fillUfCrm63566068314d7()
	 * @method \string getUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660684bfb2(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660684bfb2)
	 * @method bool hasUfCrm635660684bfb2()
	 * @method bool isUfCrm635660684bfb2Filled()
	 * @method bool isUfCrm635660684bfb2Changed()
	 * @method \string remindActualUfCrm635660684bfb2()
	 * @method \string requireUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660684bfb2()
	 * @method \string fillUfCrm635660684bfb2()
	 * @method \string getUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm635660685f1cf(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660685f1cf)
	 * @method bool hasUfCrm635660685f1cf()
	 * @method bool isUfCrm635660685f1cfFilled()
	 * @method bool isUfCrm635660685f1cfChanged()
	 * @method \string remindActualUfCrm635660685f1cf()
	 * @method \string requireUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm635660685f1cf()
	 * @method \string fillUfCrm635660685f1cf()
	 * @method \string getUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUts setUfCrm6356606862c37(\string|\Bitrix\Main\DB\SqlExpression $ufCrm6356606862c37)
	 * @method bool hasUfCrm6356606862c37()
	 * @method bool isUfCrm6356606862c37Filled()
	 * @method bool isUfCrm6356606862c37Changed()
	 * @method \string remindActualUfCrm6356606862c37()
	 * @method \string requireUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUts resetUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUts unsetUfCrm6356606862c37()
	 * @method \string fillUfCrm6356606862c37()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\EO_CompanyUts set($fieldName, $value)
	 * @method \Bitrix\Crm\EO_CompanyUts reset($fieldName)
	 * @method \Bitrix\Crm\EO_CompanyUts unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\EO_CompanyUts wakeUp($data)
	 */
	class EO_CompanyUts {
		/* @var \Bitrix\Crm\CompanyUtsTable */
		static public $dataClass = '\Bitrix\Crm\CompanyUtsTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_CompanyUts_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getValueIdList()
	 * @method \Bitrix\Crm\Company[] getParentList()
	 * @method \Bitrix\Crm\EO_CompanyUts_Collection getParentCollection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParent()
	 * @method \int[] getUfLogoList()
	 * @method \int[] fillUfLogo()
	 * @method \float[] getUfCrm63566067e40bfList()
	 * @method \float[] fillUfCrm63566067e40bf()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm63566067e7ecdList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm63566067e7ecd()
	 * @method \float[] getUfCrm63566067eb7baList()
	 * @method \float[] fillUfCrm63566067eb7ba()
	 * @method \float[] getUfCrm63566067eed92List()
	 * @method \float[] fillUfCrm63566067eed92()
	 * @method \float[] getUfCrm63566067f29c1List()
	 * @method \float[] fillUfCrm63566067f29c1()
	 * @method \float[] getUfCrm6356606801e65List()
	 * @method \float[] fillUfCrm6356606801e65()
	 * @method \float[] getUfCrm63566068099f8List()
	 * @method \float[] fillUfCrm63566068099f8()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm635660680cefeList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm635660680cefe()
	 * @method \string[] getUfCrm6356606810870List()
	 * @method \string[] fillUfCrm6356606810870()
	 * @method \int[] getUfCrm635660681445fList()
	 * @method \int[] fillUfCrm635660681445f()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6356606817a80List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6356606817a80()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm635660681ad33List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm635660681ad33()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6356606824dabList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6356606824dab()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm635660682981eList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm635660682981e()
	 * @method \int[] getUfCrm635660682cf24List()
	 * @method \int[] fillUfCrm635660682cf24()
	 * @method \int[] getUfCrm6356606834cb4List()
	 * @method \int[] fillUfCrm6356606834cb4()
	 * @method \string[] getUfCrm6356606838370List()
	 * @method \string[] fillUfCrm6356606838370()
	 * @method \int[] getUfCrm635660683bec7List()
	 * @method \int[] fillUfCrm635660683bec7()
	 * @method \int[] getUfCrm63566068408c0List()
	 * @method \int[] fillUfCrm63566068408c0()
	 * @method \string[] getUfCrm6356606844f4eList()
	 * @method \string[] fillUfCrm6356606844f4e()
	 * @method \int[] getUfCrm63566068485d3List()
	 * @method \int[] fillUfCrm63566068485d3()
	 * @method \string[] getUfCrm635660684f7dfList()
	 * @method \string[] fillUfCrm635660684f7df()
	 * @method \string[] getUfCrm6356606853229List()
	 * @method \string[] fillUfCrm6356606853229()
	 * @method \int[] getUfCrm6356606856fadList()
	 * @method \int[] fillUfCrm6356606856fad()
	 * @method \string[] getUfCrm635660685b8c3List()
	 * @method \string[] fillUfCrm635660685b8c3()
	 * @method \int[] getUfCrm6356606866832List()
	 * @method \int[] fillUfCrm6356606866832()
	 * @method \string[] getUfCrmLastPaymentsList()
	 * @method \string[] fillUfCrmLastPayments()
	 * @method \string[] getUfCrmKassaBankAccountList()
	 * @method \string[] fillUfCrmKassaBankAccount()
	 * @method \int[] getUfStampList()
	 * @method \int[] fillUfStamp()
	 * @method \int[] getUfDirectorSignList()
	 * @method \int[] fillUfDirectorSign()
	 * @method \int[] getUfAccountantSignList()
	 * @method \int[] fillUfAccountantSign()
	 * @method \string[] getUfCrm635660686a627List()
	 * @method \string[] fillUfCrm635660686a627()
	 * @method \string[] getUfCrm635660680526fList()
	 * @method \string[] fillUfCrm635660680526f()
	 * @method \string[] getUfCrm63566068314d7List()
	 * @method \string[] fillUfCrm63566068314d7()
	 * @method \string[] getUfCrm635660684bfb2List()
	 * @method \string[] fillUfCrm635660684bfb2()
	 * @method \string[] getUfCrm635660685f1cfList()
	 * @method \string[] fillUfCrm635660685f1cf()
	 * @method \string[] getUfCrm6356606862c37List()
	 * @method \string[] fillUfCrm6356606862c37()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\EO_CompanyUts $object)
	 * @method bool has(\Bitrix\Crm\EO_CompanyUts $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\EO_CompanyUts getByPrimary($primary)
	 * @method \Bitrix\Crm\EO_CompanyUts[] getAll()
	 * @method bool remove(\Bitrix\Crm\EO_CompanyUts $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\EO_CompanyUts_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\EO_CompanyUts current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_CompanyUts_Collection merge(?EO_CompanyUts_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_CompanyUts_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\CompanyUtsTable */
		static public $dataClass = '\Bitrix\Crm\CompanyUtsTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_CompanyUts_Query query()
	 * @method static EO_CompanyUts_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_CompanyUts_Result getById($id)
	 * @method static EO_CompanyUts_Result getList(array $parameters = [])
	 * @method static EO_CompanyUts_Entity getEntity()
	 * @method static \Bitrix\Crm\EO_CompanyUts createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\EO_CompanyUts_Collection createCollection()
	 * @method static \Bitrix\Crm\EO_CompanyUts wakeUpObject($row)
	 * @method static \Bitrix\Crm\EO_CompanyUts_Collection wakeUpCollection($rows)
	 */
	class CompanyUtsTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_CompanyUts_Result exec()
	 * @method \Bitrix\Crm\EO_CompanyUts fetchObject()
	 * @method \Bitrix\Crm\EO_CompanyUts_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_CompanyUts_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\EO_CompanyUts fetchObject()
	 * @method \Bitrix\Crm\EO_CompanyUts_Collection fetchCollection()
	 */
	class EO_CompanyUts_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\EO_CompanyUts createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\EO_CompanyUts_Collection createCollection()
	 * @method \Bitrix\Crm\EO_CompanyUts wakeUpObject($row)
	 * @method \Bitrix\Crm\EO_CompanyUts_Collection wakeUpCollection($rows)
	 */
	class EO_CompanyUts_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\CompanyUtmTable */
namespace Bitrix\Crm {
	/**
	 * EO_CompanyUtm
	 * @see \Bitrix\Crm\CompanyUtmTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Crm\EO_CompanyUtm setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getValueId()
	 * @method \Bitrix\Crm\EO_CompanyUtm setValueId(\int|\Bitrix\Main\DB\SqlExpression $valueId)
	 * @method bool hasValueId()
	 * @method bool isValueIdFilled()
	 * @method bool isValueIdChanged()
	 * @method \Bitrix\Crm\Company getParent()
	 * @method \Bitrix\Crm\Company remindActualParent()
	 * @method \Bitrix\Crm\Company requireParent()
	 * @method \Bitrix\Crm\EO_CompanyUtm setParent(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUtm resetParent()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetParent()
	 * @method bool hasParent()
	 * @method bool isParentFilled()
	 * @method bool isParentChanged()
	 * @method \Bitrix\Crm\Company fillParent()
	 * @method \int getFieldId()
	 * @method \Bitrix\Crm\EO_CompanyUtm setFieldId(\int|\Bitrix\Main\DB\SqlExpression $fieldId)
	 * @method bool hasFieldId()
	 * @method bool isFieldIdFilled()
	 * @method bool isFieldIdChanged()
	 * @method \int remindActualFieldId()
	 * @method \int requireFieldId()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetFieldId()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetFieldId()
	 * @method \int fillFieldId()
	 * @method \string getValue()
	 * @method \Bitrix\Crm\EO_CompanyUtm setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetValue()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetValue()
	 * @method \string fillValue()
	 * @method \int getValueInt()
	 * @method \Bitrix\Crm\EO_CompanyUtm setValueInt(\int|\Bitrix\Main\DB\SqlExpression $valueInt)
	 * @method bool hasValueInt()
	 * @method bool isValueIntFilled()
	 * @method bool isValueIntChanged()
	 * @method \int remindActualValueInt()
	 * @method \int requireValueInt()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetValueInt()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetValueInt()
	 * @method \int fillValueInt()
	 * @method \float getValueDouble()
	 * @method \Bitrix\Crm\EO_CompanyUtm setValueDouble(\float|\Bitrix\Main\DB\SqlExpression $valueDouble)
	 * @method bool hasValueDouble()
	 * @method bool isValueDoubleFilled()
	 * @method bool isValueDoubleChanged()
	 * @method \float remindActualValueDouble()
	 * @method \float requireValueDouble()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetValueDouble()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetValueDouble()
	 * @method \float fillValueDouble()
	 * @method \Bitrix\Main\Type\DateTime getValueDate()
	 * @method \Bitrix\Crm\EO_CompanyUtm setValueDate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $valueDate)
	 * @method bool hasValueDate()
	 * @method bool isValueDateFilled()
	 * @method bool isValueDateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualValueDate()
	 * @method \Bitrix\Main\Type\DateTime requireValueDate()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetValueDate()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetValueDate()
	 * @method \Bitrix\Main\Type\DateTime fillValueDate()
	 * @method \int getUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUtm setUfCrm635660680526f(\int|\Bitrix\Main\DB\SqlExpression $ufCrm635660680526f)
	 * @method bool hasUfCrm635660680526f()
	 * @method bool isUfCrm635660680526fFilled()
	 * @method bool isUfCrm635660680526fChanged()
	 * @method \int remindActualUfCrm635660680526f()
	 * @method \int requireUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetUfCrm635660680526f()
	 * @method \int fillUfCrm635660680526f()
	 * @method \Bitrix\Crm\Company getParentUfCrm635660680526f()
	 * @method \Bitrix\Crm\Company remindActualParentUfCrm635660680526f()
	 * @method \Bitrix\Crm\Company requireParentUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUtm setParentUfCrm635660680526f(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUtm resetParentUfCrm635660680526f()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetParentUfCrm635660680526f()
	 * @method bool hasParentUfCrm635660680526f()
	 * @method bool isParentUfCrm635660680526fFilled()
	 * @method bool isParentUfCrm635660680526fChanged()
	 * @method \Bitrix\Crm\Company fillParentUfCrm635660680526f()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUtm setUfCrm63566068314d7(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $ufCrm63566068314d7)
	 * @method bool hasUfCrm63566068314d7()
	 * @method bool isUfCrm63566068314d7Filled()
	 * @method bool isUfCrm63566068314d7Changed()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm63566068314d7()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetUfCrm63566068314d7()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm63566068314d7()
	 * @method \Bitrix\Crm\Company getParentUfCrm63566068314d7()
	 * @method \Bitrix\Crm\Company remindActualParentUfCrm63566068314d7()
	 * @method \Bitrix\Crm\Company requireParentUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUtm setParentUfCrm63566068314d7(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUtm resetParentUfCrm63566068314d7()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetParentUfCrm63566068314d7()
	 * @method bool hasParentUfCrm63566068314d7()
	 * @method bool isParentUfCrm63566068314d7Filled()
	 * @method bool isParentUfCrm63566068314d7Changed()
	 * @method \Bitrix\Crm\Company fillParentUfCrm63566068314d7()
	 * @method \int getUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUtm setUfCrm635660684bfb2(\int|\Bitrix\Main\DB\SqlExpression $ufCrm635660684bfb2)
	 * @method bool hasUfCrm635660684bfb2()
	 * @method bool isUfCrm635660684bfb2Filled()
	 * @method bool isUfCrm635660684bfb2Changed()
	 * @method \int remindActualUfCrm635660684bfb2()
	 * @method \int requireUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetUfCrm635660684bfb2()
	 * @method \int fillUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\Company getParentUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\Company remindActualParentUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\Company requireParentUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUtm setParentUfCrm635660684bfb2(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUtm resetParentUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetParentUfCrm635660684bfb2()
	 * @method bool hasParentUfCrm635660684bfb2()
	 * @method bool isParentUfCrm635660684bfb2Filled()
	 * @method bool isParentUfCrm635660684bfb2Changed()
	 * @method \Bitrix\Crm\Company fillParentUfCrm635660684bfb2()
	 * @method \string getUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUtm setUfCrm635660685f1cf(\string|\Bitrix\Main\DB\SqlExpression $ufCrm635660685f1cf)
	 * @method bool hasUfCrm635660685f1cf()
	 * @method bool isUfCrm635660685f1cfFilled()
	 * @method bool isUfCrm635660685f1cfChanged()
	 * @method \string remindActualUfCrm635660685f1cf()
	 * @method \string requireUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetUfCrm635660685f1cf()
	 * @method \string fillUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\Company getParentUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\Company remindActualParentUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\Company requireParentUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUtm setParentUfCrm635660685f1cf(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUtm resetParentUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetParentUfCrm635660685f1cf()
	 * @method bool hasParentUfCrm635660685f1cf()
	 * @method bool isParentUfCrm635660685f1cfFilled()
	 * @method bool isParentUfCrm635660685f1cfChanged()
	 * @method \Bitrix\Crm\Company fillParentUfCrm635660685f1cf()
	 * @method \float getUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUtm setUfCrm6356606862c37(\float|\Bitrix\Main\DB\SqlExpression $ufCrm6356606862c37)
	 * @method bool hasUfCrm6356606862c37()
	 * @method bool isUfCrm6356606862c37Filled()
	 * @method bool isUfCrm6356606862c37Changed()
	 * @method \float remindActualUfCrm6356606862c37()
	 * @method \float requireUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUtm resetUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetUfCrm6356606862c37()
	 * @method \float fillUfCrm6356606862c37()
	 * @method \Bitrix\Crm\Company getParentUfCrm6356606862c37()
	 * @method \Bitrix\Crm\Company remindActualParentUfCrm6356606862c37()
	 * @method \Bitrix\Crm\Company requireParentUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUtm setParentUfCrm6356606862c37(\Bitrix\Crm\Company $object)
	 * @method \Bitrix\Crm\EO_CompanyUtm resetParentUfCrm6356606862c37()
	 * @method \Bitrix\Crm\EO_CompanyUtm unsetParentUfCrm6356606862c37()
	 * @method bool hasParentUfCrm6356606862c37()
	 * @method bool isParentUfCrm6356606862c37Filled()
	 * @method bool isParentUfCrm6356606862c37Changed()
	 * @method \Bitrix\Crm\Company fillParentUfCrm6356606862c37()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Crm\EO_CompanyUtm set($fieldName, $value)
	 * @method \Bitrix\Crm\EO_CompanyUtm reset($fieldName)
	 * @method \Bitrix\Crm\EO_CompanyUtm unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Crm\EO_CompanyUtm wakeUp($data)
	 */
	class EO_CompanyUtm {
		/* @var \Bitrix\Crm\CompanyUtmTable */
		static public $dataClass = '\Bitrix\Crm\CompanyUtmTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_CompanyUtm_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getValueIdList()
	 * @method \Bitrix\Crm\Company[] getParentList()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection getParentCollection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParent()
	 * @method \int[] getFieldIdList()
	 * @method \int[] fillFieldId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 * @method \int[] getValueIntList()
	 * @method \int[] fillValueInt()
	 * @method \float[] getValueDoubleList()
	 * @method \float[] fillValueDouble()
	 * @method \Bitrix\Main\Type\DateTime[] getValueDateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillValueDate()
	 * @method \int[] getUfCrm635660680526fList()
	 * @method \int[] fillUfCrm635660680526f()
	 * @method \Bitrix\Crm\Company[] getParentUfCrm635660680526fList()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection getParentUfCrm635660680526fCollection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParentUfCrm635660680526f()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm63566068314d7List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm63566068314d7()
	 * @method \Bitrix\Crm\Company[] getParentUfCrm63566068314d7List()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection getParentUfCrm63566068314d7Collection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParentUfCrm63566068314d7()
	 * @method \int[] getUfCrm635660684bfb2List()
	 * @method \int[] fillUfCrm635660684bfb2()
	 * @method \Bitrix\Crm\Company[] getParentUfCrm635660684bfb2List()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection getParentUfCrm635660684bfb2Collection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParentUfCrm635660684bfb2()
	 * @method \string[] getUfCrm635660685f1cfList()
	 * @method \string[] fillUfCrm635660685f1cf()
	 * @method \Bitrix\Crm\Company[] getParentUfCrm635660685f1cfList()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection getParentUfCrm635660685f1cfCollection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParentUfCrm635660685f1cf()
	 * @method \float[] getUfCrm6356606862c37List()
	 * @method \float[] fillUfCrm6356606862c37()
	 * @method \Bitrix\Crm\Company[] getParentUfCrm6356606862c37List()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection getParentUfCrm6356606862c37Collection()
	 * @method \Bitrix\Crm\EO_Company_Collection fillParentUfCrm6356606862c37()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Crm\EO_CompanyUtm $object)
	 * @method bool has(\Bitrix\Crm\EO_CompanyUtm $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Crm\EO_CompanyUtm getByPrimary($primary)
	 * @method \Bitrix\Crm\EO_CompanyUtm[] getAll()
	 * @method bool remove(\Bitrix\Crm\EO_CompanyUtm $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Crm\EO_CompanyUtm_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Crm\EO_CompanyUtm current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_CompanyUtm_Collection merge(?EO_CompanyUtm_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_CompanyUtm_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\CompanyUtmTable */
		static public $dataClass = '\Bitrix\Crm\CompanyUtmTable';
	}
}
namespace Bitrix\Crm {
	/**
	 * @method static EO_CompanyUtm_Query query()
	 * @method static EO_CompanyUtm_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_CompanyUtm_Result getById($id)
	 * @method static EO_CompanyUtm_Result getList(array $parameters = [])
	 * @method static EO_CompanyUtm_Entity getEntity()
	 * @method static \Bitrix\Crm\EO_CompanyUtm createObject($setDefaultValues = true)
	 * @method static \Bitrix\Crm\EO_CompanyUtm_Collection createCollection()
	 * @method static \Bitrix\Crm\EO_CompanyUtm wakeUpObject($row)
	 * @method static \Bitrix\Crm\EO_CompanyUtm_Collection wakeUpCollection($rows)
	 */
	class CompanyUtmTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_CompanyUtm_Result exec()
	 * @method \Bitrix\Crm\EO_CompanyUtm fetchObject()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_CompanyUtm_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Crm\EO_CompanyUtm fetchObject()
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection fetchCollection()
	 */
	class EO_CompanyUtm_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Crm\EO_CompanyUtm createObject($setDefaultValues = true)
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection createCollection()
	 * @method \Bitrix\Crm\EO_CompanyUtm wakeUpObject($row)
	 * @method \Bitrix\Crm\EO_CompanyUtm_Collection wakeUpCollection($rows)
	 */
	class EO_CompanyUtm_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Integration\Report\Internals\TaskTable */
namespace Bitrix\Tasks\Integration\Report\Internals {
	/**
	 * TaskObject
	 * @see \Bitrix\Tasks\Integration\Report\Internals\TaskTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfCrmTask()
	 * @method \string remindActualUfCrmTask()
	 * @method \string requireUfCrmTask()
	 * @method bool hasUfCrmTask()
	 * @method bool isUfCrmTaskFilled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfCrmTask()
	 * @method \string fillUfCrmTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfCrmTask(\string[] $ufCrmTask)
	 * @method bool isUfCrmTaskChanged()
	 * @method \string getUfTaskWebdavFiles()
	 * @method \string remindActualUfTaskWebdavFiles()
	 * @method \string requireUfTaskWebdavFiles()
	 * @method bool hasUfTaskWebdavFiles()
	 * @method bool isUfTaskWebdavFilesFilled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfTaskWebdavFiles()
	 * @method \string fillUfTaskWebdavFiles()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfTaskWebdavFiles(\string[] $ufTaskWebdavFiles)
	 * @method bool isUfTaskWebdavFilesChanged()
	 * @method \int getUfMailMessage()
	 * @method \int remindActualUfMailMessage()
	 * @method \int requireUfMailMessage()
	 * @method bool hasUfMailMessage()
	 * @method bool isUfMailMessageFilled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfMailMessage()
	 * @method \int fillUfMailMessage()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfMailMessage(\int $ufMailMessage)
	 * @method bool isUfMailMessageChanged()
	 * @method \string getUfAuto802542687301()
	 * @method \string remindActualUfAuto802542687301()
	 * @method \string requireUfAuto802542687301()
	 * @method bool hasUfAuto802542687301()
	 * @method bool isUfAuto802542687301Filled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfAuto802542687301()
	 * @method \string fillUfAuto802542687301()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfAuto802542687301(\string $ufAuto802542687301)
	 * @method bool isUfAuto802542687301Changed()
	 * @method \float getUfAuto824972214302()
	 * @method \float remindActualUfAuto824972214302()
	 * @method \float requireUfAuto824972214302()
	 * @method bool hasUfAuto824972214302()
	 * @method bool isUfAuto824972214302Filled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfAuto824972214302()
	 * @method \float fillUfAuto824972214302()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfAuto824972214302(\float $ufAuto824972214302)
	 * @method bool isUfAuto824972214302Changed()
	 */
	class EO_Task {
		/* @var \Bitrix\Tasks\Integration\Report\Internals\TaskTable */
		static public $dataClass = '\Bitrix\Tasks\Integration\Report\Internals\TaskTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Integration\Report\Internals {
	/**
	 * EO_Task_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfCrmTaskList()
	 * @method \string[] fillUfCrmTask()
	 * @method \string[] getUfTaskWebdavFilesList()
	 * @method \string[] fillUfTaskWebdavFiles()
	 * @method \int[] getUfMailMessageList()
	 * @method \int[] fillUfMailMessage()
	 * @method \string[] getUfAuto802542687301List()
	 * @method \string[] fillUfAuto802542687301()
	 * @method \float[] getUfAuto824972214302List()
	 * @method \float[] fillUfAuto824972214302()
	 */
	class EO_Task_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Integration\Report\Internals\TaskTable */
		static public $dataClass = '\Bitrix\Tasks\Integration\Report\Internals\TaskTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\TaskTable */
namespace Bitrix\Tasks\Internals {
	/**
	 * TaskObject
	 * @see \Bitrix\Tasks\Internals\TaskTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfCrmTask()
	 * @method \string remindActualUfCrmTask()
	 * @method \string requireUfCrmTask()
	 * @method bool hasUfCrmTask()
	 * @method bool isUfCrmTaskFilled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfCrmTask()
	 * @method \string fillUfCrmTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfCrmTask(\string[] $ufCrmTask)
	 * @method bool isUfCrmTaskChanged()
	 * @method \string getUfTaskWebdavFiles()
	 * @method \string remindActualUfTaskWebdavFiles()
	 * @method \string requireUfTaskWebdavFiles()
	 * @method bool hasUfTaskWebdavFiles()
	 * @method bool isUfTaskWebdavFilesFilled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfTaskWebdavFiles()
	 * @method \string fillUfTaskWebdavFiles()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfTaskWebdavFiles(\string[] $ufTaskWebdavFiles)
	 * @method bool isUfTaskWebdavFilesChanged()
	 * @method \int getUfMailMessage()
	 * @method \int remindActualUfMailMessage()
	 * @method \int requireUfMailMessage()
	 * @method bool hasUfMailMessage()
	 * @method bool isUfMailMessageFilled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfMailMessage()
	 * @method \int fillUfMailMessage()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfMailMessage(\int $ufMailMessage)
	 * @method bool isUfMailMessageChanged()
	 * @method \string getUfAuto802542687301()
	 * @method \string remindActualUfAuto802542687301()
	 * @method \string requireUfAuto802542687301()
	 * @method bool hasUfAuto802542687301()
	 * @method bool isUfAuto802542687301Filled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfAuto802542687301()
	 * @method \string fillUfAuto802542687301()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfAuto802542687301(\string $ufAuto802542687301)
	 * @method bool isUfAuto802542687301Changed()
	 * @method \float getUfAuto824972214302()
	 * @method \float remindActualUfAuto824972214302()
	 * @method \float requireUfAuto824972214302()
	 * @method bool hasUfAuto824972214302()
	 * @method bool isUfAuto824972214302Filled()
	 * @method \Bitrix\Tasks\Internals\TaskObject unsetUfAuto824972214302()
	 * @method \float fillUfAuto824972214302()
	 * @method \Bitrix\Tasks\Internals\TaskObject setUfAuto824972214302(\float $ufAuto824972214302)
	 * @method bool isUfAuto824972214302Changed()
	 */
	class EO_Task {
		/* @var \Bitrix\Tasks\Internals\TaskTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\TaskTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals {
	/**
	 * EO_Task_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfCrmTaskList()
	 * @method \string[] fillUfCrmTask()
	 * @method \string[] getUfTaskWebdavFilesList()
	 * @method \string[] fillUfTaskWebdavFiles()
	 * @method \int[] getUfMailMessageList()
	 * @method \int[] fillUfMailMessage()
	 * @method \string[] getUfAuto802542687301List()
	 * @method \string[] fillUfAuto802542687301()
	 * @method \float[] getUfAuto824972214302List()
	 * @method \float[] fillUfAuto824972214302()
	 */
	class EO_Task_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\TaskTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\TaskTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\LabelTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Label
	 * @see \Bitrix\Tasks\Internals\Task\LabelTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \int remindActualUserId()
	 * @method \int requireUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetUserId()
	 * @method \int fillUserId()
	 * @method \string getName()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetName()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetName()
	 * @method \string fillName()
	 * @method \int getGroupId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setGroupId(\int|\Bitrix\Main\DB\SqlExpression $groupId)
	 * @method bool hasGroupId()
	 * @method bool isGroupIdFilled()
	 * @method bool isGroupIdChanged()
	 * @method \int remindActualGroupId()
	 * @method \int requireGroupId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetGroupId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetGroupId()
	 * @method \int fillGroupId()
	 * @method \Bitrix\Main\EO_User getUser()
	 * @method \Bitrix\Main\EO_User remindActualUser()
	 * @method \Bitrix\Main\EO_User requireUser()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetUser()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Main\EO_User fillUser()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup getGroup()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup remindActualGroup()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup requireGroup()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setGroup(\Bitrix\Socialnetwork\EO_Workgroup $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetGroup()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetGroup()
	 * @method bool hasGroup()
	 * @method bool isGroupFilled()
	 * @method bool isGroupChanged()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup fillGroup()
	 * @method \Bitrix\Tasks\Internals\Task\EO_TaskTag getTaskTag()
	 * @method \Bitrix\Tasks\Internals\Task\EO_TaskTag remindActualTaskTag()
	 * @method \Bitrix\Tasks\Internals\Task\EO_TaskTag requireTaskTag()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label setTaskTag(\Bitrix\Tasks\Internals\Task\EO_TaskTag $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetTaskTag()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetTaskTag()
	 * @method bool hasTaskTag()
	 * @method bool isTaskTagFilled()
	 * @method bool isTaskTagChanged()
	 * @method \Bitrix\Tasks\Internals\Task\EO_TaskTag fillTaskTag()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection getTasks()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection requireTasks()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTasks()
	 * @method bool hasTasks()
	 * @method bool isTasksFilled()
	 * @method bool isTasksChanged()
	 * @method void addToTasks(\Bitrix\Tasks\Internals\TaskObject $task)
	 * @method void removeFromTasks(\Bitrix\Tasks\Internals\TaskObject $task)
	 * @method void removeAllTasks()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label resetTasks()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unsetTasks()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Label wakeUp($data)
	 */
	class EO_Label {
		/* @var \Bitrix\Tasks\Internals\Task\LabelTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\LabelTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * TagCollection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getUserIdList()
	 * @method \int[] fillUserId()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getGroupIdList()
	 * @method \int[] fillGroupId()
	 * @method \Bitrix\Main\EO_User[] getUserList()
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection getUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillUser()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup[] getGroupList()
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection getGroupCollection()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup_Collection fillGroup()
	 * @method \Bitrix\Tasks\Internals\Task\EO_TaskTag[] getTaskTagList()
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection getTaskTagCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_TaskTag_Collection fillTaskTag()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection[] getTasksList()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection getTasksCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTasks()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\EO_Label $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\EO_Label $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\EO_Label $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\TagCollection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method TagCollection merge(?TagCollection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Label_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\LabelTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\LabelTable';
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * @method static EO_Label_Query query()
	 * @method static EO_Label_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Label_Result getById($id)
	 * @method static EO_Label_Result getList(array $parameters = [])
	 * @method static EO_Label_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Label createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\TagCollection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Label wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\TagCollection wakeUpCollection($rows)
	 */
	class LabelTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Label_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Label_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection fetchCollection()
	 */
	class EO_Label_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Label wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\TagCollection wakeUpCollection($rows)
	 */
	class EO_Label_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\MemberTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * MemberObject
	 * @see \Bitrix\Tasks\Internals\Task\MemberTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setTaskId(\int|\Bitrix\Main\DB\SqlExpression $taskId)
	 * @method bool hasTaskId()
	 * @method bool isTaskIdFilled()
	 * @method bool isTaskIdChanged()
	 * @method \int getUserId()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \string getType()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setType(\string|\Bitrix\Main\DB\SqlExpression $type)
	 * @method bool hasType()
	 * @method bool isTypeFilled()
	 * @method bool isTypeChanged()
	 * @method \Bitrix\Main\EO_User getUser()
	 * @method \Bitrix\Main\EO_User remindActualUser()
	 * @method \Bitrix\Main\EO_User requireUser()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject resetUser()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Main\EO_User fillUser()
	 * @method \Bitrix\Tasks\Internals\TaskObject getTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireTask()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setTask(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject resetTask()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject unsetTask()
	 * @method bool hasTask()
	 * @method bool isTaskFilled()
	 * @method bool isTaskChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject getTaskFollowed()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualTaskFollowed()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireTaskFollowed()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setTaskFollowed(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject resetTaskFollowed()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject unsetTaskFollowed()
	 * @method bool hasTaskFollowed()
	 * @method bool isTaskFollowedFilled()
	 * @method bool isTaskFollowedChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillTaskFollowed()
	 * @method \Bitrix\Tasks\Internals\TaskObject getTaskCoworked()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualTaskCoworked()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireTaskCoworked()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject setTaskCoworked(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject resetTaskCoworked()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject unsetTaskCoworked()
	 * @method bool hasTaskCoworked()
	 * @method bool isTaskCoworkedFilled()
	 * @method bool isTaskCoworkedChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillTaskCoworked()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\MemberObject wakeUp($data)
	 */
	class EO_Member {
		/* @var \Bitrix\Tasks\Internals\Task\MemberTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\MemberTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Member_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getTaskIdList()
	 * @method \int[] getUserIdList()
	 * @method \string[] getTypeList()
	 * @method \Bitrix\Main\EO_User[] getUserList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection getUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillUser()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getTaskList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection getTaskCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getTaskFollowedList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection getTaskFollowedCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTaskFollowed()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getTaskCoworkedList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection getTaskCoworkedCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTaskCoworked()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\MemberObject $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\MemberObject $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\MemberObject $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Member_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Member_Collection merge(?EO_Member_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Member_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\MemberTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\MemberTable';
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * @method static EO_Member_Query query()
	 * @method static EO_Member_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Member_Result getById($id)
	 * @method static EO_Member_Result getList(array $parameters = [])
	 * @method static EO_Member_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\MemberObject createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Member_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\MemberObject wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Member_Collection wakeUpCollection($rows)
	 */
	class MemberTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Member_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Member_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection fetchCollection()
	 */
	class EO_Member_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\MemberObject wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Member_Collection wakeUpCollection($rows)
	 */
	class EO_Member_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\ElapsedTimeTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_ElapsedTime
	 * @see \Bitrix\Tasks\Internals\Task\ElapsedTimeTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getCreatedDate()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setCreatedDate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $createdDate)
	 * @method bool hasCreatedDate()
	 * @method bool isCreatedDateFilled()
	 * @method bool isCreatedDateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualCreatedDate()
	 * @method \Bitrix\Main\Type\DateTime requireCreatedDate()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetCreatedDate()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetCreatedDate()
	 * @method \Bitrix\Main\Type\DateTime fillCreatedDate()
	 * @method \Bitrix\Main\Type\DateTime getDateStart()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setDateStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateStart)
	 * @method bool hasDateStart()
	 * @method bool isDateStartFilled()
	 * @method bool isDateStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateStart()
	 * @method \Bitrix\Main\Type\DateTime requireDateStart()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetDateStart()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetDateStart()
	 * @method \Bitrix\Main\Type\DateTime fillDateStart()
	 * @method \Bitrix\Main\Type\DateTime getDateStop()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setDateStop(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateStop)
	 * @method bool hasDateStop()
	 * @method bool isDateStopFilled()
	 * @method bool isDateStopChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateStop()
	 * @method \Bitrix\Main\Type\DateTime requireDateStop()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetDateStop()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetDateStop()
	 * @method \Bitrix\Main\Type\DateTime fillDateStop()
	 * @method \int getUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \int remindActualUserId()
	 * @method \int requireUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetUserId()
	 * @method \int fillUserId()
	 * @method \int getTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setTaskId(\int|\Bitrix\Main\DB\SqlExpression $taskId)
	 * @method bool hasTaskId()
	 * @method bool isTaskIdFilled()
	 * @method bool isTaskIdChanged()
	 * @method \int remindActualTaskId()
	 * @method \int requireTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetTaskId()
	 * @method \int fillTaskId()
	 * @method \int getMinutes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setMinutes(\int|\Bitrix\Main\DB\SqlExpression $minutes)
	 * @method bool hasMinutes()
	 * @method bool isMinutesFilled()
	 * @method bool isMinutesChanged()
	 * @method \int remindActualMinutes()
	 * @method \int requireMinutes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetMinutes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetMinutes()
	 * @method \int fillMinutes()
	 * @method \int getSeconds()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setSeconds(\int|\Bitrix\Main\DB\SqlExpression $seconds)
	 * @method bool hasSeconds()
	 * @method bool isSecondsFilled()
	 * @method bool isSecondsChanged()
	 * @method \int remindActualSeconds()
	 * @method \int requireSeconds()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetSeconds()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetSeconds()
	 * @method \int fillSeconds()
	 * @method \int getSource()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setSource(\int|\Bitrix\Main\DB\SqlExpression $source)
	 * @method bool hasSource()
	 * @method bool isSourceFilled()
	 * @method bool isSourceChanged()
	 * @method \int remindActualSource()
	 * @method \int requireSource()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetSource()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetSource()
	 * @method \int fillSource()
	 * @method \string getCommentText()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setCommentText(\string|\Bitrix\Main\DB\SqlExpression $commentText)
	 * @method bool hasCommentText()
	 * @method bool isCommentTextFilled()
	 * @method bool isCommentTextChanged()
	 * @method \string remindActualCommentText()
	 * @method \string requireCommentText()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetCommentText()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetCommentText()
	 * @method \string fillCommentText()
	 * @method \Bitrix\Main\EO_User getUser()
	 * @method \Bitrix\Main\EO_User remindActualUser()
	 * @method \Bitrix\Main\EO_User requireUser()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetUser()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Main\EO_User fillUser()
	 * @method \Bitrix\Tasks\Internals\TaskObject getTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireTask()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime setTask(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime resetTask()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unsetTask()
	 * @method bool hasTask()
	 * @method bool isTaskFilled()
	 * @method bool isTaskChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillTask()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ElapsedTime wakeUp($data)
	 */
	class EO_ElapsedTime {
		/* @var \Bitrix\Tasks\Internals\Task\ElapsedTimeTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\ElapsedTimeTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_ElapsedTime_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getCreatedDateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillCreatedDate()
	 * @method \Bitrix\Main\Type\DateTime[] getDateStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateStart()
	 * @method \Bitrix\Main\Type\DateTime[] getDateStopList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateStop()
	 * @method \int[] getUserIdList()
	 * @method \int[] fillUserId()
	 * @method \int[] getTaskIdList()
	 * @method \int[] fillTaskId()
	 * @method \int[] getMinutesList()
	 * @method \int[] fillMinutes()
	 * @method \int[] getSecondsList()
	 * @method \int[] fillSeconds()
	 * @method \int[] getSourceList()
	 * @method \int[] fillSource()
	 * @method \string[] getCommentTextList()
	 * @method \string[] fillCommentText()
	 * @method \Bitrix\Main\EO_User[] getUserList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection getUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillUser()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getTaskList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection getTaskCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTask()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\EO_ElapsedTime $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\EO_ElapsedTime $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\EO_ElapsedTime $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElapsedTime_Collection merge(?EO_ElapsedTime_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElapsedTime_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\ElapsedTimeTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\ElapsedTimeTable';
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * @method static EO_ElapsedTime_Query query()
	 * @method static EO_ElapsedTime_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElapsedTime_Result getById($id)
	 * @method static EO_ElapsedTime_Result getList(array $parameters = [])
	 * @method static EO_ElapsedTime_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ElapsedTime createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ElapsedTime wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection wakeUpCollection($rows)
	 */
	class ElapsedTimeTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElapsedTime_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElapsedTime_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection fetchCollection()
	 */
	class EO_ElapsedTime_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ElapsedTime_Collection wakeUpCollection($rows)
	 */
	class EO_ElapsedTime_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\SortingTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Sorting
	 * @see \Bitrix\Tasks\Internals\Task\SortingTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setTaskId(\int|\Bitrix\Main\DB\SqlExpression $taskId)
	 * @method bool hasTaskId()
	 * @method bool isTaskIdFilled()
	 * @method bool isTaskIdChanged()
	 * @method \int remindActualTaskId()
	 * @method \int requireTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting resetTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unsetTaskId()
	 * @method \int fillTaskId()
	 * @method \float getSort()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setSort(\float|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \float remindActualSort()
	 * @method \float requireSort()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting resetSort()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unsetSort()
	 * @method \float fillSort()
	 * @method \int getUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \int remindActualUserId()
	 * @method \int requireUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting resetUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unsetUserId()
	 * @method \int fillUserId()
	 * @method \int getGroupId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setGroupId(\int|\Bitrix\Main\DB\SqlExpression $groupId)
	 * @method bool hasGroupId()
	 * @method bool isGroupIdFilled()
	 * @method bool isGroupIdChanged()
	 * @method \int remindActualGroupId()
	 * @method \int requireGroupId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting resetGroupId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unsetGroupId()
	 * @method \int fillGroupId()
	 * @method \int getPrevTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setPrevTaskId(\int|\Bitrix\Main\DB\SqlExpression $prevTaskId)
	 * @method bool hasPrevTaskId()
	 * @method bool isPrevTaskIdFilled()
	 * @method bool isPrevTaskIdChanged()
	 * @method \int remindActualPrevTaskId()
	 * @method \int requirePrevTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting resetPrevTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unsetPrevTaskId()
	 * @method \int fillPrevTaskId()
	 * @method \int getNextTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting setNextTaskId(\int|\Bitrix\Main\DB\SqlExpression $nextTaskId)
	 * @method bool hasNextTaskId()
	 * @method bool isNextTaskIdFilled()
	 * @method bool isNextTaskIdChanged()
	 * @method \int remindActualNextTaskId()
	 * @method \int requireNextTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting resetNextTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unsetNextTaskId()
	 * @method \int fillNextTaskId()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Sorting wakeUp($data)
	 */
	class EO_Sorting {
		/* @var \Bitrix\Tasks\Internals\Task\SortingTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\SortingTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Sorting_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getTaskIdList()
	 * @method \int[] fillTaskId()
	 * @method \float[] getSortList()
	 * @method \float[] fillSort()
	 * @method \int[] getUserIdList()
	 * @method \int[] fillUserId()
	 * @method \int[] getGroupIdList()
	 * @method \int[] fillGroupId()
	 * @method \int[] getPrevTaskIdList()
	 * @method \int[] fillPrevTaskId()
	 * @method \int[] getNextTaskIdList()
	 * @method \int[] fillNextTaskId()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\EO_Sorting $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\EO_Sorting $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\EO_Sorting $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Sorting_Collection merge(?EO_Sorting_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Sorting_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\SortingTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\SortingTable';
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * @method static EO_Sorting_Query query()
	 * @method static EO_Sorting_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Sorting_Result getById($id)
	 * @method static EO_Sorting_Result getList(array $parameters = [])
	 * @method static EO_Sorting_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Sorting createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Sorting wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection wakeUpCollection($rows)
	 */
	class SortingTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Sorting_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Sorting_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection fetchCollection()
	 */
	class EO_Sorting_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Sorting_Collection wakeUpCollection($rows)
	 */
	class EO_Sorting_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\FavoriteTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Favorite
	 * @see \Bitrix\Tasks\Internals\Task\FavoriteTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite setTaskId(\int|\Bitrix\Main\DB\SqlExpression $taskId)
	 * @method bool hasTaskId()
	 * @method bool isTaskIdFilled()
	 * @method bool isTaskIdChanged()
	 * @method \int getUserId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite setUserId(\int|\Bitrix\Main\DB\SqlExpression $userId)
	 * @method bool hasUserId()
	 * @method bool isUserIdFilled()
	 * @method bool isUserIdChanged()
	 * @method \Bitrix\Main\EO_User getUser()
	 * @method \Bitrix\Main\EO_User remindActualUser()
	 * @method \Bitrix\Main\EO_User requireUser()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite setUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite resetUser()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Main\EO_User fillUser()
	 * @method \Bitrix\Tasks\Internals\TaskObject getTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireTask()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite setTask(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite resetTask()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite unsetTask()
	 * @method bool hasTask()
	 * @method bool isTaskFilled()
	 * @method bool isTaskChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillTask()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Favorite wakeUp($data)
	 */
	class EO_Favorite {
		/* @var \Bitrix\Tasks\Internals\Task\FavoriteTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\FavoriteTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Favorite_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getTaskIdList()
	 * @method \int[] getUserIdList()
	 * @method \Bitrix\Main\EO_User[] getUserList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection getUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillUser()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getTaskList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection getTaskCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTask()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\EO_Favorite $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\EO_Favorite $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\EO_Favorite $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Favorite_Collection merge(?EO_Favorite_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Favorite_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\FavoriteTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\FavoriteTable';
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * @method static EO_Favorite_Query query()
	 * @method static EO_Favorite_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Favorite_Result getById($id)
	 * @method static EO_Favorite_Result getList(array $parameters = [])
	 * @method static EO_Favorite_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Favorite createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Favorite wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection wakeUpCollection($rows)
	 */
	class FavoriteTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Favorite_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Favorite_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection fetchCollection()
	 */
	class EO_Favorite_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\EO_Favorite_Collection wakeUpCollection($rows)
	 */
	class EO_Favorite_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\ProjectDependenceTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_ProjectDependence
	 * @see \Bitrix\Tasks\Internals\Task\ProjectDependenceTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getTaskId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setTaskId(\int|\Bitrix\Main\DB\SqlExpression $taskId)
	 * @method bool hasTaskId()
	 * @method bool isTaskIdFilled()
	 * @method bool isTaskIdChanged()
	 * @method \int getDependsOnId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setDependsOnId(\int|\Bitrix\Main\DB\SqlExpression $dependsOnId)
	 * @method bool hasDependsOnId()
	 * @method bool isDependsOnIdFilled()
	 * @method bool isDependsOnIdChanged()
	 * @method \int getType()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setType(\int|\Bitrix\Main\DB\SqlExpression $type)
	 * @method bool hasType()
	 * @method bool isTypeFilled()
	 * @method bool isTypeChanged()
	 * @method \int remindActualType()
	 * @method \int requireType()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetType()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetType()
	 * @method \int fillType()
	 * @method \int getCreatorId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setCreatorId(\int|\Bitrix\Main\DB\SqlExpression $creatorId)
	 * @method bool hasCreatorId()
	 * @method bool isCreatorIdFilled()
	 * @method bool isCreatorIdChanged()
	 * @method \int remindActualCreatorId()
	 * @method \int requireCreatorId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetCreatorId()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetCreatorId()
	 * @method \int fillCreatorId()
	 * @method \Bitrix\Tasks\Internals\TaskObject getTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireTask()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setTask(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetTask()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetTask()
	 * @method bool hasTask()
	 * @method bool isTaskFilled()
	 * @method bool isTaskChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject getDependsOn()
	 * @method \Bitrix\Tasks\Internals\TaskObject remindActualDependsOn()
	 * @method \Bitrix\Tasks\Internals\TaskObject requireDependsOn()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setDependsOn(\Bitrix\Tasks\Internals\TaskObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetDependsOn()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetDependsOn()
	 * @method bool hasDependsOn()
	 * @method bool isDependsOnFilled()
	 * @method bool isDependsOnChanged()
	 * @method \Bitrix\Tasks\Internals\TaskObject fillDependsOn()
	 * @method \boolean getDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setDirect(\boolean|\Bitrix\Main\DB\SqlExpression $direct)
	 * @method bool hasDirect()
	 * @method bool isDirectFilled()
	 * @method bool isDirectChanged()
	 * @method \boolean remindActualDirect()
	 * @method \boolean requireDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetDirect()
	 * @method \boolean fillDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence getParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence remindActualParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence requireParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setParentNode(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetParentNode()
	 * @method bool hasParentNode()
	 * @method bool isParentNodeFilled()
	 * @method bool isParentNodeChanged()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence fillParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence getParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence remindActualParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence requireParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setParentNodes(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetParentNodes()
	 * @method bool hasParentNodes()
	 * @method bool isParentNodesFilled()
	 * @method bool isParentNodesChanged()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence fillParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence getChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence remindActualChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence requireChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setChildNodes(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetChildNodes()
	 * @method bool hasChildNodes()
	 * @method bool isChildNodesFilled()
	 * @method bool isChildNodesChanged()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence fillChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence getChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence remindActualChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence requireChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setChildNodesDirect(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetChildNodesDirect()
	 * @method bool hasChildNodesDirect()
	 * @method bool isChildNodesDirectFilled()
	 * @method bool isChildNodesDirectChanged()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence fillChildNodesDirect()
	 * @method \int getMpcity()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence setMpcity(\int|\Bitrix\Main\DB\SqlExpression $mpcity)
	 * @method bool hasMpcity()
	 * @method bool isMpcityFilled()
	 * @method bool isMpcityChanged()
	 * @method \int remindActualMpcity()
	 * @method \int requireMpcity()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence resetMpcity()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unsetMpcity()
	 * @method \int fillMpcity()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ProjectDependence wakeUp($data)
	 */
	class EO_ProjectDependence {
		/* @var \Bitrix\Tasks\Internals\Task\ProjectDependenceTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\ProjectDependenceTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_ProjectDependence_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getTaskIdList()
	 * @method \int[] getDependsOnIdList()
	 * @method \int[] getTypeList()
	 * @method \int[] fillType()
	 * @method \int[] getCreatorIdList()
	 * @method \int[] fillCreatorId()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getTaskList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection getTaskCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillTask()
	 * @method \Bitrix\Tasks\Internals\TaskObject[] getDependsOnList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection getDependsOnCollection()
	 * @method \Bitrix\Tasks\Internals\EO_Task_Collection fillDependsOn()
	 * @method \boolean[] getDirectList()
	 * @method \boolean[] fillDirect()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence[] getParentNodeList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection getParentNodeCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection fillParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence[] getParentNodesList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection getParentNodesCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection fillParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence[] getChildNodesList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection getChildNodesCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection fillChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence[] getChildNodesDirectList()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection getChildNodesDirectCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection fillChildNodesDirect()
	 * @method \int[] getMpcityList()
	 * @method \int[] fillMpcity()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\EO_ProjectDependence $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ProjectDependence_Collection merge(?EO_ProjectDependence_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ProjectDependence_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\ProjectDependenceTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\ProjectDependenceTable';
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * @method static EO_ProjectDependence_Query query()
	 * @method static EO_ProjectDependence_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ProjectDependence_Result getById($id)
	 * @method static EO_ProjectDependence_Result getList(array $parameters = [])
	 * @method static EO_ProjectDependence_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ProjectDependence createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ProjectDependence wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection wakeUpCollection($rows)
	 */
	class ProjectDependenceTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ProjectDependence_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ProjectDependence_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection fetchCollection()
	 */
	class EO_ProjectDependence_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\EO_ProjectDependence_Collection wakeUpCollection($rows)
	 */
	class EO_ProjectDependence_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\TemplateTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * TemplateObject
	 * @see \Bitrix\Tasks\Internals\Task\TemplateTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfCrmTask()
	 * @method \string remindActualUfCrmTask()
	 * @method \string requireUfCrmTask()
	 * @method bool hasUfCrmTask()
	 * @method bool isUfCrmTaskFilled()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject unsetUfCrmTask()
	 * @method \string fillUfCrmTask()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject setUfCrmTask(\string[] $ufCrmTask)
	 * @method bool isUfCrmTaskChanged()
	 * @method \string getUfTaskWebdavFiles()
	 * @method \string remindActualUfTaskWebdavFiles()
	 * @method \string requireUfTaskWebdavFiles()
	 * @method bool hasUfTaskWebdavFiles()
	 * @method bool isUfTaskWebdavFilesFilled()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject unsetUfTaskWebdavFiles()
	 * @method \string fillUfTaskWebdavFiles()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject setUfTaskWebdavFiles(\string[] $ufTaskWebdavFiles)
	 * @method bool isUfTaskWebdavFilesChanged()
	 * @method \string getUfAuto802542687301()
	 * @method \string remindActualUfAuto802542687301()
	 * @method \string requireUfAuto802542687301()
	 * @method bool hasUfAuto802542687301()
	 * @method bool isUfAuto802542687301Filled()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject unsetUfAuto802542687301()
	 * @method \string fillUfAuto802542687301()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject setUfAuto802542687301(\string $ufAuto802542687301)
	 * @method bool isUfAuto802542687301Changed()
	 * @method \float getUfAuto824972214302()
	 * @method \float remindActualUfAuto824972214302()
	 * @method \float requireUfAuto824972214302()
	 * @method bool hasUfAuto824972214302()
	 * @method bool isUfAuto824972214302Filled()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject unsetUfAuto824972214302()
	 * @method \float fillUfAuto824972214302()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject setUfAuto824972214302(\float $ufAuto824972214302)
	 * @method bool isUfAuto824972214302Changed()
	 */
	class EO_Template {
		/* @var \Bitrix\Tasks\Internals\Task\TemplateTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\TemplateTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_Template_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfCrmTaskList()
	 * @method \string[] fillUfCrmTask()
	 * @method \string[] getUfTaskWebdavFilesList()
	 * @method \string[] fillUfTaskWebdavFiles()
	 * @method \string[] getUfAuto802542687301List()
	 * @method \string[] fillUfAuto802542687301()
	 * @method \float[] getUfAuto824972214302List()
	 * @method \float[] fillUfAuto824972214302()
	 */
	class EO_Template_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\TemplateTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\TemplateTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\Template\DependenceTable */
namespace Bitrix\Tasks\Internals\Task\Template {
	/**
	 * EO_Dependence
	 * @see \Bitrix\Tasks\Internals\Task\Template\DependenceTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getTemplateId()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setTemplateId(\int|\Bitrix\Main\DB\SqlExpression $templateId)
	 * @method bool hasTemplateId()
	 * @method bool isTemplateIdFilled()
	 * @method bool isTemplateIdChanged()
	 * @method \int getParentTemplateId()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setParentTemplateId(\int|\Bitrix\Main\DB\SqlExpression $parentTemplateId)
	 * @method bool hasParentTemplateId()
	 * @method bool isParentTemplateIdFilled()
	 * @method bool isParentTemplateIdChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject getTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject remindActualTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject requireTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setTemplate(\Bitrix\Tasks\Internals\Task\Template\TemplateObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetTemplate()
	 * @method bool hasTemplate()
	 * @method bool isTemplateFilled()
	 * @method bool isTemplateChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject fillTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject getParentTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject remindActualParentTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject requireParentTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setParentTemplate(\Bitrix\Tasks\Internals\Task\Template\TemplateObject $object)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetParentTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetParentTemplate()
	 * @method bool hasParentTemplate()
	 * @method bool isParentTemplateFilled()
	 * @method bool isParentTemplateChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject fillParentTemplate()
	 * @method \boolean getDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setDirect(\boolean|\Bitrix\Main\DB\SqlExpression $direct)
	 * @method bool hasDirect()
	 * @method bool isDirectFilled()
	 * @method bool isDirectChanged()
	 * @method \boolean remindActualDirect()
	 * @method \boolean requireDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetDirect()
	 * @method \boolean fillDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence getParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence remindActualParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence requireParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setParentNode(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetParentNode()
	 * @method bool hasParentNode()
	 * @method bool isParentNodeFilled()
	 * @method bool isParentNodeChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence fillParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence getParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence remindActualParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence requireParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setParentNodes(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetParentNodes()
	 * @method bool hasParentNodes()
	 * @method bool isParentNodesFilled()
	 * @method bool isParentNodesChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence fillParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence getChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence remindActualChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence requireChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setChildNodes(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetChildNodes()
	 * @method bool hasChildNodes()
	 * @method bool isChildNodesFilled()
	 * @method bool isChildNodesChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence fillChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence getChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence remindActualChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence requireChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence setChildNodesDirect(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence resetChildNodesDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unsetChildNodesDirect()
	 * @method bool hasChildNodesDirect()
	 * @method bool isChildNodesDirectFilled()
	 * @method bool isChildNodesDirectChanged()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence fillChildNodesDirect()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Task\Template\EO_Dependence wakeUp($data)
	 */
	class EO_Dependence {
		/* @var \Bitrix\Tasks\Internals\Task\Template\DependenceTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\Template\DependenceTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task\Template {
	/**
	 * EO_Dependence_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getTemplateIdList()
	 * @method \int[] getParentTemplateIdList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject[] getTemplateList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection getTemplateCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Template_Collection fillTemplate()
	 * @method \Bitrix\Tasks\Internals\Task\Template\TemplateObject[] getParentTemplateList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection getParentTemplateCollection()
	 * @method \Bitrix\Tasks\Internals\Task\EO_Template_Collection fillParentTemplate()
	 * @method \boolean[] getDirectList()
	 * @method \boolean[] fillDirect()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence[] getParentNodeList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection getParentNodeCollection()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection fillParentNode()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence[] getParentNodesList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection getParentNodesCollection()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection fillParentNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence[] getChildNodesList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection getChildNodesCollection()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection fillChildNodes()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence[] getChildNodesDirectList()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection getChildNodesDirectCollection()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection fillChildNodesDirect()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Task\Template\EO_Dependence $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Dependence_Collection merge(?EO_Dependence_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Dependence_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\Template\DependenceTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\Template\DependenceTable';
	}
}
namespace Bitrix\Tasks\Internals\Task\Template {
	/**
	 * @method static EO_Dependence_Query query()
	 * @method static EO_Dependence_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Dependence_Result getById($id)
	 * @method static EO_Dependence_Result getList(array $parameters = [])
	 * @method static EO_Dependence_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Task\Template\EO_Dependence createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Task\Template\EO_Dependence wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection wakeUpCollection($rows)
	 */
	class DependenceTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Dependence_Result exec()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Dependence_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence fetchObject()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection fetchCollection()
	 */
	class EO_Dependence_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_Dependence_Collection wakeUpCollection($rows)
	 */
	class EO_Dependence_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\Template\CheckListTable */
namespace Bitrix\Tasks\Internals\Task\Template {
	/**
	 * EO_CheckList
	 * @see \Bitrix\Tasks\Internals\Task\Template\CheckListTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfChecklistFiles()
	 * @method \string remindActualUfChecklistFiles()
	 * @method \string requireUfChecklistFiles()
	 * @method bool hasUfChecklistFiles()
	 * @method bool isUfChecklistFilesFilled()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_CheckList unsetUfChecklistFiles()
	 * @method \string fillUfChecklistFiles()
	 * @method \Bitrix\Tasks\Internals\Task\Template\EO_CheckList setUfChecklistFiles(\string[] $ufChecklistFiles)
	 * @method bool isUfChecklistFilesChanged()
	 */
	class EO_CheckList {
		/* @var \Bitrix\Tasks\Internals\Task\Template\CheckListTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\Template\CheckListTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task\Template {
	/**
	 * EO_CheckList_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfChecklistFilesList()
	 * @method \string[] fillUfChecklistFiles()
	 */
	class EO_CheckList_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\Template\CheckListTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\Template\CheckListTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Notification\Task\ThrottleTable */
namespace Bitrix\Tasks\Internals\Notification\Task {
	/**
	 * EO_Throttle
	 * @see \Bitrix\Tasks\Internals\Notification\Task\ThrottleTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getTaskId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle setTaskId(\int|\Bitrix\Main\DB\SqlExpression $taskId)
	 * @method bool hasTaskId()
	 * @method bool isTaskIdFilled()
	 * @method bool isTaskIdChanged()
	 * @method \int remindActualTaskId()
	 * @method \int requireTaskId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle resetTaskId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle unsetTaskId()
	 * @method \int fillTaskId()
	 * @method \int getAuthorId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle setAuthorId(\int|\Bitrix\Main\DB\SqlExpression $authorId)
	 * @method bool hasAuthorId()
	 * @method bool isAuthorIdFilled()
	 * @method bool isAuthorIdChanged()
	 * @method \int remindActualAuthorId()
	 * @method \int requireAuthorId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle resetAuthorId()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle unsetAuthorId()
	 * @method \int fillAuthorId()
	 * @method \string getInformAuthor()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle setInformAuthor(\string|\Bitrix\Main\DB\SqlExpression $informAuthor)
	 * @method bool hasInformAuthor()
	 * @method bool isInformAuthorFilled()
	 * @method bool isInformAuthorChanged()
	 * @method \string remindActualInformAuthor()
	 * @method \string requireInformAuthor()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle resetInformAuthor()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle unsetInformAuthor()
	 * @method \string fillInformAuthor()
	 * @method \string getStateOrig()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle setStateOrig(\string|\Bitrix\Main\DB\SqlExpression $stateOrig)
	 * @method bool hasStateOrig()
	 * @method bool isStateOrigFilled()
	 * @method bool isStateOrigChanged()
	 * @method \string remindActualStateOrig()
	 * @method \string requireStateOrig()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle resetStateOrig()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle unsetStateOrig()
	 * @method \string fillStateOrig()
	 * @method \string getStateLast()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle setStateLast(\string|\Bitrix\Main\DB\SqlExpression $stateLast)
	 * @method bool hasStateLast()
	 * @method bool isStateLastFilled()
	 * @method bool isStateLastChanged()
	 * @method \string remindActualStateLast()
	 * @method \string requireStateLast()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle resetStateLast()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle unsetStateLast()
	 * @method \string fillStateLast()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle set($fieldName, $value)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle reset($fieldName)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle wakeUp($data)
	 */
	class EO_Throttle {
		/* @var \Bitrix\Tasks\Internals\Notification\Task\ThrottleTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Notification\Task\ThrottleTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Notification\Task {
	/**
	 * EO_Throttle_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getTaskIdList()
	 * @method \int[] fillTaskId()
	 * @method \int[] getAuthorIdList()
	 * @method \int[] fillAuthorId()
	 * @method \string[] getInformAuthorList()
	 * @method \string[] fillInformAuthor()
	 * @method \string[] getStateOrigList()
	 * @method \string[] fillStateOrig()
	 * @method \string[] getStateLastList()
	 * @method \string[] fillStateLast()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Tasks\Internals\Notification\Task\EO_Throttle $object)
	 * @method bool has(\Bitrix\Tasks\Internals\Notification\Task\EO_Throttle $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle getByPrimary($primary)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle[] getAll()
	 * @method bool remove(\Bitrix\Tasks\Internals\Notification\Task\EO_Throttle $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Throttle_Collection merge(?EO_Throttle_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Throttle_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Notification\Task\ThrottleTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Notification\Task\ThrottleTable';
	}
}
namespace Bitrix\Tasks\Internals\Notification\Task {
	/**
	 * @method static EO_Throttle_Query query()
	 * @method static EO_Throttle_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Throttle_Result getById($id)
	 * @method static EO_Throttle_Result getList(array $parameters = [])
	 * @method static EO_Throttle_Entity getEntity()
	 * @method static \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle createObject($setDefaultValues = true)
	 * @method static \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection createCollection()
	 * @method static \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle wakeUpObject($row)
	 * @method static \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection wakeUpCollection($rows)
	 */
	class ThrottleTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Throttle_Result exec()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle fetchObject()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Throttle_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle fetchObject()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection fetchCollection()
	 */
	class EO_Throttle_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle createObject($setDefaultValues = true)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection createCollection()
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle wakeUpObject($row)
	 * @method \Bitrix\Tasks\Internals\Notification\Task\EO_Throttle_Collection wakeUpCollection($rows)
	 */
	class EO_Throttle_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Timeman\Model\User\UserTable */
namespace Bitrix\Timeman\Model\User {
	/**
	 * User
	 * @see \Bitrix\Timeman\Model\User\UserTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfDepartment()
	 * @method \string remindActualUfDepartment()
	 * @method \string requireUfDepartment()
	 * @method bool hasUfDepartment()
	 * @method bool isUfDepartmentFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfDepartment()
	 * @method \string fillUfDepartment()
	 * @method \Bitrix\Timeman\Model\User\User setUfDepartment(\string[] $ufDepartment)
	 * @method bool isUfDepartmentChanged()
	 * @method \string getUfPhoneInner()
	 * @method \string remindActualUfPhoneInner()
	 * @method \string requireUfPhoneInner()
	 * @method bool hasUfPhoneInner()
	 * @method bool isUfPhoneInnerFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfPhoneInner()
	 * @method \string fillUfPhoneInner()
	 * @method \Bitrix\Timeman\Model\User\User setUfPhoneInner(\string $ufPhoneInner)
	 * @method bool isUfPhoneInnerChanged()
	 * @method \string getUfUserCrmEntity()
	 * @method \string remindActualUfUserCrmEntity()
	 * @method \string requireUfUserCrmEntity()
	 * @method bool hasUfUserCrmEntity()
	 * @method bool isUfUserCrmEntityFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfUserCrmEntity()
	 * @method \string fillUfUserCrmEntity()
	 * @method \Bitrix\Timeman\Model\User\User setUfUserCrmEntity(\string $ufUserCrmEntity)
	 * @method bool isUfUserCrmEntityChanged()
	 * @method \string getUfImSearch()
	 * @method \string remindActualUfImSearch()
	 * @method \string requireUfImSearch()
	 * @method bool hasUfImSearch()
	 * @method bool isUfImSearchFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfImSearch()
	 * @method \string fillUfImSearch()
	 * @method \Bitrix\Timeman\Model\User\User setUfImSearch(\string $ufImSearch)
	 * @method bool isUfImSearchChanged()
	 * @method \string getUfConnectorMd5()
	 * @method \string remindActualUfConnectorMd5()
	 * @method \string requireUfConnectorMd5()
	 * @method bool hasUfConnectorMd5()
	 * @method bool isUfConnectorMd5Filled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfConnectorMd5()
	 * @method \string fillUfConnectorMd5()
	 * @method \Bitrix\Timeman\Model\User\User setUfConnectorMd5(\string $ufConnectorMd5)
	 * @method bool isUfConnectorMd5Changed()
	 * @method \int getUf1c()
	 * @method \int remindActualUf1c()
	 * @method \int requireUf1c()
	 * @method bool hasUf1c()
	 * @method bool isUf1cFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUf1c()
	 * @method \int fillUf1c()
	 * @method \Bitrix\Timeman\Model\User\User setUf1c(\int $uf1c)
	 * @method bool isUf1cChanged()
	 * @method \string getUfInn()
	 * @method \string remindActualUfInn()
	 * @method \string requireUfInn()
	 * @method bool hasUfInn()
	 * @method bool isUfInnFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfInn()
	 * @method \string fillUfInn()
	 * @method \Bitrix\Timeman\Model\User\User setUfInn(\string $ufInn)
	 * @method bool isUfInnChanged()
	 * @method \string getUfDistrict()
	 * @method \string remindActualUfDistrict()
	 * @method \string requireUfDistrict()
	 * @method bool hasUfDistrict()
	 * @method bool isUfDistrictFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfDistrict()
	 * @method \string fillUfDistrict()
	 * @method \Bitrix\Timeman\Model\User\User setUfDistrict(\string $ufDistrict)
	 * @method bool isUfDistrictChanged()
	 * @method \string getUfSkype()
	 * @method \string remindActualUfSkype()
	 * @method \string requireUfSkype()
	 * @method bool hasUfSkype()
	 * @method bool isUfSkypeFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfSkype()
	 * @method \string fillUfSkype()
	 * @method \Bitrix\Timeman\Model\User\User setUfSkype(\string $ufSkype)
	 * @method bool isUfSkypeChanged()
	 * @method \string getUfSkypeLink()
	 * @method \string remindActualUfSkypeLink()
	 * @method \string requireUfSkypeLink()
	 * @method bool hasUfSkypeLink()
	 * @method bool isUfSkypeLinkFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfSkypeLink()
	 * @method \string fillUfSkypeLink()
	 * @method \Bitrix\Timeman\Model\User\User setUfSkypeLink(\string $ufSkypeLink)
	 * @method bool isUfSkypeLinkChanged()
	 * @method \string getUfZoom()
	 * @method \string remindActualUfZoom()
	 * @method \string requireUfZoom()
	 * @method bool hasUfZoom()
	 * @method bool isUfZoomFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfZoom()
	 * @method \string fillUfZoom()
	 * @method \Bitrix\Timeman\Model\User\User setUfZoom(\string $ufZoom)
	 * @method bool isUfZoomChanged()
	 * @method \string getUfTwitter()
	 * @method \string remindActualUfTwitter()
	 * @method \string requireUfTwitter()
	 * @method bool hasUfTwitter()
	 * @method bool isUfTwitterFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTwitter()
	 * @method \string fillUfTwitter()
	 * @method \Bitrix\Timeman\Model\User\User setUfTwitter(\string $ufTwitter)
	 * @method bool isUfTwitterChanged()
	 * @method \string getUfFacebook()
	 * @method \string remindActualUfFacebook()
	 * @method \string requireUfFacebook()
	 * @method bool hasUfFacebook()
	 * @method bool isUfFacebookFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfFacebook()
	 * @method \string fillUfFacebook()
	 * @method \Bitrix\Timeman\Model\User\User setUfFacebook(\string $ufFacebook)
	 * @method bool isUfFacebookChanged()
	 * @method \string getUfLinkedin()
	 * @method \string remindActualUfLinkedin()
	 * @method \string requireUfLinkedin()
	 * @method bool hasUfLinkedin()
	 * @method bool isUfLinkedinFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfLinkedin()
	 * @method \string fillUfLinkedin()
	 * @method \Bitrix\Timeman\Model\User\User setUfLinkedin(\string $ufLinkedin)
	 * @method bool isUfLinkedinChanged()
	 * @method \string getUfXing()
	 * @method \string remindActualUfXing()
	 * @method \string requireUfXing()
	 * @method bool hasUfXing()
	 * @method bool isUfXingFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfXing()
	 * @method \string fillUfXing()
	 * @method \Bitrix\Timeman\Model\User\User setUfXing(\string $ufXing)
	 * @method bool isUfXingChanged()
	 * @method \string getUfWebSites()
	 * @method \string remindActualUfWebSites()
	 * @method \string requireUfWebSites()
	 * @method bool hasUfWebSites()
	 * @method bool isUfWebSitesFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfWebSites()
	 * @method \string fillUfWebSites()
	 * @method \Bitrix\Timeman\Model\User\User setUfWebSites(\string $ufWebSites)
	 * @method bool isUfWebSitesChanged()
	 * @method \string getUfSkills()
	 * @method \string remindActualUfSkills()
	 * @method \string requireUfSkills()
	 * @method bool hasUfSkills()
	 * @method bool isUfSkillsFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfSkills()
	 * @method \string fillUfSkills()
	 * @method \Bitrix\Timeman\Model\User\User setUfSkills(\string $ufSkills)
	 * @method bool isUfSkillsChanged()
	 * @method \string getUfInterests()
	 * @method \string remindActualUfInterests()
	 * @method \string requireUfInterests()
	 * @method bool hasUfInterests()
	 * @method bool isUfInterestsFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfInterests()
	 * @method \string fillUfInterests()
	 * @method \Bitrix\Timeman\Model\User\User setUfInterests(\string $ufInterests)
	 * @method bool isUfInterestsChanged()
	 * @method \Bitrix\Main\Type\Date getUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date remindActualUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date requireUfEmploymentDate()
	 * @method bool hasUfEmploymentDate()
	 * @method bool isUfEmploymentDateFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date fillUfEmploymentDate()
	 * @method \Bitrix\Timeman\Model\User\User setUfEmploymentDate(\Bitrix\Main\Type\Date $ufEmploymentDate)
	 * @method bool isUfEmploymentDateChanged()
	 * @method \string getUfWorkBinding()
	 * @method \string remindActualUfWorkBinding()
	 * @method \string requireUfWorkBinding()
	 * @method bool hasUfWorkBinding()
	 * @method bool isUfWorkBindingFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfWorkBinding()
	 * @method \string fillUfWorkBinding()
	 * @method \Bitrix\Timeman\Model\User\User setUfWorkBinding(\string $ufWorkBinding)
	 * @method bool isUfWorkBindingChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime requireUfBxdavexCalsync()
	 * @method bool hasUfBxdavexCalsync()
	 * @method bool isUfBxdavexCalsyncFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime fillUfBxdavexCalsync()
	 * @method \Bitrix\Timeman\Model\User\User setUfBxdavexCalsync(\Bitrix\Main\Type\DateTime $ufBxdavexCalsync)
	 * @method bool isUfBxdavexCalsyncChanged()
	 * @method \int getUfWorkHours()
	 * @method \int remindActualUfWorkHours()
	 * @method \int requireUfWorkHours()
	 * @method bool hasUfWorkHours()
	 * @method bool isUfWorkHoursFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfWorkHours()
	 * @method \int fillUfWorkHours()
	 * @method \Bitrix\Timeman\Model\User\User setUfWorkHours(\int $ufWorkHours)
	 * @method bool isUfWorkHoursChanged()
	 * @method \string getUfViPassword()
	 * @method \string remindActualUfViPassword()
	 * @method \string requireUfViPassword()
	 * @method bool hasUfViPassword()
	 * @method bool isUfViPasswordFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfViPassword()
	 * @method \string fillUfViPassword()
	 * @method \Bitrix\Timeman\Model\User\User setUfViPassword(\string $ufViPassword)
	 * @method bool isUfViPasswordChanged()
	 * @method \string getUfViBackphone()
	 * @method \string remindActualUfViBackphone()
	 * @method \string requireUfViBackphone()
	 * @method bool hasUfViBackphone()
	 * @method bool isUfViBackphoneFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfViBackphone()
	 * @method \string fillUfViBackphone()
	 * @method \Bitrix\Timeman\Model\User\User setUfViBackphone(\string $ufViBackphone)
	 * @method bool isUfViBackphoneChanged()
	 * @method \string getUfViPhone()
	 * @method \string remindActualUfViPhone()
	 * @method \string requireUfViPhone()
	 * @method bool hasUfViPhone()
	 * @method bool isUfViPhoneFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfViPhone()
	 * @method \string fillUfViPhone()
	 * @method \Bitrix\Timeman\Model\User\User setUfViPhone(\string $ufViPhone)
	 * @method bool isUfViPhoneChanged()
	 * @method \string getUfViPhonePassword()
	 * @method \string remindActualUfViPhonePassword()
	 * @method \string requireUfViPhonePassword()
	 * @method bool hasUfViPhonePassword()
	 * @method bool isUfViPhonePasswordFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfViPhonePassword()
	 * @method \string fillUfViPhonePassword()
	 * @method \Bitrix\Timeman\Model\User\User setUfViPhonePassword(\string $ufViPhonePassword)
	 * @method bool isUfViPhonePasswordChanged()
	 * @method \string getUfTitleTest()
	 * @method \string remindActualUfTitleTest()
	 * @method \string requireUfTitleTest()
	 * @method bool hasUfTitleTest()
	 * @method bool isUfTitleTestFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTitleTest()
	 * @method \string fillUfTitleTest()
	 * @method \Bitrix\Timeman\Model\User\User setUfTitleTest(\string $ufTitleTest)
	 * @method bool isUfTitleTestChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime requireUfMwsReactivation()
	 * @method bool hasUfMwsReactivation()
	 * @method bool isUfMwsReactivationFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime fillUfMwsReactivation()
	 * @method \Bitrix\Timeman\Model\User\User setUfMwsReactivation(\Bitrix\Main\Type\DateTime $ufMwsReactivation)
	 * @method bool isUfMwsReactivationChanged()
	 * @method \string getUfMwsSub()
	 * @method \string remindActualUfMwsSub()
	 * @method \string requireUfMwsSub()
	 * @method bool hasUfMwsSub()
	 * @method bool isUfMwsSubFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfMwsSub()
	 * @method \string fillUfMwsSub()
	 * @method \Bitrix\Timeman\Model\User\User setUfMwsSub(\string $ufMwsSub)
	 * @method bool isUfMwsSubChanged()
	 * @method \int getUfPublic()
	 * @method \int remindActualUfPublic()
	 * @method \int requireUfPublic()
	 * @method bool hasUfPublic()
	 * @method bool isUfPublicFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfPublic()
	 * @method \int fillUfPublic()
	 * @method \Bitrix\Timeman\Model\User\User setUfPublic(\int $ufPublic)
	 * @method bool isUfPublicChanged()
	 * @method \string getUfUserCompany()
	 * @method \string remindActualUfUserCompany()
	 * @method \string requireUfUserCompany()
	 * @method bool hasUfUserCompany()
	 * @method bool isUfUserCompanyFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfUserCompany()
	 * @method \string fillUfUserCompany()
	 * @method \Bitrix\Timeman\Model\User\User setUfUserCompany(\string $ufUserCompany)
	 * @method bool isUfUserCompanyChanged()
	 * @method \int getUfTimeman()
	 * @method \int remindActualUfTimeman()
	 * @method \int requireUfTimeman()
	 * @method bool hasUfTimeman()
	 * @method bool isUfTimemanFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTimeman()
	 * @method \int fillUfTimeman()
	 * @method \Bitrix\Timeman\Model\User\User setUfTimeman(\int $ufTimeman)
	 * @method bool isUfTimemanChanged()
	 * @method \string getUfTmMaxStart()
	 * @method \string remindActualUfTmMaxStart()
	 * @method \string requireUfTmMaxStart()
	 * @method bool hasUfTmMaxStart()
	 * @method bool isUfTmMaxStartFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmMaxStart()
	 * @method \string fillUfTmMaxStart()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmMaxStart(\string $ufTmMaxStart)
	 * @method bool isUfTmMaxStartChanged()
	 * @method \string getUfTmMinFinish()
	 * @method \string remindActualUfTmMinFinish()
	 * @method \string requireUfTmMinFinish()
	 * @method bool hasUfTmMinFinish()
	 * @method bool isUfTmMinFinishFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmMinFinish()
	 * @method \string fillUfTmMinFinish()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmMinFinish(\string $ufTmMinFinish)
	 * @method bool isUfTmMinFinishChanged()
	 * @method \string getUfTmMinDuration()
	 * @method \string remindActualUfTmMinDuration()
	 * @method \string requireUfTmMinDuration()
	 * @method bool hasUfTmMinDuration()
	 * @method bool isUfTmMinDurationFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmMinDuration()
	 * @method \string fillUfTmMinDuration()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmMinDuration(\string $ufTmMinDuration)
	 * @method bool isUfTmMinDurationChanged()
	 * @method \int getUfTmReportReq()
	 * @method \int remindActualUfTmReportReq()
	 * @method \int requireUfTmReportReq()
	 * @method bool hasUfTmReportReq()
	 * @method bool isUfTmReportReqFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmReportReq()
	 * @method \int fillUfTmReportReq()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmReportReq(\int $ufTmReportReq)
	 * @method bool isUfTmReportReqChanged()
	 * @method \string getUfTmReportTpl()
	 * @method \string remindActualUfTmReportTpl()
	 * @method \string requireUfTmReportTpl()
	 * @method bool hasUfTmReportTpl()
	 * @method bool isUfTmReportTplFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmReportTpl()
	 * @method \string fillUfTmReportTpl()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmReportTpl(\string[] $ufTmReportTpl)
	 * @method bool isUfTmReportTplChanged()
	 * @method \int getUfTmFree()
	 * @method \int remindActualUfTmFree()
	 * @method \int requireUfTmFree()
	 * @method bool hasUfTmFree()
	 * @method bool isUfTmFreeFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmFree()
	 * @method \int fillUfTmFree()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmFree(\int $ufTmFree)
	 * @method bool isUfTmFreeChanged()
	 * @method \string getUfTmTime()
	 * @method \string remindActualUfTmTime()
	 * @method \string requireUfTmTime()
	 * @method bool hasUfTmTime()
	 * @method bool isUfTmTimeFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmTime()
	 * @method \string fillUfTmTime()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmTime(\string $ufTmTime)
	 * @method bool isUfTmTimeChanged()
	 * @method \string getUfTmDay()
	 * @method \string remindActualUfTmDay()
	 * @method \string requireUfTmDay()
	 * @method bool hasUfTmDay()
	 * @method bool isUfTmDayFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmDay()
	 * @method \string fillUfTmDay()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmDay(\string $ufTmDay)
	 * @method bool isUfTmDayChanged()
	 * @method \string getUfTmReportDate()
	 * @method \string remindActualUfTmReportDate()
	 * @method \string requireUfTmReportDate()
	 * @method bool hasUfTmReportDate()
	 * @method bool isUfTmReportDateFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmReportDate()
	 * @method \string fillUfTmReportDate()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmReportDate(\string $ufTmReportDate)
	 * @method bool isUfTmReportDateChanged()
	 * @method \int getUfReportPeriod()
	 * @method \int remindActualUfReportPeriod()
	 * @method \int requireUfReportPeriod()
	 * @method bool hasUfReportPeriod()
	 * @method bool isUfReportPeriodFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfReportPeriod()
	 * @method \int fillUfReportPeriod()
	 * @method \Bitrix\Timeman\Model\User\User setUfReportPeriod(\int $ufReportPeriod)
	 * @method bool isUfReportPeriodChanged()
	 * @method \string getUfDelayTime()
	 * @method \string remindActualUfDelayTime()
	 * @method \string requireUfDelayTime()
	 * @method bool hasUfDelayTime()
	 * @method bool isUfDelayTimeFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfDelayTime()
	 * @method \string fillUfDelayTime()
	 * @method \Bitrix\Timeman\Model\User\User setUfDelayTime(\string $ufDelayTime)
	 * @method bool isUfDelayTimeChanged()
	 * @method \string getUfLastReportDate()
	 * @method \string remindActualUfLastReportDate()
	 * @method \string requireUfLastReportDate()
	 * @method bool hasUfLastReportDate()
	 * @method bool isUfLastReportDateFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfLastReportDate()
	 * @method \string fillUfLastReportDate()
	 * @method \Bitrix\Timeman\Model\User\User setUfLastReportDate(\string $ufLastReportDate)
	 * @method bool isUfLastReportDateChanged()
	 * @method \string getUfSettingDate()
	 * @method \string remindActualUfSettingDate()
	 * @method \string requireUfSettingDate()
	 * @method bool hasUfSettingDate()
	 * @method bool isUfSettingDateFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfSettingDate()
	 * @method \string fillUfSettingDate()
	 * @method \Bitrix\Timeman\Model\User\User setUfSettingDate(\string $ufSettingDate)
	 * @method bool isUfSettingDateChanged()
	 * @method \string getUfTmAllowedDelta()
	 * @method \string remindActualUfTmAllowedDelta()
	 * @method \string requireUfTmAllowedDelta()
	 * @method bool hasUfTmAllowedDelta()
	 * @method bool isUfTmAllowedDeltaFilled()
	 * @method \Bitrix\Timeman\Model\User\User unsetUfTmAllowedDelta()
	 * @method \string fillUfTmAllowedDelta()
	 * @method \Bitrix\Timeman\Model\User\User setUfTmAllowedDelta(\string $ufTmAllowedDelta)
	 * @method bool isUfTmAllowedDeltaChanged()
	 */
	class EO_User {
		/* @var \Bitrix\Timeman\Model\User\UserTable */
		static public $dataClass = '\Bitrix\Timeman\Model\User\UserTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Timeman\Model\User {
	/**
	 * UserCollection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfDepartmentList()
	 * @method \string[] fillUfDepartment()
	 * @method \string[] getUfPhoneInnerList()
	 * @method \string[] fillUfPhoneInner()
	 * @method \string[] getUfUserCrmEntityList()
	 * @method \string[] fillUfUserCrmEntity()
	 * @method \string[] getUfImSearchList()
	 * @method \string[] fillUfImSearch()
	 * @method \string[] getUfConnectorMd5List()
	 * @method \string[] fillUfConnectorMd5()
	 * @method \int[] getUf1cList()
	 * @method \int[] fillUf1c()
	 * @method \string[] getUfInnList()
	 * @method \string[] fillUfInn()
	 * @method \string[] getUfDistrictList()
	 * @method \string[] fillUfDistrict()
	 * @method \string[] getUfSkypeList()
	 * @method \string[] fillUfSkype()
	 * @method \string[] getUfSkypeLinkList()
	 * @method \string[] fillUfSkypeLink()
	 * @method \string[] getUfZoomList()
	 * @method \string[] fillUfZoom()
	 * @method \string[] getUfTwitterList()
	 * @method \string[] fillUfTwitter()
	 * @method \string[] getUfFacebookList()
	 * @method \string[] fillUfFacebook()
	 * @method \string[] getUfLinkedinList()
	 * @method \string[] fillUfLinkedin()
	 * @method \string[] getUfXingList()
	 * @method \string[] fillUfXing()
	 * @method \string[] getUfWebSitesList()
	 * @method \string[] fillUfWebSites()
	 * @method \string[] getUfSkillsList()
	 * @method \string[] fillUfSkills()
	 * @method \string[] getUfInterestsList()
	 * @method \string[] fillUfInterests()
	 * @method \Bitrix\Main\Type\Date[] getUfEmploymentDateList()
	 * @method \Bitrix\Main\Type\Date[] fillUfEmploymentDate()
	 * @method \string[] getUfWorkBindingList()
	 * @method \string[] fillUfWorkBinding()
	 * @method \Bitrix\Main\Type\DateTime[] getUfBxdavexCalsyncList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfBxdavexCalsync()
	 * @method \int[] getUfWorkHoursList()
	 * @method \int[] fillUfWorkHours()
	 * @method \string[] getUfViPasswordList()
	 * @method \string[] fillUfViPassword()
	 * @method \string[] getUfViBackphoneList()
	 * @method \string[] fillUfViBackphone()
	 * @method \string[] getUfViPhoneList()
	 * @method \string[] fillUfViPhone()
	 * @method \string[] getUfViPhonePasswordList()
	 * @method \string[] fillUfViPhonePassword()
	 * @method \string[] getUfTitleTestList()
	 * @method \string[] fillUfTitleTest()
	 * @method \Bitrix\Main\Type\DateTime[] getUfMwsReactivationList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfMwsReactivation()
	 * @method \string[] getUfMwsSubList()
	 * @method \string[] fillUfMwsSub()
	 * @method \int[] getUfPublicList()
	 * @method \int[] fillUfPublic()
	 * @method \string[] getUfUserCompanyList()
	 * @method \string[] fillUfUserCompany()
	 * @method \int[] getUfTimemanList()
	 * @method \int[] fillUfTimeman()
	 * @method \string[] getUfTmMaxStartList()
	 * @method \string[] fillUfTmMaxStart()
	 * @method \string[] getUfTmMinFinishList()
	 * @method \string[] fillUfTmMinFinish()
	 * @method \string[] getUfTmMinDurationList()
	 * @method \string[] fillUfTmMinDuration()
	 * @method \int[] getUfTmReportReqList()
	 * @method \int[] fillUfTmReportReq()
	 * @method \string[] getUfTmReportTplList()
	 * @method \string[] fillUfTmReportTpl()
	 * @method \int[] getUfTmFreeList()
	 * @method \int[] fillUfTmFree()
	 * @method \string[] getUfTmTimeList()
	 * @method \string[] fillUfTmTime()
	 * @method \string[] getUfTmDayList()
	 * @method \string[] fillUfTmDay()
	 * @method \string[] getUfTmReportDateList()
	 * @method \string[] fillUfTmReportDate()
	 * @method \int[] getUfReportPeriodList()
	 * @method \int[] fillUfReportPeriod()
	 * @method \string[] getUfDelayTimeList()
	 * @method \string[] fillUfDelayTime()
	 * @method \string[] getUfLastReportDateList()
	 * @method \string[] fillUfLastReportDate()
	 * @method \string[] getUfSettingDateList()
	 * @method \string[] fillUfSettingDate()
	 * @method \string[] getUfTmAllowedDeltaList()
	 * @method \string[] fillUfTmAllowedDelta()
	 */
	class EO_User_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Timeman\Model\User\UserTable */
		static public $dataClass = '\Bitrix\Timeman\Model\User\UserTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Intranet\UserTable */
namespace Bitrix\Intranet {
	/**
	 * EO_User
	 * @see \Bitrix\Intranet\UserTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfDepartment()
	 * @method \string remindActualUfDepartment()
	 * @method \string requireUfDepartment()
	 * @method bool hasUfDepartment()
	 * @method bool isUfDepartmentFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfDepartment()
	 * @method \string fillUfDepartment()
	 * @method \Bitrix\Intranet\EO_User setUfDepartment(\string[] $ufDepartment)
	 * @method bool isUfDepartmentChanged()
	 * @method \string getUfPhoneInner()
	 * @method \string remindActualUfPhoneInner()
	 * @method \string requireUfPhoneInner()
	 * @method bool hasUfPhoneInner()
	 * @method bool isUfPhoneInnerFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfPhoneInner()
	 * @method \string fillUfPhoneInner()
	 * @method \Bitrix\Intranet\EO_User setUfPhoneInner(\string $ufPhoneInner)
	 * @method bool isUfPhoneInnerChanged()
	 * @method \string getUfUserCrmEntity()
	 * @method \string remindActualUfUserCrmEntity()
	 * @method \string requireUfUserCrmEntity()
	 * @method bool hasUfUserCrmEntity()
	 * @method bool isUfUserCrmEntityFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfUserCrmEntity()
	 * @method \string fillUfUserCrmEntity()
	 * @method \Bitrix\Intranet\EO_User setUfUserCrmEntity(\string $ufUserCrmEntity)
	 * @method bool isUfUserCrmEntityChanged()
	 * @method \string getUfImSearch()
	 * @method \string remindActualUfImSearch()
	 * @method \string requireUfImSearch()
	 * @method bool hasUfImSearch()
	 * @method bool isUfImSearchFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfImSearch()
	 * @method \string fillUfImSearch()
	 * @method \Bitrix\Intranet\EO_User setUfImSearch(\string $ufImSearch)
	 * @method bool isUfImSearchChanged()
	 * @method \string getUfConnectorMd5()
	 * @method \string remindActualUfConnectorMd5()
	 * @method \string requireUfConnectorMd5()
	 * @method bool hasUfConnectorMd5()
	 * @method bool isUfConnectorMd5Filled()
	 * @method \Bitrix\Intranet\EO_User unsetUfConnectorMd5()
	 * @method \string fillUfConnectorMd5()
	 * @method \Bitrix\Intranet\EO_User setUfConnectorMd5(\string $ufConnectorMd5)
	 * @method bool isUfConnectorMd5Changed()
	 * @method \int getUf1c()
	 * @method \int remindActualUf1c()
	 * @method \int requireUf1c()
	 * @method bool hasUf1c()
	 * @method bool isUf1cFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUf1c()
	 * @method \int fillUf1c()
	 * @method \Bitrix\Intranet\EO_User setUf1c(\int $uf1c)
	 * @method bool isUf1cChanged()
	 * @method \string getUfInn()
	 * @method \string remindActualUfInn()
	 * @method \string requireUfInn()
	 * @method bool hasUfInn()
	 * @method bool isUfInnFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfInn()
	 * @method \string fillUfInn()
	 * @method \Bitrix\Intranet\EO_User setUfInn(\string $ufInn)
	 * @method bool isUfInnChanged()
	 * @method \string getUfDistrict()
	 * @method \string remindActualUfDistrict()
	 * @method \string requireUfDistrict()
	 * @method bool hasUfDistrict()
	 * @method bool isUfDistrictFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfDistrict()
	 * @method \string fillUfDistrict()
	 * @method \Bitrix\Intranet\EO_User setUfDistrict(\string $ufDistrict)
	 * @method bool isUfDistrictChanged()
	 * @method \string getUfSkype()
	 * @method \string remindActualUfSkype()
	 * @method \string requireUfSkype()
	 * @method bool hasUfSkype()
	 * @method bool isUfSkypeFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfSkype()
	 * @method \string fillUfSkype()
	 * @method \Bitrix\Intranet\EO_User setUfSkype(\string $ufSkype)
	 * @method bool isUfSkypeChanged()
	 * @method \string getUfSkypeLink()
	 * @method \string remindActualUfSkypeLink()
	 * @method \string requireUfSkypeLink()
	 * @method bool hasUfSkypeLink()
	 * @method bool isUfSkypeLinkFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfSkypeLink()
	 * @method \string fillUfSkypeLink()
	 * @method \Bitrix\Intranet\EO_User setUfSkypeLink(\string $ufSkypeLink)
	 * @method bool isUfSkypeLinkChanged()
	 * @method \string getUfZoom()
	 * @method \string remindActualUfZoom()
	 * @method \string requireUfZoom()
	 * @method bool hasUfZoom()
	 * @method bool isUfZoomFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfZoom()
	 * @method \string fillUfZoom()
	 * @method \Bitrix\Intranet\EO_User setUfZoom(\string $ufZoom)
	 * @method bool isUfZoomChanged()
	 * @method \string getUfTwitter()
	 * @method \string remindActualUfTwitter()
	 * @method \string requireUfTwitter()
	 * @method bool hasUfTwitter()
	 * @method bool isUfTwitterFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTwitter()
	 * @method \string fillUfTwitter()
	 * @method \Bitrix\Intranet\EO_User setUfTwitter(\string $ufTwitter)
	 * @method bool isUfTwitterChanged()
	 * @method \string getUfFacebook()
	 * @method \string remindActualUfFacebook()
	 * @method \string requireUfFacebook()
	 * @method bool hasUfFacebook()
	 * @method bool isUfFacebookFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfFacebook()
	 * @method \string fillUfFacebook()
	 * @method \Bitrix\Intranet\EO_User setUfFacebook(\string $ufFacebook)
	 * @method bool isUfFacebookChanged()
	 * @method \string getUfLinkedin()
	 * @method \string remindActualUfLinkedin()
	 * @method \string requireUfLinkedin()
	 * @method bool hasUfLinkedin()
	 * @method bool isUfLinkedinFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfLinkedin()
	 * @method \string fillUfLinkedin()
	 * @method \Bitrix\Intranet\EO_User setUfLinkedin(\string $ufLinkedin)
	 * @method bool isUfLinkedinChanged()
	 * @method \string getUfXing()
	 * @method \string remindActualUfXing()
	 * @method \string requireUfXing()
	 * @method bool hasUfXing()
	 * @method bool isUfXingFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfXing()
	 * @method \string fillUfXing()
	 * @method \Bitrix\Intranet\EO_User setUfXing(\string $ufXing)
	 * @method bool isUfXingChanged()
	 * @method \string getUfWebSites()
	 * @method \string remindActualUfWebSites()
	 * @method \string requireUfWebSites()
	 * @method bool hasUfWebSites()
	 * @method bool isUfWebSitesFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfWebSites()
	 * @method \string fillUfWebSites()
	 * @method \Bitrix\Intranet\EO_User setUfWebSites(\string $ufWebSites)
	 * @method bool isUfWebSitesChanged()
	 * @method \string getUfSkills()
	 * @method \string remindActualUfSkills()
	 * @method \string requireUfSkills()
	 * @method bool hasUfSkills()
	 * @method bool isUfSkillsFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfSkills()
	 * @method \string fillUfSkills()
	 * @method \Bitrix\Intranet\EO_User setUfSkills(\string $ufSkills)
	 * @method bool isUfSkillsChanged()
	 * @method \string getUfInterests()
	 * @method \string remindActualUfInterests()
	 * @method \string requireUfInterests()
	 * @method bool hasUfInterests()
	 * @method bool isUfInterestsFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfInterests()
	 * @method \string fillUfInterests()
	 * @method \Bitrix\Intranet\EO_User setUfInterests(\string $ufInterests)
	 * @method bool isUfInterestsChanged()
	 * @method \Bitrix\Main\Type\Date getUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date remindActualUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date requireUfEmploymentDate()
	 * @method bool hasUfEmploymentDate()
	 * @method bool isUfEmploymentDateFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date fillUfEmploymentDate()
	 * @method \Bitrix\Intranet\EO_User setUfEmploymentDate(\Bitrix\Main\Type\Date $ufEmploymentDate)
	 * @method bool isUfEmploymentDateChanged()
	 * @method \string getUfWorkBinding()
	 * @method \string remindActualUfWorkBinding()
	 * @method \string requireUfWorkBinding()
	 * @method bool hasUfWorkBinding()
	 * @method bool isUfWorkBindingFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfWorkBinding()
	 * @method \string fillUfWorkBinding()
	 * @method \Bitrix\Intranet\EO_User setUfWorkBinding(\string $ufWorkBinding)
	 * @method bool isUfWorkBindingChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime requireUfBxdavexCalsync()
	 * @method bool hasUfBxdavexCalsync()
	 * @method bool isUfBxdavexCalsyncFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime fillUfBxdavexCalsync()
	 * @method \Bitrix\Intranet\EO_User setUfBxdavexCalsync(\Bitrix\Main\Type\DateTime $ufBxdavexCalsync)
	 * @method bool isUfBxdavexCalsyncChanged()
	 * @method \int getUfWorkHours()
	 * @method \int remindActualUfWorkHours()
	 * @method \int requireUfWorkHours()
	 * @method bool hasUfWorkHours()
	 * @method bool isUfWorkHoursFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfWorkHours()
	 * @method \int fillUfWorkHours()
	 * @method \Bitrix\Intranet\EO_User setUfWorkHours(\int $ufWorkHours)
	 * @method bool isUfWorkHoursChanged()
	 * @method \string getUfViPassword()
	 * @method \string remindActualUfViPassword()
	 * @method \string requireUfViPassword()
	 * @method bool hasUfViPassword()
	 * @method bool isUfViPasswordFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfViPassword()
	 * @method \string fillUfViPassword()
	 * @method \Bitrix\Intranet\EO_User setUfViPassword(\string $ufViPassword)
	 * @method bool isUfViPasswordChanged()
	 * @method \string getUfViBackphone()
	 * @method \string remindActualUfViBackphone()
	 * @method \string requireUfViBackphone()
	 * @method bool hasUfViBackphone()
	 * @method bool isUfViBackphoneFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfViBackphone()
	 * @method \string fillUfViBackphone()
	 * @method \Bitrix\Intranet\EO_User setUfViBackphone(\string $ufViBackphone)
	 * @method bool isUfViBackphoneChanged()
	 * @method \string getUfViPhone()
	 * @method \string remindActualUfViPhone()
	 * @method \string requireUfViPhone()
	 * @method bool hasUfViPhone()
	 * @method bool isUfViPhoneFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfViPhone()
	 * @method \string fillUfViPhone()
	 * @method \Bitrix\Intranet\EO_User setUfViPhone(\string $ufViPhone)
	 * @method bool isUfViPhoneChanged()
	 * @method \string getUfViPhonePassword()
	 * @method \string remindActualUfViPhonePassword()
	 * @method \string requireUfViPhonePassword()
	 * @method bool hasUfViPhonePassword()
	 * @method bool isUfViPhonePasswordFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfViPhonePassword()
	 * @method \string fillUfViPhonePassword()
	 * @method \Bitrix\Intranet\EO_User setUfViPhonePassword(\string $ufViPhonePassword)
	 * @method bool isUfViPhonePasswordChanged()
	 * @method \string getUfTitleTest()
	 * @method \string remindActualUfTitleTest()
	 * @method \string requireUfTitleTest()
	 * @method bool hasUfTitleTest()
	 * @method bool isUfTitleTestFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTitleTest()
	 * @method \string fillUfTitleTest()
	 * @method \Bitrix\Intranet\EO_User setUfTitleTest(\string $ufTitleTest)
	 * @method bool isUfTitleTestChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime requireUfMwsReactivation()
	 * @method bool hasUfMwsReactivation()
	 * @method bool isUfMwsReactivationFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime fillUfMwsReactivation()
	 * @method \Bitrix\Intranet\EO_User setUfMwsReactivation(\Bitrix\Main\Type\DateTime $ufMwsReactivation)
	 * @method bool isUfMwsReactivationChanged()
	 * @method \string getUfMwsSub()
	 * @method \string remindActualUfMwsSub()
	 * @method \string requireUfMwsSub()
	 * @method bool hasUfMwsSub()
	 * @method bool isUfMwsSubFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfMwsSub()
	 * @method \string fillUfMwsSub()
	 * @method \Bitrix\Intranet\EO_User setUfMwsSub(\string $ufMwsSub)
	 * @method bool isUfMwsSubChanged()
	 * @method \int getUfPublic()
	 * @method \int remindActualUfPublic()
	 * @method \int requireUfPublic()
	 * @method bool hasUfPublic()
	 * @method bool isUfPublicFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfPublic()
	 * @method \int fillUfPublic()
	 * @method \Bitrix\Intranet\EO_User setUfPublic(\int $ufPublic)
	 * @method bool isUfPublicChanged()
	 * @method \string getUfUserCompany()
	 * @method \string remindActualUfUserCompany()
	 * @method \string requireUfUserCompany()
	 * @method bool hasUfUserCompany()
	 * @method bool isUfUserCompanyFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfUserCompany()
	 * @method \string fillUfUserCompany()
	 * @method \Bitrix\Intranet\EO_User setUfUserCompany(\string $ufUserCompany)
	 * @method bool isUfUserCompanyChanged()
	 * @method \int getUfTimeman()
	 * @method \int remindActualUfTimeman()
	 * @method \int requireUfTimeman()
	 * @method bool hasUfTimeman()
	 * @method bool isUfTimemanFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTimeman()
	 * @method \int fillUfTimeman()
	 * @method \Bitrix\Intranet\EO_User setUfTimeman(\int $ufTimeman)
	 * @method bool isUfTimemanChanged()
	 * @method \string getUfTmMaxStart()
	 * @method \string remindActualUfTmMaxStart()
	 * @method \string requireUfTmMaxStart()
	 * @method bool hasUfTmMaxStart()
	 * @method bool isUfTmMaxStartFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmMaxStart()
	 * @method \string fillUfTmMaxStart()
	 * @method \Bitrix\Intranet\EO_User setUfTmMaxStart(\string $ufTmMaxStart)
	 * @method bool isUfTmMaxStartChanged()
	 * @method \string getUfTmMinFinish()
	 * @method \string remindActualUfTmMinFinish()
	 * @method \string requireUfTmMinFinish()
	 * @method bool hasUfTmMinFinish()
	 * @method bool isUfTmMinFinishFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmMinFinish()
	 * @method \string fillUfTmMinFinish()
	 * @method \Bitrix\Intranet\EO_User setUfTmMinFinish(\string $ufTmMinFinish)
	 * @method bool isUfTmMinFinishChanged()
	 * @method \string getUfTmMinDuration()
	 * @method \string remindActualUfTmMinDuration()
	 * @method \string requireUfTmMinDuration()
	 * @method bool hasUfTmMinDuration()
	 * @method bool isUfTmMinDurationFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmMinDuration()
	 * @method \string fillUfTmMinDuration()
	 * @method \Bitrix\Intranet\EO_User setUfTmMinDuration(\string $ufTmMinDuration)
	 * @method bool isUfTmMinDurationChanged()
	 * @method \int getUfTmReportReq()
	 * @method \int remindActualUfTmReportReq()
	 * @method \int requireUfTmReportReq()
	 * @method bool hasUfTmReportReq()
	 * @method bool isUfTmReportReqFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmReportReq()
	 * @method \int fillUfTmReportReq()
	 * @method \Bitrix\Intranet\EO_User setUfTmReportReq(\int $ufTmReportReq)
	 * @method bool isUfTmReportReqChanged()
	 * @method \string getUfTmReportTpl()
	 * @method \string remindActualUfTmReportTpl()
	 * @method \string requireUfTmReportTpl()
	 * @method bool hasUfTmReportTpl()
	 * @method bool isUfTmReportTplFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmReportTpl()
	 * @method \string fillUfTmReportTpl()
	 * @method \Bitrix\Intranet\EO_User setUfTmReportTpl(\string[] $ufTmReportTpl)
	 * @method bool isUfTmReportTplChanged()
	 * @method \int getUfTmFree()
	 * @method \int remindActualUfTmFree()
	 * @method \int requireUfTmFree()
	 * @method bool hasUfTmFree()
	 * @method bool isUfTmFreeFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmFree()
	 * @method \int fillUfTmFree()
	 * @method \Bitrix\Intranet\EO_User setUfTmFree(\int $ufTmFree)
	 * @method bool isUfTmFreeChanged()
	 * @method \string getUfTmTime()
	 * @method \string remindActualUfTmTime()
	 * @method \string requireUfTmTime()
	 * @method bool hasUfTmTime()
	 * @method bool isUfTmTimeFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmTime()
	 * @method \string fillUfTmTime()
	 * @method \Bitrix\Intranet\EO_User setUfTmTime(\string $ufTmTime)
	 * @method bool isUfTmTimeChanged()
	 * @method \string getUfTmDay()
	 * @method \string remindActualUfTmDay()
	 * @method \string requireUfTmDay()
	 * @method bool hasUfTmDay()
	 * @method bool isUfTmDayFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmDay()
	 * @method \string fillUfTmDay()
	 * @method \Bitrix\Intranet\EO_User setUfTmDay(\string $ufTmDay)
	 * @method bool isUfTmDayChanged()
	 * @method \string getUfTmReportDate()
	 * @method \string remindActualUfTmReportDate()
	 * @method \string requireUfTmReportDate()
	 * @method bool hasUfTmReportDate()
	 * @method bool isUfTmReportDateFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmReportDate()
	 * @method \string fillUfTmReportDate()
	 * @method \Bitrix\Intranet\EO_User setUfTmReportDate(\string $ufTmReportDate)
	 * @method bool isUfTmReportDateChanged()
	 * @method \int getUfReportPeriod()
	 * @method \int remindActualUfReportPeriod()
	 * @method \int requireUfReportPeriod()
	 * @method bool hasUfReportPeriod()
	 * @method bool isUfReportPeriodFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfReportPeriod()
	 * @method \int fillUfReportPeriod()
	 * @method \Bitrix\Intranet\EO_User setUfReportPeriod(\int $ufReportPeriod)
	 * @method bool isUfReportPeriodChanged()
	 * @method \string getUfDelayTime()
	 * @method \string remindActualUfDelayTime()
	 * @method \string requireUfDelayTime()
	 * @method bool hasUfDelayTime()
	 * @method bool isUfDelayTimeFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfDelayTime()
	 * @method \string fillUfDelayTime()
	 * @method \Bitrix\Intranet\EO_User setUfDelayTime(\string $ufDelayTime)
	 * @method bool isUfDelayTimeChanged()
	 * @method \string getUfLastReportDate()
	 * @method \string remindActualUfLastReportDate()
	 * @method \string requireUfLastReportDate()
	 * @method bool hasUfLastReportDate()
	 * @method bool isUfLastReportDateFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfLastReportDate()
	 * @method \string fillUfLastReportDate()
	 * @method \Bitrix\Intranet\EO_User setUfLastReportDate(\string $ufLastReportDate)
	 * @method bool isUfLastReportDateChanged()
	 * @method \string getUfSettingDate()
	 * @method \string remindActualUfSettingDate()
	 * @method \string requireUfSettingDate()
	 * @method bool hasUfSettingDate()
	 * @method bool isUfSettingDateFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfSettingDate()
	 * @method \string fillUfSettingDate()
	 * @method \Bitrix\Intranet\EO_User setUfSettingDate(\string $ufSettingDate)
	 * @method bool isUfSettingDateChanged()
	 * @method \string getUfTmAllowedDelta()
	 * @method \string remindActualUfTmAllowedDelta()
	 * @method \string requireUfTmAllowedDelta()
	 * @method bool hasUfTmAllowedDelta()
	 * @method bool isUfTmAllowedDeltaFilled()
	 * @method \Bitrix\Intranet\EO_User unsetUfTmAllowedDelta()
	 * @method \string fillUfTmAllowedDelta()
	 * @method \Bitrix\Intranet\EO_User setUfTmAllowedDelta(\string $ufTmAllowedDelta)
	 * @method bool isUfTmAllowedDeltaChanged()
	 */
	class EO_User {
		/* @var \Bitrix\Intranet\UserTable */
		static public $dataClass = '\Bitrix\Intranet\UserTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Intranet {
	/**
	 * EO_User_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfDepartmentList()
	 * @method \string[] fillUfDepartment()
	 * @method \string[] getUfPhoneInnerList()
	 * @method \string[] fillUfPhoneInner()
	 * @method \string[] getUfUserCrmEntityList()
	 * @method \string[] fillUfUserCrmEntity()
	 * @method \string[] getUfImSearchList()
	 * @method \string[] fillUfImSearch()
	 * @method \string[] getUfConnectorMd5List()
	 * @method \string[] fillUfConnectorMd5()
	 * @method \int[] getUf1cList()
	 * @method \int[] fillUf1c()
	 * @method \string[] getUfInnList()
	 * @method \string[] fillUfInn()
	 * @method \string[] getUfDistrictList()
	 * @method \string[] fillUfDistrict()
	 * @method \string[] getUfSkypeList()
	 * @method \string[] fillUfSkype()
	 * @method \string[] getUfSkypeLinkList()
	 * @method \string[] fillUfSkypeLink()
	 * @method \string[] getUfZoomList()
	 * @method \string[] fillUfZoom()
	 * @method \string[] getUfTwitterList()
	 * @method \string[] fillUfTwitter()
	 * @method \string[] getUfFacebookList()
	 * @method \string[] fillUfFacebook()
	 * @method \string[] getUfLinkedinList()
	 * @method \string[] fillUfLinkedin()
	 * @method \string[] getUfXingList()
	 * @method \string[] fillUfXing()
	 * @method \string[] getUfWebSitesList()
	 * @method \string[] fillUfWebSites()
	 * @method \string[] getUfSkillsList()
	 * @method \string[] fillUfSkills()
	 * @method \string[] getUfInterestsList()
	 * @method \string[] fillUfInterests()
	 * @method \Bitrix\Main\Type\Date[] getUfEmploymentDateList()
	 * @method \Bitrix\Main\Type\Date[] fillUfEmploymentDate()
	 * @method \string[] getUfWorkBindingList()
	 * @method \string[] fillUfWorkBinding()
	 * @method \Bitrix\Main\Type\DateTime[] getUfBxdavexCalsyncList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfBxdavexCalsync()
	 * @method \int[] getUfWorkHoursList()
	 * @method \int[] fillUfWorkHours()
	 * @method \string[] getUfViPasswordList()
	 * @method \string[] fillUfViPassword()
	 * @method \string[] getUfViBackphoneList()
	 * @method \string[] fillUfViBackphone()
	 * @method \string[] getUfViPhoneList()
	 * @method \string[] fillUfViPhone()
	 * @method \string[] getUfViPhonePasswordList()
	 * @method \string[] fillUfViPhonePassword()
	 * @method \string[] getUfTitleTestList()
	 * @method \string[] fillUfTitleTest()
	 * @method \Bitrix\Main\Type\DateTime[] getUfMwsReactivationList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfMwsReactivation()
	 * @method \string[] getUfMwsSubList()
	 * @method \string[] fillUfMwsSub()
	 * @method \int[] getUfPublicList()
	 * @method \int[] fillUfPublic()
	 * @method \string[] getUfUserCompanyList()
	 * @method \string[] fillUfUserCompany()
	 * @method \int[] getUfTimemanList()
	 * @method \int[] fillUfTimeman()
	 * @method \string[] getUfTmMaxStartList()
	 * @method \string[] fillUfTmMaxStart()
	 * @method \string[] getUfTmMinFinishList()
	 * @method \string[] fillUfTmMinFinish()
	 * @method \string[] getUfTmMinDurationList()
	 * @method \string[] fillUfTmMinDuration()
	 * @method \int[] getUfTmReportReqList()
	 * @method \int[] fillUfTmReportReq()
	 * @method \string[] getUfTmReportTplList()
	 * @method \string[] fillUfTmReportTpl()
	 * @method \int[] getUfTmFreeList()
	 * @method \int[] fillUfTmFree()
	 * @method \string[] getUfTmTimeList()
	 * @method \string[] fillUfTmTime()
	 * @method \string[] getUfTmDayList()
	 * @method \string[] fillUfTmDay()
	 * @method \string[] getUfTmReportDateList()
	 * @method \string[] fillUfTmReportDate()
	 * @method \int[] getUfReportPeriodList()
	 * @method \int[] fillUfReportPeriod()
	 * @method \string[] getUfDelayTimeList()
	 * @method \string[] fillUfDelayTime()
	 * @method \string[] getUfLastReportDateList()
	 * @method \string[] fillUfLastReportDate()
	 * @method \string[] getUfSettingDateList()
	 * @method \string[] fillUfSettingDate()
	 * @method \string[] getUfTmAllowedDeltaList()
	 * @method \string[] fillUfTmAllowedDelta()
	 */
	class EO_User_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Intranet\UserTable */
		static public $dataClass = '\Bitrix\Intranet\UserTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Voximplant\Model\UserTable */
namespace Bitrix\Voximplant\Model {
	/**
	 * EO_User
	 * @see \Bitrix\Voximplant\Model\UserTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfDepartment()
	 * @method \string remindActualUfDepartment()
	 * @method \string requireUfDepartment()
	 * @method bool hasUfDepartment()
	 * @method bool isUfDepartmentFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfDepartment()
	 * @method \string fillUfDepartment()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfDepartment(\string[] $ufDepartment)
	 * @method bool isUfDepartmentChanged()
	 * @method \string getUfPhoneInner()
	 * @method \string remindActualUfPhoneInner()
	 * @method \string requireUfPhoneInner()
	 * @method bool hasUfPhoneInner()
	 * @method bool isUfPhoneInnerFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfPhoneInner()
	 * @method \string fillUfPhoneInner()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfPhoneInner(\string $ufPhoneInner)
	 * @method bool isUfPhoneInnerChanged()
	 * @method \string getUfUserCrmEntity()
	 * @method \string remindActualUfUserCrmEntity()
	 * @method \string requireUfUserCrmEntity()
	 * @method bool hasUfUserCrmEntity()
	 * @method bool isUfUserCrmEntityFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfUserCrmEntity()
	 * @method \string fillUfUserCrmEntity()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfUserCrmEntity(\string $ufUserCrmEntity)
	 * @method bool isUfUserCrmEntityChanged()
	 * @method \string getUfImSearch()
	 * @method \string remindActualUfImSearch()
	 * @method \string requireUfImSearch()
	 * @method bool hasUfImSearch()
	 * @method bool isUfImSearchFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfImSearch()
	 * @method \string fillUfImSearch()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfImSearch(\string $ufImSearch)
	 * @method bool isUfImSearchChanged()
	 * @method \string getUfConnectorMd5()
	 * @method \string remindActualUfConnectorMd5()
	 * @method \string requireUfConnectorMd5()
	 * @method bool hasUfConnectorMd5()
	 * @method bool isUfConnectorMd5Filled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfConnectorMd5()
	 * @method \string fillUfConnectorMd5()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfConnectorMd5(\string $ufConnectorMd5)
	 * @method bool isUfConnectorMd5Changed()
	 * @method \int getUf1c()
	 * @method \int remindActualUf1c()
	 * @method \int requireUf1c()
	 * @method bool hasUf1c()
	 * @method bool isUf1cFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUf1c()
	 * @method \int fillUf1c()
	 * @method \Bitrix\Voximplant\Model\EO_User setUf1c(\int $uf1c)
	 * @method bool isUf1cChanged()
	 * @method \string getUfInn()
	 * @method \string remindActualUfInn()
	 * @method \string requireUfInn()
	 * @method bool hasUfInn()
	 * @method bool isUfInnFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfInn()
	 * @method \string fillUfInn()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfInn(\string $ufInn)
	 * @method bool isUfInnChanged()
	 * @method \string getUfDistrict()
	 * @method \string remindActualUfDistrict()
	 * @method \string requireUfDistrict()
	 * @method bool hasUfDistrict()
	 * @method bool isUfDistrictFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfDistrict()
	 * @method \string fillUfDistrict()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfDistrict(\string $ufDistrict)
	 * @method bool isUfDistrictChanged()
	 * @method \string getUfSkype()
	 * @method \string remindActualUfSkype()
	 * @method \string requireUfSkype()
	 * @method bool hasUfSkype()
	 * @method bool isUfSkypeFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfSkype()
	 * @method \string fillUfSkype()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfSkype(\string $ufSkype)
	 * @method bool isUfSkypeChanged()
	 * @method \string getUfSkypeLink()
	 * @method \string remindActualUfSkypeLink()
	 * @method \string requireUfSkypeLink()
	 * @method bool hasUfSkypeLink()
	 * @method bool isUfSkypeLinkFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfSkypeLink()
	 * @method \string fillUfSkypeLink()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfSkypeLink(\string $ufSkypeLink)
	 * @method bool isUfSkypeLinkChanged()
	 * @method \string getUfZoom()
	 * @method \string remindActualUfZoom()
	 * @method \string requireUfZoom()
	 * @method bool hasUfZoom()
	 * @method bool isUfZoomFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfZoom()
	 * @method \string fillUfZoom()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfZoom(\string $ufZoom)
	 * @method bool isUfZoomChanged()
	 * @method \string getUfTwitter()
	 * @method \string remindActualUfTwitter()
	 * @method \string requireUfTwitter()
	 * @method bool hasUfTwitter()
	 * @method bool isUfTwitterFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTwitter()
	 * @method \string fillUfTwitter()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTwitter(\string $ufTwitter)
	 * @method bool isUfTwitterChanged()
	 * @method \string getUfFacebook()
	 * @method \string remindActualUfFacebook()
	 * @method \string requireUfFacebook()
	 * @method bool hasUfFacebook()
	 * @method bool isUfFacebookFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfFacebook()
	 * @method \string fillUfFacebook()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfFacebook(\string $ufFacebook)
	 * @method bool isUfFacebookChanged()
	 * @method \string getUfLinkedin()
	 * @method \string remindActualUfLinkedin()
	 * @method \string requireUfLinkedin()
	 * @method bool hasUfLinkedin()
	 * @method bool isUfLinkedinFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfLinkedin()
	 * @method \string fillUfLinkedin()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfLinkedin(\string $ufLinkedin)
	 * @method bool isUfLinkedinChanged()
	 * @method \string getUfXing()
	 * @method \string remindActualUfXing()
	 * @method \string requireUfXing()
	 * @method bool hasUfXing()
	 * @method bool isUfXingFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfXing()
	 * @method \string fillUfXing()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfXing(\string $ufXing)
	 * @method bool isUfXingChanged()
	 * @method \string getUfWebSites()
	 * @method \string remindActualUfWebSites()
	 * @method \string requireUfWebSites()
	 * @method bool hasUfWebSites()
	 * @method bool isUfWebSitesFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfWebSites()
	 * @method \string fillUfWebSites()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfWebSites(\string $ufWebSites)
	 * @method bool isUfWebSitesChanged()
	 * @method \string getUfSkills()
	 * @method \string remindActualUfSkills()
	 * @method \string requireUfSkills()
	 * @method bool hasUfSkills()
	 * @method bool isUfSkillsFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfSkills()
	 * @method \string fillUfSkills()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfSkills(\string $ufSkills)
	 * @method bool isUfSkillsChanged()
	 * @method \string getUfInterests()
	 * @method \string remindActualUfInterests()
	 * @method \string requireUfInterests()
	 * @method bool hasUfInterests()
	 * @method bool isUfInterestsFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfInterests()
	 * @method \string fillUfInterests()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfInterests(\string $ufInterests)
	 * @method bool isUfInterestsChanged()
	 * @method \Bitrix\Main\Type\Date getUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date remindActualUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date requireUfEmploymentDate()
	 * @method bool hasUfEmploymentDate()
	 * @method bool isUfEmploymentDateFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date fillUfEmploymentDate()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfEmploymentDate(\Bitrix\Main\Type\Date $ufEmploymentDate)
	 * @method bool isUfEmploymentDateChanged()
	 * @method \string getUfWorkBinding()
	 * @method \string remindActualUfWorkBinding()
	 * @method \string requireUfWorkBinding()
	 * @method bool hasUfWorkBinding()
	 * @method bool isUfWorkBindingFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfWorkBinding()
	 * @method \string fillUfWorkBinding()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfWorkBinding(\string $ufWorkBinding)
	 * @method bool isUfWorkBindingChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime requireUfBxdavexCalsync()
	 * @method bool hasUfBxdavexCalsync()
	 * @method bool isUfBxdavexCalsyncFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime fillUfBxdavexCalsync()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfBxdavexCalsync(\Bitrix\Main\Type\DateTime $ufBxdavexCalsync)
	 * @method bool isUfBxdavexCalsyncChanged()
	 * @method \int getUfWorkHours()
	 * @method \int remindActualUfWorkHours()
	 * @method \int requireUfWorkHours()
	 * @method bool hasUfWorkHours()
	 * @method bool isUfWorkHoursFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfWorkHours()
	 * @method \int fillUfWorkHours()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfWorkHours(\int $ufWorkHours)
	 * @method bool isUfWorkHoursChanged()
	 * @method \string getUfViPassword()
	 * @method \string remindActualUfViPassword()
	 * @method \string requireUfViPassword()
	 * @method bool hasUfViPassword()
	 * @method bool isUfViPasswordFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfViPassword()
	 * @method \string fillUfViPassword()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfViPassword(\string $ufViPassword)
	 * @method bool isUfViPasswordChanged()
	 * @method \string getUfViBackphone()
	 * @method \string remindActualUfViBackphone()
	 * @method \string requireUfViBackphone()
	 * @method bool hasUfViBackphone()
	 * @method bool isUfViBackphoneFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfViBackphone()
	 * @method \string fillUfViBackphone()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfViBackphone(\string $ufViBackphone)
	 * @method bool isUfViBackphoneChanged()
	 * @method \string getUfViPhone()
	 * @method \string remindActualUfViPhone()
	 * @method \string requireUfViPhone()
	 * @method bool hasUfViPhone()
	 * @method bool isUfViPhoneFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfViPhone()
	 * @method \string fillUfViPhone()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfViPhone(\string $ufViPhone)
	 * @method bool isUfViPhoneChanged()
	 * @method \string getUfViPhonePassword()
	 * @method \string remindActualUfViPhonePassword()
	 * @method \string requireUfViPhonePassword()
	 * @method bool hasUfViPhonePassword()
	 * @method bool isUfViPhonePasswordFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfViPhonePassword()
	 * @method \string fillUfViPhonePassword()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfViPhonePassword(\string $ufViPhonePassword)
	 * @method bool isUfViPhonePasswordChanged()
	 * @method \string getUfTitleTest()
	 * @method \string remindActualUfTitleTest()
	 * @method \string requireUfTitleTest()
	 * @method bool hasUfTitleTest()
	 * @method bool isUfTitleTestFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTitleTest()
	 * @method \string fillUfTitleTest()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTitleTest(\string $ufTitleTest)
	 * @method bool isUfTitleTestChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime requireUfMwsReactivation()
	 * @method bool hasUfMwsReactivation()
	 * @method bool isUfMwsReactivationFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime fillUfMwsReactivation()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfMwsReactivation(\Bitrix\Main\Type\DateTime $ufMwsReactivation)
	 * @method bool isUfMwsReactivationChanged()
	 * @method \string getUfMwsSub()
	 * @method \string remindActualUfMwsSub()
	 * @method \string requireUfMwsSub()
	 * @method bool hasUfMwsSub()
	 * @method bool isUfMwsSubFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfMwsSub()
	 * @method \string fillUfMwsSub()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfMwsSub(\string $ufMwsSub)
	 * @method bool isUfMwsSubChanged()
	 * @method \int getUfPublic()
	 * @method \int remindActualUfPublic()
	 * @method \int requireUfPublic()
	 * @method bool hasUfPublic()
	 * @method bool isUfPublicFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfPublic()
	 * @method \int fillUfPublic()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfPublic(\int $ufPublic)
	 * @method bool isUfPublicChanged()
	 * @method \string getUfUserCompany()
	 * @method \string remindActualUfUserCompany()
	 * @method \string requireUfUserCompany()
	 * @method bool hasUfUserCompany()
	 * @method bool isUfUserCompanyFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfUserCompany()
	 * @method \string fillUfUserCompany()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfUserCompany(\string $ufUserCompany)
	 * @method bool isUfUserCompanyChanged()
	 * @method \int getUfTimeman()
	 * @method \int remindActualUfTimeman()
	 * @method \int requireUfTimeman()
	 * @method bool hasUfTimeman()
	 * @method bool isUfTimemanFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTimeman()
	 * @method \int fillUfTimeman()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTimeman(\int $ufTimeman)
	 * @method bool isUfTimemanChanged()
	 * @method \string getUfTmMaxStart()
	 * @method \string remindActualUfTmMaxStart()
	 * @method \string requireUfTmMaxStart()
	 * @method bool hasUfTmMaxStart()
	 * @method bool isUfTmMaxStartFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmMaxStart()
	 * @method \string fillUfTmMaxStart()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmMaxStart(\string $ufTmMaxStart)
	 * @method bool isUfTmMaxStartChanged()
	 * @method \string getUfTmMinFinish()
	 * @method \string remindActualUfTmMinFinish()
	 * @method \string requireUfTmMinFinish()
	 * @method bool hasUfTmMinFinish()
	 * @method bool isUfTmMinFinishFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmMinFinish()
	 * @method \string fillUfTmMinFinish()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmMinFinish(\string $ufTmMinFinish)
	 * @method bool isUfTmMinFinishChanged()
	 * @method \string getUfTmMinDuration()
	 * @method \string remindActualUfTmMinDuration()
	 * @method \string requireUfTmMinDuration()
	 * @method bool hasUfTmMinDuration()
	 * @method bool isUfTmMinDurationFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmMinDuration()
	 * @method \string fillUfTmMinDuration()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmMinDuration(\string $ufTmMinDuration)
	 * @method bool isUfTmMinDurationChanged()
	 * @method \int getUfTmReportReq()
	 * @method \int remindActualUfTmReportReq()
	 * @method \int requireUfTmReportReq()
	 * @method bool hasUfTmReportReq()
	 * @method bool isUfTmReportReqFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmReportReq()
	 * @method \int fillUfTmReportReq()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmReportReq(\int $ufTmReportReq)
	 * @method bool isUfTmReportReqChanged()
	 * @method \string getUfTmReportTpl()
	 * @method \string remindActualUfTmReportTpl()
	 * @method \string requireUfTmReportTpl()
	 * @method bool hasUfTmReportTpl()
	 * @method bool isUfTmReportTplFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmReportTpl()
	 * @method \string fillUfTmReportTpl()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmReportTpl(\string[] $ufTmReportTpl)
	 * @method bool isUfTmReportTplChanged()
	 * @method \int getUfTmFree()
	 * @method \int remindActualUfTmFree()
	 * @method \int requireUfTmFree()
	 * @method bool hasUfTmFree()
	 * @method bool isUfTmFreeFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmFree()
	 * @method \int fillUfTmFree()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmFree(\int $ufTmFree)
	 * @method bool isUfTmFreeChanged()
	 * @method \string getUfTmTime()
	 * @method \string remindActualUfTmTime()
	 * @method \string requireUfTmTime()
	 * @method bool hasUfTmTime()
	 * @method bool isUfTmTimeFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmTime()
	 * @method \string fillUfTmTime()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmTime(\string $ufTmTime)
	 * @method bool isUfTmTimeChanged()
	 * @method \string getUfTmDay()
	 * @method \string remindActualUfTmDay()
	 * @method \string requireUfTmDay()
	 * @method bool hasUfTmDay()
	 * @method bool isUfTmDayFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmDay()
	 * @method \string fillUfTmDay()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmDay(\string $ufTmDay)
	 * @method bool isUfTmDayChanged()
	 * @method \string getUfTmReportDate()
	 * @method \string remindActualUfTmReportDate()
	 * @method \string requireUfTmReportDate()
	 * @method bool hasUfTmReportDate()
	 * @method bool isUfTmReportDateFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmReportDate()
	 * @method \string fillUfTmReportDate()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmReportDate(\string $ufTmReportDate)
	 * @method bool isUfTmReportDateChanged()
	 * @method \int getUfReportPeriod()
	 * @method \int remindActualUfReportPeriod()
	 * @method \int requireUfReportPeriod()
	 * @method bool hasUfReportPeriod()
	 * @method bool isUfReportPeriodFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfReportPeriod()
	 * @method \int fillUfReportPeriod()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfReportPeriod(\int $ufReportPeriod)
	 * @method bool isUfReportPeriodChanged()
	 * @method \string getUfDelayTime()
	 * @method \string remindActualUfDelayTime()
	 * @method \string requireUfDelayTime()
	 * @method bool hasUfDelayTime()
	 * @method bool isUfDelayTimeFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfDelayTime()
	 * @method \string fillUfDelayTime()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfDelayTime(\string $ufDelayTime)
	 * @method bool isUfDelayTimeChanged()
	 * @method \string getUfLastReportDate()
	 * @method \string remindActualUfLastReportDate()
	 * @method \string requireUfLastReportDate()
	 * @method bool hasUfLastReportDate()
	 * @method bool isUfLastReportDateFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfLastReportDate()
	 * @method \string fillUfLastReportDate()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfLastReportDate(\string $ufLastReportDate)
	 * @method bool isUfLastReportDateChanged()
	 * @method \string getUfSettingDate()
	 * @method \string remindActualUfSettingDate()
	 * @method \string requireUfSettingDate()
	 * @method bool hasUfSettingDate()
	 * @method bool isUfSettingDateFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfSettingDate()
	 * @method \string fillUfSettingDate()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfSettingDate(\string $ufSettingDate)
	 * @method bool isUfSettingDateChanged()
	 * @method \string getUfTmAllowedDelta()
	 * @method \string remindActualUfTmAllowedDelta()
	 * @method \string requireUfTmAllowedDelta()
	 * @method bool hasUfTmAllowedDelta()
	 * @method bool isUfTmAllowedDeltaFilled()
	 * @method \Bitrix\Voximplant\Model\EO_User unsetUfTmAllowedDelta()
	 * @method \string fillUfTmAllowedDelta()
	 * @method \Bitrix\Voximplant\Model\EO_User setUfTmAllowedDelta(\string $ufTmAllowedDelta)
	 * @method bool isUfTmAllowedDeltaChanged()
	 */
	class EO_User {
		/* @var \Bitrix\Voximplant\Model\UserTable */
		static public $dataClass = '\Bitrix\Voximplant\Model\UserTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Voximplant\Model {
	/**
	 * EO_User_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfDepartmentList()
	 * @method \string[] fillUfDepartment()
	 * @method \string[] getUfPhoneInnerList()
	 * @method \string[] fillUfPhoneInner()
	 * @method \string[] getUfUserCrmEntityList()
	 * @method \string[] fillUfUserCrmEntity()
	 * @method \string[] getUfImSearchList()
	 * @method \string[] fillUfImSearch()
	 * @method \string[] getUfConnectorMd5List()
	 * @method \string[] fillUfConnectorMd5()
	 * @method \int[] getUf1cList()
	 * @method \int[] fillUf1c()
	 * @method \string[] getUfInnList()
	 * @method \string[] fillUfInn()
	 * @method \string[] getUfDistrictList()
	 * @method \string[] fillUfDistrict()
	 * @method \string[] getUfSkypeList()
	 * @method \string[] fillUfSkype()
	 * @method \string[] getUfSkypeLinkList()
	 * @method \string[] fillUfSkypeLink()
	 * @method \string[] getUfZoomList()
	 * @method \string[] fillUfZoom()
	 * @method \string[] getUfTwitterList()
	 * @method \string[] fillUfTwitter()
	 * @method \string[] getUfFacebookList()
	 * @method \string[] fillUfFacebook()
	 * @method \string[] getUfLinkedinList()
	 * @method \string[] fillUfLinkedin()
	 * @method \string[] getUfXingList()
	 * @method \string[] fillUfXing()
	 * @method \string[] getUfWebSitesList()
	 * @method \string[] fillUfWebSites()
	 * @method \string[] getUfSkillsList()
	 * @method \string[] fillUfSkills()
	 * @method \string[] getUfInterestsList()
	 * @method \string[] fillUfInterests()
	 * @method \Bitrix\Main\Type\Date[] getUfEmploymentDateList()
	 * @method \Bitrix\Main\Type\Date[] fillUfEmploymentDate()
	 * @method \string[] getUfWorkBindingList()
	 * @method \string[] fillUfWorkBinding()
	 * @method \Bitrix\Main\Type\DateTime[] getUfBxdavexCalsyncList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfBxdavexCalsync()
	 * @method \int[] getUfWorkHoursList()
	 * @method \int[] fillUfWorkHours()
	 * @method \string[] getUfViPasswordList()
	 * @method \string[] fillUfViPassword()
	 * @method \string[] getUfViBackphoneList()
	 * @method \string[] fillUfViBackphone()
	 * @method \string[] getUfViPhoneList()
	 * @method \string[] fillUfViPhone()
	 * @method \string[] getUfViPhonePasswordList()
	 * @method \string[] fillUfViPhonePassword()
	 * @method \string[] getUfTitleTestList()
	 * @method \string[] fillUfTitleTest()
	 * @method \Bitrix\Main\Type\DateTime[] getUfMwsReactivationList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfMwsReactivation()
	 * @method \string[] getUfMwsSubList()
	 * @method \string[] fillUfMwsSub()
	 * @method \int[] getUfPublicList()
	 * @method \int[] fillUfPublic()
	 * @method \string[] getUfUserCompanyList()
	 * @method \string[] fillUfUserCompany()
	 * @method \int[] getUfTimemanList()
	 * @method \int[] fillUfTimeman()
	 * @method \string[] getUfTmMaxStartList()
	 * @method \string[] fillUfTmMaxStart()
	 * @method \string[] getUfTmMinFinishList()
	 * @method \string[] fillUfTmMinFinish()
	 * @method \string[] getUfTmMinDurationList()
	 * @method \string[] fillUfTmMinDuration()
	 * @method \int[] getUfTmReportReqList()
	 * @method \int[] fillUfTmReportReq()
	 * @method \string[] getUfTmReportTplList()
	 * @method \string[] fillUfTmReportTpl()
	 * @method \int[] getUfTmFreeList()
	 * @method \int[] fillUfTmFree()
	 * @method \string[] getUfTmTimeList()
	 * @method \string[] fillUfTmTime()
	 * @method \string[] getUfTmDayList()
	 * @method \string[] fillUfTmDay()
	 * @method \string[] getUfTmReportDateList()
	 * @method \string[] fillUfTmReportDate()
	 * @method \int[] getUfReportPeriodList()
	 * @method \int[] fillUfReportPeriod()
	 * @method \string[] getUfDelayTimeList()
	 * @method \string[] fillUfDelayTime()
	 * @method \string[] getUfLastReportDateList()
	 * @method \string[] fillUfLastReportDate()
	 * @method \string[] getUfSettingDateList()
	 * @method \string[] fillUfSettingDate()
	 * @method \string[] getUfTmAllowedDeltaList()
	 * @method \string[] fillUfTmAllowedDelta()
	 */
	class EO_User_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Voximplant\Model\UserTable */
		static public $dataClass = '\Bitrix\Voximplant\Model\UserTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Socialnetwork\LogTable */
namespace Bitrix\Socialnetwork {
	/**
	 * EO_Log
	 * @see \Bitrix\Socialnetwork\LogTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfSonetLogDoc()
	 * @method \string remindActualUfSonetLogDoc()
	 * @method \string requireUfSonetLogDoc()
	 * @method bool hasUfSonetLogDoc()
	 * @method bool isUfSonetLogDocFilled()
	 * @method \Bitrix\Socialnetwork\EO_Log unsetUfSonetLogDoc()
	 * @method \string fillUfSonetLogDoc()
	 * @method \Bitrix\Socialnetwork\EO_Log setUfSonetLogDoc(\string[] $ufSonetLogDoc)
	 * @method bool isUfSonetLogDocChanged()
	 * @method \string getUfSonetLogFile()
	 * @method \string remindActualUfSonetLogFile()
	 * @method \string requireUfSonetLogFile()
	 * @method bool hasUfSonetLogFile()
	 * @method bool isUfSonetLogFileFilled()
	 * @method \Bitrix\Socialnetwork\EO_Log unsetUfSonetLogFile()
	 * @method \string fillUfSonetLogFile()
	 * @method \Bitrix\Socialnetwork\EO_Log setUfSonetLogFile(\string[] $ufSonetLogFile)
	 * @method bool isUfSonetLogFileChanged()
	 * @method \int getUfSonetLogUrlPrv()
	 * @method \int remindActualUfSonetLogUrlPrv()
	 * @method \int requireUfSonetLogUrlPrv()
	 * @method bool hasUfSonetLogUrlPrv()
	 * @method bool isUfSonetLogUrlPrvFilled()
	 * @method \Bitrix\Socialnetwork\EO_Log unsetUfSonetLogUrlPrv()
	 * @method \int fillUfSonetLogUrlPrv()
	 * @method \Bitrix\Socialnetwork\EO_Log setUfSonetLogUrlPrv(\int $ufSonetLogUrlPrv)
	 * @method bool isUfSonetLogUrlPrvChanged()
	 */
	class EO_Log {
		/* @var \Bitrix\Socialnetwork\LogTable */
		static public $dataClass = '\Bitrix\Socialnetwork\LogTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Socialnetwork {
	/**
	 * EO_Log_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfSonetLogDocList()
	 * @method \string[] fillUfSonetLogDoc()
	 * @method \string[] getUfSonetLogFileList()
	 * @method \string[] fillUfSonetLogFile()
	 * @method \int[] getUfSonetLogUrlPrvList()
	 * @method \int[] fillUfSonetLogUrlPrv()
	 */
	class EO_Log_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Socialnetwork\LogTable */
		static public $dataClass = '\Bitrix\Socialnetwork\LogTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Socialnetwork\LogCommentTable */
namespace Bitrix\Socialnetwork {
	/**
	 * EO_LogComment
	 * @see \Bitrix\Socialnetwork\LogCommentTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getUfSonetComVer()
	 * @method \int remindActualUfSonetComVer()
	 * @method \int requireUfSonetComVer()
	 * @method bool hasUfSonetComVer()
	 * @method bool isUfSonetComVerFilled()
	 * @method \Bitrix\Socialnetwork\EO_LogComment unsetUfSonetComVer()
	 * @method \int fillUfSonetComVer()
	 * @method \Bitrix\Socialnetwork\EO_LogComment setUfSonetComVer(\int $ufSonetComVer)
	 * @method bool isUfSonetComVerChanged()
	 * @method \string getUfSonetComDoc()
	 * @method \string remindActualUfSonetComDoc()
	 * @method \string requireUfSonetComDoc()
	 * @method bool hasUfSonetComDoc()
	 * @method bool isUfSonetComDocFilled()
	 * @method \Bitrix\Socialnetwork\EO_LogComment unsetUfSonetComDoc()
	 * @method \string fillUfSonetComDoc()
	 * @method \Bitrix\Socialnetwork\EO_LogComment setUfSonetComDoc(\string[] $ufSonetComDoc)
	 * @method bool isUfSonetComDocChanged()
	 * @method \string getUfSonetComFile()
	 * @method \string remindActualUfSonetComFile()
	 * @method \string requireUfSonetComFile()
	 * @method bool hasUfSonetComFile()
	 * @method bool isUfSonetComFileFilled()
	 * @method \Bitrix\Socialnetwork\EO_LogComment unsetUfSonetComFile()
	 * @method \string fillUfSonetComFile()
	 * @method \Bitrix\Socialnetwork\EO_LogComment setUfSonetComFile(\string[] $ufSonetComFile)
	 * @method bool isUfSonetComFileChanged()
	 * @method \int getUfSonetComUrlPrv()
	 * @method \int remindActualUfSonetComUrlPrv()
	 * @method \int requireUfSonetComUrlPrv()
	 * @method bool hasUfSonetComUrlPrv()
	 * @method bool isUfSonetComUrlPrvFilled()
	 * @method \Bitrix\Socialnetwork\EO_LogComment unsetUfSonetComUrlPrv()
	 * @method \int fillUfSonetComUrlPrv()
	 * @method \Bitrix\Socialnetwork\EO_LogComment setUfSonetComUrlPrv(\int $ufSonetComUrlPrv)
	 * @method bool isUfSonetComUrlPrvChanged()
	 */
	class EO_LogComment {
		/* @var \Bitrix\Socialnetwork\LogCommentTable */
		static public $dataClass = '\Bitrix\Socialnetwork\LogCommentTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Socialnetwork {
	/**
	 * EO_LogComment_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getUfSonetComVerList()
	 * @method \int[] fillUfSonetComVer()
	 * @method \string[] getUfSonetComDocList()
	 * @method \string[] fillUfSonetComDoc()
	 * @method \string[] getUfSonetComFileList()
	 * @method \string[] fillUfSonetComFile()
	 * @method \int[] getUfSonetComUrlPrvList()
	 * @method \int[] fillUfSonetComUrlPrv()
	 */
	class EO_LogComment_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Socialnetwork\LogCommentTable */
		static public $dataClass = '\Bitrix\Socialnetwork\LogCommentTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Socialnetwork\WorkgroupTable */
namespace Bitrix\Socialnetwork {
	/**
	 * EO_Workgroup
	 * @see \Bitrix\Socialnetwork\WorkgroupTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfSgDept()
	 * @method \string remindActualUfSgDept()
	 * @method \string requireUfSgDept()
	 * @method bool hasUfSgDept()
	 * @method bool isUfSgDeptFilled()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup unsetUfSgDept()
	 * @method \string fillUfSgDept()
	 * @method \Bitrix\Socialnetwork\EO_Workgroup setUfSgDept(\string[] $ufSgDept)
	 * @method bool isUfSgDeptChanged()
	 */
	class EO_Workgroup {
		/* @var \Bitrix\Socialnetwork\WorkgroupTable */
		static public $dataClass = '\Bitrix\Socialnetwork\WorkgroupTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Socialnetwork {
	/**
	 * EO_Workgroup_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfSgDeptList()
	 * @method \string[] fillUfSgDept()
	 */
	class EO_Workgroup_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Socialnetwork\WorkgroupTable */
		static public $dataClass = '\Bitrix\Socialnetwork\WorkgroupTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Blog\CommentTable */
namespace Bitrix\Blog {
	/**
	 * EO_Comment
	 * @see \Bitrix\Blog\CommentTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfBlogCommentDoc()
	 * @method \string remindActualUfBlogCommentDoc()
	 * @method \string requireUfBlogCommentDoc()
	 * @method bool hasUfBlogCommentDoc()
	 * @method bool isUfBlogCommentDocFilled()
	 * @method \Bitrix\Blog\EO_Comment unsetUfBlogCommentDoc()
	 * @method \string fillUfBlogCommentDoc()
	 * @method \Bitrix\Blog\EO_Comment setUfBlogCommentDoc(\string[] $ufBlogCommentDoc)
	 * @method bool isUfBlogCommentDocChanged()
	 * @method \int getUfBlogCommUrlPrv()
	 * @method \int remindActualUfBlogCommUrlPrv()
	 * @method \int requireUfBlogCommUrlPrv()
	 * @method bool hasUfBlogCommUrlPrv()
	 * @method bool isUfBlogCommUrlPrvFilled()
	 * @method \Bitrix\Blog\EO_Comment unsetUfBlogCommUrlPrv()
	 * @method \int fillUfBlogCommUrlPrv()
	 * @method \Bitrix\Blog\EO_Comment setUfBlogCommUrlPrv(\int $ufBlogCommUrlPrv)
	 * @method bool isUfBlogCommUrlPrvChanged()
	 * @method \string getUfBlogCommentFile()
	 * @method \string remindActualUfBlogCommentFile()
	 * @method \string requireUfBlogCommentFile()
	 * @method bool hasUfBlogCommentFile()
	 * @method bool isUfBlogCommentFileFilled()
	 * @method \Bitrix\Blog\EO_Comment unsetUfBlogCommentFile()
	 * @method \string fillUfBlogCommentFile()
	 * @method \Bitrix\Blog\EO_Comment setUfBlogCommentFile(\string[] $ufBlogCommentFile)
	 * @method bool isUfBlogCommentFileChanged()
	 * @method \int getUfBlogCommentFh()
	 * @method \int remindActualUfBlogCommentFh()
	 * @method \int requireUfBlogCommentFh()
	 * @method bool hasUfBlogCommentFh()
	 * @method bool isUfBlogCommentFhFilled()
	 * @method \Bitrix\Blog\EO_Comment unsetUfBlogCommentFh()
	 * @method \int fillUfBlogCommentFh()
	 * @method \Bitrix\Blog\EO_Comment setUfBlogCommentFh(\int $ufBlogCommentFh)
	 * @method bool isUfBlogCommentFhChanged()
	 */
	class EO_Comment {
		/* @var \Bitrix\Blog\CommentTable */
		static public $dataClass = '\Bitrix\Blog\CommentTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Blog {
	/**
	 * EO_Comment_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfBlogCommentDocList()
	 * @method \string[] fillUfBlogCommentDoc()
	 * @method \int[] getUfBlogCommUrlPrvList()
	 * @method \int[] fillUfBlogCommUrlPrv()
	 * @method \string[] getUfBlogCommentFileList()
	 * @method \string[] fillUfBlogCommentFile()
	 * @method \int[] getUfBlogCommentFhList()
	 * @method \int[] fillUfBlogCommentFh()
	 */
	class EO_Comment_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Blog\CommentTable */
		static public $dataClass = '\Bitrix\Blog\CommentTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Blog\PostTable */
namespace Bitrix\Blog {
	/**
	 * EO_Post
	 * @see \Bitrix\Blog\PostTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfBlogPostDoc()
	 * @method \string remindActualUfBlogPostDoc()
	 * @method \string requireUfBlogPostDoc()
	 * @method bool hasUfBlogPostDoc()
	 * @method bool isUfBlogPostDocFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfBlogPostDoc()
	 * @method \string fillUfBlogPostDoc()
	 * @method \Bitrix\Blog\EO_Post setUfBlogPostDoc(\string[] $ufBlogPostDoc)
	 * @method bool isUfBlogPostDocChanged()
	 * @method \int getUfBlogPostUrlPrv()
	 * @method \int remindActualUfBlogPostUrlPrv()
	 * @method \int requireUfBlogPostUrlPrv()
	 * @method bool hasUfBlogPostUrlPrv()
	 * @method bool isUfBlogPostUrlPrvFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfBlogPostUrlPrv()
	 * @method \int fillUfBlogPostUrlPrv()
	 * @method \Bitrix\Blog\EO_Post setUfBlogPostUrlPrv(\int $ufBlogPostUrlPrv)
	 * @method bool isUfBlogPostUrlPrvChanged()
	 * @method \int getUfGratitude()
	 * @method \int remindActualUfGratitude()
	 * @method \int requireUfGratitude()
	 * @method bool hasUfGratitude()
	 * @method bool isUfGratitudeFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfGratitude()
	 * @method \int fillUfGratitude()
	 * @method \Bitrix\Blog\EO_Post setUfGratitude(\int $ufGratitude)
	 * @method bool isUfGratitudeChanged()
	 * @method \string getUfBlogPostFile()
	 * @method \string remindActualUfBlogPostFile()
	 * @method \string requireUfBlogPostFile()
	 * @method bool hasUfBlogPostFile()
	 * @method bool isUfBlogPostFileFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfBlogPostFile()
	 * @method \string fillUfBlogPostFile()
	 * @method \Bitrix\Blog\EO_Post setUfBlogPostFile(\string[] $ufBlogPostFile)
	 * @method bool isUfBlogPostFileChanged()
	 * @method \string getUfCategoryCode()
	 * @method \string remindActualUfCategoryCode()
	 * @method \string requireUfCategoryCode()
	 * @method bool hasUfCategoryCode()
	 * @method bool isUfCategoryCodeFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfCategoryCode()
	 * @method \string fillUfCategoryCode()
	 * @method \Bitrix\Blog\EO_Post setUfCategoryCode(\string $ufCategoryCode)
	 * @method bool isUfCategoryCodeChanged()
	 * @method \string getUfAnswerId()
	 * @method \string remindActualUfAnswerId()
	 * @method \string requireUfAnswerId()
	 * @method bool hasUfAnswerId()
	 * @method bool isUfAnswerIdFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfAnswerId()
	 * @method \string fillUfAnswerId()
	 * @method \Bitrix\Blog\EO_Post setUfAnswerId(\string[] $ufAnswerId)
	 * @method bool isUfAnswerIdChanged()
	 * @method \string getUfOriginalId()
	 * @method \string remindActualUfOriginalId()
	 * @method \string requireUfOriginalId()
	 * @method bool hasUfOriginalId()
	 * @method bool isUfOriginalIdFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfOriginalId()
	 * @method \string fillUfOriginalId()
	 * @method \Bitrix\Blog\EO_Post setUfOriginalId(\string $ufOriginalId)
	 * @method bool isUfOriginalIdChanged()
	 * @method \int getUfStatus()
	 * @method \int remindActualUfStatus()
	 * @method \int requireUfStatus()
	 * @method bool hasUfStatus()
	 * @method bool isUfStatusFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfStatus()
	 * @method \int fillUfStatus()
	 * @method \Bitrix\Blog\EO_Post setUfStatus(\int $ufStatus)
	 * @method bool isUfStatusChanged()
	 * @method \int getUfMailMessage()
	 * @method \int remindActualUfMailMessage()
	 * @method \int requireUfMailMessage()
	 * @method bool hasUfMailMessage()
	 * @method bool isUfMailMessageFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfMailMessage()
	 * @method \int fillUfMailMessage()
	 * @method \Bitrix\Blog\EO_Post setUfMailMessage(\int $ufMailMessage)
	 * @method bool isUfMailMessageChanged()
	 * @method \int getUfBlogPostImprtnt()
	 * @method \int remindActualUfBlogPostImprtnt()
	 * @method \int requireUfBlogPostImprtnt()
	 * @method bool hasUfBlogPostImprtnt()
	 * @method bool isUfBlogPostImprtntFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfBlogPostImprtnt()
	 * @method \int fillUfBlogPostImprtnt()
	 * @method \Bitrix\Blog\EO_Post setUfBlogPostImprtnt(\int $ufBlogPostImprtnt)
	 * @method bool isUfBlogPostImprtntChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfImprtantDateEnd()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfImprtantDateEnd()
	 * @method \Bitrix\Main\Type\DateTime requireUfImprtantDateEnd()
	 * @method bool hasUfImprtantDateEnd()
	 * @method bool isUfImprtantDateEndFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfImprtantDateEnd()
	 * @method \Bitrix\Main\Type\DateTime fillUfImprtantDateEnd()
	 * @method \Bitrix\Blog\EO_Post setUfImprtantDateEnd(\Bitrix\Main\Type\DateTime $ufImprtantDateEnd)
	 * @method bool isUfImprtantDateEndChanged()
	 * @method \int getUfBlogPostVote()
	 * @method \int remindActualUfBlogPostVote()
	 * @method \int requireUfBlogPostVote()
	 * @method bool hasUfBlogPostVote()
	 * @method bool isUfBlogPostVoteFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfBlogPostVote()
	 * @method \int fillUfBlogPostVote()
	 * @method \Bitrix\Blog\EO_Post setUfBlogPostVote(\int $ufBlogPostVote)
	 * @method bool isUfBlogPostVoteChanged()
	 * @method \int getUfBlogPostFEdit()
	 * @method \int remindActualUfBlogPostFEdit()
	 * @method \int requireUfBlogPostFEdit()
	 * @method bool hasUfBlogPostFEdit()
	 * @method bool isUfBlogPostFEditFilled()
	 * @method \Bitrix\Blog\EO_Post unsetUfBlogPostFEdit()
	 * @method \int fillUfBlogPostFEdit()
	 * @method \Bitrix\Blog\EO_Post setUfBlogPostFEdit(\int $ufBlogPostFEdit)
	 * @method bool isUfBlogPostFEditChanged()
	 */
	class EO_Post {
		/* @var \Bitrix\Blog\PostTable */
		static public $dataClass = '\Bitrix\Blog\PostTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Blog {
	/**
	 * EO_Post_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfBlogPostDocList()
	 * @method \string[] fillUfBlogPostDoc()
	 * @method \int[] getUfBlogPostUrlPrvList()
	 * @method \int[] fillUfBlogPostUrlPrv()
	 * @method \int[] getUfGratitudeList()
	 * @method \int[] fillUfGratitude()
	 * @method \string[] getUfBlogPostFileList()
	 * @method \string[] fillUfBlogPostFile()
	 * @method \string[] getUfCategoryCodeList()
	 * @method \string[] fillUfCategoryCode()
	 * @method \string[] getUfAnswerIdList()
	 * @method \string[] fillUfAnswerId()
	 * @method \string[] getUfOriginalIdList()
	 * @method \string[] fillUfOriginalId()
	 * @method \int[] getUfStatusList()
	 * @method \int[] fillUfStatus()
	 * @method \int[] getUfMailMessageList()
	 * @method \int[] fillUfMailMessage()
	 * @method \int[] getUfBlogPostImprtntList()
	 * @method \int[] fillUfBlogPostImprtnt()
	 * @method \Bitrix\Main\Type\DateTime[] getUfImprtantDateEndList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfImprtantDateEnd()
	 * @method \int[] getUfBlogPostVoteList()
	 * @method \int[] fillUfBlogPostVote()
	 * @method \int[] getUfBlogPostFEditList()
	 * @method \int[] fillUfBlogPostFEdit()
	 */
	class EO_Post_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Blog\PostTable */
		static public $dataClass = '\Bitrix\Blog\PostTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\Result\ResultTable */
namespace Bitrix\Tasks\Internals\Task\Result {
	/**
	 * Result
	 * @see \Bitrix\Tasks\Internals\Task\Result\ResultTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfResultFiles()
	 * @method \string remindActualUfResultFiles()
	 * @method \string requireUfResultFiles()
	 * @method bool hasUfResultFiles()
	 * @method bool isUfResultFilesFilled()
	 * @method \Bitrix\Tasks\Internals\Task\Result\Result unsetUfResultFiles()
	 * @method \string fillUfResultFiles()
	 * @method \Bitrix\Tasks\Internals\Task\Result\Result setUfResultFiles(\string[] $ufResultFiles)
	 * @method bool isUfResultFilesChanged()
	 * @method \int getUfResultPreview()
	 * @method \int remindActualUfResultPreview()
	 * @method \int requireUfResultPreview()
	 * @method bool hasUfResultPreview()
	 * @method bool isUfResultPreviewFilled()
	 * @method \Bitrix\Tasks\Internals\Task\Result\Result unsetUfResultPreview()
	 * @method \int fillUfResultPreview()
	 * @method \Bitrix\Tasks\Internals\Task\Result\Result setUfResultPreview(\int $ufResultPreview)
	 * @method bool isUfResultPreviewChanged()
	 */
	class EO_Result {
		/* @var \Bitrix\Tasks\Internals\Task\Result\ResultTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\Result\ResultTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task\Result {
	/**
	 * EO_Result_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfResultFilesList()
	 * @method \string[] fillUfResultFiles()
	 * @method \int[] getUfResultPreviewList()
	 * @method \int[] fillUfResultPreview()
	 */
	class EO_Result_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\Result\ResultTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\Result\ResultTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Tasks\Internals\Task\CheckListTable */
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_CheckList
	 * @see \Bitrix\Tasks\Internals\Task\CheckListTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfChecklistFiles()
	 * @method \string remindActualUfChecklistFiles()
	 * @method \string requireUfChecklistFiles()
	 * @method bool hasUfChecklistFiles()
	 * @method bool isUfChecklistFilesFilled()
	 * @method \Bitrix\Tasks\Internals\Task\EO_CheckList unsetUfChecklistFiles()
	 * @method \string fillUfChecklistFiles()
	 * @method \Bitrix\Tasks\Internals\Task\EO_CheckList setUfChecklistFiles(\string[] $ufChecklistFiles)
	 * @method bool isUfChecklistFilesChanged()
	 */
	class EO_CheckList {
		/* @var \Bitrix\Tasks\Internals\Task\CheckListTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\CheckListTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Tasks\Internals\Task {
	/**
	 * EO_CheckList_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfChecklistFilesList()
	 * @method \string[] fillUfChecklistFiles()
	 */
	class EO_CheckList_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Tasks\Internals\Task\CheckListTable */
		static public $dataClass = '\Bitrix\Tasks\Internals\Task\CheckListTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Main\UserTable */
namespace Bitrix\Main {
	/**
	 * EO_User
	 * @see \Bitrix\Main\UserTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfDepartment()
	 * @method \string remindActualUfDepartment()
	 * @method \string requireUfDepartment()
	 * @method bool hasUfDepartment()
	 * @method bool isUfDepartmentFilled()
	 * @method \Bitrix\Main\EO_User unsetUfDepartment()
	 * @method \string fillUfDepartment()
	 * @method \Bitrix\Main\EO_User setUfDepartment(\string[] $ufDepartment)
	 * @method bool isUfDepartmentChanged()
	 * @method \string getUfPhoneInner()
	 * @method \string remindActualUfPhoneInner()
	 * @method \string requireUfPhoneInner()
	 * @method bool hasUfPhoneInner()
	 * @method bool isUfPhoneInnerFilled()
	 * @method \Bitrix\Main\EO_User unsetUfPhoneInner()
	 * @method \string fillUfPhoneInner()
	 * @method \Bitrix\Main\EO_User setUfPhoneInner(\string $ufPhoneInner)
	 * @method bool isUfPhoneInnerChanged()
	 * @method \string getUfUserCrmEntity()
	 * @method \string remindActualUfUserCrmEntity()
	 * @method \string requireUfUserCrmEntity()
	 * @method bool hasUfUserCrmEntity()
	 * @method bool isUfUserCrmEntityFilled()
	 * @method \Bitrix\Main\EO_User unsetUfUserCrmEntity()
	 * @method \string fillUfUserCrmEntity()
	 * @method \Bitrix\Main\EO_User setUfUserCrmEntity(\string $ufUserCrmEntity)
	 * @method bool isUfUserCrmEntityChanged()
	 * @method \string getUfImSearch()
	 * @method \string remindActualUfImSearch()
	 * @method \string requireUfImSearch()
	 * @method bool hasUfImSearch()
	 * @method bool isUfImSearchFilled()
	 * @method \Bitrix\Main\EO_User unsetUfImSearch()
	 * @method \string fillUfImSearch()
	 * @method \Bitrix\Main\EO_User setUfImSearch(\string $ufImSearch)
	 * @method bool isUfImSearchChanged()
	 * @method \string getUfConnectorMd5()
	 * @method \string remindActualUfConnectorMd5()
	 * @method \string requireUfConnectorMd5()
	 * @method bool hasUfConnectorMd5()
	 * @method bool isUfConnectorMd5Filled()
	 * @method \Bitrix\Main\EO_User unsetUfConnectorMd5()
	 * @method \string fillUfConnectorMd5()
	 * @method \Bitrix\Main\EO_User setUfConnectorMd5(\string $ufConnectorMd5)
	 * @method bool isUfConnectorMd5Changed()
	 * @method \boolean getUf1c()
	 * @method \boolean remindActualUf1c()
	 * @method \boolean requireUf1c()
	 * @method bool hasUf1c()
	 * @method bool isUf1cFilled()
	 * @method \Bitrix\Main\EO_User unsetUf1c()
	 * @method \boolean fillUf1c()
	 * @method \Bitrix\Main\EO_User setUf1c(\boolean $uf1c)
	 * @method bool isUf1cChanged()
	 * @method \string getUfInn()
	 * @method \string remindActualUfInn()
	 * @method \string requireUfInn()
	 * @method bool hasUfInn()
	 * @method bool isUfInnFilled()
	 * @method \Bitrix\Main\EO_User unsetUfInn()
	 * @method \string fillUfInn()
	 * @method \Bitrix\Main\EO_User setUfInn(\string $ufInn)
	 * @method bool isUfInnChanged()
	 * @method \string getUfDistrict()
	 * @method \string remindActualUfDistrict()
	 * @method \string requireUfDistrict()
	 * @method bool hasUfDistrict()
	 * @method bool isUfDistrictFilled()
	 * @method \Bitrix\Main\EO_User unsetUfDistrict()
	 * @method \string fillUfDistrict()
	 * @method \Bitrix\Main\EO_User setUfDistrict(\string $ufDistrict)
	 * @method bool isUfDistrictChanged()
	 * @method \string getUfSkype()
	 * @method \string remindActualUfSkype()
	 * @method \string requireUfSkype()
	 * @method bool hasUfSkype()
	 * @method bool isUfSkypeFilled()
	 * @method \Bitrix\Main\EO_User unsetUfSkype()
	 * @method \string fillUfSkype()
	 * @method \Bitrix\Main\EO_User setUfSkype(\string $ufSkype)
	 * @method bool isUfSkypeChanged()
	 * @method \string getUfSkypeLink()
	 * @method \string remindActualUfSkypeLink()
	 * @method \string requireUfSkypeLink()
	 * @method bool hasUfSkypeLink()
	 * @method bool isUfSkypeLinkFilled()
	 * @method \Bitrix\Main\EO_User unsetUfSkypeLink()
	 * @method \string fillUfSkypeLink()
	 * @method \Bitrix\Main\EO_User setUfSkypeLink(\string $ufSkypeLink)
	 * @method bool isUfSkypeLinkChanged()
	 * @method \string getUfZoom()
	 * @method \string remindActualUfZoom()
	 * @method \string requireUfZoom()
	 * @method bool hasUfZoom()
	 * @method bool isUfZoomFilled()
	 * @method \Bitrix\Main\EO_User unsetUfZoom()
	 * @method \string fillUfZoom()
	 * @method \Bitrix\Main\EO_User setUfZoom(\string $ufZoom)
	 * @method bool isUfZoomChanged()
	 * @method \string getUfTwitter()
	 * @method \string remindActualUfTwitter()
	 * @method \string requireUfTwitter()
	 * @method bool hasUfTwitter()
	 * @method bool isUfTwitterFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTwitter()
	 * @method \string fillUfTwitter()
	 * @method \Bitrix\Main\EO_User setUfTwitter(\string $ufTwitter)
	 * @method bool isUfTwitterChanged()
	 * @method \string getUfFacebook()
	 * @method \string remindActualUfFacebook()
	 * @method \string requireUfFacebook()
	 * @method bool hasUfFacebook()
	 * @method bool isUfFacebookFilled()
	 * @method \Bitrix\Main\EO_User unsetUfFacebook()
	 * @method \string fillUfFacebook()
	 * @method \Bitrix\Main\EO_User setUfFacebook(\string $ufFacebook)
	 * @method bool isUfFacebookChanged()
	 * @method \string getUfLinkedin()
	 * @method \string remindActualUfLinkedin()
	 * @method \string requireUfLinkedin()
	 * @method bool hasUfLinkedin()
	 * @method bool isUfLinkedinFilled()
	 * @method \Bitrix\Main\EO_User unsetUfLinkedin()
	 * @method \string fillUfLinkedin()
	 * @method \Bitrix\Main\EO_User setUfLinkedin(\string $ufLinkedin)
	 * @method bool isUfLinkedinChanged()
	 * @method \string getUfXing()
	 * @method \string remindActualUfXing()
	 * @method \string requireUfXing()
	 * @method bool hasUfXing()
	 * @method bool isUfXingFilled()
	 * @method \Bitrix\Main\EO_User unsetUfXing()
	 * @method \string fillUfXing()
	 * @method \Bitrix\Main\EO_User setUfXing(\string $ufXing)
	 * @method bool isUfXingChanged()
	 * @method \string getUfWebSites()
	 * @method \string remindActualUfWebSites()
	 * @method \string requireUfWebSites()
	 * @method bool hasUfWebSites()
	 * @method bool isUfWebSitesFilled()
	 * @method \Bitrix\Main\EO_User unsetUfWebSites()
	 * @method \string fillUfWebSites()
	 * @method \Bitrix\Main\EO_User setUfWebSites(\string $ufWebSites)
	 * @method bool isUfWebSitesChanged()
	 * @method \string getUfSkills()
	 * @method \string remindActualUfSkills()
	 * @method \string requireUfSkills()
	 * @method bool hasUfSkills()
	 * @method bool isUfSkillsFilled()
	 * @method \Bitrix\Main\EO_User unsetUfSkills()
	 * @method \string fillUfSkills()
	 * @method \Bitrix\Main\EO_User setUfSkills(\string $ufSkills)
	 * @method bool isUfSkillsChanged()
	 * @method \string getUfInterests()
	 * @method \string remindActualUfInterests()
	 * @method \string requireUfInterests()
	 * @method bool hasUfInterests()
	 * @method bool isUfInterestsFilled()
	 * @method \Bitrix\Main\EO_User unsetUfInterests()
	 * @method \string fillUfInterests()
	 * @method \Bitrix\Main\EO_User setUfInterests(\string $ufInterests)
	 * @method bool isUfInterestsChanged()
	 * @method \Bitrix\Main\Type\Date getUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date remindActualUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date requireUfEmploymentDate()
	 * @method bool hasUfEmploymentDate()
	 * @method bool isUfEmploymentDateFilled()
	 * @method \Bitrix\Main\EO_User unsetUfEmploymentDate()
	 * @method \Bitrix\Main\Type\Date fillUfEmploymentDate()
	 * @method \Bitrix\Main\EO_User setUfEmploymentDate(\Bitrix\Main\Type\Date $ufEmploymentDate)
	 * @method bool isUfEmploymentDateChanged()
	 * @method \string getUfWorkBinding()
	 * @method \string remindActualUfWorkBinding()
	 * @method \string requireUfWorkBinding()
	 * @method bool hasUfWorkBinding()
	 * @method bool isUfWorkBindingFilled()
	 * @method \Bitrix\Main\EO_User unsetUfWorkBinding()
	 * @method \string fillUfWorkBinding()
	 * @method \Bitrix\Main\EO_User setUfWorkBinding(\string $ufWorkBinding)
	 * @method bool isUfWorkBindingChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime requireUfBxdavexCalsync()
	 * @method bool hasUfBxdavexCalsync()
	 * @method bool isUfBxdavexCalsyncFilled()
	 * @method \Bitrix\Main\EO_User unsetUfBxdavexCalsync()
	 * @method \Bitrix\Main\Type\DateTime fillUfBxdavexCalsync()
	 * @method \Bitrix\Main\EO_User setUfBxdavexCalsync(\Bitrix\Main\Type\DateTime $ufBxdavexCalsync)
	 * @method bool isUfBxdavexCalsyncChanged()
	 * @method \int getUfWorkHours()
	 * @method \int remindActualUfWorkHours()
	 * @method \int requireUfWorkHours()
	 * @method bool hasUfWorkHours()
	 * @method bool isUfWorkHoursFilled()
	 * @method \Bitrix\Main\EO_User unsetUfWorkHours()
	 * @method \int fillUfWorkHours()
	 * @method \Bitrix\Main\EO_User setUfWorkHours(\int $ufWorkHours)
	 * @method bool isUfWorkHoursChanged()
	 * @method \string getUfViPassword()
	 * @method \string remindActualUfViPassword()
	 * @method \string requireUfViPassword()
	 * @method bool hasUfViPassword()
	 * @method bool isUfViPasswordFilled()
	 * @method \Bitrix\Main\EO_User unsetUfViPassword()
	 * @method \string fillUfViPassword()
	 * @method \Bitrix\Main\EO_User setUfViPassword(\string $ufViPassword)
	 * @method bool isUfViPasswordChanged()
	 * @method \string getUfViBackphone()
	 * @method \string remindActualUfViBackphone()
	 * @method \string requireUfViBackphone()
	 * @method bool hasUfViBackphone()
	 * @method bool isUfViBackphoneFilled()
	 * @method \Bitrix\Main\EO_User unsetUfViBackphone()
	 * @method \string fillUfViBackphone()
	 * @method \Bitrix\Main\EO_User setUfViBackphone(\string $ufViBackphone)
	 * @method bool isUfViBackphoneChanged()
	 * @method \string getUfViPhone()
	 * @method \string remindActualUfViPhone()
	 * @method \string requireUfViPhone()
	 * @method bool hasUfViPhone()
	 * @method bool isUfViPhoneFilled()
	 * @method \Bitrix\Main\EO_User unsetUfViPhone()
	 * @method \string fillUfViPhone()
	 * @method \Bitrix\Main\EO_User setUfViPhone(\string $ufViPhone)
	 * @method bool isUfViPhoneChanged()
	 * @method \string getUfViPhonePassword()
	 * @method \string remindActualUfViPhonePassword()
	 * @method \string requireUfViPhonePassword()
	 * @method bool hasUfViPhonePassword()
	 * @method bool isUfViPhonePasswordFilled()
	 * @method \Bitrix\Main\EO_User unsetUfViPhonePassword()
	 * @method \string fillUfViPhonePassword()
	 * @method \Bitrix\Main\EO_User setUfViPhonePassword(\string $ufViPhonePassword)
	 * @method bool isUfViPhonePasswordChanged()
	 * @method \string getUfTitleTest()
	 * @method \string remindActualUfTitleTest()
	 * @method \string requireUfTitleTest()
	 * @method bool hasUfTitleTest()
	 * @method bool isUfTitleTestFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTitleTest()
	 * @method \string fillUfTitleTest()
	 * @method \Bitrix\Main\EO_User setUfTitleTest(\string $ufTitleTest)
	 * @method bool isUfTitleTestChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime requireUfMwsReactivation()
	 * @method bool hasUfMwsReactivation()
	 * @method bool isUfMwsReactivationFilled()
	 * @method \Bitrix\Main\EO_User unsetUfMwsReactivation()
	 * @method \Bitrix\Main\Type\DateTime fillUfMwsReactivation()
	 * @method \Bitrix\Main\EO_User setUfMwsReactivation(\Bitrix\Main\Type\DateTime $ufMwsReactivation)
	 * @method bool isUfMwsReactivationChanged()
	 * @method \string getUfMwsSub()
	 * @method \string remindActualUfMwsSub()
	 * @method \string requireUfMwsSub()
	 * @method bool hasUfMwsSub()
	 * @method bool isUfMwsSubFilled()
	 * @method \Bitrix\Main\EO_User unsetUfMwsSub()
	 * @method \string fillUfMwsSub()
	 * @method \Bitrix\Main\EO_User setUfMwsSub(\string $ufMwsSub)
	 * @method bool isUfMwsSubChanged()
	 * @method \boolean getUfPublic()
	 * @method \boolean remindActualUfPublic()
	 * @method \boolean requireUfPublic()
	 * @method bool hasUfPublic()
	 * @method bool isUfPublicFilled()
	 * @method \Bitrix\Main\EO_User unsetUfPublic()
	 * @method \boolean fillUfPublic()
	 * @method \Bitrix\Main\EO_User setUfPublic(\boolean $ufPublic)
	 * @method bool isUfPublicChanged()
	 * @method \string getUfUserCompany()
	 * @method \string remindActualUfUserCompany()
	 * @method \string requireUfUserCompany()
	 * @method bool hasUfUserCompany()
	 * @method bool isUfUserCompanyFilled()
	 * @method \Bitrix\Main\EO_User unsetUfUserCompany()
	 * @method \string fillUfUserCompany()
	 * @method \Bitrix\Main\EO_User setUfUserCompany(\string $ufUserCompany)
	 * @method bool isUfUserCompanyChanged()
	 * @method \int getUfPuser()
	 * @method \int remindActualUfPuser()
	 * @method \int requireUfPuser()
	 * @method bool hasUfPuser()
	 * @method bool isUfPuserFilled()
	 * @method \Bitrix\Main\EO_User unsetUfPuser()
	 * @method \int fillUfPuser()
	 * @method \Bitrix\Main\EO_User setUfPuser(\int $ufPuser)
	 * @method bool isUfPuserChanged()
	 * @method \string getUfUsrMyTestFieldStr3()
	 * @method \string remindActualUfUsrMyTestFieldStr3()
	 * @method \string requireUfUsrMyTestFieldStr3()
	 * @method bool hasUfUsrMyTestFieldStr3()
	 * @method bool isUfUsrMyTestFieldStr3Filled()
	 * @method \Bitrix\Main\EO_User unsetUfUsrMyTestFieldStr3()
	 * @method \string fillUfUsrMyTestFieldStr3()
	 * @method \Bitrix\Main\EO_User setUfUsrMyTestFieldStr3(\string[] $ufUsrMyTestFieldStr3)
	 * @method bool isUfUsrMyTestFieldStr3Changed()
	 * @method \int getUfTimeman()
	 * @method \int remindActualUfTimeman()
	 * @method \int requireUfTimeman()
	 * @method bool hasUfTimeman()
	 * @method bool isUfTimemanFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTimeman()
	 * @method \int fillUfTimeman()
	 * @method \Bitrix\Main\EO_User setUfTimeman(\int $ufTimeman)
	 * @method bool isUfTimemanChanged()
	 * @method \string getUfTmMaxStart()
	 * @method \string remindActualUfTmMaxStart()
	 * @method \string requireUfTmMaxStart()
	 * @method bool hasUfTmMaxStart()
	 * @method bool isUfTmMaxStartFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmMaxStart()
	 * @method \string fillUfTmMaxStart()
	 * @method \Bitrix\Main\EO_User setUfTmMaxStart(\string $ufTmMaxStart)
	 * @method bool isUfTmMaxStartChanged()
	 * @method \string getUfTmMinFinish()
	 * @method \string remindActualUfTmMinFinish()
	 * @method \string requireUfTmMinFinish()
	 * @method bool hasUfTmMinFinish()
	 * @method bool isUfTmMinFinishFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmMinFinish()
	 * @method \string fillUfTmMinFinish()
	 * @method \Bitrix\Main\EO_User setUfTmMinFinish(\string $ufTmMinFinish)
	 * @method bool isUfTmMinFinishChanged()
	 * @method \string getUfTmMinDuration()
	 * @method \string remindActualUfTmMinDuration()
	 * @method \string requireUfTmMinDuration()
	 * @method bool hasUfTmMinDuration()
	 * @method bool isUfTmMinDurationFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmMinDuration()
	 * @method \string fillUfTmMinDuration()
	 * @method \Bitrix\Main\EO_User setUfTmMinDuration(\string $ufTmMinDuration)
	 * @method bool isUfTmMinDurationChanged()
	 * @method \int getUfTmReportReq()
	 * @method \int remindActualUfTmReportReq()
	 * @method \int requireUfTmReportReq()
	 * @method bool hasUfTmReportReq()
	 * @method bool isUfTmReportReqFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmReportReq()
	 * @method \int fillUfTmReportReq()
	 * @method \Bitrix\Main\EO_User setUfTmReportReq(\int $ufTmReportReq)
	 * @method bool isUfTmReportReqChanged()
	 * @method \string getUfTmReportTpl()
	 * @method \string remindActualUfTmReportTpl()
	 * @method \string requireUfTmReportTpl()
	 * @method bool hasUfTmReportTpl()
	 * @method bool isUfTmReportTplFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmReportTpl()
	 * @method \string fillUfTmReportTpl()
	 * @method \Bitrix\Main\EO_User setUfTmReportTpl(\string[] $ufTmReportTpl)
	 * @method bool isUfTmReportTplChanged()
	 * @method \int getUfTmFree()
	 * @method \int remindActualUfTmFree()
	 * @method \int requireUfTmFree()
	 * @method bool hasUfTmFree()
	 * @method bool isUfTmFreeFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmFree()
	 * @method \int fillUfTmFree()
	 * @method \Bitrix\Main\EO_User setUfTmFree(\int $ufTmFree)
	 * @method bool isUfTmFreeChanged()
	 * @method \string getUfTmTime()
	 * @method \string remindActualUfTmTime()
	 * @method \string requireUfTmTime()
	 * @method bool hasUfTmTime()
	 * @method bool isUfTmTimeFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmTime()
	 * @method \string fillUfTmTime()
	 * @method \Bitrix\Main\EO_User setUfTmTime(\string $ufTmTime)
	 * @method bool isUfTmTimeChanged()
	 * @method \string getUfTmDay()
	 * @method \string remindActualUfTmDay()
	 * @method \string requireUfTmDay()
	 * @method bool hasUfTmDay()
	 * @method bool isUfTmDayFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmDay()
	 * @method \string fillUfTmDay()
	 * @method \Bitrix\Main\EO_User setUfTmDay(\string $ufTmDay)
	 * @method bool isUfTmDayChanged()
	 * @method \string getUfTmReportDate()
	 * @method \string remindActualUfTmReportDate()
	 * @method \string requireUfTmReportDate()
	 * @method bool hasUfTmReportDate()
	 * @method bool isUfTmReportDateFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmReportDate()
	 * @method \string fillUfTmReportDate()
	 * @method \Bitrix\Main\EO_User setUfTmReportDate(\string $ufTmReportDate)
	 * @method bool isUfTmReportDateChanged()
	 * @method \int getUfReportPeriod()
	 * @method \int remindActualUfReportPeriod()
	 * @method \int requireUfReportPeriod()
	 * @method bool hasUfReportPeriod()
	 * @method bool isUfReportPeriodFilled()
	 * @method \Bitrix\Main\EO_User unsetUfReportPeriod()
	 * @method \int fillUfReportPeriod()
	 * @method \Bitrix\Main\EO_User setUfReportPeriod(\int $ufReportPeriod)
	 * @method bool isUfReportPeriodChanged()
	 * @method \string getUfDelayTime()
	 * @method \string remindActualUfDelayTime()
	 * @method \string requireUfDelayTime()
	 * @method bool hasUfDelayTime()
	 * @method bool isUfDelayTimeFilled()
	 * @method \Bitrix\Main\EO_User unsetUfDelayTime()
	 * @method \string fillUfDelayTime()
	 * @method \Bitrix\Main\EO_User setUfDelayTime(\string $ufDelayTime)
	 * @method bool isUfDelayTimeChanged()
	 * @method \string getUfLastReportDate()
	 * @method \string remindActualUfLastReportDate()
	 * @method \string requireUfLastReportDate()
	 * @method bool hasUfLastReportDate()
	 * @method bool isUfLastReportDateFilled()
	 * @method \Bitrix\Main\EO_User unsetUfLastReportDate()
	 * @method \string fillUfLastReportDate()
	 * @method \Bitrix\Main\EO_User setUfLastReportDate(\string $ufLastReportDate)
	 * @method bool isUfLastReportDateChanged()
	 * @method \string getUfSettingDate()
	 * @method \string remindActualUfSettingDate()
	 * @method \string requireUfSettingDate()
	 * @method bool hasUfSettingDate()
	 * @method bool isUfSettingDateFilled()
	 * @method \Bitrix\Main\EO_User unsetUfSettingDate()
	 * @method \string fillUfSettingDate()
	 * @method \Bitrix\Main\EO_User setUfSettingDate(\string $ufSettingDate)
	 * @method bool isUfSettingDateChanged()
	 * @method \string getUfTmAllowedDelta()
	 * @method \string remindActualUfTmAllowedDelta()
	 * @method \string requireUfTmAllowedDelta()
	 * @method bool hasUfTmAllowedDelta()
	 * @method bool isUfTmAllowedDeltaFilled()
	 * @method \Bitrix\Main\EO_User unsetUfTmAllowedDelta()
	 * @method \string fillUfTmAllowedDelta()
	 * @method \Bitrix\Main\EO_User setUfTmAllowedDelta(\string $ufTmAllowedDelta)
	 * @method bool isUfTmAllowedDeltaChanged()
	 */
	class EO_User {
		/* @var \Bitrix\Main\UserTable */
		static public $dataClass = '\Bitrix\Main\UserTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Main {
	/**
	 * EO_User_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfDepartmentList()
	 * @method \string[] fillUfDepartment()
	 * @method \string[] getUfPhoneInnerList()
	 * @method \string[] fillUfPhoneInner()
	 * @method \string[] getUfUserCrmEntityList()
	 * @method \string[] fillUfUserCrmEntity()
	 * @method \string[] getUfImSearchList()
	 * @method \string[] fillUfImSearch()
	 * @method \string[] getUfConnectorMd5List()
	 * @method \string[] fillUfConnectorMd5()
	 * @method \boolean[] getUf1cList()
	 * @method \boolean[] fillUf1c()
	 * @method \string[] getUfInnList()
	 * @method \string[] fillUfInn()
	 * @method \string[] getUfDistrictList()
	 * @method \string[] fillUfDistrict()
	 * @method \string[] getUfSkypeList()
	 * @method \string[] fillUfSkype()
	 * @method \string[] getUfSkypeLinkList()
	 * @method \string[] fillUfSkypeLink()
	 * @method \string[] getUfZoomList()
	 * @method \string[] fillUfZoom()
	 * @method \string[] getUfTwitterList()
	 * @method \string[] fillUfTwitter()
	 * @method \string[] getUfFacebookList()
	 * @method \string[] fillUfFacebook()
	 * @method \string[] getUfLinkedinList()
	 * @method \string[] fillUfLinkedin()
	 * @method \string[] getUfXingList()
	 * @method \string[] fillUfXing()
	 * @method \string[] getUfWebSitesList()
	 * @method \string[] fillUfWebSites()
	 * @method \string[] getUfSkillsList()
	 * @method \string[] fillUfSkills()
	 * @method \string[] getUfInterestsList()
	 * @method \string[] fillUfInterests()
	 * @method \Bitrix\Main\Type\Date[] getUfEmploymentDateList()
	 * @method \Bitrix\Main\Type\Date[] fillUfEmploymentDate()
	 * @method \string[] getUfWorkBindingList()
	 * @method \string[] fillUfWorkBinding()
	 * @method \Bitrix\Main\Type\DateTime[] getUfBxdavexCalsyncList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfBxdavexCalsync()
	 * @method \int[] getUfWorkHoursList()
	 * @method \int[] fillUfWorkHours()
	 * @method \string[] getUfViPasswordList()
	 * @method \string[] fillUfViPassword()
	 * @method \string[] getUfViBackphoneList()
	 * @method \string[] fillUfViBackphone()
	 * @method \string[] getUfViPhoneList()
	 * @method \string[] fillUfViPhone()
	 * @method \string[] getUfViPhonePasswordList()
	 * @method \string[] fillUfViPhonePassword()
	 * @method \string[] getUfTitleTestList()
	 * @method \string[] fillUfTitleTest()
	 * @method \Bitrix\Main\Type\DateTime[] getUfMwsReactivationList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfMwsReactivation()
	 * @method \string[] getUfMwsSubList()
	 * @method \string[] fillUfMwsSub()
	 * @method \boolean[] getUfPublicList()
	 * @method \boolean[] fillUfPublic()
	 * @method \string[] getUfUserCompanyList()
	 * @method \string[] fillUfUserCompany()
	 * @method \int[] getUfPuserList()
	 * @method \int[] fillUfPuser()
	 * @method \string[] getUfUsrMyTestFieldStr3List()
	 * @method \string[] fillUfUsrMyTestFieldStr3()
	 * @method \int[] getUfTimemanList()
	 * @method \int[] fillUfTimeman()
	 * @method \string[] getUfTmMaxStartList()
	 * @method \string[] fillUfTmMaxStart()
	 * @method \string[] getUfTmMinFinishList()
	 * @method \string[] fillUfTmMinFinish()
	 * @method \string[] getUfTmMinDurationList()
	 * @method \string[] fillUfTmMinDuration()
	 * @method \int[] getUfTmReportReqList()
	 * @method \int[] fillUfTmReportReq()
	 * @method \string[] getUfTmReportTplList()
	 * @method \string[] fillUfTmReportTpl()
	 * @method \int[] getUfTmFreeList()
	 * @method \int[] fillUfTmFree()
	 * @method \string[] getUfTmTimeList()
	 * @method \string[] fillUfTmTime()
	 * @method \string[] getUfTmDayList()
	 * @method \string[] fillUfTmDay()
	 * @method \string[] getUfTmReportDateList()
	 * @method \string[] fillUfTmReportDate()
	 * @method \int[] getUfReportPeriodList()
	 * @method \int[] fillUfReportPeriod()
	 * @method \string[] getUfDelayTimeList()
	 * @method \string[] fillUfDelayTime()
	 * @method \string[] getUfLastReportDateList()
	 * @method \string[] fillUfLastReportDate()
	 * @method \string[] getUfSettingDateList()
	 * @method \string[] fillUfSettingDate()
	 * @method \string[] getUfTmAllowedDeltaList()
	 * @method \string[] fillUfTmAllowedDelta()
	 */
	class EO_User_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Main\UserTable */
		static public $dataClass = '\Bitrix\Main\UserTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Forum\MessageTable */
namespace Bitrix\Forum {
	/**
	 * EO_Message
	 * @see \Bitrix\Forum\MessageTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string getUfForumMessageDoc()
	 * @method \string remindActualUfForumMessageDoc()
	 * @method \string requireUfForumMessageDoc()
	 * @method bool hasUfForumMessageDoc()
	 * @method bool isUfForumMessageDocFilled()
	 * @method \Bitrix\Forum\EO_Message unsetUfForumMessageDoc()
	 * @method \string fillUfForumMessageDoc()
	 * @method \Bitrix\Forum\EO_Message setUfForumMessageDoc(\string[] $ufForumMessageDoc)
	 * @method bool isUfForumMessageDocChanged()
	 * @method \int getUfForumMessageVer()
	 * @method \int remindActualUfForumMessageVer()
	 * @method \int requireUfForumMessageVer()
	 * @method bool hasUfForumMessageVer()
	 * @method bool isUfForumMessageVerFilled()
	 * @method \Bitrix\Forum\EO_Message unsetUfForumMessageVer()
	 * @method \int fillUfForumMessageVer()
	 * @method \Bitrix\Forum\EO_Message setUfForumMessageVer(\int $ufForumMessageVer)
	 * @method bool isUfForumMessageVerChanged()
	 * @method \int getUfForumMesUrlPrv()
	 * @method \int remindActualUfForumMesUrlPrv()
	 * @method \int requireUfForumMesUrlPrv()
	 * @method bool hasUfForumMesUrlPrv()
	 * @method bool isUfForumMesUrlPrvFilled()
	 * @method \Bitrix\Forum\EO_Message unsetUfForumMesUrlPrv()
	 * @method \int fillUfForumMesUrlPrv()
	 * @method \Bitrix\Forum\EO_Message setUfForumMesUrlPrv(\int $ufForumMesUrlPrv)
	 * @method bool isUfForumMesUrlPrvChanged()
	 * @method \int getUfTaskCommentType()
	 * @method \int remindActualUfTaskCommentType()
	 * @method \int requireUfTaskCommentType()
	 * @method bool hasUfTaskCommentType()
	 * @method bool isUfTaskCommentTypeFilled()
	 * @method \Bitrix\Forum\EO_Message unsetUfTaskCommentType()
	 * @method \int fillUfTaskCommentType()
	 * @method \Bitrix\Forum\EO_Message setUfTaskCommentType(\int $ufTaskCommentType)
	 * @method bool isUfTaskCommentTypeChanged()
	 */
	class EO_Message {
		/* @var \Bitrix\Forum\MessageTable */
		static public $dataClass = '\Bitrix\Forum\MessageTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Forum {
	/**
	 * EO_Message_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \string[] getUfForumMessageDocList()
	 * @method \string[] fillUfForumMessageDoc()
	 * @method \int[] getUfForumMessageVerList()
	 * @method \int[] fillUfForumMessageVer()
	 * @method \int[] getUfForumMesUrlPrvList()
	 * @method \int[] fillUfForumMesUrlPrv()
	 * @method \int[] getUfTaskCommentTypeList()
	 * @method \int[] fillUfTaskCommentType()
	 */
	class EO_Message_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Forum\MessageTable */
		static public $dataClass = '\Bitrix\Forum\MessageTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Catalog\ProductTable */
namespace Bitrix\Catalog {
	/**
	 * EO_Product
	 * @see \Bitrix\Catalog\ProductTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getUfProductGroup()
	 * @method \int remindActualUfProductGroup()
	 * @method \int requireUfProductGroup()
	 * @method bool hasUfProductGroup()
	 * @method bool isUfProductGroupFilled()
	 * @method \Bitrix\Catalog\EO_Product unsetUfProductGroup()
	 * @method \int fillUfProductGroup()
	 * @method \Bitrix\Catalog\EO_Product setUfProductGroup(\int $ufProductGroup)
	 * @method bool isUfProductGroupChanged()
	 * @method \string getUfCompanyId()
	 * @method \string remindActualUfCompanyId()
	 * @method \string requireUfCompanyId()
	 * @method bool hasUfCompanyId()
	 * @method bool isUfCompanyIdFilled()
	 * @method \Bitrix\Catalog\EO_Product unsetUfCompanyId()
	 * @method \string fillUfCompanyId()
	 * @method \Bitrix\Catalog\EO_Product setUfCompanyId(\string $ufCompanyId)
	 * @method bool isUfCompanyIdChanged()
	 */
	class EO_Product {
		/* @var \Bitrix\Catalog\ProductTable */
		static public $dataClass = '\Bitrix\Catalog\ProductTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Catalog {
	/**
	 * EO_Product_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getUfProductGroupList()
	 * @method \int[] fillUfProductGroup()
	 * @method \string[] getUfCompanyIdList()
	 * @method \string[] fillUfCompanyId()
	 */
	class EO_Product_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Catalog\ProductTable */
		static public $dataClass = '\Bitrix\Catalog\ProductTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\InvoiceTable */
namespace Bitrix\Crm {
	/**
	 * EO_Invoice
	 * @see \Bitrix\Crm\InvoiceTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \float getUfCrm624538198ea5c()
	 * @method \float remindActualUfCrm624538198ea5c()
	 * @method \float requireUfCrm624538198ea5c()
	 * @method bool hasUfCrm624538198ea5c()
	 * @method bool isUfCrm624538198ea5cFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm624538198ea5c()
	 * @method \float fillUfCrm624538198ea5c()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm624538198ea5c(\float $ufCrm624538198ea5c)
	 * @method bool isUfCrm624538198ea5cChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm624538199e132()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm624538199e132()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm624538199e132()
	 * @method bool hasUfCrm624538199e132()
	 * @method bool isUfCrm624538199e132Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm624538199e132()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm624538199e132()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm624538199e132(\Bitrix\Main\Type\DateTime $ufCrm624538199e132)
	 * @method bool isUfCrm624538199e132Changed()
	 * @method \float getUfCrm62453819a8993()
	 * @method \float remindActualUfCrm62453819a8993()
	 * @method \float requireUfCrm62453819a8993()
	 * @method bool hasUfCrm62453819a8993()
	 * @method bool isUfCrm62453819a8993Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819a8993()
	 * @method \float fillUfCrm62453819a8993()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819a8993(\float $ufCrm62453819a8993)
	 * @method bool isUfCrm62453819a8993Changed()
	 * @method \float getUfCrm62453819b47d5()
	 * @method \float remindActualUfCrm62453819b47d5()
	 * @method \float requireUfCrm62453819b47d5()
	 * @method bool hasUfCrm62453819b47d5()
	 * @method bool isUfCrm62453819b47d5Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819b47d5()
	 * @method \float fillUfCrm62453819b47d5()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819b47d5(\float $ufCrm62453819b47d5)
	 * @method bool isUfCrm62453819b47d5Changed()
	 * @method \float getUfCrm62453819bec64()
	 * @method \float remindActualUfCrm62453819bec64()
	 * @method \float requireUfCrm62453819bec64()
	 * @method bool hasUfCrm62453819bec64()
	 * @method bool isUfCrm62453819bec64Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819bec64()
	 * @method \float fillUfCrm62453819bec64()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819bec64(\float $ufCrm62453819bec64)
	 * @method bool isUfCrm62453819bec64Changed()
	 * @method \float getUfCrm62453819c94e6()
	 * @method \float remindActualUfCrm62453819c94e6()
	 * @method \float requireUfCrm62453819c94e6()
	 * @method bool hasUfCrm62453819c94e6()
	 * @method bool isUfCrm62453819c94e6Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819c94e6()
	 * @method \float fillUfCrm62453819c94e6()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819c94e6(\float $ufCrm62453819c94e6)
	 * @method bool isUfCrm62453819c94e6Changed()
	 * @method \int getUfCrm62453819d3ac9()
	 * @method \int remindActualUfCrm62453819d3ac9()
	 * @method \int requireUfCrm62453819d3ac9()
	 * @method bool hasUfCrm62453819d3ac9()
	 * @method bool isUfCrm62453819d3ac9Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819d3ac9()
	 * @method \int fillUfCrm62453819d3ac9()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819d3ac9(\int $ufCrm62453819d3ac9)
	 * @method bool isUfCrm62453819d3ac9Changed()
	 * @method \string getUfCrm62453819df0dd()
	 * @method \string remindActualUfCrm62453819df0dd()
	 * @method \string requireUfCrm62453819df0dd()
	 * @method bool hasUfCrm62453819df0dd()
	 * @method bool isUfCrm62453819df0ddFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819df0dd()
	 * @method \string fillUfCrm62453819df0dd()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819df0dd(\string $ufCrm62453819df0dd)
	 * @method bool isUfCrm62453819df0ddChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm62453819ea1c1()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm62453819ea1c1()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm62453819ea1c1()
	 * @method bool hasUfCrm62453819ea1c1()
	 * @method bool isUfCrm62453819ea1c1Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm62453819ea1c1()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm62453819ea1c1()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm62453819ea1c1(\Bitrix\Main\Type\DateTime $ufCrm62453819ea1c1)
	 * @method bool isUfCrm62453819ea1c1Changed()
	 * @method \float getUfCrm6245381a021c7()
	 * @method \float remindActualUfCrm6245381a021c7()
	 * @method \float requireUfCrm6245381a021c7()
	 * @method bool hasUfCrm6245381a021c7()
	 * @method bool isUfCrm6245381a021c7Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a021c7()
	 * @method \float fillUfCrm6245381a021c7()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a021c7(\float $ufCrm6245381a021c7)
	 * @method bool isUfCrm6245381a021c7Changed()
	 * @method \string getUfCrm6245381a0ce52()
	 * @method \string remindActualUfCrm6245381a0ce52()
	 * @method \string requireUfCrm6245381a0ce52()
	 * @method bool hasUfCrm6245381a0ce52()
	 * @method bool isUfCrm6245381a0ce52Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a0ce52()
	 * @method \string fillUfCrm6245381a0ce52()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a0ce52(\string[] $ufCrm6245381a0ce52)
	 * @method bool isUfCrm6245381a0ce52Changed()
	 * @method \string getUfCrm6245381a1edeb()
	 * @method \string remindActualUfCrm6245381a1edeb()
	 * @method \string requireUfCrm6245381a1edeb()
	 * @method bool hasUfCrm6245381a1edeb()
	 * @method bool isUfCrm6245381a1edebFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a1edeb()
	 * @method \string fillUfCrm6245381a1edeb()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a1edeb(\string $ufCrm6245381a1edeb)
	 * @method bool isUfCrm6245381a1edebChanged()
	 * @method \string getUfCrm6245381a29545()
	 * @method \string remindActualUfCrm6245381a29545()
	 * @method \string requireUfCrm6245381a29545()
	 * @method bool hasUfCrm6245381a29545()
	 * @method bool isUfCrm6245381a29545Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a29545()
	 * @method \string fillUfCrm6245381a29545()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a29545(\string $ufCrm6245381a29545)
	 * @method bool isUfCrm6245381a29545Changed()
	 * @method \string getUfCrm6245381a33d21()
	 * @method \string remindActualUfCrm6245381a33d21()
	 * @method \string requireUfCrm6245381a33d21()
	 * @method bool hasUfCrm6245381a33d21()
	 * @method bool isUfCrm6245381a33d21Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a33d21()
	 * @method \string fillUfCrm6245381a33d21()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a33d21(\string $ufCrm6245381a33d21)
	 * @method bool isUfCrm6245381a33d21Changed()
	 * @method \int getUfCrm6245381a3def9()
	 * @method \int remindActualUfCrm6245381a3def9()
	 * @method \int requireUfCrm6245381a3def9()
	 * @method bool hasUfCrm6245381a3def9()
	 * @method bool isUfCrm6245381a3def9Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a3def9()
	 * @method \int fillUfCrm6245381a3def9()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a3def9(\int $ufCrm6245381a3def9)
	 * @method bool isUfCrm6245381a3def9Changed()
	 * @method \string getUfCrm6245381a49adc()
	 * @method \string remindActualUfCrm6245381a49adc()
	 * @method \string requireUfCrm6245381a49adc()
	 * @method bool hasUfCrm6245381a49adc()
	 * @method bool isUfCrm6245381a49adcFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a49adc()
	 * @method \string fillUfCrm6245381a49adc()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a49adc(\string[] $ufCrm6245381a49adc)
	 * @method bool isUfCrm6245381a49adcChanged()
	 * @method \int getUfCrm6245381a5409b()
	 * @method \int remindActualUfCrm6245381a5409b()
	 * @method \int requireUfCrm6245381a5409b()
	 * @method bool hasUfCrm6245381a5409b()
	 * @method bool isUfCrm6245381a5409bFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6245381a5409b()
	 * @method \int fillUfCrm6245381a5409b()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6245381a5409b(\int $ufCrm6245381a5409b)
	 * @method bool isUfCrm6245381a5409bChanged()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b35f3a()
	 * @method bool hasUfCrm6368b35b35f3a()
	 * @method bool isUfCrm6368b35b35f3aFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b35f3a()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b35f3a(\Bitrix\Main\Type\Date $ufCrm6368b35b35f3a)
	 * @method bool isUfCrm6368b35b35f3aChanged()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b46406()
	 * @method bool hasUfCrm6368b35b46406()
	 * @method bool isUfCrm6368b35b46406Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b46406()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b46406(\Bitrix\Main\Type\Date $ufCrm6368b35b46406)
	 * @method bool isUfCrm6368b35b46406Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b52307()
	 * @method bool hasUfCrm6368b35b52307()
	 * @method bool isUfCrm6368b35b52307Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b52307()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b52307(\Bitrix\Main\Type\Date $ufCrm6368b35b52307)
	 * @method bool isUfCrm6368b35b52307Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b5de55()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b5de55()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b5de55()
	 * @method bool hasUfCrm6368b35b5de55()
	 * @method bool isUfCrm6368b35b5de55Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b5de55()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b5de55()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b5de55(\Bitrix\Main\Type\Date $ufCrm6368b35b5de55)
	 * @method bool isUfCrm6368b35b5de55Changed()
	 * @method \string getUfCrm6368b35b68f9c()
	 * @method \string remindActualUfCrm6368b35b68f9c()
	 * @method \string requireUfCrm6368b35b68f9c()
	 * @method bool hasUfCrm6368b35b68f9c()
	 * @method bool isUfCrm6368b35b68f9cFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b68f9c()
	 * @method \string fillUfCrm6368b35b68f9c()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b68f9c(\string[] $ufCrm6368b35b68f9c)
	 * @method bool isUfCrm6368b35b68f9cChanged()
	 * @method \float getUfCrm6368b35b73ea0()
	 * @method \float remindActualUfCrm6368b35b73ea0()
	 * @method \float requireUfCrm6368b35b73ea0()
	 * @method bool hasUfCrm6368b35b73ea0()
	 * @method bool isUfCrm6368b35b73ea0Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b73ea0()
	 * @method \float fillUfCrm6368b35b73ea0()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b73ea0(\float $ufCrm6368b35b73ea0)
	 * @method bool isUfCrm6368b35b73ea0Changed()
	 * @method \float getUfCrm6368b35b7f5e1()
	 * @method \float remindActualUfCrm6368b35b7f5e1()
	 * @method \float requireUfCrm6368b35b7f5e1()
	 * @method bool hasUfCrm6368b35b7f5e1()
	 * @method bool isUfCrm6368b35b7f5e1Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b7f5e1()
	 * @method \float fillUfCrm6368b35b7f5e1()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b7f5e1(\float $ufCrm6368b35b7f5e1)
	 * @method bool isUfCrm6368b35b7f5e1Changed()
	 * @method \int getUfCrm6368b35b8b249()
	 * @method \int remindActualUfCrm6368b35b8b249()
	 * @method \int requireUfCrm6368b35b8b249()
	 * @method bool hasUfCrm6368b35b8b249()
	 * @method bool isUfCrm6368b35b8b249Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b8b249()
	 * @method \int fillUfCrm6368b35b8b249()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b8b249(\int $ufCrm6368b35b8b249)
	 * @method bool isUfCrm6368b35b8b249Changed()
	 * @method \float getUfCrm6368b35b968d9()
	 * @method \float remindActualUfCrm6368b35b968d9()
	 * @method \float requireUfCrm6368b35b968d9()
	 * @method bool hasUfCrm6368b35b968d9()
	 * @method bool isUfCrm6368b35b968d9Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35b968d9()
	 * @method \float fillUfCrm6368b35b968d9()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35b968d9(\float $ufCrm6368b35b968d9)
	 * @method bool isUfCrm6368b35b968d9Changed()
	 * @method \string getUfCrm6368b35ba1eb9()
	 * @method \string remindActualUfCrm6368b35ba1eb9()
	 * @method \string requireUfCrm6368b35ba1eb9()
	 * @method bool hasUfCrm6368b35ba1eb9()
	 * @method bool isUfCrm6368b35ba1eb9Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35ba1eb9()
	 * @method \string fillUfCrm6368b35ba1eb9()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35ba1eb9(\string $ufCrm6368b35ba1eb9)
	 * @method bool isUfCrm6368b35ba1eb9Changed()
	 * @method \int getUfCrm6368b35bad5e5()
	 * @method \int remindActualUfCrm6368b35bad5e5()
	 * @method \int requireUfCrm6368b35bad5e5()
	 * @method bool hasUfCrm6368b35bad5e5()
	 * @method bool isUfCrm6368b35bad5e5Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35bad5e5()
	 * @method \int fillUfCrm6368b35bad5e5()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35bad5e5(\int $ufCrm6368b35bad5e5)
	 * @method bool isUfCrm6368b35bad5e5Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bb997a()
	 * @method bool hasUfCrm6368b35bb997a()
	 * @method bool isUfCrm6368b35bb997aFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bb997a()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35bb997a(\Bitrix\Main\Type\DateTime $ufCrm6368b35bb997a)
	 * @method bool isUfCrm6368b35bb997aChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bc512e()
	 * @method bool hasUfCrm6368b35bc512e()
	 * @method bool isUfCrm6368b35bc512eFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bc512e()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35bc512e(\Bitrix\Main\Type\DateTime $ufCrm6368b35bc512e)
	 * @method bool isUfCrm6368b35bc512eChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bd02c7()
	 * @method bool hasUfCrm6368b35bd02c7()
	 * @method bool isUfCrm6368b35bd02c7Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bd02c7()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35bd02c7(\Bitrix\Main\Type\DateTime $ufCrm6368b35bd02c7)
	 * @method bool isUfCrm6368b35bd02c7Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bdb44f()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bdb44f()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bdb44f()
	 * @method bool hasUfCrm6368b35bdb44f()
	 * @method bool isUfCrm6368b35bdb44fFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35bdb44f()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bdb44f()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35bdb44f(\Bitrix\Main\Type\DateTime $ufCrm6368b35bdb44f)
	 * @method bool isUfCrm6368b35bdb44fChanged()
	 * @method \int getUfCrm6368b35be63c7()
	 * @method \int remindActualUfCrm6368b35be63c7()
	 * @method \int requireUfCrm6368b35be63c7()
	 * @method bool hasUfCrm6368b35be63c7()
	 * @method bool isUfCrm6368b35be63c7Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35be63c7()
	 * @method \int fillUfCrm6368b35be63c7()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35be63c7(\int $ufCrm6368b35be63c7)
	 * @method bool isUfCrm6368b35be63c7Changed()
	 * @method \string getUfCrm6368b35c05ccf()
	 * @method \string remindActualUfCrm6368b35c05ccf()
	 * @method \string requireUfCrm6368b35c05ccf()
	 * @method bool hasUfCrm6368b35c05ccf()
	 * @method bool isUfCrm6368b35c05ccfFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c05ccf()
	 * @method \string fillUfCrm6368b35c05ccf()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c05ccf(\string[] $ufCrm6368b35c05ccf)
	 * @method bool isUfCrm6368b35c05ccfChanged()
	 * @method \int getUfCrm6368b35c10fdd()
	 * @method \int remindActualUfCrm6368b35c10fdd()
	 * @method \int requireUfCrm6368b35c10fdd()
	 * @method bool hasUfCrm6368b35c10fdd()
	 * @method bool isUfCrm6368b35c10fddFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c10fdd()
	 * @method \int fillUfCrm6368b35c10fdd()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c10fdd(\int $ufCrm6368b35c10fdd)
	 * @method bool isUfCrm6368b35c10fddChanged()
	 * @method \string getUfCrm6368b35c1ca4b()
	 * @method \string remindActualUfCrm6368b35c1ca4b()
	 * @method \string requireUfCrm6368b35c1ca4b()
	 * @method bool hasUfCrm6368b35c1ca4b()
	 * @method bool isUfCrm6368b35c1ca4bFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c1ca4b()
	 * @method \string fillUfCrm6368b35c1ca4b()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c1ca4b(\string $ufCrm6368b35c1ca4b)
	 * @method bool isUfCrm6368b35c1ca4bChanged()
	 * @method \int getUfCrm6368b35c283c4()
	 * @method \int remindActualUfCrm6368b35c283c4()
	 * @method \int requireUfCrm6368b35c283c4()
	 * @method bool hasUfCrm6368b35c283c4()
	 * @method bool isUfCrm6368b35c283c4Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c283c4()
	 * @method \int fillUfCrm6368b35c283c4()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c283c4(\int $ufCrm6368b35c283c4)
	 * @method bool isUfCrm6368b35c283c4Changed()
	 * @method \int getUfCrm6368b35c353ce()
	 * @method \int remindActualUfCrm6368b35c353ce()
	 * @method \int requireUfCrm6368b35c353ce()
	 * @method bool hasUfCrm6368b35c353ce()
	 * @method bool isUfCrm6368b35c353ceFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c353ce()
	 * @method \int fillUfCrm6368b35c353ce()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c353ce(\int $ufCrm6368b35c353ce)
	 * @method bool isUfCrm6368b35c353ceChanged()
	 * @method \string getUfCrm6368b35c41b50()
	 * @method \string remindActualUfCrm6368b35c41b50()
	 * @method \string requireUfCrm6368b35c41b50()
	 * @method bool hasUfCrm6368b35c41b50()
	 * @method bool isUfCrm6368b35c41b50Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c41b50()
	 * @method \string fillUfCrm6368b35c41b50()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c41b50(\string $ufCrm6368b35c41b50)
	 * @method bool isUfCrm6368b35c41b50Changed()
	 * @method \int getUfCrm6368b35c4cfbd()
	 * @method \int remindActualUfCrm6368b35c4cfbd()
	 * @method \int requireUfCrm6368b35c4cfbd()
	 * @method bool hasUfCrm6368b35c4cfbd()
	 * @method bool isUfCrm6368b35c4cfbdFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c4cfbd()
	 * @method \int fillUfCrm6368b35c4cfbd()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c4cfbd(\int $ufCrm6368b35c4cfbd)
	 * @method bool isUfCrm6368b35c4cfbdChanged()
	 * @method \string getUfCrm6368b35c5967a()
	 * @method \string remindActualUfCrm6368b35c5967a()
	 * @method \string requireUfCrm6368b35c5967a()
	 * @method bool hasUfCrm6368b35c5967a()
	 * @method bool isUfCrm6368b35c5967aFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c5967a()
	 * @method \string fillUfCrm6368b35c5967a()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c5967a(\string[] $ufCrm6368b35c5967a)
	 * @method bool isUfCrm6368b35c5967aChanged()
	 * @method \string getUfCrm6368b35c660a1()
	 * @method \string remindActualUfCrm6368b35c660a1()
	 * @method \string requireUfCrm6368b35c660a1()
	 * @method bool hasUfCrm6368b35c660a1()
	 * @method bool isUfCrm6368b35c660a1Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c660a1()
	 * @method \string fillUfCrm6368b35c660a1()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c660a1(\string $ufCrm6368b35c660a1)
	 * @method bool isUfCrm6368b35c660a1Changed()
	 * @method \string getUfCrm6368b35c71e02()
	 * @method \string remindActualUfCrm6368b35c71e02()
	 * @method \string requireUfCrm6368b35c71e02()
	 * @method bool hasUfCrm6368b35c71e02()
	 * @method bool isUfCrm6368b35c71e02Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c71e02()
	 * @method \string fillUfCrm6368b35c71e02()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c71e02(\string $ufCrm6368b35c71e02)
	 * @method bool isUfCrm6368b35c71e02Changed()
	 * @method \int getUfCrm6368b35c7cfb3()
	 * @method \int remindActualUfCrm6368b35c7cfb3()
	 * @method \int requireUfCrm6368b35c7cfb3()
	 * @method bool hasUfCrm6368b35c7cfb3()
	 * @method bool isUfCrm6368b35c7cfb3Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c7cfb3()
	 * @method \int fillUfCrm6368b35c7cfb3()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c7cfb3(\int $ufCrm6368b35c7cfb3)
	 * @method bool isUfCrm6368b35c7cfb3Changed()
	 * @method \string getUfCrm6368b35c8a2b5()
	 * @method \string remindActualUfCrm6368b35c8a2b5()
	 * @method \string requireUfCrm6368b35c8a2b5()
	 * @method bool hasUfCrm6368b35c8a2b5()
	 * @method bool isUfCrm6368b35c8a2b5Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c8a2b5()
	 * @method \string fillUfCrm6368b35c8a2b5()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c8a2b5(\string $ufCrm6368b35c8a2b5)
	 * @method bool isUfCrm6368b35c8a2b5Changed()
	 * @method \string getUfCrm6368b35c9657f()
	 * @method \string remindActualUfCrm6368b35c9657f()
	 * @method \string requireUfCrm6368b35c9657f()
	 * @method bool hasUfCrm6368b35c9657f()
	 * @method bool isUfCrm6368b35c9657fFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35c9657f()
	 * @method \string fillUfCrm6368b35c9657f()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35c9657f(\string[] $ufCrm6368b35c9657f)
	 * @method bool isUfCrm6368b35c9657fChanged()
	 * @method \string getUfCrm6368b35ca240e()
	 * @method \string remindActualUfCrm6368b35ca240e()
	 * @method \string requireUfCrm6368b35ca240e()
	 * @method bool hasUfCrm6368b35ca240e()
	 * @method bool isUfCrm6368b35ca240eFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35ca240e()
	 * @method \string fillUfCrm6368b35ca240e()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35ca240e(\string[] $ufCrm6368b35ca240e)
	 * @method bool isUfCrm6368b35ca240eChanged()
	 * @method \int getUfCrm6368b35cad37e()
	 * @method \int remindActualUfCrm6368b35cad37e()
	 * @method \int requireUfCrm6368b35cad37e()
	 * @method bool hasUfCrm6368b35cad37e()
	 * @method bool isUfCrm6368b35cad37eFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35cad37e()
	 * @method \int fillUfCrm6368b35cad37e()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35cad37e(\int $ufCrm6368b35cad37e)
	 * @method bool isUfCrm6368b35cad37eChanged()
	 * @method \int getUfCrm6368b35cb8ab5()
	 * @method \int remindActualUfCrm6368b35cb8ab5()
	 * @method \int requireUfCrm6368b35cb8ab5()
	 * @method bool hasUfCrm6368b35cb8ab5()
	 * @method bool isUfCrm6368b35cb8ab5Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35cb8ab5()
	 * @method \int fillUfCrm6368b35cb8ab5()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35cb8ab5(\int $ufCrm6368b35cb8ab5)
	 * @method bool isUfCrm6368b35cb8ab5Changed()
	 * @method \string getUfCrm6368b35cc3c01()
	 * @method \string remindActualUfCrm6368b35cc3c01()
	 * @method \string requireUfCrm6368b35cc3c01()
	 * @method bool hasUfCrm6368b35cc3c01()
	 * @method bool isUfCrm6368b35cc3c01Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35cc3c01()
	 * @method \string fillUfCrm6368b35cc3c01()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35cc3c01(\string $ufCrm6368b35cc3c01)
	 * @method bool isUfCrm6368b35cc3c01Changed()
	 * @method \string getUfCrm6368b35ccf026()
	 * @method \string remindActualUfCrm6368b35ccf026()
	 * @method \string requireUfCrm6368b35ccf026()
	 * @method bool hasUfCrm6368b35ccf026()
	 * @method bool isUfCrm6368b35ccf026Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35ccf026()
	 * @method \string fillUfCrm6368b35ccf026()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35ccf026(\string $ufCrm6368b35ccf026)
	 * @method bool isUfCrm6368b35ccf026Changed()
	 * @method \string getUfCrm6368b35cd9fe3()
	 * @method \string remindActualUfCrm6368b35cd9fe3()
	 * @method \string requireUfCrm6368b35cd9fe3()
	 * @method bool hasUfCrm6368b35cd9fe3()
	 * @method bool isUfCrm6368b35cd9fe3Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35cd9fe3()
	 * @method \string fillUfCrm6368b35cd9fe3()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35cd9fe3(\string $ufCrm6368b35cd9fe3)
	 * @method bool isUfCrm6368b35cd9fe3Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35ce5498()
	 * @method bool hasUfCrm6368b35ce5498()
	 * @method bool isUfCrm6368b35ce5498Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35ce5498()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35ce5498(\Bitrix\Main\Type\Date $ufCrm6368b35ce5498)
	 * @method bool isUfCrm6368b35ce5498Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35cf070c()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35cf070c()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35cf070c()
	 * @method bool hasUfCrm6368b35cf070c()
	 * @method bool isUfCrm6368b35cf070cFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35cf070c()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35cf070c()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35cf070c(\Bitrix\Main\Type\Date $ufCrm6368b35cf070c)
	 * @method bool isUfCrm6368b35cf070cChanged()
	 * @method \string getUfCrm6368b35d07c79()
	 * @method \string remindActualUfCrm6368b35d07c79()
	 * @method \string requireUfCrm6368b35d07c79()
	 * @method bool hasUfCrm6368b35d07c79()
	 * @method bool isUfCrm6368b35d07c79Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d07c79()
	 * @method \string fillUfCrm6368b35d07c79()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d07c79(\string $ufCrm6368b35d07c79)
	 * @method bool isUfCrm6368b35d07c79Changed()
	 * @method \string getUfCrm6368b35d136a2()
	 * @method \string remindActualUfCrm6368b35d136a2()
	 * @method \string requireUfCrm6368b35d136a2()
	 * @method bool hasUfCrm6368b35d136a2()
	 * @method bool isUfCrm6368b35d136a2Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d136a2()
	 * @method \string fillUfCrm6368b35d136a2()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d136a2(\string $ufCrm6368b35d136a2)
	 * @method bool isUfCrm6368b35d136a2Changed()
	 * @method \int getUfCrm6368b35d1e9b3()
	 * @method \int remindActualUfCrm6368b35d1e9b3()
	 * @method \int requireUfCrm6368b35d1e9b3()
	 * @method bool hasUfCrm6368b35d1e9b3()
	 * @method bool isUfCrm6368b35d1e9b3Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d1e9b3()
	 * @method \int fillUfCrm6368b35d1e9b3()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d1e9b3(\int $ufCrm6368b35d1e9b3)
	 * @method bool isUfCrm6368b35d1e9b3Changed()
	 * @method \int getUfCrm6368b35d29d41()
	 * @method \int remindActualUfCrm6368b35d29d41()
	 * @method \int requireUfCrm6368b35d29d41()
	 * @method bool hasUfCrm6368b35d29d41()
	 * @method bool isUfCrm6368b35d29d41Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d29d41()
	 * @method \int fillUfCrm6368b35d29d41()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d29d41(\int $ufCrm6368b35d29d41)
	 * @method bool isUfCrm6368b35d29d41Changed()
	 * @method \string getUfCrm6368b35d35811()
	 * @method \string remindActualUfCrm6368b35d35811()
	 * @method \string requireUfCrm6368b35d35811()
	 * @method bool hasUfCrm6368b35d35811()
	 * @method bool isUfCrm6368b35d35811Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d35811()
	 * @method \string fillUfCrm6368b35d35811()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d35811(\string $ufCrm6368b35d35811)
	 * @method bool isUfCrm6368b35d35811Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35d40a00()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35d40a00()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35d40a00()
	 * @method bool hasUfCrm6368b35d40a00()
	 * @method bool isUfCrm6368b35d40a00Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d40a00()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35d40a00()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d40a00(\Bitrix\Main\Type\Date $ufCrm6368b35d40a00)
	 * @method bool isUfCrm6368b35d40a00Changed()
	 * @method \string getUfCrm6368b35d4b7f3()
	 * @method \string remindActualUfCrm6368b35d4b7f3()
	 * @method \string requireUfCrm6368b35d4b7f3()
	 * @method bool hasUfCrm6368b35d4b7f3()
	 * @method bool isUfCrm6368b35d4b7f3Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d4b7f3()
	 * @method \string fillUfCrm6368b35d4b7f3()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d4b7f3(\string $ufCrm6368b35d4b7f3)
	 * @method bool isUfCrm6368b35d4b7f3Changed()
	 * @method \string getUfCrm6368b35d567d5()
	 * @method \string remindActualUfCrm6368b35d567d5()
	 * @method \string requireUfCrm6368b35d567d5()
	 * @method bool hasUfCrm6368b35d567d5()
	 * @method bool isUfCrm6368b35d567d5Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d567d5()
	 * @method \string fillUfCrm6368b35d567d5()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d567d5(\string $ufCrm6368b35d567d5)
	 * @method bool isUfCrm6368b35d567d5Changed()
	 * @method \string getUfCrm6368b35d61e96()
	 * @method \string remindActualUfCrm6368b35d61e96()
	 * @method \string requireUfCrm6368b35d61e96()
	 * @method bool hasUfCrm6368b35d61e96()
	 * @method bool isUfCrm6368b35d61e96Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d61e96()
	 * @method \string fillUfCrm6368b35d61e96()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d61e96(\string $ufCrm6368b35d61e96)
	 * @method bool isUfCrm6368b35d61e96Changed()
	 * @method \string getUfCrm6368b35d6ce0c()
	 * @method \string remindActualUfCrm6368b35d6ce0c()
	 * @method \string requireUfCrm6368b35d6ce0c()
	 * @method bool hasUfCrm6368b35d6ce0c()
	 * @method bool isUfCrm6368b35d6ce0cFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d6ce0c()
	 * @method \string fillUfCrm6368b35d6ce0c()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d6ce0c(\string $ufCrm6368b35d6ce0c)
	 * @method bool isUfCrm6368b35d6ce0cChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35d786fa()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35d786fa()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35d786fa()
	 * @method bool hasUfCrm6368b35d786fa()
	 * @method bool isUfCrm6368b35d786faFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d786fa()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35d786fa()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d786fa(\Bitrix\Main\Type\DateTime $ufCrm6368b35d786fa)
	 * @method bool isUfCrm6368b35d786faChanged()
	 * @method \string getUfCrm6368b35d844cf()
	 * @method \string remindActualUfCrm6368b35d844cf()
	 * @method \string requireUfCrm6368b35d844cf()
	 * @method bool hasUfCrm6368b35d844cf()
	 * @method bool isUfCrm6368b35d844cfFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d844cf()
	 * @method \string fillUfCrm6368b35d844cf()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d844cf(\string $ufCrm6368b35d844cf)
	 * @method bool isUfCrm6368b35d844cfChanged()
	 * @method \int getUfCrm6368b35d8f59a()
	 * @method \int remindActualUfCrm6368b35d8f59a()
	 * @method \int requireUfCrm6368b35d8f59a()
	 * @method bool hasUfCrm6368b35d8f59a()
	 * @method bool isUfCrm6368b35d8f59aFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d8f59a()
	 * @method \int fillUfCrm6368b35d8f59a()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d8f59a(\int $ufCrm6368b35d8f59a)
	 * @method bool isUfCrm6368b35d8f59aChanged()
	 * @method \string getUfCrm6368b35d9a97e()
	 * @method \string remindActualUfCrm6368b35d9a97e()
	 * @method \string requireUfCrm6368b35d9a97e()
	 * @method bool hasUfCrm6368b35d9a97e()
	 * @method bool isUfCrm6368b35d9a97eFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35d9a97e()
	 * @method \string fillUfCrm6368b35d9a97e()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35d9a97e(\string[] $ufCrm6368b35d9a97e)
	 * @method bool isUfCrm6368b35d9a97eChanged()
	 * @method \float getUfCrm6368b35da5d29()
	 * @method \float remindActualUfCrm6368b35da5d29()
	 * @method \float requireUfCrm6368b35da5d29()
	 * @method bool hasUfCrm6368b35da5d29()
	 * @method bool isUfCrm6368b35da5d29Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35da5d29()
	 * @method \float fillUfCrm6368b35da5d29()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35da5d29(\float $ufCrm6368b35da5d29)
	 * @method bool isUfCrm6368b35da5d29Changed()
	 * @method \string getUfCrm6368b35db0ee2()
	 * @method \string remindActualUfCrm6368b35db0ee2()
	 * @method \string requireUfCrm6368b35db0ee2()
	 * @method bool hasUfCrm6368b35db0ee2()
	 * @method bool isUfCrm6368b35db0ee2Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35db0ee2()
	 * @method \string fillUfCrm6368b35db0ee2()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35db0ee2(\string[] $ufCrm6368b35db0ee2)
	 * @method bool isUfCrm6368b35db0ee2Changed()
	 * @method \float getUfCrm6368b35dbbcd7()
	 * @method \float remindActualUfCrm6368b35dbbcd7()
	 * @method \float requireUfCrm6368b35dbbcd7()
	 * @method bool hasUfCrm6368b35dbbcd7()
	 * @method bool isUfCrm6368b35dbbcd7Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35dbbcd7()
	 * @method \float fillUfCrm6368b35dbbcd7()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35dbbcd7(\float $ufCrm6368b35dbbcd7)
	 * @method bool isUfCrm6368b35dbbcd7Changed()
	 * @method \float getUfCrm6368b35dc7146()
	 * @method \float remindActualUfCrm6368b35dc7146()
	 * @method \float requireUfCrm6368b35dc7146()
	 * @method bool hasUfCrm6368b35dc7146()
	 * @method bool isUfCrm6368b35dc7146Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35dc7146()
	 * @method \float fillUfCrm6368b35dc7146()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35dc7146(\float $ufCrm6368b35dc7146)
	 * @method bool isUfCrm6368b35dc7146Changed()
	 * @method \string getUfCrm6368b35dd27a6()
	 * @method \string remindActualUfCrm6368b35dd27a6()
	 * @method \string requireUfCrm6368b35dd27a6()
	 * @method bool hasUfCrm6368b35dd27a6()
	 * @method bool isUfCrm6368b35dd27a6Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35dd27a6()
	 * @method \string fillUfCrm6368b35dd27a6()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35dd27a6(\string[] $ufCrm6368b35dd27a6)
	 * @method bool isUfCrm6368b35dd27a6Changed()
	 * @method \string getUfCrm6368b35dddc07()
	 * @method \string remindActualUfCrm6368b35dddc07()
	 * @method \string requireUfCrm6368b35dddc07()
	 * @method bool hasUfCrm6368b35dddc07()
	 * @method bool isUfCrm6368b35dddc07Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35dddc07()
	 * @method \string fillUfCrm6368b35dddc07()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35dddc07(\string[] $ufCrm6368b35dddc07)
	 * @method bool isUfCrm6368b35dddc07Changed()
	 * @method \string getUfCrm6368b35de91fb()
	 * @method \string remindActualUfCrm6368b35de91fb()
	 * @method \string requireUfCrm6368b35de91fb()
	 * @method bool hasUfCrm6368b35de91fb()
	 * @method bool isUfCrm6368b35de91fbFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35de91fb()
	 * @method \string fillUfCrm6368b35de91fb()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35de91fb(\string[] $ufCrm6368b35de91fb)
	 * @method bool isUfCrm6368b35de91fbChanged()
	 * @method \float getUfCrm6368b35e0082b()
	 * @method \float remindActualUfCrm6368b35e0082b()
	 * @method \float requireUfCrm6368b35e0082b()
	 * @method bool hasUfCrm6368b35e0082b()
	 * @method bool isUfCrm6368b35e0082bFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35e0082b()
	 * @method \float fillUfCrm6368b35e0082b()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35e0082b(\float $ufCrm6368b35e0082b)
	 * @method bool isUfCrm6368b35e0082bChanged()
	 * @method \float getUfCrm6368b35e0c618()
	 * @method \float remindActualUfCrm6368b35e0c618()
	 * @method \float requireUfCrm6368b35e0c618()
	 * @method bool hasUfCrm6368b35e0c618()
	 * @method bool isUfCrm6368b35e0c618Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35e0c618()
	 * @method \float fillUfCrm6368b35e0c618()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35e0c618(\float $ufCrm6368b35e0c618)
	 * @method bool isUfCrm6368b35e0c618Changed()
	 * @method \string getUfCrm6368b35e185fc()
	 * @method \string remindActualUfCrm6368b35e185fc()
	 * @method \string requireUfCrm6368b35e185fc()
	 * @method bool hasUfCrm6368b35e185fc()
	 * @method bool isUfCrm6368b35e185fcFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35e185fc()
	 * @method \string fillUfCrm6368b35e185fc()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35e185fc(\string[] $ufCrm6368b35e185fc)
	 * @method bool isUfCrm6368b35e185fcChanged()
	 * @method \float getUfCrm6368b35e240bf()
	 * @method \float remindActualUfCrm6368b35e240bf()
	 * @method \float requireUfCrm6368b35e240bf()
	 * @method bool hasUfCrm6368b35e240bf()
	 * @method bool isUfCrm6368b35e240bfFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35e240bf()
	 * @method \float fillUfCrm6368b35e240bf()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35e240bf(\float $ufCrm6368b35e240bf)
	 * @method bool isUfCrm6368b35e240bfChanged()
	 * @method \string getUfCrm6368b35e300a1()
	 * @method \string remindActualUfCrm6368b35e300a1()
	 * @method \string requireUfCrm6368b35e300a1()
	 * @method bool hasUfCrm6368b35e300a1()
	 * @method bool isUfCrm6368b35e300a1Filled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCrm6368b35e300a1()
	 * @method \string fillUfCrm6368b35e300a1()
	 * @method \Bitrix\Crm\EO_Invoice setUfCrm6368b35e300a1(\string $ufCrm6368b35e300a1)
	 * @method bool isUfCrm6368b35e300a1Changed()
	 * @method \int getUfDealId()
	 * @method \int remindActualUfDealId()
	 * @method \int requireUfDealId()
	 * @method bool hasUfDealId()
	 * @method bool isUfDealIdFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfDealId()
	 * @method \int fillUfDealId()
	 * @method \Bitrix\Crm\EO_Invoice setUfDealId(\int $ufDealId)
	 * @method bool isUfDealIdChanged()
	 * @method \int getUfQuoteId()
	 * @method \int remindActualUfQuoteId()
	 * @method \int requireUfQuoteId()
	 * @method bool hasUfQuoteId()
	 * @method bool isUfQuoteIdFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfQuoteId()
	 * @method \int fillUfQuoteId()
	 * @method \Bitrix\Crm\EO_Invoice setUfQuoteId(\int $ufQuoteId)
	 * @method bool isUfQuoteIdChanged()
	 * @method \int getUfCompanyId()
	 * @method \int remindActualUfCompanyId()
	 * @method \int requireUfCompanyId()
	 * @method bool hasUfCompanyId()
	 * @method bool isUfCompanyIdFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfCompanyId()
	 * @method \int fillUfCompanyId()
	 * @method \Bitrix\Crm\EO_Invoice setUfCompanyId(\int $ufCompanyId)
	 * @method bool isUfCompanyIdChanged()
	 * @method \int getUfContactId()
	 * @method \int remindActualUfContactId()
	 * @method \int requireUfContactId()
	 * @method bool hasUfContactId()
	 * @method bool isUfContactIdFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfContactId()
	 * @method \int fillUfContactId()
	 * @method \Bitrix\Crm\EO_Invoice setUfContactId(\int $ufContactId)
	 * @method bool isUfContactIdChanged()
	 * @method \int getUfMycompanyId()
	 * @method \int remindActualUfMycompanyId()
	 * @method \int requireUfMycompanyId()
	 * @method bool hasUfMycompanyId()
	 * @method bool isUfMycompanyIdFilled()
	 * @method \Bitrix\Crm\EO_Invoice unsetUfMycompanyId()
	 * @method \int fillUfMycompanyId()
	 * @method \Bitrix\Crm\EO_Invoice setUfMycompanyId(\int $ufMycompanyId)
	 * @method bool isUfMycompanyIdChanged()
	 */
	class EO_Invoice {
		/* @var \Bitrix\Crm\InvoiceTable */
		static public $dataClass = '\Bitrix\Crm\InvoiceTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_Invoice_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \float[] getUfCrm624538198ea5cList()
	 * @method \float[] fillUfCrm624538198ea5c()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm624538199e132List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm624538199e132()
	 * @method \float[] getUfCrm62453819a8993List()
	 * @method \float[] fillUfCrm62453819a8993()
	 * @method \float[] getUfCrm62453819b47d5List()
	 * @method \float[] fillUfCrm62453819b47d5()
	 * @method \float[] getUfCrm62453819bec64List()
	 * @method \float[] fillUfCrm62453819bec64()
	 * @method \float[] getUfCrm62453819c94e6List()
	 * @method \float[] fillUfCrm62453819c94e6()
	 * @method \int[] getUfCrm62453819d3ac9List()
	 * @method \int[] fillUfCrm62453819d3ac9()
	 * @method \string[] getUfCrm62453819df0ddList()
	 * @method \string[] fillUfCrm62453819df0dd()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm62453819ea1c1List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm62453819ea1c1()
	 * @method \float[] getUfCrm6245381a021c7List()
	 * @method \float[] fillUfCrm6245381a021c7()
	 * @method \string[] getUfCrm6245381a0ce52List()
	 * @method \string[] fillUfCrm6245381a0ce52()
	 * @method \string[] getUfCrm6245381a1edebList()
	 * @method \string[] fillUfCrm6245381a1edeb()
	 * @method \string[] getUfCrm6245381a29545List()
	 * @method \string[] fillUfCrm6245381a29545()
	 * @method \string[] getUfCrm6245381a33d21List()
	 * @method \string[] fillUfCrm6245381a33d21()
	 * @method \int[] getUfCrm6245381a3def9List()
	 * @method \int[] fillUfCrm6245381a3def9()
	 * @method \string[] getUfCrm6245381a49adcList()
	 * @method \string[] fillUfCrm6245381a49adc()
	 * @method \int[] getUfCrm6245381a5409bList()
	 * @method \int[] fillUfCrm6245381a5409b()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b35f3aList()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b46406List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b52307List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b5de55List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b5de55()
	 * @method \string[] getUfCrm6368b35b68f9cList()
	 * @method \string[] fillUfCrm6368b35b68f9c()
	 * @method \float[] getUfCrm6368b35b73ea0List()
	 * @method \float[] fillUfCrm6368b35b73ea0()
	 * @method \float[] getUfCrm6368b35b7f5e1List()
	 * @method \float[] fillUfCrm6368b35b7f5e1()
	 * @method \int[] getUfCrm6368b35b8b249List()
	 * @method \int[] fillUfCrm6368b35b8b249()
	 * @method \float[] getUfCrm6368b35b968d9List()
	 * @method \float[] fillUfCrm6368b35b968d9()
	 * @method \string[] getUfCrm6368b35ba1eb9List()
	 * @method \string[] fillUfCrm6368b35ba1eb9()
	 * @method \int[] getUfCrm6368b35bad5e5List()
	 * @method \int[] fillUfCrm6368b35bad5e5()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bb997aList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bc512eList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bd02c7List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bdb44fList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bdb44f()
	 * @method \int[] getUfCrm6368b35be63c7List()
	 * @method \int[] fillUfCrm6368b35be63c7()
	 * @method \string[] getUfCrm6368b35c05ccfList()
	 * @method \string[] fillUfCrm6368b35c05ccf()
	 * @method \int[] getUfCrm6368b35c10fddList()
	 * @method \int[] fillUfCrm6368b35c10fdd()
	 * @method \string[] getUfCrm6368b35c1ca4bList()
	 * @method \string[] fillUfCrm6368b35c1ca4b()
	 * @method \int[] getUfCrm6368b35c283c4List()
	 * @method \int[] fillUfCrm6368b35c283c4()
	 * @method \int[] getUfCrm6368b35c353ceList()
	 * @method \int[] fillUfCrm6368b35c353ce()
	 * @method \string[] getUfCrm6368b35c41b50List()
	 * @method \string[] fillUfCrm6368b35c41b50()
	 * @method \int[] getUfCrm6368b35c4cfbdList()
	 * @method \int[] fillUfCrm6368b35c4cfbd()
	 * @method \string[] getUfCrm6368b35c5967aList()
	 * @method \string[] fillUfCrm6368b35c5967a()
	 * @method \string[] getUfCrm6368b35c660a1List()
	 * @method \string[] fillUfCrm6368b35c660a1()
	 * @method \string[] getUfCrm6368b35c71e02List()
	 * @method \string[] fillUfCrm6368b35c71e02()
	 * @method \int[] getUfCrm6368b35c7cfb3List()
	 * @method \int[] fillUfCrm6368b35c7cfb3()
	 * @method \string[] getUfCrm6368b35c8a2b5List()
	 * @method \string[] fillUfCrm6368b35c8a2b5()
	 * @method \string[] getUfCrm6368b35c9657fList()
	 * @method \string[] fillUfCrm6368b35c9657f()
	 * @method \string[] getUfCrm6368b35ca240eList()
	 * @method \string[] fillUfCrm6368b35ca240e()
	 * @method \int[] getUfCrm6368b35cad37eList()
	 * @method \int[] fillUfCrm6368b35cad37e()
	 * @method \int[] getUfCrm6368b35cb8ab5List()
	 * @method \int[] fillUfCrm6368b35cb8ab5()
	 * @method \string[] getUfCrm6368b35cc3c01List()
	 * @method \string[] fillUfCrm6368b35cc3c01()
	 * @method \string[] getUfCrm6368b35ccf026List()
	 * @method \string[] fillUfCrm6368b35ccf026()
	 * @method \string[] getUfCrm6368b35cd9fe3List()
	 * @method \string[] fillUfCrm6368b35cd9fe3()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35ce5498List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35cf070cList()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35cf070c()
	 * @method \string[] getUfCrm6368b35d07c79List()
	 * @method \string[] fillUfCrm6368b35d07c79()
	 * @method \string[] getUfCrm6368b35d136a2List()
	 * @method \string[] fillUfCrm6368b35d136a2()
	 * @method \int[] getUfCrm6368b35d1e9b3List()
	 * @method \int[] fillUfCrm6368b35d1e9b3()
	 * @method \int[] getUfCrm6368b35d29d41List()
	 * @method \int[] fillUfCrm6368b35d29d41()
	 * @method \string[] getUfCrm6368b35d35811List()
	 * @method \string[] fillUfCrm6368b35d35811()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35d40a00List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35d40a00()
	 * @method \string[] getUfCrm6368b35d4b7f3List()
	 * @method \string[] fillUfCrm6368b35d4b7f3()
	 * @method \string[] getUfCrm6368b35d567d5List()
	 * @method \string[] fillUfCrm6368b35d567d5()
	 * @method \string[] getUfCrm6368b35d61e96List()
	 * @method \string[] fillUfCrm6368b35d61e96()
	 * @method \string[] getUfCrm6368b35d6ce0cList()
	 * @method \string[] fillUfCrm6368b35d6ce0c()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35d786faList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35d786fa()
	 * @method \string[] getUfCrm6368b35d844cfList()
	 * @method \string[] fillUfCrm6368b35d844cf()
	 * @method \int[] getUfCrm6368b35d8f59aList()
	 * @method \int[] fillUfCrm6368b35d8f59a()
	 * @method \string[] getUfCrm6368b35d9a97eList()
	 * @method \string[] fillUfCrm6368b35d9a97e()
	 * @method \float[] getUfCrm6368b35da5d29List()
	 * @method \float[] fillUfCrm6368b35da5d29()
	 * @method \string[] getUfCrm6368b35db0ee2List()
	 * @method \string[] fillUfCrm6368b35db0ee2()
	 * @method \float[] getUfCrm6368b35dbbcd7List()
	 * @method \float[] fillUfCrm6368b35dbbcd7()
	 * @method \float[] getUfCrm6368b35dc7146List()
	 * @method \float[] fillUfCrm6368b35dc7146()
	 * @method \string[] getUfCrm6368b35dd27a6List()
	 * @method \string[] fillUfCrm6368b35dd27a6()
	 * @method \string[] getUfCrm6368b35dddc07List()
	 * @method \string[] fillUfCrm6368b35dddc07()
	 * @method \string[] getUfCrm6368b35de91fbList()
	 * @method \string[] fillUfCrm6368b35de91fb()
	 * @method \float[] getUfCrm6368b35e0082bList()
	 * @method \float[] fillUfCrm6368b35e0082b()
	 * @method \float[] getUfCrm6368b35e0c618List()
	 * @method \float[] fillUfCrm6368b35e0c618()
	 * @method \string[] getUfCrm6368b35e185fcList()
	 * @method \string[] fillUfCrm6368b35e185fc()
	 * @method \float[] getUfCrm6368b35e240bfList()
	 * @method \float[] fillUfCrm6368b35e240bf()
	 * @method \string[] getUfCrm6368b35e300a1List()
	 * @method \string[] fillUfCrm6368b35e300a1()
	 * @method \int[] getUfDealIdList()
	 * @method \int[] fillUfDealId()
	 * @method \int[] getUfQuoteIdList()
	 * @method \int[] fillUfQuoteId()
	 * @method \int[] getUfCompanyIdList()
	 * @method \int[] fillUfCompanyId()
	 * @method \int[] getUfContactIdList()
	 * @method \int[] fillUfContactId()
	 * @method \int[] getUfMycompanyIdList()
	 * @method \int[] fillUfMycompanyId()
	 */
	class EO_Invoice_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\InvoiceTable */
		static public $dataClass = '\Bitrix\Crm\InvoiceTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\Invoice\Internals\InvoiceTable */
namespace Bitrix\Crm\Invoice\Internals {
	/**
	 * EO_Invoice
	 * @see \Bitrix\Crm\Invoice\Internals\InvoiceTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \float getUfCrm624538198ea5c()
	 * @method \float remindActualUfCrm624538198ea5c()
	 * @method \float requireUfCrm624538198ea5c()
	 * @method bool hasUfCrm624538198ea5c()
	 * @method bool isUfCrm624538198ea5cFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm624538198ea5c()
	 * @method \float fillUfCrm624538198ea5c()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm624538198ea5c(\float $ufCrm624538198ea5c)
	 * @method bool isUfCrm624538198ea5cChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm624538199e132()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm624538199e132()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm624538199e132()
	 * @method bool hasUfCrm624538199e132()
	 * @method bool isUfCrm624538199e132Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm624538199e132()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm624538199e132()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm624538199e132(\Bitrix\Main\Type\DateTime $ufCrm624538199e132)
	 * @method bool isUfCrm624538199e132Changed()
	 * @method \float getUfCrm62453819a8993()
	 * @method \float remindActualUfCrm62453819a8993()
	 * @method \float requireUfCrm62453819a8993()
	 * @method bool hasUfCrm62453819a8993()
	 * @method bool isUfCrm62453819a8993Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819a8993()
	 * @method \float fillUfCrm62453819a8993()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819a8993(\float $ufCrm62453819a8993)
	 * @method bool isUfCrm62453819a8993Changed()
	 * @method \float getUfCrm62453819b47d5()
	 * @method \float remindActualUfCrm62453819b47d5()
	 * @method \float requireUfCrm62453819b47d5()
	 * @method bool hasUfCrm62453819b47d5()
	 * @method bool isUfCrm62453819b47d5Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819b47d5()
	 * @method \float fillUfCrm62453819b47d5()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819b47d5(\float $ufCrm62453819b47d5)
	 * @method bool isUfCrm62453819b47d5Changed()
	 * @method \float getUfCrm62453819bec64()
	 * @method \float remindActualUfCrm62453819bec64()
	 * @method \float requireUfCrm62453819bec64()
	 * @method bool hasUfCrm62453819bec64()
	 * @method bool isUfCrm62453819bec64Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819bec64()
	 * @method \float fillUfCrm62453819bec64()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819bec64(\float $ufCrm62453819bec64)
	 * @method bool isUfCrm62453819bec64Changed()
	 * @method \float getUfCrm62453819c94e6()
	 * @method \float remindActualUfCrm62453819c94e6()
	 * @method \float requireUfCrm62453819c94e6()
	 * @method bool hasUfCrm62453819c94e6()
	 * @method bool isUfCrm62453819c94e6Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819c94e6()
	 * @method \float fillUfCrm62453819c94e6()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819c94e6(\float $ufCrm62453819c94e6)
	 * @method bool isUfCrm62453819c94e6Changed()
	 * @method \int getUfCrm62453819d3ac9()
	 * @method \int remindActualUfCrm62453819d3ac9()
	 * @method \int requireUfCrm62453819d3ac9()
	 * @method bool hasUfCrm62453819d3ac9()
	 * @method bool isUfCrm62453819d3ac9Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819d3ac9()
	 * @method \int fillUfCrm62453819d3ac9()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819d3ac9(\int $ufCrm62453819d3ac9)
	 * @method bool isUfCrm62453819d3ac9Changed()
	 * @method \string getUfCrm62453819df0dd()
	 * @method \string remindActualUfCrm62453819df0dd()
	 * @method \string requireUfCrm62453819df0dd()
	 * @method bool hasUfCrm62453819df0dd()
	 * @method bool isUfCrm62453819df0ddFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819df0dd()
	 * @method \string fillUfCrm62453819df0dd()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819df0dd(\string $ufCrm62453819df0dd)
	 * @method bool isUfCrm62453819df0ddChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm62453819ea1c1()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm62453819ea1c1()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm62453819ea1c1()
	 * @method bool hasUfCrm62453819ea1c1()
	 * @method bool isUfCrm62453819ea1c1Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm62453819ea1c1()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm62453819ea1c1()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm62453819ea1c1(\Bitrix\Main\Type\DateTime $ufCrm62453819ea1c1)
	 * @method bool isUfCrm62453819ea1c1Changed()
	 * @method \float getUfCrm6245381a021c7()
	 * @method \float remindActualUfCrm6245381a021c7()
	 * @method \float requireUfCrm6245381a021c7()
	 * @method bool hasUfCrm6245381a021c7()
	 * @method bool isUfCrm6245381a021c7Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a021c7()
	 * @method \float fillUfCrm6245381a021c7()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a021c7(\float $ufCrm6245381a021c7)
	 * @method bool isUfCrm6245381a021c7Changed()
	 * @method \string getUfCrm6245381a0ce52()
	 * @method \string remindActualUfCrm6245381a0ce52()
	 * @method \string requireUfCrm6245381a0ce52()
	 * @method bool hasUfCrm6245381a0ce52()
	 * @method bool isUfCrm6245381a0ce52Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a0ce52()
	 * @method \string fillUfCrm6245381a0ce52()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a0ce52(\string[] $ufCrm6245381a0ce52)
	 * @method bool isUfCrm6245381a0ce52Changed()
	 * @method \string getUfCrm6245381a1edeb()
	 * @method \string remindActualUfCrm6245381a1edeb()
	 * @method \string requireUfCrm6245381a1edeb()
	 * @method bool hasUfCrm6245381a1edeb()
	 * @method bool isUfCrm6245381a1edebFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a1edeb()
	 * @method \string fillUfCrm6245381a1edeb()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a1edeb(\string $ufCrm6245381a1edeb)
	 * @method bool isUfCrm6245381a1edebChanged()
	 * @method \string getUfCrm6245381a29545()
	 * @method \string remindActualUfCrm6245381a29545()
	 * @method \string requireUfCrm6245381a29545()
	 * @method bool hasUfCrm6245381a29545()
	 * @method bool isUfCrm6245381a29545Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a29545()
	 * @method \string fillUfCrm6245381a29545()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a29545(\string $ufCrm6245381a29545)
	 * @method bool isUfCrm6245381a29545Changed()
	 * @method \string getUfCrm6245381a33d21()
	 * @method \string remindActualUfCrm6245381a33d21()
	 * @method \string requireUfCrm6245381a33d21()
	 * @method bool hasUfCrm6245381a33d21()
	 * @method bool isUfCrm6245381a33d21Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a33d21()
	 * @method \string fillUfCrm6245381a33d21()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a33d21(\string $ufCrm6245381a33d21)
	 * @method bool isUfCrm6245381a33d21Changed()
	 * @method \int getUfCrm6245381a3def9()
	 * @method \int remindActualUfCrm6245381a3def9()
	 * @method \int requireUfCrm6245381a3def9()
	 * @method bool hasUfCrm6245381a3def9()
	 * @method bool isUfCrm6245381a3def9Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a3def9()
	 * @method \int fillUfCrm6245381a3def9()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a3def9(\int $ufCrm6245381a3def9)
	 * @method bool isUfCrm6245381a3def9Changed()
	 * @method \string getUfCrm6245381a49adc()
	 * @method \string remindActualUfCrm6245381a49adc()
	 * @method \string requireUfCrm6245381a49adc()
	 * @method bool hasUfCrm6245381a49adc()
	 * @method bool isUfCrm6245381a49adcFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a49adc()
	 * @method \string fillUfCrm6245381a49adc()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a49adc(\string[] $ufCrm6245381a49adc)
	 * @method bool isUfCrm6245381a49adcChanged()
	 * @method \int getUfCrm6245381a5409b()
	 * @method \int remindActualUfCrm6245381a5409b()
	 * @method \int requireUfCrm6245381a5409b()
	 * @method bool hasUfCrm6245381a5409b()
	 * @method bool isUfCrm6245381a5409bFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6245381a5409b()
	 * @method \int fillUfCrm6245381a5409b()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6245381a5409b(\int $ufCrm6245381a5409b)
	 * @method bool isUfCrm6245381a5409bChanged()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b35f3a()
	 * @method bool hasUfCrm6368b35b35f3a()
	 * @method bool isUfCrm6368b35b35f3aFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b35f3a()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b35f3a(\Bitrix\Main\Type\Date $ufCrm6368b35b35f3a)
	 * @method bool isUfCrm6368b35b35f3aChanged()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b46406()
	 * @method bool hasUfCrm6368b35b46406()
	 * @method bool isUfCrm6368b35b46406Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b46406()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b46406(\Bitrix\Main\Type\Date $ufCrm6368b35b46406)
	 * @method bool isUfCrm6368b35b46406Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b52307()
	 * @method bool hasUfCrm6368b35b52307()
	 * @method bool isUfCrm6368b35b52307Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b52307()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b52307(\Bitrix\Main\Type\Date $ufCrm6368b35b52307)
	 * @method bool isUfCrm6368b35b52307Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35b5de55()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35b5de55()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35b5de55()
	 * @method bool hasUfCrm6368b35b5de55()
	 * @method bool isUfCrm6368b35b5de55Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b5de55()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35b5de55()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b5de55(\Bitrix\Main\Type\Date $ufCrm6368b35b5de55)
	 * @method bool isUfCrm6368b35b5de55Changed()
	 * @method \string getUfCrm6368b35b68f9c()
	 * @method \string remindActualUfCrm6368b35b68f9c()
	 * @method \string requireUfCrm6368b35b68f9c()
	 * @method bool hasUfCrm6368b35b68f9c()
	 * @method bool isUfCrm6368b35b68f9cFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b68f9c()
	 * @method \string fillUfCrm6368b35b68f9c()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b68f9c(\string[] $ufCrm6368b35b68f9c)
	 * @method bool isUfCrm6368b35b68f9cChanged()
	 * @method \float getUfCrm6368b35b73ea0()
	 * @method \float remindActualUfCrm6368b35b73ea0()
	 * @method \float requireUfCrm6368b35b73ea0()
	 * @method bool hasUfCrm6368b35b73ea0()
	 * @method bool isUfCrm6368b35b73ea0Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b73ea0()
	 * @method \float fillUfCrm6368b35b73ea0()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b73ea0(\float $ufCrm6368b35b73ea0)
	 * @method bool isUfCrm6368b35b73ea0Changed()
	 * @method \float getUfCrm6368b35b7f5e1()
	 * @method \float remindActualUfCrm6368b35b7f5e1()
	 * @method \float requireUfCrm6368b35b7f5e1()
	 * @method bool hasUfCrm6368b35b7f5e1()
	 * @method bool isUfCrm6368b35b7f5e1Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b7f5e1()
	 * @method \float fillUfCrm6368b35b7f5e1()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b7f5e1(\float $ufCrm6368b35b7f5e1)
	 * @method bool isUfCrm6368b35b7f5e1Changed()
	 * @method \int getUfCrm6368b35b8b249()
	 * @method \int remindActualUfCrm6368b35b8b249()
	 * @method \int requireUfCrm6368b35b8b249()
	 * @method bool hasUfCrm6368b35b8b249()
	 * @method bool isUfCrm6368b35b8b249Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b8b249()
	 * @method \int fillUfCrm6368b35b8b249()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b8b249(\int $ufCrm6368b35b8b249)
	 * @method bool isUfCrm6368b35b8b249Changed()
	 * @method \float getUfCrm6368b35b968d9()
	 * @method \float remindActualUfCrm6368b35b968d9()
	 * @method \float requireUfCrm6368b35b968d9()
	 * @method bool hasUfCrm6368b35b968d9()
	 * @method bool isUfCrm6368b35b968d9Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35b968d9()
	 * @method \float fillUfCrm6368b35b968d9()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35b968d9(\float $ufCrm6368b35b968d9)
	 * @method bool isUfCrm6368b35b968d9Changed()
	 * @method \string getUfCrm6368b35ba1eb9()
	 * @method \string remindActualUfCrm6368b35ba1eb9()
	 * @method \string requireUfCrm6368b35ba1eb9()
	 * @method bool hasUfCrm6368b35ba1eb9()
	 * @method bool isUfCrm6368b35ba1eb9Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35ba1eb9()
	 * @method \string fillUfCrm6368b35ba1eb9()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35ba1eb9(\string $ufCrm6368b35ba1eb9)
	 * @method bool isUfCrm6368b35ba1eb9Changed()
	 * @method \int getUfCrm6368b35bad5e5()
	 * @method \int remindActualUfCrm6368b35bad5e5()
	 * @method \int requireUfCrm6368b35bad5e5()
	 * @method bool hasUfCrm6368b35bad5e5()
	 * @method bool isUfCrm6368b35bad5e5Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35bad5e5()
	 * @method \int fillUfCrm6368b35bad5e5()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35bad5e5(\int $ufCrm6368b35bad5e5)
	 * @method bool isUfCrm6368b35bad5e5Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bb997a()
	 * @method bool hasUfCrm6368b35bb997a()
	 * @method bool isUfCrm6368b35bb997aFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bb997a()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35bb997a(\Bitrix\Main\Type\DateTime $ufCrm6368b35bb997a)
	 * @method bool isUfCrm6368b35bb997aChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bc512e()
	 * @method bool hasUfCrm6368b35bc512e()
	 * @method bool isUfCrm6368b35bc512eFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bc512e()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35bc512e(\Bitrix\Main\Type\DateTime $ufCrm6368b35bc512e)
	 * @method bool isUfCrm6368b35bc512eChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bd02c7()
	 * @method bool hasUfCrm6368b35bd02c7()
	 * @method bool isUfCrm6368b35bd02c7Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bd02c7()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35bd02c7(\Bitrix\Main\Type\DateTime $ufCrm6368b35bd02c7)
	 * @method bool isUfCrm6368b35bd02c7Changed()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35bdb44f()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35bdb44f()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35bdb44f()
	 * @method bool hasUfCrm6368b35bdb44f()
	 * @method bool isUfCrm6368b35bdb44fFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35bdb44f()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35bdb44f()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35bdb44f(\Bitrix\Main\Type\DateTime $ufCrm6368b35bdb44f)
	 * @method bool isUfCrm6368b35bdb44fChanged()
	 * @method \int getUfCrm6368b35be63c7()
	 * @method \int remindActualUfCrm6368b35be63c7()
	 * @method \int requireUfCrm6368b35be63c7()
	 * @method bool hasUfCrm6368b35be63c7()
	 * @method bool isUfCrm6368b35be63c7Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35be63c7()
	 * @method \int fillUfCrm6368b35be63c7()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35be63c7(\int $ufCrm6368b35be63c7)
	 * @method bool isUfCrm6368b35be63c7Changed()
	 * @method \string getUfCrm6368b35c05ccf()
	 * @method \string remindActualUfCrm6368b35c05ccf()
	 * @method \string requireUfCrm6368b35c05ccf()
	 * @method bool hasUfCrm6368b35c05ccf()
	 * @method bool isUfCrm6368b35c05ccfFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c05ccf()
	 * @method \string fillUfCrm6368b35c05ccf()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c05ccf(\string[] $ufCrm6368b35c05ccf)
	 * @method bool isUfCrm6368b35c05ccfChanged()
	 * @method \int getUfCrm6368b35c10fdd()
	 * @method \int remindActualUfCrm6368b35c10fdd()
	 * @method \int requireUfCrm6368b35c10fdd()
	 * @method bool hasUfCrm6368b35c10fdd()
	 * @method bool isUfCrm6368b35c10fddFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c10fdd()
	 * @method \int fillUfCrm6368b35c10fdd()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c10fdd(\int $ufCrm6368b35c10fdd)
	 * @method bool isUfCrm6368b35c10fddChanged()
	 * @method \string getUfCrm6368b35c1ca4b()
	 * @method \string remindActualUfCrm6368b35c1ca4b()
	 * @method \string requireUfCrm6368b35c1ca4b()
	 * @method bool hasUfCrm6368b35c1ca4b()
	 * @method bool isUfCrm6368b35c1ca4bFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c1ca4b()
	 * @method \string fillUfCrm6368b35c1ca4b()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c1ca4b(\string $ufCrm6368b35c1ca4b)
	 * @method bool isUfCrm6368b35c1ca4bChanged()
	 * @method \int getUfCrm6368b35c283c4()
	 * @method \int remindActualUfCrm6368b35c283c4()
	 * @method \int requireUfCrm6368b35c283c4()
	 * @method bool hasUfCrm6368b35c283c4()
	 * @method bool isUfCrm6368b35c283c4Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c283c4()
	 * @method \int fillUfCrm6368b35c283c4()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c283c4(\int $ufCrm6368b35c283c4)
	 * @method bool isUfCrm6368b35c283c4Changed()
	 * @method \int getUfCrm6368b35c353ce()
	 * @method \int remindActualUfCrm6368b35c353ce()
	 * @method \int requireUfCrm6368b35c353ce()
	 * @method bool hasUfCrm6368b35c353ce()
	 * @method bool isUfCrm6368b35c353ceFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c353ce()
	 * @method \int fillUfCrm6368b35c353ce()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c353ce(\int $ufCrm6368b35c353ce)
	 * @method bool isUfCrm6368b35c353ceChanged()
	 * @method \string getUfCrm6368b35c41b50()
	 * @method \string remindActualUfCrm6368b35c41b50()
	 * @method \string requireUfCrm6368b35c41b50()
	 * @method bool hasUfCrm6368b35c41b50()
	 * @method bool isUfCrm6368b35c41b50Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c41b50()
	 * @method \string fillUfCrm6368b35c41b50()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c41b50(\string $ufCrm6368b35c41b50)
	 * @method bool isUfCrm6368b35c41b50Changed()
	 * @method \int getUfCrm6368b35c4cfbd()
	 * @method \int remindActualUfCrm6368b35c4cfbd()
	 * @method \int requireUfCrm6368b35c4cfbd()
	 * @method bool hasUfCrm6368b35c4cfbd()
	 * @method bool isUfCrm6368b35c4cfbdFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c4cfbd()
	 * @method \int fillUfCrm6368b35c4cfbd()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c4cfbd(\int $ufCrm6368b35c4cfbd)
	 * @method bool isUfCrm6368b35c4cfbdChanged()
	 * @method \string getUfCrm6368b35c5967a()
	 * @method \string remindActualUfCrm6368b35c5967a()
	 * @method \string requireUfCrm6368b35c5967a()
	 * @method bool hasUfCrm6368b35c5967a()
	 * @method bool isUfCrm6368b35c5967aFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c5967a()
	 * @method \string fillUfCrm6368b35c5967a()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c5967a(\string[] $ufCrm6368b35c5967a)
	 * @method bool isUfCrm6368b35c5967aChanged()
	 * @method \string getUfCrm6368b35c660a1()
	 * @method \string remindActualUfCrm6368b35c660a1()
	 * @method \string requireUfCrm6368b35c660a1()
	 * @method bool hasUfCrm6368b35c660a1()
	 * @method bool isUfCrm6368b35c660a1Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c660a1()
	 * @method \string fillUfCrm6368b35c660a1()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c660a1(\string $ufCrm6368b35c660a1)
	 * @method bool isUfCrm6368b35c660a1Changed()
	 * @method \string getUfCrm6368b35c71e02()
	 * @method \string remindActualUfCrm6368b35c71e02()
	 * @method \string requireUfCrm6368b35c71e02()
	 * @method bool hasUfCrm6368b35c71e02()
	 * @method bool isUfCrm6368b35c71e02Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c71e02()
	 * @method \string fillUfCrm6368b35c71e02()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c71e02(\string $ufCrm6368b35c71e02)
	 * @method bool isUfCrm6368b35c71e02Changed()
	 * @method \int getUfCrm6368b35c7cfb3()
	 * @method \int remindActualUfCrm6368b35c7cfb3()
	 * @method \int requireUfCrm6368b35c7cfb3()
	 * @method bool hasUfCrm6368b35c7cfb3()
	 * @method bool isUfCrm6368b35c7cfb3Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c7cfb3()
	 * @method \int fillUfCrm6368b35c7cfb3()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c7cfb3(\int $ufCrm6368b35c7cfb3)
	 * @method bool isUfCrm6368b35c7cfb3Changed()
	 * @method \string getUfCrm6368b35c8a2b5()
	 * @method \string remindActualUfCrm6368b35c8a2b5()
	 * @method \string requireUfCrm6368b35c8a2b5()
	 * @method bool hasUfCrm6368b35c8a2b5()
	 * @method bool isUfCrm6368b35c8a2b5Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c8a2b5()
	 * @method \string fillUfCrm6368b35c8a2b5()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c8a2b5(\string $ufCrm6368b35c8a2b5)
	 * @method bool isUfCrm6368b35c8a2b5Changed()
	 * @method \string getUfCrm6368b35c9657f()
	 * @method \string remindActualUfCrm6368b35c9657f()
	 * @method \string requireUfCrm6368b35c9657f()
	 * @method bool hasUfCrm6368b35c9657f()
	 * @method bool isUfCrm6368b35c9657fFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35c9657f()
	 * @method \string fillUfCrm6368b35c9657f()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35c9657f(\string[] $ufCrm6368b35c9657f)
	 * @method bool isUfCrm6368b35c9657fChanged()
	 * @method \string getUfCrm6368b35ca240e()
	 * @method \string remindActualUfCrm6368b35ca240e()
	 * @method \string requireUfCrm6368b35ca240e()
	 * @method bool hasUfCrm6368b35ca240e()
	 * @method bool isUfCrm6368b35ca240eFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35ca240e()
	 * @method \string fillUfCrm6368b35ca240e()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35ca240e(\string[] $ufCrm6368b35ca240e)
	 * @method bool isUfCrm6368b35ca240eChanged()
	 * @method \int getUfCrm6368b35cad37e()
	 * @method \int remindActualUfCrm6368b35cad37e()
	 * @method \int requireUfCrm6368b35cad37e()
	 * @method bool hasUfCrm6368b35cad37e()
	 * @method bool isUfCrm6368b35cad37eFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35cad37e()
	 * @method \int fillUfCrm6368b35cad37e()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35cad37e(\int $ufCrm6368b35cad37e)
	 * @method bool isUfCrm6368b35cad37eChanged()
	 * @method \int getUfCrm6368b35cb8ab5()
	 * @method \int remindActualUfCrm6368b35cb8ab5()
	 * @method \int requireUfCrm6368b35cb8ab5()
	 * @method bool hasUfCrm6368b35cb8ab5()
	 * @method bool isUfCrm6368b35cb8ab5Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35cb8ab5()
	 * @method \int fillUfCrm6368b35cb8ab5()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35cb8ab5(\int $ufCrm6368b35cb8ab5)
	 * @method bool isUfCrm6368b35cb8ab5Changed()
	 * @method \string getUfCrm6368b35cc3c01()
	 * @method \string remindActualUfCrm6368b35cc3c01()
	 * @method \string requireUfCrm6368b35cc3c01()
	 * @method bool hasUfCrm6368b35cc3c01()
	 * @method bool isUfCrm6368b35cc3c01Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35cc3c01()
	 * @method \string fillUfCrm6368b35cc3c01()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35cc3c01(\string $ufCrm6368b35cc3c01)
	 * @method bool isUfCrm6368b35cc3c01Changed()
	 * @method \string getUfCrm6368b35ccf026()
	 * @method \string remindActualUfCrm6368b35ccf026()
	 * @method \string requireUfCrm6368b35ccf026()
	 * @method bool hasUfCrm6368b35ccf026()
	 * @method bool isUfCrm6368b35ccf026Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35ccf026()
	 * @method \string fillUfCrm6368b35ccf026()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35ccf026(\string $ufCrm6368b35ccf026)
	 * @method bool isUfCrm6368b35ccf026Changed()
	 * @method \string getUfCrm6368b35cd9fe3()
	 * @method \string remindActualUfCrm6368b35cd9fe3()
	 * @method \string requireUfCrm6368b35cd9fe3()
	 * @method bool hasUfCrm6368b35cd9fe3()
	 * @method bool isUfCrm6368b35cd9fe3Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35cd9fe3()
	 * @method \string fillUfCrm6368b35cd9fe3()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35cd9fe3(\string $ufCrm6368b35cd9fe3)
	 * @method bool isUfCrm6368b35cd9fe3Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35ce5498()
	 * @method bool hasUfCrm6368b35ce5498()
	 * @method bool isUfCrm6368b35ce5498Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35ce5498()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35ce5498(\Bitrix\Main\Type\Date $ufCrm6368b35ce5498)
	 * @method bool isUfCrm6368b35ce5498Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35cf070c()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35cf070c()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35cf070c()
	 * @method bool hasUfCrm6368b35cf070c()
	 * @method bool isUfCrm6368b35cf070cFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35cf070c()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35cf070c()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35cf070c(\Bitrix\Main\Type\Date $ufCrm6368b35cf070c)
	 * @method bool isUfCrm6368b35cf070cChanged()
	 * @method \string getUfCrm6368b35d07c79()
	 * @method \string remindActualUfCrm6368b35d07c79()
	 * @method \string requireUfCrm6368b35d07c79()
	 * @method bool hasUfCrm6368b35d07c79()
	 * @method bool isUfCrm6368b35d07c79Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d07c79()
	 * @method \string fillUfCrm6368b35d07c79()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d07c79(\string $ufCrm6368b35d07c79)
	 * @method bool isUfCrm6368b35d07c79Changed()
	 * @method \string getUfCrm6368b35d136a2()
	 * @method \string remindActualUfCrm6368b35d136a2()
	 * @method \string requireUfCrm6368b35d136a2()
	 * @method bool hasUfCrm6368b35d136a2()
	 * @method bool isUfCrm6368b35d136a2Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d136a2()
	 * @method \string fillUfCrm6368b35d136a2()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d136a2(\string $ufCrm6368b35d136a2)
	 * @method bool isUfCrm6368b35d136a2Changed()
	 * @method \int getUfCrm6368b35d1e9b3()
	 * @method \int remindActualUfCrm6368b35d1e9b3()
	 * @method \int requireUfCrm6368b35d1e9b3()
	 * @method bool hasUfCrm6368b35d1e9b3()
	 * @method bool isUfCrm6368b35d1e9b3Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d1e9b3()
	 * @method \int fillUfCrm6368b35d1e9b3()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d1e9b3(\int $ufCrm6368b35d1e9b3)
	 * @method bool isUfCrm6368b35d1e9b3Changed()
	 * @method \int getUfCrm6368b35d29d41()
	 * @method \int remindActualUfCrm6368b35d29d41()
	 * @method \int requireUfCrm6368b35d29d41()
	 * @method bool hasUfCrm6368b35d29d41()
	 * @method bool isUfCrm6368b35d29d41Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d29d41()
	 * @method \int fillUfCrm6368b35d29d41()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d29d41(\int $ufCrm6368b35d29d41)
	 * @method bool isUfCrm6368b35d29d41Changed()
	 * @method \string getUfCrm6368b35d35811()
	 * @method \string remindActualUfCrm6368b35d35811()
	 * @method \string requireUfCrm6368b35d35811()
	 * @method bool hasUfCrm6368b35d35811()
	 * @method bool isUfCrm6368b35d35811Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d35811()
	 * @method \string fillUfCrm6368b35d35811()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d35811(\string $ufCrm6368b35d35811)
	 * @method bool isUfCrm6368b35d35811Changed()
	 * @method \Bitrix\Main\Type\Date getUfCrm6368b35d40a00()
	 * @method \Bitrix\Main\Type\Date remindActualUfCrm6368b35d40a00()
	 * @method \Bitrix\Main\Type\Date requireUfCrm6368b35d40a00()
	 * @method bool hasUfCrm6368b35d40a00()
	 * @method bool isUfCrm6368b35d40a00Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d40a00()
	 * @method \Bitrix\Main\Type\Date fillUfCrm6368b35d40a00()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d40a00(\Bitrix\Main\Type\Date $ufCrm6368b35d40a00)
	 * @method bool isUfCrm6368b35d40a00Changed()
	 * @method \string getUfCrm6368b35d4b7f3()
	 * @method \string remindActualUfCrm6368b35d4b7f3()
	 * @method \string requireUfCrm6368b35d4b7f3()
	 * @method bool hasUfCrm6368b35d4b7f3()
	 * @method bool isUfCrm6368b35d4b7f3Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d4b7f3()
	 * @method \string fillUfCrm6368b35d4b7f3()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d4b7f3(\string $ufCrm6368b35d4b7f3)
	 * @method bool isUfCrm6368b35d4b7f3Changed()
	 * @method \string getUfCrm6368b35d567d5()
	 * @method \string remindActualUfCrm6368b35d567d5()
	 * @method \string requireUfCrm6368b35d567d5()
	 * @method bool hasUfCrm6368b35d567d5()
	 * @method bool isUfCrm6368b35d567d5Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d567d5()
	 * @method \string fillUfCrm6368b35d567d5()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d567d5(\string $ufCrm6368b35d567d5)
	 * @method bool isUfCrm6368b35d567d5Changed()
	 * @method \string getUfCrm6368b35d61e96()
	 * @method \string remindActualUfCrm6368b35d61e96()
	 * @method \string requireUfCrm6368b35d61e96()
	 * @method bool hasUfCrm6368b35d61e96()
	 * @method bool isUfCrm6368b35d61e96Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d61e96()
	 * @method \string fillUfCrm6368b35d61e96()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d61e96(\string $ufCrm6368b35d61e96)
	 * @method bool isUfCrm6368b35d61e96Changed()
	 * @method \string getUfCrm6368b35d6ce0c()
	 * @method \string remindActualUfCrm6368b35d6ce0c()
	 * @method \string requireUfCrm6368b35d6ce0c()
	 * @method bool hasUfCrm6368b35d6ce0c()
	 * @method bool isUfCrm6368b35d6ce0cFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d6ce0c()
	 * @method \string fillUfCrm6368b35d6ce0c()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d6ce0c(\string $ufCrm6368b35d6ce0c)
	 * @method bool isUfCrm6368b35d6ce0cChanged()
	 * @method \Bitrix\Main\Type\DateTime getUfCrm6368b35d786fa()
	 * @method \Bitrix\Main\Type\DateTime remindActualUfCrm6368b35d786fa()
	 * @method \Bitrix\Main\Type\DateTime requireUfCrm6368b35d786fa()
	 * @method bool hasUfCrm6368b35d786fa()
	 * @method bool isUfCrm6368b35d786faFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d786fa()
	 * @method \Bitrix\Main\Type\DateTime fillUfCrm6368b35d786fa()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d786fa(\Bitrix\Main\Type\DateTime $ufCrm6368b35d786fa)
	 * @method bool isUfCrm6368b35d786faChanged()
	 * @method \string getUfCrm6368b35d844cf()
	 * @method \string remindActualUfCrm6368b35d844cf()
	 * @method \string requireUfCrm6368b35d844cf()
	 * @method bool hasUfCrm6368b35d844cf()
	 * @method bool isUfCrm6368b35d844cfFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d844cf()
	 * @method \string fillUfCrm6368b35d844cf()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d844cf(\string $ufCrm6368b35d844cf)
	 * @method bool isUfCrm6368b35d844cfChanged()
	 * @method \int getUfCrm6368b35d8f59a()
	 * @method \int remindActualUfCrm6368b35d8f59a()
	 * @method \int requireUfCrm6368b35d8f59a()
	 * @method bool hasUfCrm6368b35d8f59a()
	 * @method bool isUfCrm6368b35d8f59aFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d8f59a()
	 * @method \int fillUfCrm6368b35d8f59a()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d8f59a(\int $ufCrm6368b35d8f59a)
	 * @method bool isUfCrm6368b35d8f59aChanged()
	 * @method \string getUfCrm6368b35d9a97e()
	 * @method \string remindActualUfCrm6368b35d9a97e()
	 * @method \string requireUfCrm6368b35d9a97e()
	 * @method bool hasUfCrm6368b35d9a97e()
	 * @method bool isUfCrm6368b35d9a97eFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35d9a97e()
	 * @method \string fillUfCrm6368b35d9a97e()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35d9a97e(\string[] $ufCrm6368b35d9a97e)
	 * @method bool isUfCrm6368b35d9a97eChanged()
	 * @method \float getUfCrm6368b35da5d29()
	 * @method \float remindActualUfCrm6368b35da5d29()
	 * @method \float requireUfCrm6368b35da5d29()
	 * @method bool hasUfCrm6368b35da5d29()
	 * @method bool isUfCrm6368b35da5d29Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35da5d29()
	 * @method \float fillUfCrm6368b35da5d29()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35da5d29(\float $ufCrm6368b35da5d29)
	 * @method bool isUfCrm6368b35da5d29Changed()
	 * @method \string getUfCrm6368b35db0ee2()
	 * @method \string remindActualUfCrm6368b35db0ee2()
	 * @method \string requireUfCrm6368b35db0ee2()
	 * @method bool hasUfCrm6368b35db0ee2()
	 * @method bool isUfCrm6368b35db0ee2Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35db0ee2()
	 * @method \string fillUfCrm6368b35db0ee2()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35db0ee2(\string[] $ufCrm6368b35db0ee2)
	 * @method bool isUfCrm6368b35db0ee2Changed()
	 * @method \float getUfCrm6368b35dbbcd7()
	 * @method \float remindActualUfCrm6368b35dbbcd7()
	 * @method \float requireUfCrm6368b35dbbcd7()
	 * @method bool hasUfCrm6368b35dbbcd7()
	 * @method bool isUfCrm6368b35dbbcd7Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35dbbcd7()
	 * @method \float fillUfCrm6368b35dbbcd7()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35dbbcd7(\float $ufCrm6368b35dbbcd7)
	 * @method bool isUfCrm6368b35dbbcd7Changed()
	 * @method \float getUfCrm6368b35dc7146()
	 * @method \float remindActualUfCrm6368b35dc7146()
	 * @method \float requireUfCrm6368b35dc7146()
	 * @method bool hasUfCrm6368b35dc7146()
	 * @method bool isUfCrm6368b35dc7146Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35dc7146()
	 * @method \float fillUfCrm6368b35dc7146()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35dc7146(\float $ufCrm6368b35dc7146)
	 * @method bool isUfCrm6368b35dc7146Changed()
	 * @method \string getUfCrm6368b35dd27a6()
	 * @method \string remindActualUfCrm6368b35dd27a6()
	 * @method \string requireUfCrm6368b35dd27a6()
	 * @method bool hasUfCrm6368b35dd27a6()
	 * @method bool isUfCrm6368b35dd27a6Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35dd27a6()
	 * @method \string fillUfCrm6368b35dd27a6()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35dd27a6(\string[] $ufCrm6368b35dd27a6)
	 * @method bool isUfCrm6368b35dd27a6Changed()
	 * @method \string getUfCrm6368b35dddc07()
	 * @method \string remindActualUfCrm6368b35dddc07()
	 * @method \string requireUfCrm6368b35dddc07()
	 * @method bool hasUfCrm6368b35dddc07()
	 * @method bool isUfCrm6368b35dddc07Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35dddc07()
	 * @method \string fillUfCrm6368b35dddc07()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35dddc07(\string[] $ufCrm6368b35dddc07)
	 * @method bool isUfCrm6368b35dddc07Changed()
	 * @method \string getUfCrm6368b35de91fb()
	 * @method \string remindActualUfCrm6368b35de91fb()
	 * @method \string requireUfCrm6368b35de91fb()
	 * @method bool hasUfCrm6368b35de91fb()
	 * @method bool isUfCrm6368b35de91fbFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35de91fb()
	 * @method \string fillUfCrm6368b35de91fb()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35de91fb(\string[] $ufCrm6368b35de91fb)
	 * @method bool isUfCrm6368b35de91fbChanged()
	 * @method \float getUfCrm6368b35e0082b()
	 * @method \float remindActualUfCrm6368b35e0082b()
	 * @method \float requireUfCrm6368b35e0082b()
	 * @method bool hasUfCrm6368b35e0082b()
	 * @method bool isUfCrm6368b35e0082bFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35e0082b()
	 * @method \float fillUfCrm6368b35e0082b()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35e0082b(\float $ufCrm6368b35e0082b)
	 * @method bool isUfCrm6368b35e0082bChanged()
	 * @method \float getUfCrm6368b35e0c618()
	 * @method \float remindActualUfCrm6368b35e0c618()
	 * @method \float requireUfCrm6368b35e0c618()
	 * @method bool hasUfCrm6368b35e0c618()
	 * @method bool isUfCrm6368b35e0c618Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35e0c618()
	 * @method \float fillUfCrm6368b35e0c618()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35e0c618(\float $ufCrm6368b35e0c618)
	 * @method bool isUfCrm6368b35e0c618Changed()
	 * @method \string getUfCrm6368b35e185fc()
	 * @method \string remindActualUfCrm6368b35e185fc()
	 * @method \string requireUfCrm6368b35e185fc()
	 * @method bool hasUfCrm6368b35e185fc()
	 * @method bool isUfCrm6368b35e185fcFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35e185fc()
	 * @method \string fillUfCrm6368b35e185fc()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35e185fc(\string[] $ufCrm6368b35e185fc)
	 * @method bool isUfCrm6368b35e185fcChanged()
	 * @method \float getUfCrm6368b35e240bf()
	 * @method \float remindActualUfCrm6368b35e240bf()
	 * @method \float requireUfCrm6368b35e240bf()
	 * @method bool hasUfCrm6368b35e240bf()
	 * @method bool isUfCrm6368b35e240bfFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35e240bf()
	 * @method \float fillUfCrm6368b35e240bf()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35e240bf(\float $ufCrm6368b35e240bf)
	 * @method bool isUfCrm6368b35e240bfChanged()
	 * @method \string getUfCrm6368b35e300a1()
	 * @method \string remindActualUfCrm6368b35e300a1()
	 * @method \string requireUfCrm6368b35e300a1()
	 * @method bool hasUfCrm6368b35e300a1()
	 * @method bool isUfCrm6368b35e300a1Filled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCrm6368b35e300a1()
	 * @method \string fillUfCrm6368b35e300a1()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCrm6368b35e300a1(\string $ufCrm6368b35e300a1)
	 * @method bool isUfCrm6368b35e300a1Changed()
	 * @method \int getUfDealId()
	 * @method \int remindActualUfDealId()
	 * @method \int requireUfDealId()
	 * @method bool hasUfDealId()
	 * @method bool isUfDealIdFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfDealId()
	 * @method \int fillUfDealId()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfDealId(\int $ufDealId)
	 * @method bool isUfDealIdChanged()
	 * @method \int getUfQuoteId()
	 * @method \int remindActualUfQuoteId()
	 * @method \int requireUfQuoteId()
	 * @method bool hasUfQuoteId()
	 * @method bool isUfQuoteIdFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfQuoteId()
	 * @method \int fillUfQuoteId()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfQuoteId(\int $ufQuoteId)
	 * @method bool isUfQuoteIdChanged()
	 * @method \int getUfCompanyId()
	 * @method \int remindActualUfCompanyId()
	 * @method \int requireUfCompanyId()
	 * @method bool hasUfCompanyId()
	 * @method bool isUfCompanyIdFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfCompanyId()
	 * @method \int fillUfCompanyId()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfCompanyId(\int $ufCompanyId)
	 * @method bool isUfCompanyIdChanged()
	 * @method \int getUfContactId()
	 * @method \int remindActualUfContactId()
	 * @method \int requireUfContactId()
	 * @method bool hasUfContactId()
	 * @method bool isUfContactIdFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfContactId()
	 * @method \int fillUfContactId()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfContactId(\int $ufContactId)
	 * @method bool isUfContactIdChanged()
	 * @method \int getUfMycompanyId()
	 * @method \int remindActualUfMycompanyId()
	 * @method \int requireUfMycompanyId()
	 * @method bool hasUfMycompanyId()
	 * @method bool isUfMycompanyIdFilled()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice unsetUfMycompanyId()
	 * @method \int fillUfMycompanyId()
	 * @method \Bitrix\Crm\Invoice\Internals\EO_Invoice setUfMycompanyId(\int $ufMycompanyId)
	 * @method bool isUfMycompanyIdChanged()
	 */
	class EO_Invoice {
		/* @var \Bitrix\Crm\Invoice\Internals\InvoiceTable */
		static public $dataClass = '\Bitrix\Crm\Invoice\Internals\InvoiceTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm\Invoice\Internals {
	/**
	 * EO_Invoice_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \float[] getUfCrm624538198ea5cList()
	 * @method \float[] fillUfCrm624538198ea5c()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm624538199e132List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm624538199e132()
	 * @method \float[] getUfCrm62453819a8993List()
	 * @method \float[] fillUfCrm62453819a8993()
	 * @method \float[] getUfCrm62453819b47d5List()
	 * @method \float[] fillUfCrm62453819b47d5()
	 * @method \float[] getUfCrm62453819bec64List()
	 * @method \float[] fillUfCrm62453819bec64()
	 * @method \float[] getUfCrm62453819c94e6List()
	 * @method \float[] fillUfCrm62453819c94e6()
	 * @method \int[] getUfCrm62453819d3ac9List()
	 * @method \int[] fillUfCrm62453819d3ac9()
	 * @method \string[] getUfCrm62453819df0ddList()
	 * @method \string[] fillUfCrm62453819df0dd()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm62453819ea1c1List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm62453819ea1c1()
	 * @method \float[] getUfCrm6245381a021c7List()
	 * @method \float[] fillUfCrm6245381a021c7()
	 * @method \string[] getUfCrm6245381a0ce52List()
	 * @method \string[] fillUfCrm6245381a0ce52()
	 * @method \string[] getUfCrm6245381a1edebList()
	 * @method \string[] fillUfCrm6245381a1edeb()
	 * @method \string[] getUfCrm6245381a29545List()
	 * @method \string[] fillUfCrm6245381a29545()
	 * @method \string[] getUfCrm6245381a33d21List()
	 * @method \string[] fillUfCrm6245381a33d21()
	 * @method \int[] getUfCrm6245381a3def9List()
	 * @method \int[] fillUfCrm6245381a3def9()
	 * @method \string[] getUfCrm6245381a49adcList()
	 * @method \string[] fillUfCrm6245381a49adc()
	 * @method \int[] getUfCrm6245381a5409bList()
	 * @method \int[] fillUfCrm6245381a5409b()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b35f3aList()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b35f3a()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b46406List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b46406()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b52307List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b52307()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35b5de55List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35b5de55()
	 * @method \string[] getUfCrm6368b35b68f9cList()
	 * @method \string[] fillUfCrm6368b35b68f9c()
	 * @method \float[] getUfCrm6368b35b73ea0List()
	 * @method \float[] fillUfCrm6368b35b73ea0()
	 * @method \float[] getUfCrm6368b35b7f5e1List()
	 * @method \float[] fillUfCrm6368b35b7f5e1()
	 * @method \int[] getUfCrm6368b35b8b249List()
	 * @method \int[] fillUfCrm6368b35b8b249()
	 * @method \float[] getUfCrm6368b35b968d9List()
	 * @method \float[] fillUfCrm6368b35b968d9()
	 * @method \string[] getUfCrm6368b35ba1eb9List()
	 * @method \string[] fillUfCrm6368b35ba1eb9()
	 * @method \int[] getUfCrm6368b35bad5e5List()
	 * @method \int[] fillUfCrm6368b35bad5e5()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bb997aList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bb997a()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bc512eList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bc512e()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bd02c7List()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bd02c7()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35bdb44fList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35bdb44f()
	 * @method \int[] getUfCrm6368b35be63c7List()
	 * @method \int[] fillUfCrm6368b35be63c7()
	 * @method \string[] getUfCrm6368b35c05ccfList()
	 * @method \string[] fillUfCrm6368b35c05ccf()
	 * @method \int[] getUfCrm6368b35c10fddList()
	 * @method \int[] fillUfCrm6368b35c10fdd()
	 * @method \string[] getUfCrm6368b35c1ca4bList()
	 * @method \string[] fillUfCrm6368b35c1ca4b()
	 * @method \int[] getUfCrm6368b35c283c4List()
	 * @method \int[] fillUfCrm6368b35c283c4()
	 * @method \int[] getUfCrm6368b35c353ceList()
	 * @method \int[] fillUfCrm6368b35c353ce()
	 * @method \string[] getUfCrm6368b35c41b50List()
	 * @method \string[] fillUfCrm6368b35c41b50()
	 * @method \int[] getUfCrm6368b35c4cfbdList()
	 * @method \int[] fillUfCrm6368b35c4cfbd()
	 * @method \string[] getUfCrm6368b35c5967aList()
	 * @method \string[] fillUfCrm6368b35c5967a()
	 * @method \string[] getUfCrm6368b35c660a1List()
	 * @method \string[] fillUfCrm6368b35c660a1()
	 * @method \string[] getUfCrm6368b35c71e02List()
	 * @method \string[] fillUfCrm6368b35c71e02()
	 * @method \int[] getUfCrm6368b35c7cfb3List()
	 * @method \int[] fillUfCrm6368b35c7cfb3()
	 * @method \string[] getUfCrm6368b35c8a2b5List()
	 * @method \string[] fillUfCrm6368b35c8a2b5()
	 * @method \string[] getUfCrm6368b35c9657fList()
	 * @method \string[] fillUfCrm6368b35c9657f()
	 * @method \string[] getUfCrm6368b35ca240eList()
	 * @method \string[] fillUfCrm6368b35ca240e()
	 * @method \int[] getUfCrm6368b35cad37eList()
	 * @method \int[] fillUfCrm6368b35cad37e()
	 * @method \int[] getUfCrm6368b35cb8ab5List()
	 * @method \int[] fillUfCrm6368b35cb8ab5()
	 * @method \string[] getUfCrm6368b35cc3c01List()
	 * @method \string[] fillUfCrm6368b35cc3c01()
	 * @method \string[] getUfCrm6368b35ccf026List()
	 * @method \string[] fillUfCrm6368b35ccf026()
	 * @method \string[] getUfCrm6368b35cd9fe3List()
	 * @method \string[] fillUfCrm6368b35cd9fe3()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35ce5498List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35ce5498()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35cf070cList()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35cf070c()
	 * @method \string[] getUfCrm6368b35d07c79List()
	 * @method \string[] fillUfCrm6368b35d07c79()
	 * @method \string[] getUfCrm6368b35d136a2List()
	 * @method \string[] fillUfCrm6368b35d136a2()
	 * @method \int[] getUfCrm6368b35d1e9b3List()
	 * @method \int[] fillUfCrm6368b35d1e9b3()
	 * @method \int[] getUfCrm6368b35d29d41List()
	 * @method \int[] fillUfCrm6368b35d29d41()
	 * @method \string[] getUfCrm6368b35d35811List()
	 * @method \string[] fillUfCrm6368b35d35811()
	 * @method \Bitrix\Main\Type\Date[] getUfCrm6368b35d40a00List()
	 * @method \Bitrix\Main\Type\Date[] fillUfCrm6368b35d40a00()
	 * @method \string[] getUfCrm6368b35d4b7f3List()
	 * @method \string[] fillUfCrm6368b35d4b7f3()
	 * @method \string[] getUfCrm6368b35d567d5List()
	 * @method \string[] fillUfCrm6368b35d567d5()
	 * @method \string[] getUfCrm6368b35d61e96List()
	 * @method \string[] fillUfCrm6368b35d61e96()
	 * @method \string[] getUfCrm6368b35d6ce0cList()
	 * @method \string[] fillUfCrm6368b35d6ce0c()
	 * @method \Bitrix\Main\Type\DateTime[] getUfCrm6368b35d786faList()
	 * @method \Bitrix\Main\Type\DateTime[] fillUfCrm6368b35d786fa()
	 * @method \string[] getUfCrm6368b35d844cfList()
	 * @method \string[] fillUfCrm6368b35d844cf()
	 * @method \int[] getUfCrm6368b35d8f59aList()
	 * @method \int[] fillUfCrm6368b35d8f59a()
	 * @method \string[] getUfCrm6368b35d9a97eList()
	 * @method \string[] fillUfCrm6368b35d9a97e()
	 * @method \float[] getUfCrm6368b35da5d29List()
	 * @method \float[] fillUfCrm6368b35da5d29()
	 * @method \string[] getUfCrm6368b35db0ee2List()
	 * @method \string[] fillUfCrm6368b35db0ee2()
	 * @method \float[] getUfCrm6368b35dbbcd7List()
	 * @method \float[] fillUfCrm6368b35dbbcd7()
	 * @method \float[] getUfCrm6368b35dc7146List()
	 * @method \float[] fillUfCrm6368b35dc7146()
	 * @method \string[] getUfCrm6368b35dd27a6List()
	 * @method \string[] fillUfCrm6368b35dd27a6()
	 * @method \string[] getUfCrm6368b35dddc07List()
	 * @method \string[] fillUfCrm6368b35dddc07()
	 * @method \string[] getUfCrm6368b35de91fbList()
	 * @method \string[] fillUfCrm6368b35de91fb()
	 * @method \float[] getUfCrm6368b35e0082bList()
	 * @method \float[] fillUfCrm6368b35e0082b()
	 * @method \float[] getUfCrm6368b35e0c618List()
	 * @method \float[] fillUfCrm6368b35e0c618()
	 * @method \string[] getUfCrm6368b35e185fcList()
	 * @method \string[] fillUfCrm6368b35e185fc()
	 * @method \float[] getUfCrm6368b35e240bfList()
	 * @method \float[] fillUfCrm6368b35e240bf()
	 * @method \string[] getUfCrm6368b35e300a1List()
	 * @method \string[] fillUfCrm6368b35e300a1()
	 * @method \int[] getUfDealIdList()
	 * @method \int[] fillUfDealId()
	 * @method \int[] getUfQuoteIdList()
	 * @method \int[] fillUfQuoteId()
	 * @method \int[] getUfCompanyIdList()
	 * @method \int[] fillUfCompanyId()
	 * @method \int[] getUfContactIdList()
	 * @method \int[] fillUfContactId()
	 * @method \int[] getUfMycompanyIdList()
	 * @method \int[] fillUfMycompanyId()
	 */
	class EO_Invoice_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\Invoice\Internals\InvoiceTable */
		static public $dataClass = '\Bitrix\Crm\Invoice\Internals\InvoiceTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Crm\ActivityTable */
namespace Bitrix\Crm {
	/**
	 * EO_Activity
	 * @see \Bitrix\Crm\ActivityTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getUfMailMessage()
	 * @method \int remindActualUfMailMessage()
	 * @method \int requireUfMailMessage()
	 * @method bool hasUfMailMessage()
	 * @method bool isUfMailMessageFilled()
	 * @method \Bitrix\Crm\EO_Activity unsetUfMailMessage()
	 * @method \int fillUfMailMessage()
	 * @method \Bitrix\Crm\EO_Activity setUfMailMessage(\int $ufMailMessage)
	 * @method bool isUfMailMessageChanged()
	 */
	class EO_Activity {
		/* @var \Bitrix\Crm\ActivityTable */
		static public $dataClass = '\Bitrix\Crm\ActivityTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Crm {
	/**
	 * EO_Activity_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getUfMailMessageList()
	 * @method \int[] fillUfMailMessage()
	 */
	class EO_Activity_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Crm\ActivityTable */
		static public $dataClass = '\Bitrix\Crm\ActivityTable';
	}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\PropertyTable */
namespace Bitrix\Iblock {
	/**
	 * Property
	 * @see \Bitrix\Iblock\PropertyTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Property setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Property setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Property resetTimestampX()
	 * @method \Bitrix\Iblock\Property unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Property setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Property resetIblockId()
	 * @method \Bitrix\Iblock\Property unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Property setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Property resetName()
	 * @method \Bitrix\Iblock\Property unsetName()
	 * @method \string fillName()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Property setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Property resetActive()
	 * @method \Bitrix\Iblock\Property unsetActive()
	 * @method \boolean fillActive()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Property setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Property resetSort()
	 * @method \Bitrix\Iblock\Property unsetSort()
	 * @method \int fillSort()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Property setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Property resetCode()
	 * @method \Bitrix\Iblock\Property unsetCode()
	 * @method \string fillCode()
	 * @method \string getDefaultValue()
	 * @method \Bitrix\Iblock\Property setDefaultValue(\string|\Bitrix\Main\DB\SqlExpression $defaultValue)
	 * @method bool hasDefaultValue()
	 * @method bool isDefaultValueFilled()
	 * @method bool isDefaultValueChanged()
	 * @method \string remindActualDefaultValue()
	 * @method \string requireDefaultValue()
	 * @method \Bitrix\Iblock\Property resetDefaultValue()
	 * @method \Bitrix\Iblock\Property unsetDefaultValue()
	 * @method \string fillDefaultValue()
	 * @method \string getPropertyType()
	 * @method \Bitrix\Iblock\Property setPropertyType(\string|\Bitrix\Main\DB\SqlExpression $propertyType)
	 * @method bool hasPropertyType()
	 * @method bool isPropertyTypeFilled()
	 * @method bool isPropertyTypeChanged()
	 * @method \string remindActualPropertyType()
	 * @method \string requirePropertyType()
	 * @method \Bitrix\Iblock\Property resetPropertyType()
	 * @method \Bitrix\Iblock\Property unsetPropertyType()
	 * @method \string fillPropertyType()
	 * @method \int getRowCount()
	 * @method \Bitrix\Iblock\Property setRowCount(\int|\Bitrix\Main\DB\SqlExpression $rowCount)
	 * @method bool hasRowCount()
	 * @method bool isRowCountFilled()
	 * @method bool isRowCountChanged()
	 * @method \int remindActualRowCount()
	 * @method \int requireRowCount()
	 * @method \Bitrix\Iblock\Property resetRowCount()
	 * @method \Bitrix\Iblock\Property unsetRowCount()
	 * @method \int fillRowCount()
	 * @method \int getColCount()
	 * @method \Bitrix\Iblock\Property setColCount(\int|\Bitrix\Main\DB\SqlExpression $colCount)
	 * @method bool hasColCount()
	 * @method bool isColCountFilled()
	 * @method bool isColCountChanged()
	 * @method \int remindActualColCount()
	 * @method \int requireColCount()
	 * @method \Bitrix\Iblock\Property resetColCount()
	 * @method \Bitrix\Iblock\Property unsetColCount()
	 * @method \int fillColCount()
	 * @method \string getListType()
	 * @method \Bitrix\Iblock\Property setListType(\string|\Bitrix\Main\DB\SqlExpression $listType)
	 * @method bool hasListType()
	 * @method bool isListTypeFilled()
	 * @method bool isListTypeChanged()
	 * @method \string remindActualListType()
	 * @method \string requireListType()
	 * @method \Bitrix\Iblock\Property resetListType()
	 * @method \Bitrix\Iblock\Property unsetListType()
	 * @method \string fillListType()
	 * @method \boolean getMultiple()
	 * @method \Bitrix\Iblock\Property setMultiple(\boolean|\Bitrix\Main\DB\SqlExpression $multiple)
	 * @method bool hasMultiple()
	 * @method bool isMultipleFilled()
	 * @method bool isMultipleChanged()
	 * @method \boolean remindActualMultiple()
	 * @method \boolean requireMultiple()
	 * @method \Bitrix\Iblock\Property resetMultiple()
	 * @method \Bitrix\Iblock\Property unsetMultiple()
	 * @method \boolean fillMultiple()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Property setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Property resetXmlId()
	 * @method \Bitrix\Iblock\Property unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getFileType()
	 * @method \Bitrix\Iblock\Property setFileType(\string|\Bitrix\Main\DB\SqlExpression $fileType)
	 * @method bool hasFileType()
	 * @method bool isFileTypeFilled()
	 * @method bool isFileTypeChanged()
	 * @method \string remindActualFileType()
	 * @method \string requireFileType()
	 * @method \Bitrix\Iblock\Property resetFileType()
	 * @method \Bitrix\Iblock\Property unsetFileType()
	 * @method \string fillFileType()
	 * @method \int getMultipleCnt()
	 * @method \Bitrix\Iblock\Property setMultipleCnt(\int|\Bitrix\Main\DB\SqlExpression $multipleCnt)
	 * @method bool hasMultipleCnt()
	 * @method bool isMultipleCntFilled()
	 * @method bool isMultipleCntChanged()
	 * @method \int remindActualMultipleCnt()
	 * @method \int requireMultipleCnt()
	 * @method \Bitrix\Iblock\Property resetMultipleCnt()
	 * @method \Bitrix\Iblock\Property unsetMultipleCnt()
	 * @method \int fillMultipleCnt()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Property setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Property resetTmpId()
	 * @method \Bitrix\Iblock\Property unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getLinkIblockId()
	 * @method \Bitrix\Iblock\Property setLinkIblockId(\int|\Bitrix\Main\DB\SqlExpression $linkIblockId)
	 * @method bool hasLinkIblockId()
	 * @method bool isLinkIblockIdFilled()
	 * @method bool isLinkIblockIdChanged()
	 * @method \int remindActualLinkIblockId()
	 * @method \int requireLinkIblockId()
	 * @method \Bitrix\Iblock\Property resetLinkIblockId()
	 * @method \Bitrix\Iblock\Property unsetLinkIblockId()
	 * @method \int fillLinkIblockId()
	 * @method \boolean getWithDescription()
	 * @method \Bitrix\Iblock\Property setWithDescription(\boolean|\Bitrix\Main\DB\SqlExpression $withDescription)
	 * @method bool hasWithDescription()
	 * @method bool isWithDescriptionFilled()
	 * @method bool isWithDescriptionChanged()
	 * @method \boolean remindActualWithDescription()
	 * @method \boolean requireWithDescription()
	 * @method \Bitrix\Iblock\Property resetWithDescription()
	 * @method \Bitrix\Iblock\Property unsetWithDescription()
	 * @method \boolean fillWithDescription()
	 * @method \boolean getSearchable()
	 * @method \Bitrix\Iblock\Property setSearchable(\boolean|\Bitrix\Main\DB\SqlExpression $searchable)
	 * @method bool hasSearchable()
	 * @method bool isSearchableFilled()
	 * @method bool isSearchableChanged()
	 * @method \boolean remindActualSearchable()
	 * @method \boolean requireSearchable()
	 * @method \Bitrix\Iblock\Property resetSearchable()
	 * @method \Bitrix\Iblock\Property unsetSearchable()
	 * @method \boolean fillSearchable()
	 * @method \boolean getFiltrable()
	 * @method \Bitrix\Iblock\Property setFiltrable(\boolean|\Bitrix\Main\DB\SqlExpression $filtrable)
	 * @method bool hasFiltrable()
	 * @method bool isFiltrableFilled()
	 * @method bool isFiltrableChanged()
	 * @method \boolean remindActualFiltrable()
	 * @method \boolean requireFiltrable()
	 * @method \Bitrix\Iblock\Property resetFiltrable()
	 * @method \Bitrix\Iblock\Property unsetFiltrable()
	 * @method \boolean fillFiltrable()
	 * @method \boolean getIsRequired()
	 * @method \Bitrix\Iblock\Property setIsRequired(\boolean|\Bitrix\Main\DB\SqlExpression $isRequired)
	 * @method bool hasIsRequired()
	 * @method bool isIsRequiredFilled()
	 * @method bool isIsRequiredChanged()
	 * @method \boolean remindActualIsRequired()
	 * @method \boolean requireIsRequired()
	 * @method \Bitrix\Iblock\Property resetIsRequired()
	 * @method \Bitrix\Iblock\Property unsetIsRequired()
	 * @method \boolean fillIsRequired()
	 * @method \string getVersion()
	 * @method \Bitrix\Iblock\Property setVersion(\string|\Bitrix\Main\DB\SqlExpression $version)
	 * @method bool hasVersion()
	 * @method bool isVersionFilled()
	 * @method bool isVersionChanged()
	 * @method \string remindActualVersion()
	 * @method \string requireVersion()
	 * @method \Bitrix\Iblock\Property resetVersion()
	 * @method \Bitrix\Iblock\Property unsetVersion()
	 * @method \string fillVersion()
	 * @method \string getUserType()
	 * @method \Bitrix\Iblock\Property setUserType(\string|\Bitrix\Main\DB\SqlExpression $userType)
	 * @method bool hasUserType()
	 * @method bool isUserTypeFilled()
	 * @method bool isUserTypeChanged()
	 * @method \string remindActualUserType()
	 * @method \string requireUserType()
	 * @method \Bitrix\Iblock\Property resetUserType()
	 * @method \Bitrix\Iblock\Property unsetUserType()
	 * @method \string fillUserType()
	 * @method \string getUserTypeSettingsList()
	 * @method \Bitrix\Iblock\Property setUserTypeSettingsList(\string|\Bitrix\Main\DB\SqlExpression $userTypeSettingsList)
	 * @method bool hasUserTypeSettingsList()
	 * @method bool isUserTypeSettingsListFilled()
	 * @method bool isUserTypeSettingsListChanged()
	 * @method \string remindActualUserTypeSettingsList()
	 * @method \string requireUserTypeSettingsList()
	 * @method \Bitrix\Iblock\Property resetUserTypeSettingsList()
	 * @method \Bitrix\Iblock\Property unsetUserTypeSettingsList()
	 * @method \string fillUserTypeSettingsList()
	 * @method \string getUserTypeSettings()
	 * @method \Bitrix\Iblock\Property setUserTypeSettings(\string|\Bitrix\Main\DB\SqlExpression $userTypeSettings)
	 * @method bool hasUserTypeSettings()
	 * @method bool isUserTypeSettingsFilled()
	 * @method bool isUserTypeSettingsChanged()
	 * @method \string remindActualUserTypeSettings()
	 * @method \string requireUserTypeSettings()
	 * @method \Bitrix\Iblock\Property resetUserTypeSettings()
	 * @method \Bitrix\Iblock\Property unsetUserTypeSettings()
	 * @method \string fillUserTypeSettings()
	 * @method \string getHint()
	 * @method \Bitrix\Iblock\Property setHint(\string|\Bitrix\Main\DB\SqlExpression $hint)
	 * @method bool hasHint()
	 * @method bool isHintFilled()
	 * @method bool isHintChanged()
	 * @method \string remindActualHint()
	 * @method \string requireHint()
	 * @method \Bitrix\Iblock\Property resetHint()
	 * @method \Bitrix\Iblock\Property unsetHint()
	 * @method \string fillHint()
	 * @method \Bitrix\Iblock\Iblock getLinkIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualLinkIblock()
	 * @method \Bitrix\Iblock\Iblock requireLinkIblock()
	 * @method \Bitrix\Iblock\Property setLinkIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Property resetLinkIblock()
	 * @method \Bitrix\Iblock\Property unsetLinkIblock()
	 * @method bool hasLinkIblock()
	 * @method bool isLinkIblockFilled()
	 * @method bool isLinkIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillLinkIblock()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Property setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Property resetIblock()
	 * @method \Bitrix\Iblock\Property unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Property set($fieldName, $value)
	 * @method \Bitrix\Iblock\Property reset($fieldName)
	 * @method \Bitrix\Iblock\Property unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Property wakeUp($data)
	 */
	class EO_Property {
		/* @var \Bitrix\Iblock\PropertyTable */
		static public $dataClass = '\Bitrix\Iblock\PropertyTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock {
	/**
	 * EO_Property_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getDefaultValueList()
	 * @method \string[] fillDefaultValue()
	 * @method \string[] getPropertyTypeList()
	 * @method \string[] fillPropertyType()
	 * @method \int[] getRowCountList()
	 * @method \int[] fillRowCount()
	 * @method \int[] getColCountList()
	 * @method \int[] fillColCount()
	 * @method \string[] getListTypeList()
	 * @method \string[] fillListType()
	 * @method \boolean[] getMultipleList()
	 * @method \boolean[] fillMultiple()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getFileTypeList()
	 * @method \string[] fillFileType()
	 * @method \int[] getMultipleCntList()
	 * @method \int[] fillMultipleCnt()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getLinkIblockIdList()
	 * @method \int[] fillLinkIblockId()
	 * @method \boolean[] getWithDescriptionList()
	 * @method \boolean[] fillWithDescription()
	 * @method \boolean[] getSearchableList()
	 * @method \boolean[] fillSearchable()
	 * @method \boolean[] getFiltrableList()
	 * @method \boolean[] fillFiltrable()
	 * @method \boolean[] getIsRequiredList()
	 * @method \boolean[] fillIsRequired()
	 * @method \string[] getVersionList()
	 * @method \string[] fillVersion()
	 * @method \string[] getUserTypeList()
	 * @method \string[] fillUserType()
	 * @method \string[] getUserTypeSettingsListList()
	 * @method \string[] fillUserTypeSettingsList()
	 * @method \string[] getUserTypeSettingsList()
	 * @method \string[] fillUserTypeSettings()
	 * @method \string[] getHintList()
	 * @method \string[] fillHint()
	 * @method \Bitrix\Iblock\Iblock[] getLinkIblockList()
	 * @method \Bitrix\Iblock\EO_Property_Collection getLinkIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillLinkIblock()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\EO_Property_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Property $object)
	 * @method bool has(\Bitrix\Iblock\Property $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Property getByPrimary($primary)
	 * @method \Bitrix\Iblock\Property[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Property $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\EO_Property_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Property current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Property_Collection merge(?EO_Property_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Property_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\PropertyTable */
		static public $dataClass = '\Bitrix\Iblock\PropertyTable';
	}
}
namespace Bitrix\Iblock {
	/**
	 * @method static EO_Property_Query query()
	 * @method static EO_Property_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Property_Result getById($id)
	 * @method static EO_Property_Result getList(array $parameters = [])
	 * @method static EO_Property_Entity getEntity()
	 * @method static \Bitrix\Iblock\Property createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\EO_Property_Collection createCollection()
	 * @method static \Bitrix\Iblock\Property wakeUpObject($row)
	 * @method static \Bitrix\Iblock\EO_Property_Collection wakeUpCollection($rows)
	 */
	class PropertyTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Property_Result exec()
	 * @method \Bitrix\Iblock\Property fetchObject()
	 * @method \Bitrix\Iblock\EO_Property_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Property_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Property fetchObject()
	 * @method \Bitrix\Iblock\EO_Property_Collection fetchCollection()
	 */
	class EO_Property_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Property createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\EO_Property_Collection createCollection()
	 * @method \Bitrix\Iblock\Property wakeUpObject($row)
	 * @method \Bitrix\Iblock\EO_Property_Collection wakeUpCollection($rows)
	 */
	class EO_Property_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementAbsenceApiTable */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementAbsenceApi
	 * @see \Bitrix\Iblock\Elements\ElementAbsenceApiTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 getUser()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 remindActualUser()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 requireUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setUser(\Bitrix\Iblock\Elements\EO_IblockProperty1|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetUser()
	 * @method bool hasUser()
	 * @method bool isUserFilled()
	 * @method bool isUserChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 fillUser()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 getFinishState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 remindActualFinishState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 requireFinishState()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setFinishState(\Bitrix\Iblock\Elements\EO_IblockProperty2|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetFinishState()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetFinishState()
	 * @method bool hasFinishState()
	 * @method bool isFinishStateFilled()
	 * @method bool isFinishStateChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 fillFinishState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 getState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 remindActualState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 requireState()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setState(\Bitrix\Iblock\Elements\EO_IblockProperty3|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetState()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetState()
	 * @method bool hasState()
	 * @method bool isStateFilled()
	 * @method bool isStateChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 fillState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 getAbsenceType()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 remindActualAbsenceType()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 requireAbsenceType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi setAbsenceType(\Bitrix\Iblock\Elements\EO_IblockProperty4|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi resetAbsenceType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unsetAbsenceType()
	 * @method bool hasAbsenceType()
	 * @method bool isAbsenceTypeFilled()
	 * @method bool isAbsenceTypeChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 fillAbsenceType()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAbsenceApi wakeUp($data)
	 */
	class EO_ElementAbsenceApi {
		/* @var \Bitrix\Iblock\Elements\ElementAbsenceApiTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementAbsenceApiTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementAbsenceApi_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1[] getUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getUserCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection fillUser()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2[] getFinishStateList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getFinishStateCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection fillFinishState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3[] getStateList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getStateCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection fillState()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4[] getAbsenceTypeList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection getAbsenceTypeCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection fillAbsenceType()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementAbsenceApi $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementAbsenceApi $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementAbsenceApi $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementAbsenceApi_Collection merge(?EO_ElementAbsenceApi_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementAbsenceApi_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementAbsenceApiTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementAbsenceApiTable';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementAbsenceApi_Query query()
	 * @method static EO_ElementAbsenceApi_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementAbsenceApi_Result getById($id)
	 * @method static EO_ElementAbsenceApi_Result getList(array $parameters = [])
	 * @method static EO_ElementAbsenceApi_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAbsenceApi createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAbsenceApi wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection wakeUpCollection($rows)
	 */
	class ElementAbsenceApiTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementAbsenceApi_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementAbsenceApi_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection fetchCollection()
	 */
	class EO_ElementAbsenceApi_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection wakeUpCollection($rows)
	 */
	class EO_ElementAbsenceApi_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\ORM\ElementV1Table */
namespace Bitrix\Iblock\ORM {
	/**
	 * EO_ElementV1
	 * @see \Bitrix\Iblock\ORM\ElementV1Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetTimestampX()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetModifiedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetDateCreate()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetCreatedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetIblockId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetIblockSectionId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetActive()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetActiveFrom()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetActiveTo()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetSort()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetName()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetPreviewPicture()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetPreviewText()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetPreviewTextType()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetDetailPicture()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetDetailText()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetDetailTextType()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetSearchableContent()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfStatusId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfParentElementId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfNew()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfLockedBy()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfDateLock()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfComments()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetInSections()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetXmlId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetCode()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetTags()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetTmpId()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetShowCounter()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetShowCounterStart()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetIblock()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfParentElement()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetIblockSection()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetModifiedByUser()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetCreatedByUser()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 resetWfLockedByUser()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 set($fieldName, $value)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 reset($fieldName)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\ORM\EO_ElementV1 wakeUp($data)
	 */
	class EO_ElementV1 {
		/* @var \Bitrix\Iblock\ORM\ElementV1Table */
		static public $dataClass = '\Bitrix\Iblock\ORM\ElementV1Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\ORM {
	/**
	 * EO_ElementV1_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\ORM\EO_ElementV1 $object)
	 * @method bool has(\Bitrix\Iblock\ORM\EO_ElementV1 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 getByPrimary($primary)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1[] getAll()
	 * @method bool remove(\Bitrix\Iblock\ORM\EO_ElementV1 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\ORM\EO_ElementV1_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementV1_Collection merge(?EO_ElementV1_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementV1_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\ORM\ElementV1Table */
		static public $dataClass = '\Bitrix\Iblock\ORM\ElementV1Table';
	}
}
namespace Bitrix\Iblock\ORM {
	/**
	 * @method static EO_ElementV1_Query query()
	 * @method static EO_ElementV1_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementV1_Result getById($id)
	 * @method static EO_ElementV1_Result getList(array $parameters = [])
	 * @method static EO_ElementV1_Entity getEntity()
	 * @method static \Bitrix\Iblock\ORM\EO_ElementV1 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\ORM\EO_ElementV1_Collection createCollection()
	 * @method static \Bitrix\Iblock\ORM\EO_ElementV1 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\ORM\EO_ElementV1_Collection wakeUpCollection($rows)
	 */
	class ElementV1Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementV1_Result exec()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 fetchObject()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementV1_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 fetchObject()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection fetchCollection()
	 */
	class EO_ElementV1_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection createCollection()
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1 wakeUpObject($row)
	 * @method \Bitrix\Iblock\ORM\EO_ElementV1_Collection wakeUpCollection($rows)
	 */
	class EO_ElementV1_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\ElementTable */
namespace Bitrix\Iblock {
	/**
	 * EO_Element
	 * @see \Bitrix\Iblock\ElementTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\EO_Element setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\EO_Element setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\EO_Element resetTimestampX()
	 * @method \Bitrix\Iblock\EO_Element unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\EO_Element setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\EO_Element resetModifiedBy()
	 * @method \Bitrix\Iblock\EO_Element unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\EO_Element setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\EO_Element resetDateCreate()
	 * @method \Bitrix\Iblock\EO_Element unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\EO_Element setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\EO_Element resetCreatedBy()
	 * @method \Bitrix\Iblock\EO_Element unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\EO_Element setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\EO_Element resetIblockId()
	 * @method \Bitrix\Iblock\EO_Element unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\EO_Element setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\EO_Element resetIblockSectionId()
	 * @method \Bitrix\Iblock\EO_Element unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\EO_Element setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\EO_Element resetActive()
	 * @method \Bitrix\Iblock\EO_Element unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\EO_Element setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\EO_Element resetActiveFrom()
	 * @method \Bitrix\Iblock\EO_Element unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\EO_Element setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\EO_Element resetActiveTo()
	 * @method \Bitrix\Iblock\EO_Element unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\EO_Element setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\EO_Element resetSort()
	 * @method \Bitrix\Iblock\EO_Element unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\EO_Element setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\EO_Element resetName()
	 * @method \Bitrix\Iblock\EO_Element unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\EO_Element setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\EO_Element resetPreviewPicture()
	 * @method \Bitrix\Iblock\EO_Element unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\EO_Element setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\EO_Element resetPreviewText()
	 * @method \Bitrix\Iblock\EO_Element unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\EO_Element setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\EO_Element resetPreviewTextType()
	 * @method \Bitrix\Iblock\EO_Element unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\EO_Element setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\EO_Element resetDetailPicture()
	 * @method \Bitrix\Iblock\EO_Element unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\EO_Element setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\EO_Element resetDetailText()
	 * @method \Bitrix\Iblock\EO_Element unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\EO_Element setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\EO_Element resetDetailTextType()
	 * @method \Bitrix\Iblock\EO_Element unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\EO_Element setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\EO_Element resetSearchableContent()
	 * @method \Bitrix\Iblock\EO_Element unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\EO_Element setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\EO_Element resetWfStatusId()
	 * @method \Bitrix\Iblock\EO_Element unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\EO_Element setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\EO_Element resetWfParentElementId()
	 * @method \Bitrix\Iblock\EO_Element unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\EO_Element setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\EO_Element resetWfNew()
	 * @method \Bitrix\Iblock\EO_Element unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\EO_Element setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\EO_Element resetWfLockedBy()
	 * @method \Bitrix\Iblock\EO_Element unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\EO_Element setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\EO_Element resetWfDateLock()
	 * @method \Bitrix\Iblock\EO_Element unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\EO_Element setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\EO_Element resetWfComments()
	 * @method \Bitrix\Iblock\EO_Element unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\EO_Element setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\EO_Element resetInSections()
	 * @method \Bitrix\Iblock\EO_Element unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\EO_Element setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\EO_Element resetXmlId()
	 * @method \Bitrix\Iblock\EO_Element unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\EO_Element setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\EO_Element resetCode()
	 * @method \Bitrix\Iblock\EO_Element unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\EO_Element setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\EO_Element resetTags()
	 * @method \Bitrix\Iblock\EO_Element unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\EO_Element setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\EO_Element resetTmpId()
	 * @method \Bitrix\Iblock\EO_Element unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\EO_Element setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\EO_Element resetShowCounter()
	 * @method \Bitrix\Iblock\EO_Element unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\EO_Element setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\EO_Element resetShowCounterStart()
	 * @method \Bitrix\Iblock\EO_Element unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\EO_Element setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\EO_Element resetIblock()
	 * @method \Bitrix\Iblock\EO_Element unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\EO_Element resetWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\EO_Element setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\EO_Element resetIblockSection()
	 * @method \Bitrix\Iblock\EO_Element unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\EO_Element setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\EO_Element resetModifiedByUser()
	 * @method \Bitrix\Iblock\EO_Element unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\EO_Element setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\EO_Element resetCreatedByUser()
	 * @method \Bitrix\Iblock\EO_Element unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Element setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\EO_Element resetWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Element unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\EO_Element set($fieldName, $value)
	 * @method \Bitrix\Iblock\EO_Element reset($fieldName)
	 * @method \Bitrix\Iblock\EO_Element unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\EO_Element wakeUp($data)
	 */
	class EO_Element {
		/* @var \Bitrix\Iblock\ElementTable */
		static public $dataClass = '\Bitrix\Iblock\ElementTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock {
	/**
	 * EO_Element_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\EO_Element_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\EO_Element_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\EO_Element_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\EO_Element_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\EO_Element_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\EO_Element_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\EO_Element $object)
	 * @method bool has(\Bitrix\Iblock\EO_Element $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\EO_Element getByPrimary($primary)
	 * @method \Bitrix\Iblock\EO_Element[] getAll()
	 * @method bool remove(\Bitrix\Iblock\EO_Element $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\EO_Element_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\EO_Element current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Element_Collection merge(?EO_Element_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Element_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\ElementTable */
		static public $dataClass = '\Bitrix\Iblock\ElementTable';
	}
}
namespace Bitrix\Iblock {
	/**
	 * @method static EO_Element_Query query()
	 * @method static EO_Element_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Element_Result getById($id)
	 * @method static EO_Element_Result getList(array $parameters = [])
	 * @method static EO_Element_Entity getEntity()
	 * @method static \Bitrix\Iblock\EO_Element createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\EO_Element_Collection createCollection()
	 * @method static \Bitrix\Iblock\EO_Element wakeUpObject($row)
	 * @method static \Bitrix\Iblock\EO_Element_Collection wakeUpCollection($rows)
	 */
	class ElementTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Element_Result exec()
	 * @method \Bitrix\Iblock\EO_Element fetchObject()
	 * @method \Bitrix\Iblock\EO_Element_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Element_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\EO_Element fetchObject()
	 * @method \Bitrix\Iblock\EO_Element_Collection fetchCollection()
	 */
	class EO_Element_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\EO_Element createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\EO_Element_Collection createCollection()
	 * @method \Bitrix\Iblock\EO_Element wakeUpObject($row)
	 * @method \Bitrix\Iblock\EO_Element_Collection wakeUpCollection($rows)
	 */
	class EO_Element_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\SectionElementTable */
namespace Bitrix\Iblock {
	/**
	 * EO_SectionElement
	 * @see \Bitrix\Iblock\SectionElementTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\EO_SectionElement setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\EO_SectionElement setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int getAdditionalPropertyId()
	 * @method \Bitrix\Iblock\EO_SectionElement setAdditionalPropertyId(\int|\Bitrix\Main\DB\SqlExpression $additionalPropertyId)
	 * @method bool hasAdditionalPropertyId()
	 * @method bool isAdditionalPropertyIdFilled()
	 * @method bool isAdditionalPropertyIdChanged()
	 * @method \int remindActualAdditionalPropertyId()
	 * @method \int requireAdditionalPropertyId()
	 * @method \Bitrix\Iblock\EO_SectionElement resetAdditionalPropertyId()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetAdditionalPropertyId()
	 * @method \int fillAdditionalPropertyId()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\EO_SectionElement setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetIblockSection()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Iblock\EO_Element getIblockElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualIblockElement()
	 * @method \Bitrix\Iblock\EO_Element requireIblockElement()
	 * @method \Bitrix\Iblock\EO_SectionElement setIblockElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetIblockElement()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetIblockElement()
	 * @method bool hasIblockElement()
	 * @method bool isIblockElementFilled()
	 * @method bool isIblockElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillIblockElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi getRegularElement1()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi remindActualRegularElement1()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi requireRegularElement1()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement1(\Bitrix\Iblock\Elements\EO_ElementAbsenceApi $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement1()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement1()
	 * @method bool hasRegularElement1()
	 * @method bool isRegularElement1Filled()
	 * @method bool isRegularElement1Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi fillRegularElement1()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 getRegularElement255()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 remindActualRegularElement255()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 requireRegularElement255()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement255(\Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement255()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement255()
	 * @method bool hasRegularElement255()
	 * @method bool isRegularElement255Filled()
	 * @method bool isRegularElement255Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 fillRegularElement255()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi getRegularElement3()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi remindActualRegularElement3()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi requireRegularElement3()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement3(\Bitrix\Iblock\Elements\EO_ElementDepartmentsApi $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement3()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement3()
	 * @method bool hasRegularElement3()
	 * @method bool isRegularElement3Filled()
	 * @method bool isRegularElement3Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi fillRegularElement3()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog getRegularElement15()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog remindActualRegularElement15()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog requireRegularElement15()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement15(\Bitrix\Iblock\Elements\EO_ElementMainCatalog $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement15()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement15()
	 * @method bool hasRegularElement15()
	 * @method bool isRegularElement15Filled()
	 * @method bool isRegularElement15Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog fillRegularElement15()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku getRegularElement16()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku remindActualRegularElement16()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku requireRegularElement16()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement16(\Bitrix\Iblock\Elements\EO_ElementMainCatalogSku $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement16()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement16()
	 * @method bool hasRegularElement16()
	 * @method bool isRegularElement16Filled()
	 * @method bool isRegularElement16Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku fillRegularElement16()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 getRegularElement256()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 remindActualRegularElement256()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 requireRegularElement256()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement256(\Bitrix\Iblock\Elements\EO_ElementTest132 $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement256()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement256()
	 * @method bool hasRegularElement256()
	 * @method bool isRegularElement256Filled()
	 * @method bool isRegularElement256Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 fillRegularElement256()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList getRegularElement259()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList remindActualRegularElement259()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList requireRegularElement259()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement259(\Bitrix\Iblock\Elements\EO_ElementTestList $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement259()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement259()
	 * @method bool hasRegularElement259()
	 * @method bool isRegularElement259Filled()
	 * @method bool isRegularElement259Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList fillRegularElement259()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests getRegularElement76()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests remindActualRegularElement76()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests requireRegularElement76()
	 * @method \Bitrix\Iblock\EO_SectionElement setRegularElement76(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method \Bitrix\Iblock\EO_SectionElement resetRegularElement76()
	 * @method \Bitrix\Iblock\EO_SectionElement unsetRegularElement76()
	 * @method bool hasRegularElement76()
	 * @method bool isRegularElement76Filled()
	 * @method bool isRegularElement76Changed()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests fillRegularElement76()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\EO_SectionElement set($fieldName, $value)
	 * @method \Bitrix\Iblock\EO_SectionElement reset($fieldName)
	 * @method \Bitrix\Iblock\EO_SectionElement unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\EO_SectionElement wakeUp($data)
	 */
	class EO_SectionElement {
		/* @var \Bitrix\Iblock\SectionElementTable */
		static public $dataClass = '\Bitrix\Iblock\SectionElementTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock {
	/**
	 * EO_SectionElement_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] getAdditionalPropertyIdList()
	 * @method \int[] fillAdditionalPropertyId()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Iblock\EO_Element[] getIblockElementList()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getIblockElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillIblockElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi[] getRegularElement1List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement1Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAbsenceApi_Collection fillRegularElement1()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123[] getRegularElement255List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement255Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection fillRegularElement255()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi[] getRegularElement3List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement3Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection fillRegularElement3()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog[] getRegularElement15List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement15Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection fillRegularElement15()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku[] getRegularElement16List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement16Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection fillRegularElement16()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132[] getRegularElement256List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement256Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection fillRegularElement256()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList[] getRegularElement259List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement259Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection fillRegularElement259()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests[] getRegularElement76List()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection getRegularElement76Collection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection fillRegularElement76()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\EO_SectionElement $object)
	 * @method bool has(\Bitrix\Iblock\EO_SectionElement $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\EO_SectionElement getByPrimary($primary)
	 * @method \Bitrix\Iblock\EO_SectionElement[] getAll()
	 * @method bool remove(\Bitrix\Iblock\EO_SectionElement $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\EO_SectionElement_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\EO_SectionElement current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_SectionElement_Collection merge(?EO_SectionElement_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_SectionElement_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\SectionElementTable */
		static public $dataClass = '\Bitrix\Iblock\SectionElementTable';
	}
}
namespace Bitrix\Iblock {
	/**
	 * @method static EO_SectionElement_Query query()
	 * @method static EO_SectionElement_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_SectionElement_Result getById($id)
	 * @method static EO_SectionElement_Result getList(array $parameters = [])
	 * @method static EO_SectionElement_Entity getEntity()
	 * @method static \Bitrix\Iblock\EO_SectionElement createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\EO_SectionElement_Collection createCollection()
	 * @method static \Bitrix\Iblock\EO_SectionElement wakeUpObject($row)
	 * @method static \Bitrix\Iblock\EO_SectionElement_Collection wakeUpCollection($rows)
	 */
	class SectionElementTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_SectionElement_Result exec()
	 * @method \Bitrix\Iblock\EO_SectionElement fetchObject()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_SectionElement_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\EO_SectionElement fetchObject()
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection fetchCollection()
	 */
	class EO_SectionElement_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\EO_SectionElement createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection createCollection()
	 * @method \Bitrix\Iblock\EO_SectionElement wakeUpObject($row)
	 * @method \Bitrix\Iblock\EO_SectionElement_Collection wakeUpCollection($rows)
	 */
	class EO_SectionElement_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty1Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty1
	 * @see \Bitrix\Iblock\Elements\IblockProperty1Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1 wakeUp($data)
	 */
	class EO_IblockProperty1 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty1Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty1Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty1_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty1 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty1 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty1 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty1_Collection merge(?EO_IblockProperty1_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty1_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty1Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty1Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty1_Query query()
	 * @method static EO_IblockProperty1_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty1_Result getById($id)
	 * @method static EO_IblockProperty1_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty1_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection wakeUpCollection($rows)
	 */
	class IblockProperty1Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty1_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty1_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection fetchCollection()
	 */
	class EO_IblockProperty1_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty1_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2
	 * @see \Bitrix\Iblock\Elements\IblockProperty2Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2 wakeUp($data)
	 */
	class EO_IblockProperty2 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2_Collection merge(?EO_IblockProperty2_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2_Query query()
	 * @method static EO_IblockProperty2_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2_Result getById($id)
	 * @method static EO_IblockProperty2_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection fetchCollection()
	 */
	class EO_IblockProperty2_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty3Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty3
	 * @see \Bitrix\Iblock\Elements\IblockProperty3Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty3 wakeUp($data)
	 */
	class EO_IblockProperty3 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty3Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty3Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty3_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty3 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty3 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty3 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty3_Collection merge(?EO_IblockProperty3_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty3_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty3Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty3Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty3_Query query()
	 * @method static EO_IblockProperty3_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty3_Result getById($id)
	 * @method static EO_IblockProperty3_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty3_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty3 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty3 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection wakeUpCollection($rows)
	 */
	class IblockProperty3Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty3_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty3_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection fetchCollection()
	 */
	class EO_IblockProperty3_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty3_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty3_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty4Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty4
	 * @see \Bitrix\Iblock\Elements\IblockProperty4Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration getItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration remindActualItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration requireItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 setItem(\Bitrix\Iblock\EO_PropertyEnumeration $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 resetItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 unsetItem()
	 * @method bool hasItem()
	 * @method bool isItemFilled()
	 * @method bool isItemChanged()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration fillItem()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty4 wakeUp($data)
	 */
	class EO_IblockProperty4 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty4Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty4Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty4_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration[] getItemList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection getItemCollection()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration_Collection fillItem()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty4 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty4 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty4 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty4_Collection merge(?EO_IblockProperty4_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty4_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty4Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty4Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty4_Query query()
	 * @method static EO_IblockProperty4_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty4_Result getById($id)
	 * @method static EO_IblockProperty4_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty4_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty4 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty4 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection wakeUpCollection($rows)
	 */
	class IblockProperty4Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty4_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty4_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection fetchCollection()
	 */
	class EO_IblockProperty4_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty4_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty4_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementAsd123qwe123Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementAsd123qwe123
	 * @see \Bitrix\Iblock\Elements\ElementAsd123qwe123Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 getTypeProduxt()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 remindActualTypeProduxt()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 requireTypeProduxt()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 setTypeProduxt(\Bitrix\Iblock\Elements\EO_IblockProperty2290|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 resetTypeProduxt()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unsetTypeProduxt()
	 * @method bool hasTypeProduxt()
	 * @method bool isTypeProduxtFilled()
	 * @method bool isTypeProduxtChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 fillTypeProduxt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 wakeUp($data)
	 */
	class EO_ElementAsd123qwe123 {
		/* @var \Bitrix\Iblock\Elements\ElementAsd123qwe123Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementAsd123qwe123Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementAsd123qwe123_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290[] getTypeProduxtList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection getTypeProduxtCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection fillTypeProduxt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementAsd123qwe123_Collection merge(?EO_ElementAsd123qwe123_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementAsd123qwe123_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementAsd123qwe123Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementAsd123qwe123Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementAsd123qwe123_Query query()
	 * @method static EO_ElementAsd123qwe123_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementAsd123qwe123_Result getById($id)
	 * @method static EO_ElementAsd123qwe123_Result getList(array $parameters = [])
	 * @method static EO_ElementAsd123qwe123_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection wakeUpCollection($rows)
	 */
	class ElementAsd123qwe123Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementAsd123qwe123_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementAsd123qwe123_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection fetchCollection()
	 */
	class EO_ElementAsd123qwe123_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementAsd123qwe123_Collection wakeUpCollection($rows)
	 */
	class EO_ElementAsd123qwe123_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2290Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2290
	 * @see \Bitrix\Iblock\Elements\IblockProperty2290Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 unsetValue()
	 * @method \int fillValue()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2290 wakeUp($data)
	 */
	class EO_IblockProperty2290 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2290Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2290Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2290_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2290 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2290 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2290 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2290_Collection merge(?EO_IblockProperty2290_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2290_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2290Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2290Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2290_Query query()
	 * @method static EO_IblockProperty2290_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2290_Result getById($id)
	 * @method static EO_IblockProperty2290_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2290_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2290 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2290 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2290Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2290_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2290_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection fetchCollection()
	 */
	class EO_IblockProperty2290_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2290_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2290_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementDepartmentsApiTable */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementDepartmentsApi
	 * @see \Bitrix\Iblock\Elements\ElementDepartmentsApiTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unsetSections()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi wakeUp($data)
	 */
	class EO_ElementDepartmentsApi {
		/* @var \Bitrix\Iblock\Elements\ElementDepartmentsApiTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementDepartmentsApiTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementDepartmentsApi_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementDepartmentsApi $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementDepartmentsApi $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementDepartmentsApi $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementDepartmentsApi_Collection merge(?EO_ElementDepartmentsApi_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementDepartmentsApi_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementDepartmentsApiTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementDepartmentsApiTable';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementDepartmentsApi_Query query()
	 * @method static EO_ElementDepartmentsApi_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementDepartmentsApi_Result getById($id)
	 * @method static EO_ElementDepartmentsApi_Result getList(array $parameters = [])
	 * @method static EO_ElementDepartmentsApi_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection wakeUpCollection($rows)
	 */
	class ElementDepartmentsApiTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementDepartmentsApi_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementDepartmentsApi_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection fetchCollection()
	 */
	class EO_ElementDepartmentsApi_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementDepartmentsApi_Collection wakeUpCollection($rows)
	 */
	class EO_ElementDepartmentsApi_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementMainCatalogTable */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementMainCatalog
	 * @see \Bitrix\Iblock\Elements\ElementMainCatalogTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 getMinutes()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 remindActualMinutes()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 requireMinutes()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setMinutes(\Bitrix\Iblock\Elements\EO_IblockProperty70|\Bitrix\Iblock\ORM\PropertyValue|\float $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetMinutes()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetMinutes()
	 * @method bool hasMinutes()
	 * @method bool isMinutesFilled()
	 * @method bool isMinutesChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 fillMinutes()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 getTest()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 remindActualTest()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 requireTest()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTest(\Bitrix\Iblock\Elements\EO_IblockProperty1766|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTest()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTest()
	 * @method bool hasTest()
	 * @method bool isTestFilled()
	 * @method bool isTestChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 fillTest()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 getTestField()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 remindActualTestField()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 requireTestField()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTestField(\Bitrix\Iblock\Elements\EO_IblockProperty2188|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTestField()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTestField()
	 * @method bool hasTestField()
	 * @method bool isTestFieldFilled()
	 * @method bool isTestFieldChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 fillTestField()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 getTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 remindActualTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 requireTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTestovoePoleDlyaPoiskaVTablitsakhXddshc(\Bitrix\Iblock\Elements\EO_IblockProperty2326|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method bool hasTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method bool isTestovoePoleDlyaPoiskaVTablitsakhXddshcFilled()
	 * @method bool isTestovoePoleDlyaPoiskaVTablitsakhXddshcChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 fillTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 getTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 remindActualTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 requireTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setTestovoePoleDlyaPoiskaVTablitsakh2Ami698(\Bitrix\Iblock\Elements\EO_IblockProperty2327|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method bool hasTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method bool isTestovoePoleDlyaPoiskaVTablitsakh2Ami698Filled()
	 * @method bool isTestovoePoleDlyaPoiskaVTablitsakh2Ami698Changed()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 fillTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 getMwsCategory()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 remindActualMwsCategory()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 requireMwsCategory()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog setMwsCategory(\Bitrix\Iblock\Elements\EO_IblockProperty2336|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog resetMwsCategory()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unsetMwsCategory()
	 * @method bool hasMwsCategory()
	 * @method bool isMwsCategoryFilled()
	 * @method bool isMwsCategoryChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 fillMwsCategory()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalog wakeUp($data)
	 */
	class EO_ElementMainCatalog {
		/* @var \Bitrix\Iblock\Elements\ElementMainCatalogTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementMainCatalogTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementMainCatalog_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70[] getMinutesList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getMinutesCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection fillMinutes()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766[] getTestList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getTestCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection fillTest()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188[] getTestFieldList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getTestFieldCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection fillTestField()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326[] getTestovoePoleDlyaPoiskaVTablitsakhXddshcList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getTestovoePoleDlyaPoiskaVTablitsakhXddshcCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection fillTestovoePoleDlyaPoiskaVTablitsakhXddshc()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327[] getTestovoePoleDlyaPoiskaVTablitsakh2Ami698List()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getTestovoePoleDlyaPoiskaVTablitsakh2Ami698Collection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection fillTestovoePoleDlyaPoiskaVTablitsakh2Ami698()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336[] getMwsCategoryList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection getMwsCategoryCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection fillMwsCategory()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementMainCatalog $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementMainCatalog $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementMainCatalog $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementMainCatalog_Collection merge(?EO_ElementMainCatalog_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementMainCatalog_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementMainCatalogTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementMainCatalogTable';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementMainCatalog_Query query()
	 * @method static EO_ElementMainCatalog_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementMainCatalog_Result getById($id)
	 * @method static EO_ElementMainCatalog_Result getList(array $parameters = [])
	 * @method static EO_ElementMainCatalog_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalog createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalog wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection wakeUpCollection($rows)
	 */
	class ElementMainCatalogTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementMainCatalog_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementMainCatalog_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection fetchCollection()
	 */
	class EO_ElementMainCatalog_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection wakeUpCollection($rows)
	 */
	class EO_ElementMainCatalog_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty70Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty70
	 * @see \Bitrix\Iblock\Elements\IblockProperty70Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \float getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 setValue(\float|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \float remindActualValue()
	 * @method \float requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 unsetValue()
	 * @method \float fillValue()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty70 wakeUp($data)
	 */
	class EO_IblockProperty70 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty70Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty70Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty70_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \float[] getValueList()
	 * @method \float[] fillValue()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty70 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty70 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty70 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty70_Collection merge(?EO_IblockProperty70_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty70_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty70Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty70Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty70_Query query()
	 * @method static EO_IblockProperty70_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty70_Result getById($id)
	 * @method static EO_IblockProperty70_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty70_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty70 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty70 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection wakeUpCollection($rows)
	 */
	class IblockProperty70Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty70_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty70_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection fetchCollection()
	 */
	class EO_IblockProperty70_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty70_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty70_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty1766Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty1766
	 * @see \Bitrix\Iblock\Elements\IblockProperty1766Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration getItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration remindActualItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration requireItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 setItem(\Bitrix\Iblock\EO_PropertyEnumeration $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 resetItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 unsetItem()
	 * @method bool hasItem()
	 * @method bool isItemFilled()
	 * @method bool isItemChanged()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration fillItem()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1766 wakeUp($data)
	 */
	class EO_IblockProperty1766 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty1766Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty1766Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty1766_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration[] getItemList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection getItemCollection()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration_Collection fillItem()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty1766 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty1766 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty1766 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty1766_Collection merge(?EO_IblockProperty1766_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty1766_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty1766Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty1766Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty1766_Query query()
	 * @method static EO_IblockProperty1766_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty1766_Result getById($id)
	 * @method static EO_IblockProperty1766_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty1766_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1766 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1766 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection wakeUpCollection($rows)
	 */
	class IblockProperty1766Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty1766_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty1766_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection fetchCollection()
	 */
	class EO_IblockProperty1766_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty1766_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty1766_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2188Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2188
	 * @see \Bitrix\Iblock\Elements\IblockProperty2188Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2188 wakeUp($data)
	 */
	class EO_IblockProperty2188 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2188Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2188Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2188_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2188 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2188 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2188 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2188_Collection merge(?EO_IblockProperty2188_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2188_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2188Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2188Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2188_Query query()
	 * @method static EO_IblockProperty2188_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2188_Result getById($id)
	 * @method static EO_IblockProperty2188_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2188_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2188 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2188 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2188Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2188_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2188_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection fetchCollection()
	 */
	class EO_IblockProperty2188_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2188_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2188_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2326Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2326
	 * @see \Bitrix\Iblock\Elements\IblockProperty2326Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2326 wakeUp($data)
	 */
	class EO_IblockProperty2326 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2326Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2326Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2326_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2326 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2326 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2326 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2326_Collection merge(?EO_IblockProperty2326_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2326_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2326Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2326Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2326_Query query()
	 * @method static EO_IblockProperty2326_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2326_Result getById($id)
	 * @method static EO_IblockProperty2326_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2326_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2326 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2326 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2326Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2326_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2326_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection fetchCollection()
	 */
	class EO_IblockProperty2326_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2326_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2326_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2327Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2327
	 * @see \Bitrix\Iblock\Elements\IblockProperty2327Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2327 wakeUp($data)
	 */
	class EO_IblockProperty2327 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2327Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2327Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2327_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2327 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2327 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2327 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2327_Collection merge(?EO_IblockProperty2327_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2327_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2327Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2327Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2327_Query query()
	 * @method static EO_IblockProperty2327_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2327_Result getById($id)
	 * @method static EO_IblockProperty2327_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2327_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2327 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2327 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2327Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2327_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2327_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection fetchCollection()
	 */
	class EO_IblockProperty2327_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2327_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2327_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2336Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2336
	 * @see \Bitrix\Iblock\Elements\IblockProperty2336Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2336 wakeUp($data)
	 */
	class EO_IblockProperty2336 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2336Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2336Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2336_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2336 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2336 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2336 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2336_Collection merge(?EO_IblockProperty2336_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2336_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2336Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2336Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2336_Query query()
	 * @method static EO_IblockProperty2336_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2336_Result getById($id)
	 * @method static EO_IblockProperty2336_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2336_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2336 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2336 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2336Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2336_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2336_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection fetchCollection()
	 */
	class EO_IblockProperty2336_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2336_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2336_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementMainCatalogSkuTable */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementMainCatalogSku
	 * @see \Bitrix\Iblock\Elements\ElementMainCatalogSkuTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 getCml2Link()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 remindActualCml2Link()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 requireCml2Link()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku setCml2Link(\Bitrix\Iblock\Elements\EO_IblockProperty69|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku resetCml2Link()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unsetCml2Link()
	 * @method bool hasCml2Link()
	 * @method bool isCml2LinkFilled()
	 * @method bool isCml2LinkChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 fillCml2Link()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku wakeUp($data)
	 */
	class EO_ElementMainCatalogSku {
		/* @var \Bitrix\Iblock\Elements\ElementMainCatalogSkuTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementMainCatalogSkuTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementMainCatalogSku_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69[] getCml2LinkList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection getCml2LinkCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection fillCml2Link()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementMainCatalogSku $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementMainCatalogSku $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementMainCatalogSku $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementMainCatalogSku_Collection merge(?EO_ElementMainCatalogSku_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementMainCatalogSku_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementMainCatalogSkuTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementMainCatalogSkuTable';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementMainCatalogSku_Query query()
	 * @method static EO_ElementMainCatalogSku_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementMainCatalogSku_Result getById($id)
	 * @method static EO_ElementMainCatalogSku_Result getList(array $parameters = [])
	 * @method static EO_ElementMainCatalogSku_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection wakeUpCollection($rows)
	 */
	class ElementMainCatalogSkuTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementMainCatalogSku_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementMainCatalogSku_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection fetchCollection()
	 */
	class EO_ElementMainCatalogSku_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalogSku_Collection wakeUpCollection($rows)
	 */
	class EO_ElementMainCatalogSku_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty69Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty69
	 * @see \Bitrix\Iblock\Elements\IblockProperty69Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog getElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog remindActualElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog requireElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 setElement(\Bitrix\Iblock\Elements\EO_ElementMainCatalog $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 resetElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 unsetElement()
	 * @method bool hasElement()
	 * @method bool isElementFilled()
	 * @method bool isElementChanged()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog fillElement()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty69 wakeUp($data)
	 */
	class EO_IblockProperty69 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty69Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty69Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty69_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog[] getElementList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection getElementCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementMainCatalog_Collection fillElement()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty69 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty69 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty69 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty69_Collection merge(?EO_IblockProperty69_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty69_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty69Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty69Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty69_Query query()
	 * @method static EO_IblockProperty69_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty69_Result getById($id)
	 * @method static EO_IblockProperty69_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty69_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty69 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty69 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection wakeUpCollection($rows)
	 */
	class IblockProperty69Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty69_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty69_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection fetchCollection()
	 */
	class EO_IblockProperty69_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty69_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty69_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementTest132Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementTest132
	 * @see \Bitrix\Iblock\Elements\ElementTest132Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection getNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection requireNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection fillNovoePole()
	 * @method bool hasNovoePole()
	 * @method bool isNovoePoleFilled()
	 * @method bool isNovoePoleChanged()
	 * @method void addToNovoePole(\Bitrix\Iblock\Elements\EO_IblockProperty2274|\Bitrix\Iblock\ORM\PropertyValue|\int $iblockProperty2274)
	 * @method void removeFromNovoePole(\Bitrix\Iblock\Elements\EO_IblockProperty2274|\Bitrix\Iblock\ORM\PropertyValue|\int $iblockProperty2274)
	 * @method void removeAllNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 resetNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unsetNovoePole()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTest132 wakeUp($data)
	 */
	class EO_ElementTest132 {
		/* @var \Bitrix\Iblock\Elements\ElementTest132Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementTest132Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementTest132_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection[] getNovoePoleList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection getNovoePoleCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection fillNovoePole()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementTest132 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementTest132 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementTest132 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTest132_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementTest132_Collection merge(?EO_ElementTest132_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementTest132_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementTest132Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementTest132Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementTest132_Query query()
	 * @method static EO_ElementTest132_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementTest132_Result getById($id)
	 * @method static EO_ElementTest132_Result getList(array $parameters = [])
	 * @method static EO_ElementTest132_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTest132 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTest132_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTest132 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTest132_Collection wakeUpCollection($rows)
	 */
	class ElementTest132Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementTest132_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementTest132_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection fetchCollection()
	 */
	class EO_ElementTest132_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection wakeUpCollection($rows)
	 */
	class EO_ElementTest132_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2274Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2274
	 * @see \Bitrix\Iblock\Elements\IblockProperty2274Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration getItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration remindActualItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration requireItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setItem(\Bitrix\Iblock\EO_PropertyEnumeration $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 resetItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unsetItem()
	 * @method bool hasItem()
	 * @method bool isItemFilled()
	 * @method bool isItemChanged()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration fillItem()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 getSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 remindActualSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 requireSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 setSrcElement(\Bitrix\Iblock\Elements\EO_ElementTest132 $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 resetSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unsetSrcElement()
	 * @method bool hasSrcElement()
	 * @method bool isSrcElementFilled()
	 * @method bool isSrcElementChanged()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132 fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2274 wakeUp($data)
	 */
	class EO_IblockProperty2274 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2274Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2274Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2274_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration[] getItemList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection getItemCollection()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration_Collection fillItem()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132[] getSrcElementList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection getSrcElementCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTest132_Collection fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2274 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2274 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2274 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2274_Collection merge(?EO_IblockProperty2274_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2274_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2274Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2274Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2274_Query query()
	 * @method static EO_IblockProperty2274_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2274_Result getById($id)
	 * @method static EO_IblockProperty2274_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2274_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2274 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2274 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2274Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2274_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2274_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection fetchCollection()
	 */
	class EO_IblockProperty2274_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2274_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2274_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementTestListTable */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementTestList
	 * @see \Bitrix\Iblock\Elements\ElementTestListTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 getData()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 remindActualData()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 requireData()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setData(\Bitrix\Iblock\Elements\EO_IblockProperty2276|\Bitrix\Iblock\ORM\PropertyValue|\string $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetData()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetData()
	 * @method bool hasData()
	 * @method bool isDataFilled()
	 * @method bool isDataChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 fillData()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 getNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 remindActualNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 requireNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList setNovoePole(\Bitrix\Iblock\Elements\EO_IblockProperty2324|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList resetNovoePole()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unsetNovoePole()
	 * @method bool hasNovoePole()
	 * @method bool isNovoePoleFilled()
	 * @method bool isNovoePoleChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 fillNovoePole()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTestList wakeUp($data)
	 */
	class EO_ElementTestList {
		/* @var \Bitrix\Iblock\Elements\ElementTestListTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementTestListTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementTestList_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276[] getDataList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getDataCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection fillData()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324[] getNovoePoleList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection getNovoePoleCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection fillNovoePole()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementTestList $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementTestList $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementTestList $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTestList_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementTestList_Collection merge(?EO_ElementTestList_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementTestList_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementTestListTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementTestListTable';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementTestList_Query query()
	 * @method static EO_ElementTestList_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementTestList_Result getById($id)
	 * @method static EO_ElementTestList_Result getList(array $parameters = [])
	 * @method static EO_ElementTestList_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTestList createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTestList_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTestList wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTestList_Collection wakeUpCollection($rows)
	 */
	class ElementTestListTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementTestList_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementTestList_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection fetchCollection()
	 */
	class EO_ElementTestList_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTestList_Collection wakeUpCollection($rows)
	 */
	class EO_ElementTestList_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2276Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2276
	 * @see \Bitrix\Iblock\Elements\IblockProperty2276Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 unsetValue()
	 * @method \string fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2276 wakeUp($data)
	 */
	class EO_IblockProperty2276 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2276Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2276Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2276_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2276 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2276 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2276 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2276_Collection merge(?EO_IblockProperty2276_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2276_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2276Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2276Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2276_Query query()
	 * @method static EO_IblockProperty2276_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2276_Result getById($id)
	 * @method static EO_IblockProperty2276_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2276_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2276 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2276 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2276Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2276_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2276_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection fetchCollection()
	 */
	class EO_IblockProperty2276_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2276_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2276_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2324Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2324
	 * @see \Bitrix\Iblock\Elements\IblockProperty2324Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Main\EO_File getFile()
	 * @method \Bitrix\Main\EO_File remindActualFile()
	 * @method \Bitrix\Main\EO_File requireFile()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 setFile(\Bitrix\Main\EO_File $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 resetFile()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 unsetFile()
	 * @method bool hasFile()
	 * @method bool isFileFilled()
	 * @method bool isFileChanged()
	 * @method \Bitrix\Main\EO_File fillFile()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2324 wakeUp($data)
	 */
	class EO_IblockProperty2324 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2324Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2324Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2324_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Main\EO_File[] getFileList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection getFileCollection()
	 * @method \Bitrix\Main\EO_File_Collection fillFile()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2324 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2324 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2324 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2324_Collection merge(?EO_IblockProperty2324_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2324_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2324Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2324Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2324_Query query()
	 * @method static EO_IblockProperty2324_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2324_Result getById($id)
	 * @method static EO_IblockProperty2324_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2324_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2324 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2324 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2324Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2324_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2324_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection fetchCollection()
	 */
	class EO_IblockProperty2324_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2324_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2324_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\ElementTestsTable */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementTests
	 * @see \Bitrix\Iblock\Elements\ElementTestsTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \Bitrix\Main\Type\DateTime getTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setTimestampX(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $timestampX)
	 * @method bool hasTimestampX()
	 * @method bool isTimestampXFilled()
	 * @method bool isTimestampXChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualTimestampX()
	 * @method \Bitrix\Main\Type\DateTime requireTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetTimestampX()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetTimestampX()
	 * @method \Bitrix\Main\Type\DateTime fillTimestampX()
	 * @method \int getModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setModifiedBy(\int|\Bitrix\Main\DB\SqlExpression $modifiedBy)
	 * @method bool hasModifiedBy()
	 * @method bool isModifiedByFilled()
	 * @method bool isModifiedByChanged()
	 * @method \int remindActualModifiedBy()
	 * @method \int requireModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetModifiedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetModifiedBy()
	 * @method \int fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime getDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setDateCreate(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $dateCreate)
	 * @method bool hasDateCreate()
	 * @method bool isDateCreateFilled()
	 * @method bool isDateCreateChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualDateCreate()
	 * @method \Bitrix\Main\Type\DateTime requireDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetDateCreate()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetDateCreate()
	 * @method \Bitrix\Main\Type\DateTime fillDateCreate()
	 * @method \int getCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setCreatedBy(\int|\Bitrix\Main\DB\SqlExpression $createdBy)
	 * @method bool hasCreatedBy()
	 * @method bool isCreatedByFilled()
	 * @method bool isCreatedByChanged()
	 * @method \int remindActualCreatedBy()
	 * @method \int requireCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetCreatedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetCreatedBy()
	 * @method \int fillCreatedBy()
	 * @method \int getIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setIblockId(\int|\Bitrix\Main\DB\SqlExpression $iblockId)
	 * @method bool hasIblockId()
	 * @method bool isIblockIdFilled()
	 * @method bool isIblockIdChanged()
	 * @method \int remindActualIblockId()
	 * @method \int requireIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetIblockId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetIblockId()
	 * @method \int fillIblockId()
	 * @method \int getIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setIblockSectionId(\int|\Bitrix\Main\DB\SqlExpression $iblockSectionId)
	 * @method bool hasIblockSectionId()
	 * @method bool isIblockSectionIdFilled()
	 * @method bool isIblockSectionIdChanged()
	 * @method \int remindActualIblockSectionId()
	 * @method \int requireIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetIblockSectionId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetIblockSectionId()
	 * @method \int fillIblockSectionId()
	 * @method \boolean getActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setActive(\boolean|\Bitrix\Main\DB\SqlExpression $active)
	 * @method bool hasActive()
	 * @method bool isActiveFilled()
	 * @method bool isActiveChanged()
	 * @method \boolean remindActualActive()
	 * @method \boolean requireActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetActive()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetActive()
	 * @method \boolean fillActive()
	 * @method \Bitrix\Main\Type\DateTime getActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setActiveFrom(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeFrom)
	 * @method bool hasActiveFrom()
	 * @method bool isActiveFromFilled()
	 * @method bool isActiveFromChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime requireActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetActiveFrom()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime getActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setActiveTo(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $activeTo)
	 * @method bool hasActiveTo()
	 * @method bool isActiveToFilled()
	 * @method bool isActiveToChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualActiveTo()
	 * @method \Bitrix\Main\Type\DateTime requireActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetActiveTo()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetActiveTo()
	 * @method \Bitrix\Main\Type\DateTime fillActiveTo()
	 * @method \int getSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setSort(\int|\Bitrix\Main\DB\SqlExpression $sort)
	 * @method bool hasSort()
	 * @method bool isSortFilled()
	 * @method bool isSortChanged()
	 * @method \int remindActualSort()
	 * @method \int requireSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetSort()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetSort()
	 * @method \int fillSort()
	 * @method \string getName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setName(\string|\Bitrix\Main\DB\SqlExpression $name)
	 * @method bool hasName()
	 * @method bool isNameFilled()
	 * @method bool isNameChanged()
	 * @method \string remindActualName()
	 * @method \string requireName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetName()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetName()
	 * @method \string fillName()
	 * @method \int getPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setPreviewPicture(\int|\Bitrix\Main\DB\SqlExpression $previewPicture)
	 * @method bool hasPreviewPicture()
	 * @method bool isPreviewPictureFilled()
	 * @method bool isPreviewPictureChanged()
	 * @method \int remindActualPreviewPicture()
	 * @method \int requirePreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetPreviewPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetPreviewPicture()
	 * @method \int fillPreviewPicture()
	 * @method \string getPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setPreviewText(\string|\Bitrix\Main\DB\SqlExpression $previewText)
	 * @method bool hasPreviewText()
	 * @method bool isPreviewTextFilled()
	 * @method bool isPreviewTextChanged()
	 * @method \string remindActualPreviewText()
	 * @method \string requirePreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetPreviewText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetPreviewText()
	 * @method \string fillPreviewText()
	 * @method \string getPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setPreviewTextType(\string|\Bitrix\Main\DB\SqlExpression $previewTextType)
	 * @method bool hasPreviewTextType()
	 * @method bool isPreviewTextTypeFilled()
	 * @method bool isPreviewTextTypeChanged()
	 * @method \string remindActualPreviewTextType()
	 * @method \string requirePreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetPreviewTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetPreviewTextType()
	 * @method \string fillPreviewTextType()
	 * @method \int getDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setDetailPicture(\int|\Bitrix\Main\DB\SqlExpression $detailPicture)
	 * @method bool hasDetailPicture()
	 * @method bool isDetailPictureFilled()
	 * @method bool isDetailPictureChanged()
	 * @method \int remindActualDetailPicture()
	 * @method \int requireDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetDetailPicture()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetDetailPicture()
	 * @method \int fillDetailPicture()
	 * @method \string getDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setDetailText(\string|\Bitrix\Main\DB\SqlExpression $detailText)
	 * @method bool hasDetailText()
	 * @method bool isDetailTextFilled()
	 * @method bool isDetailTextChanged()
	 * @method \string remindActualDetailText()
	 * @method \string requireDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetDetailText()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetDetailText()
	 * @method \string fillDetailText()
	 * @method \string getDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setDetailTextType(\string|\Bitrix\Main\DB\SqlExpression $detailTextType)
	 * @method bool hasDetailTextType()
	 * @method bool isDetailTextTypeFilled()
	 * @method bool isDetailTextTypeChanged()
	 * @method \string remindActualDetailTextType()
	 * @method \string requireDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetDetailTextType()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetDetailTextType()
	 * @method \string fillDetailTextType()
	 * @method \string getSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setSearchableContent(\string|\Bitrix\Main\DB\SqlExpression $searchableContent)
	 * @method bool hasSearchableContent()
	 * @method bool isSearchableContentFilled()
	 * @method bool isSearchableContentChanged()
	 * @method \string remindActualSearchableContent()
	 * @method \string requireSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetSearchableContent()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetSearchableContent()
	 * @method \string fillSearchableContent()
	 * @method \int getWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfStatusId(\int|\Bitrix\Main\DB\SqlExpression $wfStatusId)
	 * @method bool hasWfStatusId()
	 * @method bool isWfStatusIdFilled()
	 * @method bool isWfStatusIdChanged()
	 * @method \int remindActualWfStatusId()
	 * @method \int requireWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfStatusId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfStatusId()
	 * @method \int fillWfStatusId()
	 * @method \int getWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfParentElementId(\int|\Bitrix\Main\DB\SqlExpression $wfParentElementId)
	 * @method bool hasWfParentElementId()
	 * @method bool isWfParentElementIdFilled()
	 * @method bool isWfParentElementIdChanged()
	 * @method \int remindActualWfParentElementId()
	 * @method \int requireWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfParentElementId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfParentElementId()
	 * @method \int fillWfParentElementId()
	 * @method \string getWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfNew(\string|\Bitrix\Main\DB\SqlExpression $wfNew)
	 * @method bool hasWfNew()
	 * @method bool isWfNewFilled()
	 * @method bool isWfNewChanged()
	 * @method \string remindActualWfNew()
	 * @method \string requireWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfNew()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfNew()
	 * @method \string fillWfNew()
	 * @method \int getWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfLockedBy(\int|\Bitrix\Main\DB\SqlExpression $wfLockedBy)
	 * @method bool hasWfLockedBy()
	 * @method bool isWfLockedByFilled()
	 * @method bool isWfLockedByChanged()
	 * @method \int remindActualWfLockedBy()
	 * @method \int requireWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfLockedBy()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfLockedBy()
	 * @method \int fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime getWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfDateLock(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $wfDateLock)
	 * @method bool hasWfDateLock()
	 * @method bool isWfDateLockFilled()
	 * @method bool isWfDateLockChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime requireWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfDateLock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfDateLock()
	 * @method \Bitrix\Main\Type\DateTime fillWfDateLock()
	 * @method \string getWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfComments(\string|\Bitrix\Main\DB\SqlExpression $wfComments)
	 * @method bool hasWfComments()
	 * @method bool isWfCommentsFilled()
	 * @method bool isWfCommentsChanged()
	 * @method \string remindActualWfComments()
	 * @method \string requireWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfComments()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfComments()
	 * @method \string fillWfComments()
	 * @method \boolean getInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setInSections(\boolean|\Bitrix\Main\DB\SqlExpression $inSections)
	 * @method bool hasInSections()
	 * @method bool isInSectionsFilled()
	 * @method bool isInSectionsChanged()
	 * @method \boolean remindActualInSections()
	 * @method \boolean requireInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetInSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetInSections()
	 * @method \boolean fillInSections()
	 * @method \string getXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setXmlId(\string|\Bitrix\Main\DB\SqlExpression $xmlId)
	 * @method bool hasXmlId()
	 * @method bool isXmlIdFilled()
	 * @method bool isXmlIdChanged()
	 * @method \string remindActualXmlId()
	 * @method \string requireXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetXmlId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetXmlId()
	 * @method \string fillXmlId()
	 * @method \string getCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setCode(\string|\Bitrix\Main\DB\SqlExpression $code)
	 * @method bool hasCode()
	 * @method bool isCodeFilled()
	 * @method bool isCodeChanged()
	 * @method \string remindActualCode()
	 * @method \string requireCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetCode()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetCode()
	 * @method \string fillCode()
	 * @method \string getTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setTags(\string|\Bitrix\Main\DB\SqlExpression $tags)
	 * @method bool hasTags()
	 * @method bool isTagsFilled()
	 * @method bool isTagsChanged()
	 * @method \string remindActualTags()
	 * @method \string requireTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetTags()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetTags()
	 * @method \string fillTags()
	 * @method \string getTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setTmpId(\string|\Bitrix\Main\DB\SqlExpression $tmpId)
	 * @method bool hasTmpId()
	 * @method bool isTmpIdFilled()
	 * @method bool isTmpIdChanged()
	 * @method \string remindActualTmpId()
	 * @method \string requireTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetTmpId()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetTmpId()
	 * @method \string fillTmpId()
	 * @method \int getShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setShowCounter(\int|\Bitrix\Main\DB\SqlExpression $showCounter)
	 * @method bool hasShowCounter()
	 * @method bool isShowCounterFilled()
	 * @method bool isShowCounterChanged()
	 * @method \int remindActualShowCounter()
	 * @method \int requireShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetShowCounter()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetShowCounter()
	 * @method \int fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime getShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setShowCounterStart(\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $showCounterStart)
	 * @method bool hasShowCounterStart()
	 * @method bool isShowCounterStartFilled()
	 * @method bool isShowCounterStartChanged()
	 * @method \Bitrix\Main\Type\DateTime remindActualShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime requireShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetShowCounterStart()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetShowCounterStart()
	 * @method \Bitrix\Main\Type\DateTime fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock getIblock()
	 * @method \Bitrix\Iblock\Iblock remindActualIblock()
	 * @method \Bitrix\Iblock\Iblock requireIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setIblock(\Bitrix\Iblock\Iblock $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetIblock()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetIblock()
	 * @method bool hasIblock()
	 * @method bool isIblockFilled()
	 * @method bool isIblockChanged()
	 * @method \Bitrix\Iblock\Iblock fillIblock()
	 * @method \Bitrix\Iblock\EO_Element getWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element remindActualWfParentElement()
	 * @method \Bitrix\Iblock\EO_Element requireWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfParentElement(\Bitrix\Iblock\EO_Element $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfParentElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfParentElement()
	 * @method bool hasWfParentElement()
	 * @method bool isWfParentElementFilled()
	 * @method bool isWfParentElementChanged()
	 * @method \Bitrix\Iblock\EO_Element fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section getIblockSection()
	 * @method \Bitrix\Iblock\EO_Section remindActualIblockSection()
	 * @method \Bitrix\Iblock\EO_Section requireIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setIblockSection(\Bitrix\Iblock\EO_Section $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetIblockSection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetIblockSection()
	 * @method bool hasIblockSection()
	 * @method bool isIblockSectionFilled()
	 * @method bool isIblockSectionChanged()
	 * @method \Bitrix\Iblock\EO_Section fillIblockSection()
	 * @method \Bitrix\Main\EO_User getModifiedByUser()
	 * @method \Bitrix\Main\EO_User remindActualModifiedByUser()
	 * @method \Bitrix\Main\EO_User requireModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setModifiedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetModifiedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetModifiedByUser()
	 * @method bool hasModifiedByUser()
	 * @method bool isModifiedByUserFilled()
	 * @method bool isModifiedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User getCreatedByUser()
	 * @method \Bitrix\Main\EO_User remindActualCreatedByUser()
	 * @method \Bitrix\Main\EO_User requireCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setCreatedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetCreatedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetCreatedByUser()
	 * @method bool hasCreatedByUser()
	 * @method bool isCreatedByUserFilled()
	 * @method bool isCreatedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User getWfLockedByUser()
	 * @method \Bitrix\Main\EO_User remindActualWfLockedByUser()
	 * @method \Bitrix\Main\EO_User requireWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setWfLockedByUser(\Bitrix\Main\EO_User $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetWfLockedByUser()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetWfLockedByUser()
	 * @method bool hasWfLockedByUser()
	 * @method bool isWfLockedByUserFilled()
	 * @method bool isWfLockedByUserChanged()
	 * @method \Bitrix\Main\EO_User fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection requireSections()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method bool hasSections()
	 * @method bool isSectionsFilled()
	 * @method bool isSectionsChanged()
	 * @method void addToSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeFromSections(\Bitrix\Iblock\EO_Section $section)
	 * @method void removeAllSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetSections()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection getTryam()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection requireTryam()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection fillTryam()
	 * @method bool hasTryam()
	 * @method bool isTryamFilled()
	 * @method bool isTryamChanged()
	 * @method void addToTryam(\Bitrix\Iblock\Elements\EO_IblockProperty2266|\Bitrix\Iblock\ORM\PropertyValue|\string $iblockProperty2266)
	 * @method void removeFromTryam(\Bitrix\Iblock\Elements\EO_IblockProperty2266|\Bitrix\Iblock\ORM\PropertyValue|\string $iblockProperty2266)
	 * @method void removeAllTryam()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetTryam()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetTryam()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 getSrokGodnosti()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 remindActualSrokGodnosti()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 requireSrokGodnosti()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setSrokGodnosti(\Bitrix\Iblock\Elements\EO_IblockProperty2268|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetSrokGodnosti()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetSrokGodnosti()
	 * @method bool hasSrokGodnosti()
	 * @method bool isSrokGodnostiFilled()
	 * @method bool isSrokGodnostiChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 fillSrokGodnosti()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection getDostupnyeSkidki()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection requireDostupnyeSkidki()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection fillDostupnyeSkidki()
	 * @method bool hasDostupnyeSkidki()
	 * @method bool isDostupnyeSkidkiFilled()
	 * @method bool isDostupnyeSkidkiChanged()
	 * @method void addToDostupnyeSkidki(\Bitrix\Iblock\Elements\EO_IblockProperty2269|\Bitrix\Iblock\ORM\PropertyValue|\int $iblockProperty2269)
	 * @method void removeFromDostupnyeSkidki(\Bitrix\Iblock\Elements\EO_IblockProperty2269|\Bitrix\Iblock\ORM\PropertyValue|\int $iblockProperty2269)
	 * @method void removeAllDostupnyeSkidki()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetDostupnyeSkidki()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetDostupnyeSkidki()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 getUsloviyaOplaty()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 remindActualUsloviyaOplaty()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 requireUsloviyaOplaty()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests setUsloviyaOplaty(\Bitrix\Iblock\Elements\EO_IblockProperty2271|\Bitrix\Iblock\ORM\PropertyValue|\int $object)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetUsloviyaOplaty()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetUsloviyaOplaty()
	 * @method bool hasUsloviyaOplaty()
	 * @method bool isUsloviyaOplatyFilled()
	 * @method bool isUsloviyaOplatyChanged()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 fillUsloviyaOplaty()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection getProverka()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection requireProverka()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection fillProverka()
	 * @method bool hasProverka()
	 * @method bool isProverkaFilled()
	 * @method bool isProverkaChanged()
	 * @method void addToProverka(\Bitrix\Iblock\Elements\EO_IblockProperty2272|\Bitrix\Iblock\ORM\PropertyValue|\string $iblockProperty2272)
	 * @method void removeFromProverka(\Bitrix\Iblock\Elements\EO_IblockProperty2272|\Bitrix\Iblock\ORM\PropertyValue|\string $iblockProperty2272)
	 * @method void removeAllProverka()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests resetProverka()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unsetProverka()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTests wakeUp($data)
	 */
	class EO_ElementTests {
		/* @var \Bitrix\Iblock\Elements\ElementTestsTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementTestsTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_ElementTests_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \Bitrix\Main\Type\DateTime[] getTimestampXList()
	 * @method \Bitrix\Main\Type\DateTime[] fillTimestampX()
	 * @method \int[] getModifiedByList()
	 * @method \int[] fillModifiedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getDateCreateList()
	 * @method \Bitrix\Main\Type\DateTime[] fillDateCreate()
	 * @method \int[] getCreatedByList()
	 * @method \int[] fillCreatedBy()
	 * @method \int[] getIblockIdList()
	 * @method \int[] fillIblockId()
	 * @method \int[] getIblockSectionIdList()
	 * @method \int[] fillIblockSectionId()
	 * @method \boolean[] getActiveList()
	 * @method \boolean[] fillActive()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveFromList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveFrom()
	 * @method \Bitrix\Main\Type\DateTime[] getActiveToList()
	 * @method \Bitrix\Main\Type\DateTime[] fillActiveTo()
	 * @method \int[] getSortList()
	 * @method \int[] fillSort()
	 * @method \string[] getNameList()
	 * @method \string[] fillName()
	 * @method \int[] getPreviewPictureList()
	 * @method \int[] fillPreviewPicture()
	 * @method \string[] getPreviewTextList()
	 * @method \string[] fillPreviewText()
	 * @method \string[] getPreviewTextTypeList()
	 * @method \string[] fillPreviewTextType()
	 * @method \int[] getDetailPictureList()
	 * @method \int[] fillDetailPicture()
	 * @method \string[] getDetailTextList()
	 * @method \string[] fillDetailText()
	 * @method \string[] getDetailTextTypeList()
	 * @method \string[] fillDetailTextType()
	 * @method \string[] getSearchableContentList()
	 * @method \string[] fillSearchableContent()
	 * @method \int[] getWfStatusIdList()
	 * @method \int[] fillWfStatusId()
	 * @method \int[] getWfParentElementIdList()
	 * @method \int[] fillWfParentElementId()
	 * @method \string[] getWfNewList()
	 * @method \string[] fillWfNew()
	 * @method \int[] getWfLockedByList()
	 * @method \int[] fillWfLockedBy()
	 * @method \Bitrix\Main\Type\DateTime[] getWfDateLockList()
	 * @method \Bitrix\Main\Type\DateTime[] fillWfDateLock()
	 * @method \string[] getWfCommentsList()
	 * @method \string[] fillWfComments()
	 * @method \boolean[] getInSectionsList()
	 * @method \boolean[] fillInSections()
	 * @method \string[] getXmlIdList()
	 * @method \string[] fillXmlId()
	 * @method \string[] getCodeList()
	 * @method \string[] fillCode()
	 * @method \string[] getTagsList()
	 * @method \string[] fillTags()
	 * @method \string[] getTmpIdList()
	 * @method \string[] fillTmpId()
	 * @method \int[] getShowCounterList()
	 * @method \int[] fillShowCounter()
	 * @method \Bitrix\Main\Type\DateTime[] getShowCounterStartList()
	 * @method \Bitrix\Main\Type\DateTime[] fillShowCounterStart()
	 * @method \Bitrix\Iblock\Iblock[] getIblockList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getIblockCollection()
	 * @method \Bitrix\Iblock\EO_Iblock_Collection fillIblock()
	 * @method \Bitrix\Iblock\EO_Element[] getWfParentElementList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getWfParentElementCollection()
	 * @method \Bitrix\Iblock\EO_Element_Collection fillWfParentElement()
	 * @method \Bitrix\Iblock\EO_Section[] getIblockSectionList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getIblockSectionCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillIblockSection()
	 * @method \Bitrix\Main\EO_User[] getModifiedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getModifiedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillModifiedByUser()
	 * @method \Bitrix\Main\EO_User[] getCreatedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getCreatedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillCreatedByUser()
	 * @method \Bitrix\Main\EO_User[] getWfLockedByUserList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getWfLockedByUserCollection()
	 * @method \Bitrix\Main\EO_User_Collection fillWfLockedByUser()
	 * @method \Bitrix\Iblock\EO_Section_Collection[] getSectionsList()
	 * @method \Bitrix\Iblock\EO_Section_Collection getSectionsCollection()
	 * @method \Bitrix\Iblock\EO_Section_Collection fillSections()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection[] getTryamList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection getTryamCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection fillTryam()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268[] getSrokGodnostiList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getSrokGodnostiCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection fillSrokGodnosti()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection[] getDostupnyeSkidkiList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection getDostupnyeSkidkiCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection fillDostupnyeSkidki()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271[] getUsloviyaOplatyList()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection getUsloviyaOplatyCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection fillUsloviyaOplaty()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection[] getProverkaList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection getProverkaCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection fillProverka()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTests_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_ElementTests_Collection merge(?EO_ElementTests_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_ElementTests_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\ElementTestsTable */
		static public $dataClass = '\Bitrix\Iblock\Elements\ElementTestsTable';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_ElementTests_Query query()
	 * @method static EO_ElementTests_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_ElementTests_Result getById($id)
	 * @method static EO_ElementTests_Result getList(array $parameters = [])
	 * @method static EO_ElementTests_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTests createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTests_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTests wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_ElementTests_Collection wakeUpCollection($rows)
	 */
	class ElementTestsTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_ElementTests_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_ElementTests_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection fetchCollection()
	 */
	class EO_ElementTests_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection wakeUpCollection($rows)
	 */
	class EO_ElementTests_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2266Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2266
	 * @see \Bitrix\Iblock\Elements\IblockProperty2266Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 unsetValue()
	 * @method \string fillValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests getSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests remindActualSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests requireSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 setSrcElement(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 resetSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 unsetSrcElement()
	 * @method bool hasSrcElement()
	 * @method bool isSrcElementFilled()
	 * @method bool isSrcElementChanged()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2266 wakeUp($data)
	 */
	class EO_IblockProperty2266 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2266Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2266Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2266_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests[] getSrcElementList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection getSrcElementCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2266 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2266 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2266 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2266_Collection merge(?EO_IblockProperty2266_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2266_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2266Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2266Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2266_Query query()
	 * @method static EO_IblockProperty2266_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2266_Result getById($id)
	 * @method static EO_IblockProperty2266_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2266_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2266 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2266 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2266Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2266_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2266_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection fetchCollection()
	 */
	class EO_IblockProperty2266_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2266_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2266_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2268Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2268
	 * @see \Bitrix\Iblock\Elements\IblockProperty2268Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration getItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration remindActualItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration requireItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 setItem(\Bitrix\Iblock\EO_PropertyEnumeration $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 resetItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 unsetItem()
	 * @method bool hasItem()
	 * @method bool isItemFilled()
	 * @method bool isItemChanged()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration fillItem()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2268 wakeUp($data)
	 */
	class EO_IblockProperty2268 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2268Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2268Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2268_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration[] getItemList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection getItemCollection()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration_Collection fillItem()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2268 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2268 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2268 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2268_Collection merge(?EO_IblockProperty2268_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2268_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2268Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2268Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2268_Query query()
	 * @method static EO_IblockProperty2268_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2268_Result getById($id)
	 * @method static EO_IblockProperty2268_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2268_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2268 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2268 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2268Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2268_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2268_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection fetchCollection()
	 */
	class EO_IblockProperty2268_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2268_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2268_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2269Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2269
	 * @see \Bitrix\Iblock\Elements\IblockProperty2269Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration getItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration remindActualItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration requireItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setItem(\Bitrix\Iblock\EO_PropertyEnumeration $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 resetItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unsetItem()
	 * @method bool hasItem()
	 * @method bool isItemFilled()
	 * @method bool isItemChanged()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration fillItem()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests getSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests remindActualSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests requireSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 setSrcElement(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 resetSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unsetSrcElement()
	 * @method bool hasSrcElement()
	 * @method bool isSrcElementFilled()
	 * @method bool isSrcElementChanged()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2269 wakeUp($data)
	 */
	class EO_IblockProperty2269 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2269Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2269Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2269_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration[] getItemList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection getItemCollection()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration_Collection fillItem()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests[] getSrcElementList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection getSrcElementCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2269 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2269 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2269 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2269_Collection merge(?EO_IblockProperty2269_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2269_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2269Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2269Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2269_Query query()
	 * @method static EO_IblockProperty2269_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2269_Result getById($id)
	 * @method static EO_IblockProperty2269_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2269_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2269 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2269 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2269Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2269_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2269_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection fetchCollection()
	 */
	class EO_IblockProperty2269_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2269_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2269_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2271Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2271
	 * @see \Bitrix\Iblock\Elements\IblockProperty2271Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \int getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 setValue(\int|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \int remindActualValue()
	 * @method \int requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 unsetValue()
	 * @method \int fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration getItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration remindActualItem()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration requireItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 setItem(\Bitrix\Iblock\EO_PropertyEnumeration $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 resetItem()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 unsetItem()
	 * @method bool hasItem()
	 * @method bool isItemFilled()
	 * @method bool isItemChanged()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration fillItem()
	 * @method \string getIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 setIblockGenericValue(\string|\Bitrix\Main\DB\SqlExpression $iblockGenericValue)
	 * @method bool hasIblockGenericValue()
	 * @method bool isIblockGenericValueFilled()
	 * @method bool isIblockGenericValueChanged()
	 * @method \string remindActualIblockGenericValue()
	 * @method \string requireIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 resetIblockGenericValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 unsetIblockGenericValue()
	 * @method \string fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2271 wakeUp($data)
	 */
	class EO_IblockProperty2271 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2271Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2271Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2271_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \int[] getValueList()
	 * @method \int[] fillValue()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration[] getItemList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection getItemCollection()
	 * @method \Bitrix\Iblock\EO_PropertyEnumeration_Collection fillItem()
	 * @method \string[] getIblockGenericValueList()
	 * @method \string[] fillIblockGenericValue()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2271 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2271 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2271 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2271_Collection merge(?EO_IblockProperty2271_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2271_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2271Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2271Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2271_Query query()
	 * @method static EO_IblockProperty2271_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2271_Result getById($id)
	 * @method static EO_IblockProperty2271_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2271_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2271 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2271 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2271Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2271_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2271_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection fetchCollection()
	 */
	class EO_IblockProperty2271_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2271_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2271_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Bitrix\Iblock\Elements\IblockProperty2272Table */
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2272
	 * @see \Bitrix\Iblock\Elements\IblockProperty2272Table
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \int getIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 setIblockElementId(\int|\Bitrix\Main\DB\SqlExpression $iblockElementId)
	 * @method bool hasIblockElementId()
	 * @method bool isIblockElementIdFilled()
	 * @method bool isIblockElementIdChanged()
	 * @method \int remindActualIblockElementId()
	 * @method \int requireIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 resetIblockElementId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 unsetIblockElementId()
	 * @method \int fillIblockElementId()
	 * @method \int getIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 setIblockPropertyId(\int|\Bitrix\Main\DB\SqlExpression $iblockPropertyId)
	 * @method bool hasIblockPropertyId()
	 * @method bool isIblockPropertyIdFilled()
	 * @method bool isIblockPropertyIdChanged()
	 * @method \int remindActualIblockPropertyId()
	 * @method \int requireIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 resetIblockPropertyId()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 unsetIblockPropertyId()
	 * @method \int fillIblockPropertyId()
	 * @method \string getValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 setValue(\string|\Bitrix\Main\DB\SqlExpression $value)
	 * @method bool hasValue()
	 * @method bool isValueFilled()
	 * @method bool isValueChanged()
	 * @method \string remindActualValue()
	 * @method \string requireValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 resetValue()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 unsetValue()
	 * @method \string fillValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests getSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests remindActualSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests requireSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 setSrcElement(\Bitrix\Iblock\Elements\EO_ElementTests $object)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 resetSrcElement()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 unsetSrcElement()
	 * @method bool hasSrcElement()
	 * @method bool isSrcElementFilled()
	 * @method bool isSrcElementChanged()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 set($fieldName, $value)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 reset($fieldName)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2272 wakeUp($data)
	 */
	class EO_IblockProperty2272 {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2272Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2272Table';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * EO_IblockProperty2272_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \int[] getIblockElementIdList()
	 * @method \int[] fillIblockElementId()
	 * @method \int[] getIblockPropertyIdList()
	 * @method \int[] fillIblockPropertyId()
	 * @method \string[] getValueList()
	 * @method \string[] fillValue()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests[] getSrcElementList()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection getSrcElementCollection()
	 * @method \Bitrix\Iblock\Elements\EO_ElementTests_Collection fillSrcElement()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Bitrix\Iblock\Elements\EO_IblockProperty2272 $object)
	 * @method bool has(\Bitrix\Iblock\Elements\EO_IblockProperty2272 $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 getByPrimary($primary)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272[] getAll()
	 * @method bool remove(\Bitrix\Iblock\Elements\EO_IblockProperty2272 $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_IblockProperty2272_Collection merge(?EO_IblockProperty2272_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_IblockProperty2272_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Bitrix\Iblock\Elements\IblockProperty2272Table */
		static public $dataClass = '\Bitrix\Iblock\Elements\IblockProperty2272Table';
	}
}
namespace Bitrix\Iblock\Elements {
	/**
	 * @method static EO_IblockProperty2272_Query query()
	 * @method static EO_IblockProperty2272_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_IblockProperty2272_Result getById($id)
	 * @method static EO_IblockProperty2272_Result getList(array $parameters = [])
	 * @method static EO_IblockProperty2272_Entity getEntity()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2272 createObject($setDefaultValues = true)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection createCollection()
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2272 wakeUpObject($row)
	 * @method static \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection wakeUpCollection($rows)
	 */
	class IblockProperty2272Table extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_IblockProperty2272_Result exec()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_IblockProperty2272_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 fetchObject()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection fetchCollection()
	 */
	class EO_IblockProperty2272_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 createObject($setDefaultValues = true)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection createCollection()
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272 wakeUpObject($row)
	 * @method \Bitrix\Iblock\Elements\EO_IblockProperty2272_Collection wakeUpCollection($rows)
	 */
	class EO_IblockProperty2272_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Mywebstor\Relatedlists\App\Model\RelationsTable */
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_Relations
	 * @see \Mywebstor\Relatedlists\App\Model\RelationsTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method ?\int getRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setRelatedListId(?\int|\Bitrix\Main\DB\SqlExpression $relatedListId)
	 * @method bool hasRelatedListId()
	 * @method bool isRelatedListIdFilled()
	 * @method bool isRelatedListIdChanged()
	 * @method ?\int remindActualRelatedListId()
	 * @method ?\int requireRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetRelatedListId()
	 * @method ?\int fillRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists getRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists remindActualRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists requireRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setRelatedList(\Mywebstor\Relatedlists\App\Model\EO_RelatedLists $object)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetRelatedList()
	 * @method bool hasRelatedList()
	 * @method bool isRelatedListFilled()
	 * @method bool isRelatedListChanged()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists fillRelatedList()
	 * @method ?\string getParentField()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setParentField(?\string|\Bitrix\Main\DB\SqlExpression $parentField)
	 * @method bool hasParentField()
	 * @method bool isParentFieldFilled()
	 * @method bool isParentFieldChanged()
	 * @method ?\string remindActualParentField()
	 * @method ?\string requireParentField()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetParentField()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetParentField()
	 * @method ?\string fillParentField()
	 * @method ?\string getParentValue()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setParentValue(?\string|\Bitrix\Main\DB\SqlExpression $parentValue)
	 * @method bool hasParentValue()
	 * @method bool isParentValueFilled()
	 * @method bool isParentValueChanged()
	 * @method ?\string remindActualParentValue()
	 * @method ?\string requireParentValue()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetParentValue()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetParentValue()
	 * @method ?\string fillParentValue()
	 * @method ?\string getChildField()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setChildField(?\string|\Bitrix\Main\DB\SqlExpression $childField)
	 * @method bool hasChildField()
	 * @method bool isChildFieldFilled()
	 * @method bool isChildFieldChanged()
	 * @method ?\string remindActualChildField()
	 * @method ?\string requireChildField()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetChildField()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetChildField()
	 * @method ?\string fillChildField()
	 * @method ?\string getChildValue()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setChildValue(?\string|\Bitrix\Main\DB\SqlExpression $childValue)
	 * @method bool hasChildValue()
	 * @method bool isChildValueFilled()
	 * @method bool isChildValueChanged()
	 * @method ?\string remindActualChildValue()
	 * @method ?\string requireChildValue()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetChildValue()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetChildValue()
	 * @method ?\string fillChildValue()
	 * @method ?\Bitrix\Main\Type\DateTime getCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations setCreatedAt(?\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $createdAt)
	 * @method bool hasCreatedAt()
	 * @method bool isCreatedAtFilled()
	 * @method bool isCreatedAtChanged()
	 * @method ?\Bitrix\Main\Type\DateTime remindActualCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime requireCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations resetCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unsetCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations set($fieldName, $value)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations reset($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Relations wakeUp($data)
	 */
	class EO_Relations {
		/* @var \Mywebstor\Relatedlists\App\Model\RelationsTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\RelationsTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_Relations_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method ?\int[] getRelatedListIdList()
	 * @method ?\int[] fillRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists[] getRelatedListList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection getRelatedListCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection fillRelatedList()
	 * @method ?\string[] getParentFieldList()
	 * @method ?\string[] fillParentField()
	 * @method ?\string[] getParentValueList()
	 * @method ?\string[] fillParentValue()
	 * @method ?\string[] getChildFieldList()
	 * @method ?\string[] fillChildField()
	 * @method ?\string[] getChildValueList()
	 * @method ?\string[] fillChildValue()
	 * @method ?\Bitrix\Main\Type\DateTime[] getCreatedAtList()
	 * @method ?\Bitrix\Main\Type\DateTime[] fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Mywebstor\Relatedlists\App\Model\EO_Relations $object)
	 * @method bool has(\Mywebstor\Relatedlists\App\Model\EO_Relations $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations getByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations[] getAll()
	 * @method bool remove(\Mywebstor\Relatedlists\App\Model\EO_Relations $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Relations_Collection merge(?EO_Relations_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Relations_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Mywebstor\Relatedlists\App\Model\RelationsTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\RelationsTable';
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * @method static EO_Relations_Query query()
	 * @method static EO_Relations_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Relations_Result getById($id)
	 * @method static EO_Relations_Result getList(array $parameters = [])
	 * @method static EO_Relations_Entity getEntity()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Relations createObject($setDefaultValues = true)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection createCollection()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Relations wakeUpObject($row)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection wakeUpCollection($rows)
	 */
	class RelationsTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Relations_Result exec()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Relations_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection fetchCollection()
	 */
	class EO_Relations_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations createObject($setDefaultValues = true)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection createCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations wakeUpObject($row)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Relations_Collection wakeUpCollection($rows)
	 */
	class EO_Relations_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Mywebstor\Relatedlists\App\Model\FieldsTable */
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_Fields
	 * @see \Mywebstor\Relatedlists\App\Model\FieldsTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method ?\int getRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setRelatedListId(?\int|\Bitrix\Main\DB\SqlExpression $relatedListId)
	 * @method bool hasRelatedListId()
	 * @method bool isRelatedListIdFilled()
	 * @method bool isRelatedListIdChanged()
	 * @method ?\int remindActualRelatedListId()
	 * @method ?\int requireRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetRelatedListId()
	 * @method ?\int fillRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists getRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists remindActualRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists requireRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setRelatedList(\Mywebstor\Relatedlists\App\Model\EO_RelatedLists $object)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetRelatedList()
	 * @method bool hasRelatedList()
	 * @method bool isRelatedListFilled()
	 * @method bool isRelatedListChanged()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists fillRelatedList()
	 * @method \string getFieldId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setFieldId(\string|\Bitrix\Main\DB\SqlExpression $fieldId)
	 * @method bool hasFieldId()
	 * @method bool isFieldIdFilled()
	 * @method bool isFieldIdChanged()
	 * @method \string remindActualFieldId()
	 * @method \string requireFieldId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetFieldId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetFieldId()
	 * @method \string fillFieldId()
	 * @method \string getDisplayColumn()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setDisplayColumn(\string|\Bitrix\Main\DB\SqlExpression $displayColumn)
	 * @method bool hasDisplayColumn()
	 * @method bool isDisplayColumnFilled()
	 * @method bool isDisplayColumnChanged()
	 * @method \string remindActualDisplayColumn()
	 * @method \string requireDisplayColumn()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetDisplayColumn()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetDisplayColumn()
	 * @method \string fillDisplayColumn()
	 * @method \string getEntityId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setEntityId(\string|\Bitrix\Main\DB\SqlExpression $entityId)
	 * @method bool hasEntityId()
	 * @method bool isEntityIdFilled()
	 * @method bool isEntityIdChanged()
	 * @method \string remindActualEntityId()
	 * @method \string requireEntityId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetEntityId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetEntityId()
	 * @method \string fillEntityId()
	 * @method \int getOrder()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setOrder(\int|\Bitrix\Main\DB\SqlExpression $order)
	 * @method bool hasOrder()
	 * @method bool isOrderFilled()
	 * @method bool isOrderChanged()
	 * @method \int remindActualOrder()
	 * @method \int requireOrder()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetOrder()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetOrder()
	 * @method \int fillOrder()
	 * @method ?\Bitrix\Main\Type\DateTime getCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields setCreatedAt(?\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $createdAt)
	 * @method bool hasCreatedAt()
	 * @method bool isCreatedAtFilled()
	 * @method bool isCreatedAtChanged()
	 * @method ?\Bitrix\Main\Type\DateTime remindActualCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime requireCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields resetCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unsetCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields set($fieldName, $value)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields reset($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Fields wakeUp($data)
	 */
	class EO_Fields {
		/* @var \Mywebstor\Relatedlists\App\Model\FieldsTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\FieldsTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_Fields_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method ?\int[] getRelatedListIdList()
	 * @method ?\int[] fillRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists[] getRelatedListList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection getRelatedListCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection fillRelatedList()
	 * @method \string[] getFieldIdList()
	 * @method \string[] fillFieldId()
	 * @method \string[] getDisplayColumnList()
	 * @method \string[] fillDisplayColumn()
	 * @method \string[] getEntityIdList()
	 * @method \string[] fillEntityId()
	 * @method \int[] getOrderList()
	 * @method \int[] fillOrder()
	 * @method ?\Bitrix\Main\Type\DateTime[] getCreatedAtList()
	 * @method ?\Bitrix\Main\Type\DateTime[] fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Mywebstor\Relatedlists\App\Model\EO_Fields $object)
	 * @method bool has(\Mywebstor\Relatedlists\App\Model\EO_Fields $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields getByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields[] getAll()
	 * @method bool remove(\Mywebstor\Relatedlists\App\Model\EO_Fields $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Fields_Collection merge(?EO_Fields_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Fields_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Mywebstor\Relatedlists\App\Model\FieldsTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\FieldsTable';
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * @method static EO_Fields_Query query()
	 * @method static EO_Fields_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Fields_Result getById($id)
	 * @method static EO_Fields_Result getList(array $parameters = [])
	 * @method static EO_Fields_Entity getEntity()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Fields createObject($setDefaultValues = true)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection createCollection()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Fields wakeUpObject($row)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection wakeUpCollection($rows)
	 */
	class FieldsTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Fields_Result exec()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Fields_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection fetchCollection()
	 */
	class EO_Fields_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields createObject($setDefaultValues = true)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection createCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields wakeUpObject($row)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Fields_Collection wakeUpCollection($rows)
	 */
	class EO_Fields_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Mywebstor\Relatedlists\App\Model\EntitiesTable */
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_Entities
	 * @see \Mywebstor\Relatedlists\App\Model\EntitiesTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method ?\int getRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities setRelatedListId(?\int|\Bitrix\Main\DB\SqlExpression $relatedListId)
	 * @method bool hasRelatedListId()
	 * @method bool isRelatedListIdFilled()
	 * @method bool isRelatedListIdChanged()
	 * @method ?\int remindActualRelatedListId()
	 * @method ?\int requireRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities resetRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities unsetRelatedListId()
	 * @method ?\int fillRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists getRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists remindActualRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists requireRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities setRelatedList(\Mywebstor\Relatedlists\App\Model\EO_RelatedLists $object)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities resetRelatedList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities unsetRelatedList()
	 * @method bool hasRelatedList()
	 * @method bool isRelatedListFilled()
	 * @method bool isRelatedListChanged()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists fillRelatedList()
	 * @method \string getEntityId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities setEntityId(\string|\Bitrix\Main\DB\SqlExpression $entityId)
	 * @method bool hasEntityId()
	 * @method bool isEntityIdFilled()
	 * @method bool isEntityIdChanged()
	 * @method \string remindActualEntityId()
	 * @method \string requireEntityId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities resetEntityId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities unsetEntityId()
	 * @method \string fillEntityId()
	 * @method ?\string getCategoryId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities setCategoryId(?\string|\Bitrix\Main\DB\SqlExpression $categoryId)
	 * @method bool hasCategoryId()
	 * @method bool isCategoryIdFilled()
	 * @method bool isCategoryIdChanged()
	 * @method ?\string remindActualCategoryId()
	 * @method ?\string requireCategoryId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities resetCategoryId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities unsetCategoryId()
	 * @method ?\string fillCategoryId()
	 * @method ?\Bitrix\Main\Type\DateTime getCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities setCreatedAt(?\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $createdAt)
	 * @method bool hasCreatedAt()
	 * @method bool isCreatedAtFilled()
	 * @method bool isCreatedAtChanged()
	 * @method ?\Bitrix\Main\Type\DateTime remindActualCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime requireCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities resetCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities unsetCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities set($fieldName, $value)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities reset($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Entities wakeUp($data)
	 */
	class EO_Entities {
		/* @var \Mywebstor\Relatedlists\App\Model\EntitiesTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\EntitiesTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_Entities_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method ?\int[] getRelatedListIdList()
	 * @method ?\int[] fillRelatedListId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists[] getRelatedListList()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection getRelatedListCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection fillRelatedList()
	 * @method \string[] getEntityIdList()
	 * @method \string[] fillEntityId()
	 * @method ?\string[] getCategoryIdList()
	 * @method ?\string[] fillCategoryId()
	 * @method ?\Bitrix\Main\Type\DateTime[] getCreatedAtList()
	 * @method ?\Bitrix\Main\Type\DateTime[] fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Mywebstor\Relatedlists\App\Model\EO_Entities $object)
	 * @method bool has(\Mywebstor\Relatedlists\App\Model\EO_Entities $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities getByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities[] getAll()
	 * @method bool remove(\Mywebstor\Relatedlists\App\Model\EO_Entities $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_Entities_Collection merge(?EO_Entities_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_Entities_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Mywebstor\Relatedlists\App\Model\EntitiesTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\EntitiesTable';
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * @method static EO_Entities_Query query()
	 * @method static EO_Entities_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_Entities_Result getById($id)
	 * @method static EO_Entities_Result getList(array $parameters = [])
	 * @method static EO_Entities_Entity getEntity()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Entities createObject($setDefaultValues = true)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection createCollection()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Entities wakeUpObject($row)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection wakeUpCollection($rows)
	 */
	class EntitiesTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_Entities_Result exec()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_Entities_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection fetchCollection()
	 */
	class EO_Entities_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities createObject($setDefaultValues = true)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection createCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities wakeUpObject($row)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_Entities_Collection wakeUpCollection($rows)
	 */
	class EO_Entities_Entity extends \Bitrix\Main\ORM\Entity {}
}
/* ORMENTITYANNOTATION:Mywebstor\Relatedlists\App\Model\RelatedListsTable */
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_RelatedLists
	 * @see \Mywebstor\Relatedlists\App\Model\RelatedListsTable
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int getId()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists setId(\int|\Bitrix\Main\DB\SqlExpression $id)
	 * @method bool hasId()
	 * @method bool isIdFilled()
	 * @method bool isIdChanged()
	 * @method \string getTitle()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists setTitle(\string|\Bitrix\Main\DB\SqlExpression $title)
	 * @method bool hasTitle()
	 * @method bool isTitleFilled()
	 * @method bool isTitleChanged()
	 * @method \string remindActualTitle()
	 * @method \string requireTitle()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists resetTitle()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists unsetTitle()
	 * @method \string fillTitle()
	 * @method \string getType()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists setType(\string|\Bitrix\Main\DB\SqlExpression $type)
	 * @method bool hasType()
	 * @method bool isTypeFilled()
	 * @method bool isTypeChanged()
	 * @method \string remindActualType()
	 * @method \string requireType()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists resetType()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists unsetType()
	 * @method \string fillType()
	 * @method ?\Bitrix\Main\Type\DateTime getCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists setCreatedAt(?\Bitrix\Main\Type\DateTime|\Bitrix\Main\DB\SqlExpression $createdAt)
	 * @method bool hasCreatedAt()
	 * @method bool isCreatedAtFilled()
	 * @method bool isCreatedAtChanged()
	 * @method ?\Bitrix\Main\Type\DateTime remindActualCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime requireCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists resetCreatedAt()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists unsetCreatedAt()
	 * @method ?\Bitrix\Main\Type\DateTime fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @property-read array $primary
	 * @property-read int $state @see \Bitrix\Main\ORM\Objectify\State
	 * @property-read \Bitrix\Main\Type\Dictionary $customData
	 * @property \Bitrix\Main\Authentication\Context $authContext
	 * @method mixed get($fieldName)
	 * @method mixed remindActual($fieldName)
	 * @method mixed require($fieldName)
	 * @method bool has($fieldName)
	 * @method bool isFilled($fieldName)
	 * @method bool isChanged($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists set($fieldName, $value)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists reset($fieldName)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists unset($fieldName)
	 * @method void addTo($fieldName, $value)
	 * @method void removeFrom($fieldName, $value)
	 * @method void removeAll($fieldName)
	 * @method \Bitrix\Main\ORM\Data\Result delete()
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method mixed[] collectValues($valuesType = \Bitrix\Main\ORM\Objectify\Values::ALL, $fieldsMask = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL)
	 * @method \Bitrix\Main\ORM\Data\AddResult|\Bitrix\Main\ORM\Data\UpdateResult|\Bitrix\Main\ORM\Data\Result save()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_RelatedLists wakeUp($data)
	 */
	class EO_RelatedLists {
		/* @var \Mywebstor\Relatedlists\App\Model\RelatedListsTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\RelatedListsTable';
		/**
		 * @param bool|array $setDefaultValues
		 */
		public function __construct($setDefaultValues = true) {}
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * EO_RelatedLists_Collection
	 *
	 * Custom methods:
	 * ---------------
	 *
	 * @method \int[] getIdList()
	 * @method \string[] getTitleList()
	 * @method \string[] fillTitle()
	 * @method \string[] getTypeList()
	 * @method \string[] fillType()
	 * @method ?\Bitrix\Main\Type\DateTime[] getCreatedAtList()
	 * @method ?\Bitrix\Main\Type\DateTime[] fillCreatedAt()
	 *
	 * Common methods:
	 * ---------------
	 *
	 * @property-read \Bitrix\Main\ORM\Entity $entity
	 * @method void add(\Mywebstor\Relatedlists\App\Model\EO_RelatedLists $object)
	 * @method bool has(\Mywebstor\Relatedlists\App\Model\EO_RelatedLists $object)
	 * @method bool hasByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists getByPrimary($primary)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists[] getAll()
	 * @method bool remove(\Mywebstor\Relatedlists\App\Model\EO_RelatedLists $object)
	 * @method void removeByPrimary($primary)
	 * @method void fill($fields = \Bitrix\Main\ORM\Fields\FieldTypeMask::ALL) flag or array of field names
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection wakeUp($data)
	 * @method \Bitrix\Main\ORM\Data\Result save($ignoreEvents = false)
	 * @method void offsetSet() ArrayAccess
	 * @method void offsetExists() ArrayAccess
	 * @method void offsetUnset() ArrayAccess
	 * @method void offsetGet() ArrayAccess
	 * @method void rewind() Iterator
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists current() Iterator
	 * @method mixed key() Iterator
	 * @method void next() Iterator
	 * @method bool valid() Iterator
	 * @method int count() Countable
	 * @method EO_RelatedLists_Collection merge(?EO_RelatedLists_Collection $collection)
	 * @method bool isEmpty()
	 */
	class EO_RelatedLists_Collection implements \ArrayAccess, \Iterator, \Countable {
		/* @var \Mywebstor\Relatedlists\App\Model\RelatedListsTable */
		static public $dataClass = '\Mywebstor\Relatedlists\App\Model\RelatedListsTable';
	}
}
namespace Mywebstor\Relatedlists\App\Model {
	/**
	 * @method static EO_RelatedLists_Query query()
	 * @method static EO_RelatedLists_Result getByPrimary($primary, array $parameters = [])
	 * @method static EO_RelatedLists_Result getById($id)
	 * @method static EO_RelatedLists_Result getList(array $parameters = [])
	 * @method static EO_RelatedLists_Entity getEntity()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_RelatedLists createObject($setDefaultValues = true)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection createCollection()
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_RelatedLists wakeUpObject($row)
	 * @method static \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection wakeUpCollection($rows)
	 */
	class RelatedListsTable extends \Bitrix\Main\ORM\Data\DataManager {}
	/**
	 * Common methods:
	 * ---------------
	 *
	 * @method EO_RelatedLists_Result exec()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection fetchCollection()
	 *
	 * Custom methods:
	 * ---------------
	 *
	 */
	class EO_RelatedLists_Query extends \Bitrix\Main\ORM\Query\Query {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists fetchObject()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection fetchCollection()
	 */
	class EO_RelatedLists_Result extends \Bitrix\Main\ORM\Query\Result {}
	/**
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists createObject($setDefaultValues = true)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection createCollection()
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists wakeUpObject($row)
	 * @method \Mywebstor\Relatedlists\App\Model\EO_RelatedLists_Collection wakeUpCollection($rows)
	 */
	class EO_RelatedLists_Entity extends \Bitrix\Main\ORM\Entity {}
}