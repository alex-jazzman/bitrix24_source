this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Component=this.BX.Tasks.V2.Component||{};(function(t,e,i){"use strict";const s={name:"GrowingTextArea",directives:{hint:i.hint},props:{modelValue:{type:String,default:""},placeholder:{type:String,default:""},fontColor:{type:String,default:"var(--ui-color-base-1)"},fontSize:{type:Number,default:21},fontWeight:{type:[Number,String],default:"inherit"},lineHeight:{type:Number,default:29},readonly:{type:Boolean,default:false}},emits:["update:modelValue","input","focus","blur","emptyFocus","emptyBlur","enterBlur"],data(){return{focus:false,isOverflowing:false}},computed:{isEmpty(){return this.modelValue.trim()===""},isDisplay(){return this.isOverflowing&&!this.isEmpty&&!this.focus},tooltip(){return()=>({text:this.modelValue,popupOptions:{className:"b24-growing-text-area-popup",bindElement:this.$el,offsetLeft:40,maxWidth:440,angle:{offset:40},darkMode:false,targetContainer:document.body}})}},mounted(){requestAnimationFrame((()=>{if(this.isEmpty){this.focusToEnd()}void this.adjustTextareaHeight()}))},methods:{async adjustTextareaHeight(){const t=this.$refs.textarea;if(!t){return}e.Dom.style(t,"height","auto");const i=this.lineHeight*3;const s=Math.min(t.scrollHeight,i);this.isOverflowing=t.scrollHeight>i;e.Dom.style(t,"height",`${s}px`);e.Dom.style(t,"maxHeight",`${i}px`)},focusToEnd(){if(this.readonly){return}const t=this.$refs.textarea;t.focus({preventScroll:true});t.setSelectionRange(t.value.length,t.value.length);this.scrollToBeginning();this.scrollToEnd()},focusTextarea(){if(this.readonly){return}this.focus=true;void this.$nextTick((()=>{this.$refs.textarea.focus()}))},scrollToBeginning(){if(!this.$refs.textarea){return}this.$refs.textarea.scrollTop=0},scrollToEnd(){const t=this.$refs.textarea;t.scrollTo({top:t.scrollHeight,behavior:"smooth"})},handleInput(t){this.$emit("input",t.target.value);void this.adjustTextareaHeight()},handleKeyDown(t){if(t.key==="Enter"&&(t.ctrlKey||t.metaKey)){t.stopPropagation();return}if(t.key==="Enter"){this.$emit("enterBlur",this.modelValue==="");t.target.blur();t.preventDefault()}if(t.key==="Escape"){t.target.blur();t.stopPropagation()}},async handleFocus(t){this.focus=true;await this.adjustTextareaHeight();this.focusToEnd();if(this.modelValue===""){this.$emit("emptyFocus")}this.$emit("focus",t)},async handleBlur(t){this.focus=false;if(!this.$refs.textarea){return}if(!this.isOverflowing){await this.adjustTextareaHeight();this.scrollToBeginning()}const e=this.$refs.textarea.value.trim();if(e!==this.modelValue){this.$emit("update:modelValue",e)}this.$refs.textarea.value=e;if(e===""){this.$emit("emptyBlur")}this.$emit("blur",t)}},template:`\n\t\t<div class="b24-growing-text-area" :class="{ '--readonly': readonly }">\n\t\t\t<div\n\t\t\t\tv-if="isDisplay"\n\t\t\t\tv-hint="tooltip"\n\t\t\t\tclass="b24-growing-text-area-display"\n\t\t\t\t:style="{\n\t\t\t\t\tlineHeight: lineHeight + 'px',\n\t\t\t\t\tcolor: fontColor,\n\t\t\t\t\tfontSize: fontSize + 'px',\n\t\t\t\t\tfontWeight: fontWeight,\n\t\t\t\t}"\n\t\t\t\t@click="focusTextarea"\n\t\t\t>\n\t\t\t\t{{ modelValue }}\n\t\t\t</div>\n\t\t\t<textarea\n\t\t\t\tv-else\n\t\t\t\tclass="b24-growing-text-area-edit"\n\t\t\t\trows="1"\n\t\t\t\t:value="modelValue"\n\t\t\t\t:placeholder="placeholder"\n\t\t\t\t:style="{\n\t\t\t\t\tlineHeight: lineHeight + 'px',\n\t\t\t\t\tcolor: fontColor,\n\t\t\t\t\tfontSize: fontSize + 'px',\n\t\t\t\t\tfontWeight: fontWeight,\n\t\t\t\t}"\n\t\t\t\t:readonly="readonly"\n\t\t\t\tref="textarea"\n\t\t\t\t@input="handleInput"\n\t\t\t\t@keydown="handleKeyDown"\n\t\t\t\t@focus="handleFocus"\n\t\t\t\t@blur="handleBlur"\n\t\t\t></textarea>\n\t\t</div>\n\t`};t.GrowingTextArea=s})(this.BX.Tasks.V2.Component.Elements=this.BX.Tasks.V2.Component.Elements||{},BX,BX.Vue3.Directives);
//# sourceMappingURL=growing-text-area.bundle.map.js