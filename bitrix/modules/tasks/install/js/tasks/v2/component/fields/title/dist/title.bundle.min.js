this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Component=this.BX.Tasks.V2.Component||{};(function(t,e,s,i){"use strict";const a=Object.freeze({id:"title"});const n={name:"TaskTitle",components:{GrowingTextArea:e.GrowingTextArea},props:{taskId:{type:[Number,String],required:true},disabled:{type:Boolean,default:false}},setup(){return{titleMeta:a}},computed:{title:{get(){return this.task.title},set(t){void i.taskService.update(this.taskId,{title:t})}},task(){return this.$store.getters[`${s.Model.Tasks}/getById`](this.taskId)},isEdit(){return Number.isInteger(this.taskId)&&this.taskId>0},readonly(){return!this.task.rights.edit}},methods:{handleInput(t){if(!this.isEdit){this.title=t}}},template:`\n\t\t<GrowingTextArea\n\t\t\tv-model="title"\n\t\t\tclass="tasks-field-title"\n\t\t\t:data-task-id="taskId"\n\t\t\t:data-task-field-id="titleMeta.id"\n\t\t\t:data-task-field-value="task.title"\n\t\t\tdata-field-container\n\t\t\t:placeholder="loc('TASKS_V2_TITLE_PLACEHOLDER')"\n\t\t\t:readonly="readonly || disabled"\n\t\t\t@input="handleInput"\n\t\t/>\n\t`};t.Title=n;t.titleMeta=a})(this.BX.Tasks.V2.Component.Fields=this.BX.Tasks.V2.Component.Fields||{},BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Const,BX.Tasks.V2.Provider.Service);
//# sourceMappingURL=title.bundle.map.js