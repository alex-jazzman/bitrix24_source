this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};(function(s,a,t,i){"use strict";let l=s=>s,d,n,e;const c=()=>t.Tag.render(d||(d=l`
	<div class="task-skeleton" style="padding: 24px">
		<div class="--title --row">
			${0}
			<div class="--fire">${0}</div>
			${0}
		</div>
		<div class="--description">${0}</div>
		<div style="margin-bottom: 17px">${0}</div>
		${0}
		<div class="--chips">${0}</div>
		<div class="--buttons --row">
			${0}
			<div class="--cancel">${0}</div>
			${0}
		</div>
	</div>
`),v(240,18,99),u(),u(),v(80,12,99),o(),o(),v(null,32),v(84,34),v(84,34),v(97,12,99));const o=()=>t.Tag.render(n||(n=l`
	<div class="--row">
		${0}
		<div style="margin: 0 8px 0 41px">${0}</div>
		${0}
	</div>
`),v(100,12,99),u(22),v(130,12,99));const r=()=>t.Tag.render(e||(e=l`
	<div class="task-skeleton --full">
		<div class="--main">
			<div style="padding: 28px 24px">
				<div class="--full-title --row">
					${0}
					${0}
				</div>
				<div class="--full-description">${0}</div>
				${0}
				<div style="margin: 12px 0">${0}</div>
				${0}
				<div class="--full-chips --row">
					${0}
					${0}
					${0}
				</div>
			</div>
			<div class="--row --footer">
				${0}
				<div class="--more">${0}</div>
				${0}
			</div>
		</div>
		<div class="--chat">
			<div class="--chat-title --row">
				${0}
				<div class="--chat-info">
					${0}
					${0}
				</div>
				${0}
				<div style="margin-left: 8px">${0}</div>
			</div>
			<div class="--chat-bg">
				<div class="--textarea --row">
					${0}
					${0}
				</div>
			</div>
		</div>
	</div>
`),v(350,18),u(),v(260,18),v(null,84),v(null,84),v(null,84),v(88,32),v(88,32),v(88,32),v(85,38),v(38,38),v(131,22),u(40),v(110,12),v(75,10),u(),u(),v(null,47),u(44));const v=i.Line;const u=i.Circle;class p{static showCompactCard(s={}){const t=`tasks-compact-card-${s.taskId}`;if(a.PopupManager.getPopupById(t)){return}let i;const l=new a.Popup({id:t,className:"tasks-compact-card-popup",width:580,borderRadius:"16px",noAllPaddings:true,content:c(),cacheable:false,events:{onAfterClose:()=>i.unmountCard()},overlay:{opacity:100,backgroundColor:"#0363",blur:"blur(2px)"}});void BX.Runtime.loadExtension("tasks.v2.application.task-compact-card").then((({TaskCompactCard:a})=>{i=new a({analytics:{},...s});i.mountCard(l)}));l.show()}static showFullCard(s={}){let a;BX.SidePanel.Instance.open(`tasks-full-card-${s.taskId}`,{contentClassName:"tasks-full-card-slider-content",width:1510,customLeftBoundary:0,cacheable:false,contentCallback:t=>{void BX.Runtime.loadExtension("tasks.v2.application.task-full-card").then((({TaskFullCard:i})=>{a=new i({analytics:{},...s});a.mountCard(t)}));return r()},events:{onClose:()=>{var s;return(s=a)==null?void 0:s.unmountCard()}}})}}s.FullSkeleton=r;s.TaskCard=p})(this.BX.Tasks.V2.Application=this.BX.Tasks.V2.Application||{},BX.Main,BX,BX.UI.System);
//# sourceMappingURL=task-card.bundle.map.js