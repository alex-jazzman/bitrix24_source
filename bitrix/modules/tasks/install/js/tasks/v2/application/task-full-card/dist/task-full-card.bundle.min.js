this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};(function(t,e,s,i,n,a,l,o,r,d,h,c,u,p,k,m,v,I,S,f,C,b,g,F,B,T,L,E,A,w,_,D,y,P,M,O){"use strict";const R={name:"TaskFullCardChat",props:{taskId:{type:[Number,String],required:true}},computed:{task(){return this.$store.getters[`${y.Model.Tasks}/getById`](this.taskId)}},watch:{taskId(){void this.openChat()}},mounted(){void this.openChat()},methods:{async openChat(){var t,e;(t=this.app)==null?void 0:t.bitrixVue.unmount();(e=this.app)!=null?e:this.app=await b.Messenger.initApplication("task");if(this.taskId>0){void this.app.mount({rootContainer:this.$el,chatId:this.task.chatId,taskId:this.taskId,type:F.Core.getParams().chatType})}else{await this.app.mountPlaceholder({rootContainer:this.$el,taskId:this.taskId});C.EventEmitter.emit("tasks:card:onMembersCountChange",{taskId:this.taskId,userCounter:1})}}},template:`\n\t\t<div class="tasks-full-card-chat"></div>\n\t`};const V={components:{UiButton:T.Button,AddTaskButton:B.AddTaskButton},props:{taskId:{type:[Number,String],required:true}},emits:["addTask"],setup(){return{AirButtonStyle:T.AirButtonStyle,ButtonSize:T.ButtonSize}},computed:{isTemplateEnabled(){return F.Core.getParams().features.isTemplateEnabled}},methods:{close(){L.Event.EventEmitter.emit(y.EventName.CloseFullCard)}},template:`\n\t\t<div class="tasks-full-card-footer-create">\n\t\t\t<AddTaskButton :taskId="taskId" @addTask="$emit('addTask')"/>\n\t\t\t<UiButton\n\t\t\t\t:text="loc('TASKS_V2_TASK_FULL_CARD_CANCEL')"\n\t\t\t\t:size="ButtonSize.LARGE"\n\t\t\t\t:style="AirButtonStyle.PLAIN"\n\t\t\t\tdata-task-cancel-button\n\t\t\t\t@click="close"\n\t\t\t/>\n\t\t\t<UiButton\n\t\t\t\tv-if="isTemplateEnabled"\n\t\t\t\tclass="tasks-full-card-footer-template-button"\n\t\t\t\t:text="loc('TASKS_V2_TASK_FULL_CARD_TEMPLATES')"\n\t\t\t\t:size="ButtonSize.SMALL"\n\t\t\t\t:style="AirButtonStyle.PLAIN_NO_ACCENT"\n\t\t\t\t:dropdown="true"\n\t\t\t/>\n\t\t</div>\n\t`};const $={name:"TaskFullCardMore",components:{BIcon:w.BIcon,BMenu:A.BMenu},props:{taskId:{type:[Number,String],required:true}},setup(){return{Outline:_.Outline}},data(){return{isMenuShown:false}},computed:{...E.mapGetters({currentUserId:`${y.Model.Interface}/currentUserId`}),task(){return this.$store.getters[`${y.Model.Tasks}/getById`](this.taskId)},preselected(){return[["user",this.task.responsibleId||this.currentUserId]]},isCreator(){return this.currentUserId===this.task.creatorId},isResponsible(){return this.currentUserId===this.task.responsibleId},menuOptions(){return()=>({id:"tasks-full-card-footer-more-menu",bindElement:this.$refs.button.$el,items:this.menuItems})},menuItems(){const t={[y.TaskStatus.Pending]:{[this.isResponsible]:[this.getCompleteItem(),this.getDefferItem(),this.getDelegateItem()],[this.isCreator]:[this.getDefferItem(),this.getDelegateItem(),this.getDeleteItem()],[this.isResponsible&&this.isCreator]:[this.getCompleteItem(),this.getDefferItem(),this.getDelegateItem(),this.getDeleteItem()]},[y.TaskStatus.InProgress]:{[this.isResponsible]:[this.getPauseItem(),this.getDefferItem(),this.getDelegateItem()],[this.isCreator]:[this.getDefferItem(),this.getDelegateItem(),this.getDeleteItem()],[this.isResponsible&&this.isCreator]:[this.getPauseItem(),this.getDefferItem(),this.getDelegateItem(),this.getDeleteItem()]},[y.TaskStatus.Deferred]:{[this.isResponsible]:[this.getCompleteItem(),this.getDelegateItem()],[this.isCreator]:[this.getCompleteItem(),this.getDelegateItem(),this.getDeleteItem()]},[y.TaskStatus.SupposedlyCompleted]:{[this.isResponsible]:[this.getFixItem(),this.getDelegateItem()],[this.isCreator]:[this.getDisapproveItem(),this.getDelegateItem(),this.getDeleteItem()],[this.isResponsible&&this.isCreator]:[this.getCompleteItem(),this.getDelegateItem(),this.getDeleteItem()]},[y.TaskStatus.Completed]:{[this.isCreator]:[this.getRenewItem(),this.getDeleteItem()]}};return t[this.task.status].true}},methods:{handleClick(){this.isMenuShown=true},getDefferItem(){if(!this.task.rights.defer){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_DEFER"),icon:_.Outline.PAUSE_L,onClick:()=>O.taskService.defer(this.taskId)}},getPauseItem(){if(!this.task.rights.pause){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_PAUSE"),icon:_.Outline.STOP_L,onClick:()=>O.taskService.pause(this.taskId)}},getRenewItem(){if(!this.task.rights.renew){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_RENEW"),icon:_.Outline.UNDO,onClick:()=>O.taskService.renew(this.taskId)}},getFixItem(){if(!this.task.rights.renew){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_FIX"),icon:_.Outline.UNDO,onClick:()=>O.taskService.renew(this.taskId)}},getDisapproveItem(){if(!this.task.rights.disapprove){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_DISAPPROVE"),icon:_.Outline.UNDO,onClick:()=>O.taskService.disapprove(this.taskId)}},getCompleteItem(){if(!this.task.rights.complete){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_COMPLETE"),icon:_.Outline.SENDED,onClick:()=>O.taskService.complete(this.taskId)}},getDelegateItem(){if(!this.task.rights.delegate){return null}return{title:this.loc("TASKS_V2_TASK_FULL_CARD_DELEGATE"),icon:_.Outline.DELEGATE,onClick:()=>{var t;const e=L.Runtime.debounce(this.handleDelegateSelect,10,this);(t=this.dialog)!=null?t:this.dialog=new M.EntitySelectorDialog({...P.responsibleMeta.dialogOptions(this.$options.name),preselectedItems:this.preselected,events:{"Item:onSelect":e,"Item:onDeselect":e}});this.dialog.selectItemsByIds(this.preselected);this.dialog.showTo(this.$refs.button.$el)}}},handleDelegateSelect(){var t,e;const s=(t=(e=this.dialog.getSelectedItems()[0])==null?void 0:e.getId())!=null?t:0;void O.taskService.update(this.taskId,{responsibleId:s})},getDeleteItem(){if(!this.task.rights.remove){return null}return{design:A.MenuItemDesign.Alert,title:this.loc("TASKS_V2_TASK_FULL_CARD_DELETE"),icon:_.Outline.TRASHCAN,onClick:()=>{void O.taskService.delete(this.taskId);L.Event.EventEmitter.emit(y.EventName.CloseFullCard)}}}},template:`\n\t\t<BIcon\n\t\t\tv-if="menuItems"\n\t\t\tclass="tasks-full-card-footer-more"\n\t\t\t:name="Outline.MORE_L"\n\t\t\tdata-task-more-button\n\t\t\tref="button"\n\t\t\t@click="handleClick"\n\t\t/>\n\t\t<BMenu v-if="isMenuShown" :options="menuOptions()" @close="isMenuShown = false"/>\n\t`};const X={components:{UiButton:T.Button,BIcon:w.BIcon,More:$},props:{taskId:{type:[Number,String],required:true}},setup(){return{AirButtonStyle:T.AirButtonStyle,ButtonSize:T.ButtonSize,ButtonIcon:T.ButtonIcon,Outline:_.Outline,TaskStatus:y.TaskStatus}},computed:{...E.mapGetters({currentUserId:`${y.Model.Interface}/currentUserId`}),task(){return this.$store.getters[`${y.Model.Tasks}/getById`](this.taskId)},isCreator(){return this.currentUserId===this.task.creatorId},isResponsible(){return this.currentUserId===this.task.responsibleId},statusButton(){const t={[y.TaskStatus.Pending]:{[this.isCreator]:this.getCompleteButton(),[this.isResponsible]:this.getStartButton()},[y.TaskStatus.InProgress]:{[this.isResponsible]:this.getCompleteButton(),[this.isCreator]:this.getCompleteButton()},[y.TaskStatus.Deferred]:{[this.isResponsible]:this.getRenewButton(),[this.isCreator]:this.getRenewButton()},[y.TaskStatus.SupposedlyCompleted]:{[this.isResponsible]:this.getReviewButton(),[this.isCreator]:this.getApproveButton()},[y.TaskStatus.Completed]:{[this.isResponsible&&!this.isCreator]:this.getRenewButton(T.AirButtonStyle.PLAIN)}};return t[this.task.status].true}},methods:{getStartButton(){if(!this.task.rights.start){return null}return{text:this.loc("TASKS_V2_TASK_FULL_CARD_START"),onClick:()=>O.taskService.start(this.taskId)}},getCompleteButton(){if(!this.task.rights.complete){return null}return{text:this.loc("TASKS_V2_TASK_FULL_CARD_COMPLETE"),onClick:()=>O.taskService.complete(this.taskId)}},getRenewButton(t){if(!this.task.rights.renew){return null}return{text:this.loc("TASKS_V2_TASK_FULL_CARD_RENEW"),style:t,onClick:()=>O.taskService.renew(this.taskId)}},getReviewButton(){return{text:this.loc("TASKS_V2_TASK_FULL_CARD_ON_REVIEW"),disabled:true}},getApproveButton(){if(!this.task.rights.approve){return null}return{text:this.loc("TASKS_V2_TASK_FULL_CARD_APPROVE"),onClick:()=>O.taskService.complete(this.taskId)}}},template:`\n\t\t<div class="tasks-full-card-footer-edit">\n\t\t\t<UiButton\n\t\t\t\tv-if="statusButton"\n\t\t\t\t:text="statusButton.text"\n\t\t\t\t:size="ButtonSize.LARGE"\n\t\t\t\t:style="statusButton.style ?? AirButtonStyle.FILLED"\n\t\t\t\t:disabled="statusButton.disabled ?? false"\n\t\t\t\tdata-task-status-button\n\t\t\t\t@click="statusButton.onClick"\n\t\t\t/>\n\t\t\t<More :taskId="taskId"/>\n\t\t\t<div class="tasks-full-card-footer-actions">\n\t\t\t\t<div class="tasks-full-card-footer-reaction">\n\t\t\t\t\t<BIcon :name="Outline.LIKE"/>\n\t\t\t\t\t<div class="tasks-full-card-footer-reaction-text">\u041d\u0440\u0430\u0432\u0438\u0442\u0441\u044f</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="tasks-full-card-footer-views">\n\t\t\t\t\t<BIcon :name="Outline.OBSERVER"/>\n\t\t\t\t\t<div class="tasks-full-card-footer-views-text">1</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const U={name:"TaskFullCard",components:{FieldTitle:l.Title,Importance:o.Importance,DescriptionField:r.DescriptionField,DescriptionSheet:r.DescriptionSheet,Files:u.Files,FilesSheet:u.FilesSheet,CheckList:p.CheckList,FieldList:a.FieldList,Chip:n.Chip,Chat:R,FooterCreate:V,FooterEdit:X},provide(){return{analytics:this.analytics,cardType:y.CardType.Full}},props:{id:{type:[Number,String],default:()=>L.Text.getRandom()},analytics:{type:Object,default:()=>({})}},setup(){return{Outline:_.Outline,resizeObserver:null}},data(){return{taskId:this.id,isBottomSheetShown:false,isFilesSheetShown:false,isCheckListSheetShown:false,chipsEventHandlers:{showCheckList:this.openCheckList},checkListId:0,files:S.fileService.get(this.id).getFiles()}},computed:{...E.mapGetters({currentUserId:`${y.Model.Interface}/currentUserId`}),wasAccomplicesFilled(){return this.$store.getters[`${y.Model.Tasks}/wasFieldFilled`](this.taskId,v.accomplicesMeta.id)},wasAuditorsFilled(){return this.$store.getters[`${y.Model.Tasks}/wasFieldFilled`](this.taskId,I.auditorsMeta.id)},wasFlowFilled(){return this.$store.getters[`${y.Model.Tasks}/wasFieldFilled`](this.taskId,m.flowMeta.id)},wasGroupFilled(){return this.$store.getters[`${y.Model.Tasks}/wasFieldFilled`](this.taskId,k.groupMeta.id)},wasFilesFilled(){return this.$store.getters[`${y.Model.Tasks}/wasFieldFilled`](this.taskId,u.filesMeta.id)},task(){return this.$store.getters[`${y.Model.Tasks}/getById`](this.taskId)},checkLists(){var t;return(t=this.task)!=null&&t.checklist?this.$store.getters[`${y.Model.CheckList}/getByIds`](this.task.checklist):[]},isEdit(){return L.Type.isNumber(this.taskId)&&this.taskId>0},fields(){const t=[{title:d.creatorMeta.title,component:d.Creator,props:{taskId:this.taskId,context:this.$options.name,selectorWithActionMenu:this.isEdit}},{title:P.responsibleMeta.title,component:P.Responsible,props:{taskId:this.taskId,context:this.$options.name,selectorWithActionMenu:this.isEdit}},{title:h.deadlineMeta.title,component:h.Deadline},{title:c.statusMeta.title,component:c.Status,withSeparator:true},{title:u.filesMeta.title,component:u.Files,chip:u.FilesChip},{title:p.checkListMeta.title,component:p.CheckList,chip:p.CheckListChip},{title:k.groupMeta.getTitle(this.task.groupId),component:k.Group,chip:k.GroupChip,isEnabled:F.Core.getParams().features.isProjectsEnabled},{title:v.accomplicesMeta.title,component:v.Accomplices,chip:v.AccomplicesChip},{title:I.auditorsMeta.title,component:I.Auditors,chip:I.AuditorsChip,withSeparator:this.wasAccomplicesFilled},{title:m.flowMeta.title,component:m.Flow,chip:m.FlowChip,withSeparator:true,isEnabled:F.Core.getParams().features.isFlowEnabled}];t.forEach((t=>{var e;(e=t.props)!=null?e:t.props={};t.props.taskId=this.taskId}));return t},primaryFields(){const t=new Set([d.Creator,P.Responsible,h.Deadline,c.Status]);return this.fields.filter((({component:e})=>t.has(e)))},projectFields(){const t=new Set;if(this.wasGroupFilled){t.add(k.Group)}if(this.wasFlowFilled){t.add(m.Flow)}return this.fields.filter((({component:e})=>t.has(e)))},participantsFields(){const t=new Set;if(this.wasAccomplicesFilled){t.add(v.Accomplices)}if(this.wasAuditorsFilled){t.add(I.Auditors)}return this.fields.filter((({component:e})=>t.has(e)))},chips(){return this.fields.filter((({chip:t,isEnabled:e})=>t&&e!==false)).map((({chip:t})=>t))}},watch:{async task(){if(this.task){await this.$nextTick();this.tryStartObserver()}}},async created(){if(!this.isEdit&&!this.task){void this.$store.dispatch(`${y.Model.Tasks}/insert`,{id:this.taskId,creatorId:this.currentUserId})}await this.$store.dispatch(`${y.Model.Tasks}/clearFieldsFilled`,this.taskId);if(this.isEdit&&!this.task){await O.taskService.getById(this.taskId)}},mounted(){var t;this.tryStartObserver();(t=this.$refs.skeleton)==null?void 0:t.append(i.FullSkeleton())},beforeUnmount(){if(this.resizeObserver){this.resizeObserver.disconnect()}},unmounted(){if(!this.isEdit){void this.$store.dispatch(`${y.Model.Tasks}/delete`,this.taskId);S.fileService.delete(this.taskId)}},methods:{...E.mapActions(y.Model.Interface,["updateTitleFieldOffsetHeight"]),tryStartObserver(){if(this.$refs.title&&!this.resizeObserver){this.resizeObserver=this.getObserver();this.resizeObserver.observe(this.$refs.title)}},getObserver(){return new ResizeObserver((t=>{for(const e of t){if(e.target===this.$refs.title){this.updateTitleFieldOffsetHeight(e.contentRect.height)}}}))},async addTask(){const t=this.checkLists;const[e]=await O.taskService.add(this.task);this.taskId=e;if(t.length>0){await f.checkListService.save(this.taskId,t)}S.fileService.replace(this.id,this.taskId)},openEditor(){this.handleShowBottomSheet()},closeEditor(t){t.close();this.handleCloseBottomSheet()},openFiles(){this.isFilesSheetShown=true;this.handleShowBottomSheet()},closeFiles(){this.isFilesSheetShown=false;this.handleCloseBottomSheet();this.handleCloseBottomSheet()},openCheckList(t){this.checkListId=t;this.isCheckListSheetShown=true;this.handleShowBottomSheet()},closeCheckList(){this.isCheckListSheetShown=false;this.handleCloseBottomSheet()},handleShowBottomSheet(){this.isBottomSheetShown=true;L.Dom.addClass(this.$refs.scrollContent,"--disable-scroll");this.$refs.scrollContent.scrollTo({top:0,behavior:"smooth"})},handleCloseBottomSheet(){this.isBottomSheetShown=false;L.Dom.removeClass(this.$refs.scrollContent,"--disable-scroll")},close(){L.Event.EventEmitter.emit(y.EventName.CloseFullCard)},getEventListeners(t,e){const s={};if(t.emits){Object.keys(e).forEach((i=>{if(t.emits.includes(i)){s[i]=e[i]}}))}return s}},template:`\n\t\t<div class="tasks-full-card" :data-task-id="taskId" data-task-full>\n\t\t\t<template v-if="task">\n\t\t\t\t<div class="tasks-full-card-main" :class="{ '--overlay': isBottomSheetShown }">\n\t\t\t\t\t<div class="tasks-full-card-content" ref="scrollContent">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclass="tasks-full-card-title"\n\t\t\t\t\t\t\t:class="{'--no-padding-bottom': task.description.length > 0}"\n\t\t\t\t\t\t\tref="title"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FieldTitle :taskId="taskId"/>\n\t\t\t\t\t\t\t<Importance :taskId="taskId"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FilesSheet\n\t\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t\t:isShown="isFilesSheetShown"\n\t\t\t\t\t\t\t@close="closeFiles"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CheckList\n\t\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t\t:checkListId="checkListId"\n\t\t\t\t\t\t\t:isShown="isCheckListSheetShown"\n\t\t\t\t\t\t\t@close="closeCheckList"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DescriptionField\n\t\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t\tv-slot="slot"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DescriptionSheet\n\t\t\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t\t\t:isShown="slot.isShown"\n\t\t\t\t\t\t\t\t:doOpenInEditMode="slot.doOpenInEditMode"\n\t\t\t\t\t\t\t\t@show="openEditor"\n\t\t\t\t\t\t\t\t@close="closeEditor(slot)"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</DescriptionField>\n\t\t\t\t\t\t<div class="tasks-full-card-fields">\n\t\t\t\t\t\t\t<div class="tasks-full-card-field-container" data-field-container>\n\t\t\t\t\t\t\t\t<FieldList :fields="primaryFields"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="tasks-full-card-chips-fields">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-if="files.length > 0 || wasFilesFilled"\n\t\t\t\t\t\t\t\t\tclass="tasks-full-card-field-container"\n\t\t\t\t\t\t\t\t\tdata-field-container\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Files :taskId="taskId" @open="openFiles"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-if="task.checklist.length > 0"\n\t\t\t\t\t\t\t\t\tclass="tasks-full-card-field-container --custom"\n\t\t\t\t\t\t\t\t\tdata-field-container\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CheckList\n\t\t\t\t\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t\t\t\t\t:isPreview="true"\n\t\t\t\t\t\t\t\t\t\t:isComponentShown="!isCheckListSheetShown"\n\t\t\t\t\t\t\t\t\t\t@open="openCheckList"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-if="projectFields.length > 0"\n\t\t\t\t\t\t\t\t\tclass="tasks-full-card-field-container"\n\t\t\t\t\t\t\t\t\tdata-field-container\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FieldList :fields="projectFields"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-if="participantsFields.length > 0"\n\t\t\t\t\t\t\t\t\tclass="tasks-full-card-field-container"\n\t\t\t\t\t\t\t\t\tdata-field-container\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FieldList\n\t\t\t\t\t\t\t\t\t\t:fields="participantsFields"\n\t\t\t\t\t\t\t\t\t\t:useSeparator="participantsFields.length > 1"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="tasks-full-card-chips">\n\t\t\t\t\t\t\t\t\t<template v-for="(chip, index) of chips" :key="index">\n\t\t\t\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t\t\t\t:is="chip"\n\t\t\t\t\t\t\t\t\t\t\tv-bind="{ taskId }"\n\t\t\t\t\t\t\t\t\t\t\tv-on="getEventListeners(chip, chipsEventHandlers)"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<Chip :icon="Outline.APPS" :text="'\u0415\u0449\u0451'" :soon="true"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="tasks-full-card-footer">\n\t\t\t\t\t\t<FooterEdit v-if="isEdit" :taskId="taskId"/>\n\t\t\t\t\t\t<FooterCreate v-else :taskId="taskId" @addTask="addTask"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Chat :taskId="taskId"/>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div ref="skeleton" style="width: 100%;"></div>\n\t\t\t</template>\n\t\t</div>\n\t`};var K=babelHelpers.classPrivateFieldLooseKey("params");var H=babelHelpers.classPrivateFieldLooseKey("slider");var x=babelHelpers.classPrivateFieldLooseKey("application");var N=babelHelpers.classPrivateFieldLooseKey("mountApplication");var z=babelHelpers.classPrivateFieldLooseKey("unmountApplication");var j=babelHelpers.classPrivateFieldLooseKey("subscribe");var G=babelHelpers.classPrivateFieldLooseKey("unsubscribe");var W=babelHelpers.classPrivateFieldLooseKey("onClose");var q=babelHelpers.classPrivateFieldLooseKey("handlePopupShow");class J{constructor(t={}){Object.defineProperty(this,G,{value:tt});Object.defineProperty(this,j,{value:Z});Object.defineProperty(this,z,{value:Y});Object.defineProperty(this,N,{value:Q});Object.defineProperty(this,K,{writable:true,value:void 0});Object.defineProperty(this,H,{writable:true,value:void 0});Object.defineProperty(this,x,{writable:true,value:void 0});Object.defineProperty(this,W,{writable:true,value:()=>{babelHelpers.classPrivateFieldLooseBase(this,H)[H].close()}});Object.defineProperty(this,q,{writable:true,value:t=>{const e=t.getCompatData()[0];const s=()=>e.adjustPosition();const i=()=>{e.unsubscribe("onClose",i);e.unsubscribe("onDestroy",i);L.Event.unbind(document,"scroll",s,true)};e.subscribe("onClose",i);e.subscribe("onDestroy",i);L.Event.bind(document,"scroll",s,true)}});babelHelpers.classPrivateFieldLooseBase(this,K)[K]=t}async mountCard(t){if(!t.isOpen()){return}babelHelpers.classPrivateFieldLooseBase(this,H)[H]=t;babelHelpers.classPrivateFieldLooseBase(this,j)[j]();babelHelpers.classPrivateFieldLooseBase(this,x)[x]=await babelHelpers.classPrivateFieldLooseBase(this,N)[N](t.getContentContainer())}unmountCard(){babelHelpers.classPrivateFieldLooseBase(this,z)[z]();babelHelpers.classPrivateFieldLooseBase(this,G)[G]()}}async function Q(t){await F.Core.init();const i=e.BitrixVue.createApp(U,{...babelHelpers.classPrivateFieldLooseBase(this,K)[K],id:babelHelpers.classPrivateFieldLooseBase(this,K)[K].taskId});i.mixin(s.locMixin);i.use(F.Core.getStore());i.mount(t);return i}function Y(){var t;(t=babelHelpers.classPrivateFieldLooseBase(this,x)[x])==null?void 0:t.unmount()}function Z(){L.Event.EventEmitter.subscribe(y.EventName.CloseFullCard,babelHelpers.classPrivateFieldLooseBase(this,W)[W]);L.Event.EventEmitter.subscribe("BX.Main.Popup:onShow",babelHelpers.classPrivateFieldLooseBase(this,q)[q])}function tt(){L.Event.EventEmitter.unsubscribe(y.EventName.CloseFullCard,babelHelpers.classPrivateFieldLooseBase(this,W)[W]);L.Event.EventEmitter.unsubscribe("BX.Main.Popup:onShow",babelHelpers.classPrivateFieldLooseBase(this,q)[q])}t.TaskFullCard=J})(this.BX.Tasks.V2.Application=this.BX.Tasks.V2.Application||{},BX.Vue3,BX.Vue3.Mixins,BX.Tasks.V2.Application,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Provider.Service,BX.Tasks.V2.Provider.Service,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Tasks.V2,BX.Tasks.V2.Component,BX.Vue3.Components,BX,BX.Vue3.Vuex,BX.UI.Vue3.Components,BX.UI.IconSet,BX.UI.IconSet,BX,BX.Tasks.V2.Const,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Lib,BX.Tasks.V2.Provider.Service);
//# sourceMappingURL=task-full-card.bundle.map.js