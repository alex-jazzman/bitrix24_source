{"version":3,"file":"file-service.bundle.js","sources":["../src/mappers.js","../src/util.js","../src/file-service.js"],"sourcesContent":["import type { UploaderFileInfo } from 'ui.uploader.core';\nimport type { FileDto } from './types';\n\nexport function mapDtoToModel(fileDto: FileDto): UploaderFileInfo\n{\n\treturn {\n\t\tserverFileId: fileDto.id,\n\t\tserverId: fileDto.serverId,\n\t\ttype: fileDto.type,\n\t\tname: fileDto.name,\n\t\tsize: fileDto.size,\n\t\twidth: fileDto.width,\n\t\theight: fileDto.height,\n\t\tisImage: fileDto.isImage,\n\t\tisVideo: fileDto.isVideo,\n\t\ttreatImageAsFile: fileDto.treatImageAsFile,\n\t\tdownloadUrl: fileDto.downloadUrl,\n\t\tserverPreviewUrl: fileDto.serverPreviewUrl,\n\t\tserverPreviewWidth: fileDto.serverPreviewWidth,\n\t\tserverPreviewHeight: fileDto.serverPreviewHeight,\n\t\tcustomData: fileDto.customData,\n\t};\n}\n","export const processCheckListFileIds = (fileIds) => {\n\tif (!Array.isArray(fileIds))\n\t{\n\t\treturn [];\n\t}\n\n\treturn fileIds.reduce((result, item) => {\n\t\tif (typeof item === 'object' && item !== null && 'id' in item && 'fileId' in item)\n\t\t{\n\t\t\tresult.push({\n\t\t\t\tid: item.id,\n\t\t\t\tfileId: item.fileId\n\t\t\t});\n\t\t}\n\t\telse if (typeof item === 'string' && item.startsWith('n'))\n\t\t{\n\t\t\tresult.push({\n\t\t\t\tid: item,\n\t\t\t\tfileId: item\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}, []);\n};\n","import { EventEmitter } from 'main.core.events';\nimport type { BaseEvent } from 'main.core.events';\n\nimport { FileStatus, getFilesFromDataTransfer, isFilePasted } from 'ui.uploader.core';\nimport { VueUploaderAdapter } from 'ui.uploader.vue';\nimport type { UploaderFileInfo, UploaderFile } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\n\nimport { UserFieldMenu, openDiskFileDialog } from 'disk.uploader.user-field-widget';\nimport { Model } from 'tasks.v2.const';\nimport { Core } from 'tasks.v2.core';\nimport { apiClient } from 'tasks.v2.lib.api-client';\nimport { taskService } from 'tasks.v2.provider.service.task-service';\n\nimport { mapDtoToModel } from './mappers';\nimport { processCheckListFileIds } from './util';\nimport type { FileId, FileDto } from './types';\n\nexport type BrowseParams = {\n\tbindElement: HTMLElement,\n\tonHideCallback?: Function,\n};\n\nexport const EntityTypes = Object.freeze({\n\tTask: 'task',\n\tCheckListItem: 'checkListItem',\n});\n\nexport type EntityType = $Values<typeof EntityTypes>;\n\nexport class FileService extends EventEmitter\n{\n\t#entityId: number | string;\n\t#entityType: EntityType;\n\t#menu: UserFieldMenu;\n\t#loadedIds: Set<FileId> = new Set();\n\t#objectsIds: { [id: FileId]: number } = {};\n\t#promises: Promise[] = [];\n\t#adapter: VueUploaderAdapter;\n\n\tconstructor(entityId: number | string, entityType: EntityType = EntityTypes.Task)\n\t{\n\t\tsuper();\n\n\t\tthis.setEventNamespace('Tasks.V2.Provider.Service.FileService');\n\t\tthis.setEntityId(entityId, entityType);\n\n\t\tthis.#adapter = new VueUploaderAdapter({\n\t\t\tid: getServiceKey(entityId, entityType),\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\timagePreviewHeight: 1200,\n\t\t\timagePreviewWidth: 1200,\n\t\t\timagePreviewQuality: 0.85,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tmultiple: true,\n\t\t\tmaxFileSize: null,\n\t\t});\n\n\t\tthis.#adapter.subscribeFromOptions({\n\t\t\t'Item:onAdd': (event: BaseEvent) => {\n\t\t\t\tconst { item: file } = event.getData();\n\n\t\t\t\tthis.#addLoadedIds([file.serverFileId]);\n\n\t\t\t\tthis.emit('onFileAdd');\n\t\t\t},\n\t\t\t'Item:onComplete': (event: BaseEvent) => {\n\t\t\t\tconst { item: file } = event.getData();\n\n\t\t\t\tthis.#addLoadedObjectsIds([file]);\n\n\t\t\t\tconst fileIds = new Set(this.#entityFileIds);\n\t\t\t\tif (!this.#getIdsByObjectId(file.customData.objectId).some((id: FileId) => fileIds.has(id)))\n\t\t\t\t{\n\t\t\t\t\tthis.#updateEntity({\n\t\t\t\t\t\tfileIds: [...fileIds, file.serverFileId],\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.emit('onFileComplete', file);\n\t\t\t},\n\t\t\t'Item:onRemove': (event: BaseEvent) => {\n\t\t\t\tconst { item: file } = event.getData();\n\n\t\t\t\tconst idsToRemove = new Set(this.#getIdsByObjectId(file.customData.objectId));\n\t\t\t\tthis.#removeLoadedObjectsIds(idsToRemove);\n\n\t\t\t\tthis.#updateEntity({\n\t\t\t\t\tfileIds: this.#entityFileIds.filter((id: FileId) => !idsToRemove.has(id)),\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n\n\tsetEntityId(entityId: number | string, entityType: EntityType = EntityTypes.Task): void\n\t{\n\t\tthis.#entityId = entityId;\n\t\tthis.#entityType = entityType;\n\t}\n\n\tgetEntityId(): string\n\t{\n\t\treturn getServiceKey(this.#entityId, this.#entityType);\n\t}\n\n\tgetAdapter(): VueUploaderAdapter\n\t{\n\t\treturn this.#adapter;\n\t}\n\n\tgetFiles(): UploaderFileInfo[]\n\t{\n\t\treturn this.#adapter.getReactiveItems();\n\t}\n\n\tisUploading(): boolean\n\t{\n\t\treturn this.#adapter.getItems().some(({ status }) => [\n\t\t\tFileStatus.UPLOADING,\n\t\t\tFileStatus.LOADING,\n\t\t].includes(status));\n\t}\n\n\tbrowse(params: BrowseParams): void\n\t{\n\t\tthis.#menu ??= new UserFieldMenu({\n\t\t\tdialogId: 'task-card',\n\t\t\tuploader: this.#adapter.getUploader(),\n\t\t\tmenuOptions: {\n\t\t\t\tminWidth: 220,\n\t\t\t\tanimation: 'fading',\n\t\t\t\tcloseByEsc: true,\n\t\t\t\tbindOptions: {\n\t\t\t\t\tforceBindPosition: true,\n\t\t\t\t\tforceTop: true,\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t\tevents: {\n\t\t\t\t\tonPopupClose: () => {\n\t\t\t\t\t\tparams.onHideCallback?.();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tcompact: true,\n\t\t});\n\n\t\tthis.#menu.show(params.bindElement);\n\t}\n\n\t#browseElement: HTMLElement;\n\n\tbrowseFiles(): void\n\t{\n\t\tif (!this.#browseElement)\n\t\t{\n\t\t\tthis.#browseElement = document.createElement('div');\n\t\t\tthis.#adapter.getUploader().assignBrowse(this.#browseElement);\n\t\t}\n\n\t\tthis.#browseElement.click();\n\t}\n\n\tbrowseMyDrive(): void\n\t{\n\t\topenDiskFileDialog({\n\t\t\tdialogId: 'task-card',\n\t\t\tuploader: this.#adapter.getUploader(),\n\t\t});\n\t}\n\n\tdestroy(): void\n\t{\n\t\tthis.#adapter.unsubscribeAll('Item:onAdd');\n\t\tthis.#adapter.unsubscribeAll('Item:onComplete');\n\t\tthis.#adapter.unsubscribeAll('Item:onRemove');\n\t\tthis.#adapter.getUploader().destroy();\n\t}\n\n\tasync uploadFromClipboard(params: { clipboardEvent: ClipboardEvent }): Promise<UploaderFile[]>\n\t{\n\t\tconst { clipboardEvent } = params;\n\n\t\tconst { clipboardData } = clipboardEvent;\n\n\t\tif (!clipboardData || !isFilePasted(clipboardData))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tclipboardEvent.preventDefault();\n\n\t\tconst files: File[] = await getFilesFromDataTransfer(clipboardData);\n\n\t\treturn this.#addFiles(files);\n\t}\n\n\t#addFiles(files: ArrayLike): UploaderFile[]\n\t{\n\t\tconst uploader = this.#adapter.getUploader();\n\n\t\treturn uploader.addFiles(files);\n\t}\n\n\tasync sync(ids: FileId[]): Promise<void>\n\t{\n\t\tif (ids.every((id: FileId) => this.#loadedIds.has(id)))\n\t\t{\n\t\t\tthis.#adapter.getItems().forEach((file) => {\n\t\t\t\tconst uploaderIds = [file.serverFileId];\n\t\t\t\tif (file.serverFileId[0] === 'n')\n\t\t\t\t{\n\t\t\t\t\tconst objectId = Number(file.serverFileId.slice(1));\n\n\t\t\t\t\tuploaderIds.push(...this.#getIdsByObjectId(objectId));\n\t\t\t\t}\n\n\t\t\t\tif (uploaderIds.some((id: FileId) => ids.includes(id)))\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.#adapter.getUploader().removeFile(file.id);\n\t\t\t});\n\t\t}\n\n\t\tawait this.list(ids);\n\t}\n\n\tasync list(ids: FileId[]): Promise<UploaderFileInfo[]>\n\t{\n\t\tconst unloadedIds = ids.filter((id) => id[0] !== 'n' && !this.#loadedIds.has(id));\n\t\tif (unloadedIds.length === 0)\n\t\t{\n\t\t\tawait Promise.all(this.#promises);\n\n\t\t\treturn this.#adapter.getItems();\n\t\t}\n\n\t\tconst promise = new Resolvable();\n\t\tthis.#promises.push(promise);\n\t\tthis.#addLoadedIds(unloadedIds);\n\n\t\ttry\n\t\t{\n\t\t\tconst data = await apiClient.post('File.list', { ids: unloadedIds });\n\n\t\t\tconst files = data.map((fileDto: FileDto) => mapDtoToModel(fileDto));\n\n\t\t\tconst objectsIds = new Set(Object.values(this.#objectsIds));\n\t\t\tconst newFiles = files.filter(({ customData }) => !objectsIds.has(customData.objectId));\n\t\t\tthis.#adapter.getUploader().addFiles(newFiles);\n\t\t\tthis.#addLoadedObjectsIds(files);\n\n\t\t\tpromise.resolve();\n\n\t\t\tawait Promise.all(this.#promises);\n\n\t\t\treturn this.#adapter.getItems();\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('FileService: list error', error);\n\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t#addLoadedIds(ids: FileId[]): void\n\t{\n\t\tids.forEach((id: FileId): void => this.#loadedIds.add(id));\n\t}\n\n\t#addLoadedObjectsIds(files: UploaderFileInfo[]): void\n\t{\n\t\tfiles.forEach((file: UploaderFileInfo) => {\n\t\t\tthis.#objectsIds[file.serverFileId] = file.customData.objectId;\n\t\t});\n\t}\n\n\t#removeLoadedObjectsIds(ids: FileId[]): void\n\t{\n\t\tids.forEach((id: FileId) => {\n\t\t\tdelete this.#objectsIds[id];\n\t\t});\n\t}\n\n\t#getIdsByObjectId(objectIdToFind: number): FileId[]\n\t{\n\t\treturn Object.entries(this.#objectsIds)\n\t\t\t.filter(([, objectId]): boolean => objectId === objectIdToFind)\n\t\t\t.map(([id]): FileId => (id[0] === 'n' ? id : Number(id)))\n\t\t;\n\t}\n\n\t#updateEntity(data: { fileIds: FileId[] }): void\n\t{\n\t\tif (this.#entityType === EntityTypes.Task)\n\t\t{\n\t\t\tvoid taskService.update(this.#entityId, data);\n\t\t}\n\t\telse if (this.#entityType === EntityTypes.CheckListItem)\n\t\t{\n\t\t\tconst attachments = processCheckListFileIds(data.fileIds);\n\n\t\t\tvoid this.$store.dispatch(`${Model.CheckList}/update`, {\n\t\t\t\tid: this.#entityId,\n\t\t\t\tfields: { attachments },\n\t\t\t});\n\t\t}\n\t}\n\n\tget #entityFileIds(): []\n\t{\n\t\tif (this.#entityType === EntityTypes.Task)\n\t\t{\n\t\t\treturn this.$store.getters[`${Model.Tasks}/getById`](this.#entityId).fileIds;\n\t\t}\n\n\t\treturn this.$store.getters[`${Model.CheckList}/getById`](this.#entityId).attachments;\n\t}\n\n\tget $store(): Store\n\t{\n\t\treturn Core.getStore();\n\t}\n}\n\nconst services: { [key: string]: FileService } = {};\n\nfunction getServiceKey(entityId: number, entityType: EntityType): string\n{\n\treturn `${entityType}:${entityId}`;\n}\n\nexport const fileService = {\n\tget(entityId: number, entityType: EntityType = EntityTypes.Task): FileService\n\t{\n\t\tconst key = getServiceKey(entityId, entityType);\n\t\tservices[key] ??= new FileService(entityId, entityType);\n\n\t\treturn services[key];\n\t},\n\treplace(tempId: number, entityId: number, entityType: EntityType = EntityTypes.Task): void\n\t{\n\t\tconst oldKey = getServiceKey(tempId, entityType);\n\t\tconst newKey = getServiceKey(entityId, entityType);\n\n\t\tservices[newKey] = services[oldKey];\n\t\tservices[newKey].setEntityId(entityId, entityType);\n\n\t\tdelete services[oldKey];\n\t},\n\tdelete(entityId: number, entityType: EntityType = EntityTypes.Task): void\n\t{\n\t\tconst key = getServiceKey(entityId, entityType);\n\n\t\tservices[key]?.destroy();\n\n\t\tdelete services[key];\n\t},\n};\n\nfunction Resolvable(): Promise\n{\n\tconst promise = new Promise((resolve) => {\n\t\tthis.resolve = resolve;\n\t});\n\n\tpromise.resolve = this.resolve;\n\n\treturn promise;\n}\n"],"names":["mapDtoToModel","fileDto","serverFileId","id","serverId","type","name","size","width","height","isImage","isVideo","treatImageAsFile","downloadUrl","serverPreviewUrl","serverPreviewWidth","serverPreviewHeight","customData","processCheckListFileIds","fileIds","Array","isArray","reduce","result","item","push","fileId","startsWith","EntityTypes","Object","freeze","Task","CheckListItem","FileService","EventEmitter","constructor","entityId","entityType","Set","setEventNamespace","setEntityId","VueUploaderAdapter","getServiceKey","controller","imagePreviewHeight","imagePreviewWidth","imagePreviewQuality","treatOversizeImageAsFile","multiple","maxFileSize","subscribeFromOptions","event","file","getData","emit","objectId","some","has","idsToRemove","filter","getEntityId","getAdapter","getFiles","getReactiveItems","isUploading","getItems","status","FileStatus","UPLOADING","LOADING","includes","browse","params","UserFieldMenu","dialogId","uploader","getUploader","menuOptions","minWidth","animation","closeByEsc","bindOptions","forceBindPosition","forceTop","position","events","onPopupClose","onHideCallback","compact","show","bindElement","browseFiles","document","createElement","assignBrowse","click","browseMyDrive","openDiskFileDialog","destroy","unsubscribeAll","uploadFromClipboard","clipboardEvent","clipboardData","isFilePasted","preventDefault","files","getFilesFromDataTransfer","sync","ids","every","forEach","uploaderIds","Number","slice","removeFile","list","unloadedIds","length","Promise","all","promise","Resolvable","data","apiClient","post","map","objectsIds","values","newFiles","addFiles","resolve","error","console","$store","Core","getStore","add","objectIdToFind","entries","taskService","update","attachments","dispatch","Model","CheckList","fields","getters","Tasks","services","fileService","get","key","replace","tempId","oldKey","newKey","delete"],"mappings":"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"}