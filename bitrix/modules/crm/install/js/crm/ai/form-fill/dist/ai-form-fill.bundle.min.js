this.BX=this.BX||{},function(e,t,s,i,o,l,a,n,r,d,c,u,b){"use strict";const p=e=>new Promise((t=>{setTimeout(t,e)})),h=async(e,t,s)=>{if(s<=0)return;const i=(t-e.scrollTop)/s*10;await p(10),e.scrollTop+=i,e.scrollTop!==t&&await h(e,t,s-10)},m={name:"CloseConfirm",data:()=>({messageBoxInstance:null,uniquePopupId:"ai-form-fill-feedback-popup_"+c.Text.getRandom(20).toLowerCase()}),computed:{...l.mapGetters(["isFooterHiddenAndSaveDisabled"])},methods:{...l.mapMutations(["setIsConfirmPopupShow"]),onMessageClose(e){e.uniquePopupId===this.uniquePopupId&&this.setIsConfirmPopupShow(!1)}},mounted(){this.messageBoxInstance=i.MessageBox.create({message:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_CANCEL_CONFIRM_TEXT"),title:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_CANCEL_CONFIRM_TITLE"),okCaption:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_CANCEL_CONFIRM_CLOSE"),cancelCaption:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_CANCEL_CONFIRM_CANCEL"),onOk:()=>{this.$Bitrix.eventEmitter.emit("crm:ai:form-fill:close-confirm:confirmClose",{})},onCancel:()=>{this.setIsConfirmPopupShow(!1)},buttons:BX.UI.Dialogs.MessageBoxButtons.OK_CANCEL,popupOptions:{targetContainer:this.$refs.closeConfirmRoot,id:this.uniquePopupId}}),c.addCustomEvent(window,"BX.Main.Popup:onClose",this.onMessageClose),this.messageBoxInstance.show()},unmounted(){this.messageBoxInstance&&this.messageBoxInstance.close(),c.removeCustomEvent(window,"BX.Main.Popup:onClose",this.onMessageClose)},template:'\n\t\t<div \n\t\t\tref="closeConfirmRoot" \n\t\t\tclass="crm-ai-form-fill__close-confirm"\n\t\t\t:class="{\'hidden-footer\': isFooterHiddenAndSaveDisabled}"\n\t\t></div>\n\t'},f={name:"EntityEditorWrapper",computed:{...l.mapGetters(["mergeUuid"]),entityEditorContainerId(){return`crm-ai-merge-fields__container__${this.mergeUuid}_container`}},template:'<div v-bind:id="entityEditorContainerId"></div>'},g={name:"FeedbackMessage",data:()=>({messageBoxInstance:null,uniquePopupId:"ai-form-fill-feedback-popup_"+c.Text.getRandom(20).toLowerCase()}),computed:{...l.mapGetters(["isFooterHiddenAndSaveDisabled"])},methods:{...l.mapActions(["closeFeedbackMessage","sendAiCallParsingData"]),async onOKButton(){this.closeFeedbackMessage(!0)},onCancelButton(){this.closeFeedbackMessage(!1),this.sendAiCallParsingData("feedback_refused")},onMessageClose(e){e.uniquePopupId===this.uniquePopupId&&this.closeFeedbackMessage(!1)}},mounted(){this.messageBoxInstance=a.createFeedbackMessageBox({onOk:this.onOKButton,onCancel:this.onCancelButton,popupOptions:{targetContainer:this.$refs.feedbackMessageRoot,id:this.uniquePopupId}}),c.addCustomEvent(window,"BX.Main.Popup:onClose",this.onMessageClose),this.messageBoxInstance.show()},unmounted(){this.messageBoxInstance&&this.messageBoxInstance.close(),c.removeCustomEvent(window,"BX.Main.Popup:onClose",this.onMessageClose)},template:'\n\t\t<div \n\t\t\tref="feedbackMessageRoot" \n\t\t\tclass="crm-ai-form-fill__confirm" \n\t\t\t:class="{\'hidden-footer\': isFooterHiddenAndSaveDisabled}"\n\t\t></div>\n\t'},F={name:"FloatingActionButton",computed:{...l.mapGetters({count:"getNotVisibleUnresolvedCount"}),showCounter(){return this.count>0}},methods:{click(){this.$Bitrix.eventEmitter.emit("crm:ai:form-fill:scroll-to-next",{})}},template:'\n\t\t<div @click="click" class="bx-crm-ai-merge-fields-fab">\n\t\t\t<div\n\t\t\t\tv-if="showCounter"\n\t\t\t\tclass="bx-crm-ai-merge-fields-fab_counter"\n\t\t\t>{{count}}</div>\n\t\t\t<i class="bx-crm-ai-merge-fields-fab_icon"></i>\n\t\t</div>\n\t'},C={name:"Main",components:{Loader:{name:"Loader",data:()=>({loaderInstance:null}),template:'\n\t\t<div ref="root" class="bx-crm-ai-merge-fields-loading">\n\t\t\t<div class="bx-crm-ai-merge-fields-loading__image"></div>\n\t\t</div>\n\t'},EntityEditorWrapper:f,ToolBar:{name:"ToolBar",computed:{...l.mapGetters(["conflictFields"]),conflictCount(){return this.conflictFields.length},resolvedCount(){return this.conflictFields.filter((e=>e.isAiValuesUsed)).length},isApplyAllDisabled(){return this.conflictCount===this.resolvedCount},isRevertDisabled(){return 0===this.resolvedCount},titleText:()=>c.Loc.getMessage("CRM_AI_FORM_FILL_TOOLBAR_CONFLICT_COUNT_TITLE"),applyAllBtnText:()=>c.Loc.getMessage("CRM_AI_FORM_FILL_TOOLBAR_BUTTON_APPLY_ALL"),revertText:()=>c.Loc.getMessage("CRM_AI_FORM_FILL_TOOLBAR_BUTTON_ROLLBACK")},methods:{...l.mapActions(["applyAllAiFields","revertAllAiFields"])},template:'\n\t\t<div class="bx-crm-ai-form-fill__toolbar">\n\t\t\t<div class="bx-crm-ai-form-fill__toolbar__conflict_count">\n\t\t\t\t{{ titleText }}<span class="bx-crm-ai-form-fill__toolbar__conflict_count__count">{{conflictCount}}</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass="bx-crm-ai-form-fill__toolbar__button"\n\t\t\t\t@click="applyAllAiFields"\n\t\t\t>{{ applyAllBtnText }}</div>\n\t\t\t<div\n\t\t\t\tclass="bx-crm-ai-form-fill__toolbar__button"\n\t\t\t\t@click="revertAllAiFields"\n\t\t\t>{{ revertText }}</div>\n\t\t</div>\n\t'},Merger:{name:"Merger",components:{MergeControl:{name:"MergeControl",props:{field:{type:Object,required:!0},tmp:Number},data:()=>({hasLargeContent:!0,isExpanded:!1,coveredByAnother:!1}),computed:{...l.mapGetters(["getexpandedConflictControls","eeControlPositions"]),replaceBtnText(){return this.field.isAiValuesUsed?c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_REPLACE_BTN_BACK"):c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_REPLACE_BTN_FORTH")},value(){return this.field.isAiValuesUsed?this.field.originalValue:this.field.aiValue}},methods:{...l.mapActions(["setEditorFieldValue","showEntityEditorControlOutline"]),...l.mapMutations(["toggleExpandedConflictControls"]),async toggleAiValue(e){await this.setEditorFieldValue(e),await this.expand(!1),this.hasLargeContent=this.checkHasLargeContent()},async expand(e){this.hasLargeContent&&(this.isExpanded=e,await o.nextTick(),this.toggleExpandedConflictControls({fieldId:this.field.name,size:this.$refs.root.getBoundingClientRect().height,isExpanded:e}))},onControlsExpandedModeChange(){let e=!1;const t=this.eeControlPositions.get(this.field.name,0);for(const[s,i]of this.getexpandedConflictControls){const o=this.eeControlPositions.get(s,0);if(t>o&&t-o<i){e=!0;break}}this.coveredByAnother=e},checkHasLargeContent(){return this.$refs.fieldValue.scrollWidth>this.$refs.fieldValue.clientWidth},onMouseenter(e){this.showEntityEditorControlOutline({fieldName:this.field.name,isShow:!0}),this.expand(!0)},onMouseleave(e){this.showEntityEditorControlOutline({fieldName:this.field.name,isShow:!1}),this.expand(!1)}},mounted(){this.hasLargeContent=this.checkHasLargeContent(),o.watch(this.getexpandedConflictControls,this.onControlsExpandedModeChange)},template:'\n\t\t<div \n\t\t\tclass="bx-crm-ai-form-fill-merge-control__container"\n\t\t\t:class="{\'expanded\': isExpanded, \'covered\': coveredByAnother}"\n\t\t\t@mouseenter="onMouseenter"\n\t\t\t@mouseleave="onMouseleave"\n\t\t\tref="root"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass="bx-crm-ai-form-fill-merge-control-icon"\n\t\t\t\t@click="toggleAiValue(field)"\n\t\t\t>\n\n\t\t\t</div>\n\t\t\t<div class="bx-crm-ai-form-fill-merge-control-field">\n\t\t\t\t<div\n\t\t\t\t\tclass="bx-crm-ai-form-fill-merge-control-field-title"\n\t\t\t\t\t:title="field.title"\n\t\t\t\t>{{ field.title }}</div>\n\t\t\t\t<div class="bx-crm-ai-form-fill-merge-control-field-value-container">\n\t\t\t\t\t<div\n\t\t\t\t\t\tref="fieldValue"\n\t\t\t\t\t\tclass="bx-crm-ai-form-fill-merge-control-field-value-container__value"\n\t\t\t\t\t\t:class="{\'expanded\': isExpanded, \'ai-value\': !field.isAiValuesUsed}"\n\t\t\t\t\t\t:title="this.value"\n\t\t\t\t\t>{{ this.value }}</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass="bx-crm-ai-form-fill-merge-control-field-value-container__control"\n\t\t\t\t\t\t:class="{\'expanded\': isExpanded}"\n\t\t\t\t\t\t:style="{display: hasLargeContent ? \'block\': \'none\'}"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass="bx-crm-ai-form-fill-merge-control-right-column"\n\t\t\t\t@click="toggleAiValue(field)"\n\t\t\t>\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-crm-ai-form-fill-merge-control-button">\n\t\t\t\t\t{{ replaceBtnText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t'}},data:()=>({isRootMounted:!1}),computed:{...l.mapGetters(["conflictFields","eeControlPosition","eeControlPositions","getMainLayoutScrollPosition"])},methods:{getControlTopOffset(e){return this.eeControlPositions.get(e.name,0)}},mounted(){this.isRootMounted=!0},template:'\n\t\t<div ref="root" class="bx-crm-ai-merge-fields-merger ">\n\t\t\t<MergeControl\n\t\t\t\tv-if="isRootMounted"\n\t\t\t\tv-for="field in conflictFields" :key="field.name"\n\t\t\t\tclass="bx-crm-ai-merge-fields-merger__field"\n\t\t\t\t:style="{top: getControlTopOffset(field) + \'px\'}"\n\t\t\t\t:field="field"\n\t\t\t\t:tmp="getControlTopOffset(field)"\n\t\t\t></MergeControl>\n\t\t</div>\n\t'},FloatingActionButton:F,CloseConfirm:m,FeedbackMessage:g},data:()=>({}),computed:{...l.mapGetters(["conflictFields","isLoading","eeControlPositions","getFirstUnseenFieldPosition","aiValuesAppliedCount","mergeUuid","isSliderConfirmPopupShown","isFeedbackMessageShown","isFooterHiddenAndSaveDisabled"])},methods:{...l.mapActions(["initialize","saveFormFieldsToMerge","updateControlPositionInfo","updateSliderFooter","closeFormWithoutConfirm","sendAiCallParsingData"]),...l.mapMutations(["changeMainLayoutScrollPosition","startLoading","stopLoading","setMainLayoutScrollHeight"]),onFooterSaveBtn(){this.saveFormFieldsToMerge().then((()=>this.sendAiCallParsingData("conflict_accept_changes"))).catch((()=>{}))},onFooterCancelBtn(){this.closeFormWithoutConfirm(),this.sendAiCallParsingData("conflict_cancel_changes")},onCloseConfirm(){this.closeFormWithoutConfirm()},handleScroll:null,positionChanged(){this.setMainLayoutScrollHeight(this.$refs.layout.scrollHeight),this.changeMainLayoutScrollPosition({scrollTop:this.$refs.layout.scrollTop,containerHeight:this.$refs.layout.getBoundingClientRect().height})},resizeHandler(){this.handleScroll()},scrollToNext(){const e=this.getFirstUnseenFieldPosition;e&&h(this.$refs.layout,e,300)},subscribeInternalEvents(){this.$Bitrix.eventEmitter.subscribe("crm:ai:form-fill:scroll-to-next",this.scrollToNext),this.$Bitrix.eventEmitter.subscribe("crm:ai:form-fill:close-confirm:confirmClose",this.onCloseConfirm),this.$Bitrix.eventEmitter.subscribe("crm:ai:form-fill:close-confirm:cancelClose",this.scrollToNext)},unSubscribeInternalEvents(){this.$Bitrix.eventEmitter.unsubscribe("crm:ai:form-fill:scroll-to-next",this.scrollToNext),this.$Bitrix.eventEmitter.unsubscribe("crm:ai:form-fill:close-confirm:confirmClose",this.onCloseConfirm),this.$Bitrix.eventEmitter.unsubscribe("crm:ai:form-fill:close-confirm:cancelClose",this.scrollToNext)},autoScrollToFirst(){const e=this.$refs.layout.getBoundingClientRect().height,t=this.getFirstUnseenFieldPosition;t&&t>e&&h(this.$refs.layout,t,800)}},async mounted(){this.updateSliderFooter(),this.startLoading(),this.handleScroll=c.Runtime.throttle((()=>{this.positionChanged()}),300),await this.initialize(),this.positionChanged(),this.subscribeInternalEvents(),await this.$nextTick((()=>{c.Event.bind(window,"resize",this.resizeHandler)})),this.stopLoading(),this.autoScrollToFirst(),e.sliderButtonsAdapter.onSaveCallback=this.onFooterSaveBtn,e.sliderButtonsAdapter.onCancelCallback=this.onFooterCancelBtn},watch:{aiValuesAppliedCount:{handler(e,t){this.updateSliderFooter()},immediate:!0}},unmounted(){this.unSubscribeInternalEvents(),c.Event.unbind(window,"resize",this.resizeHandler)},template:'\n\t\t<div class="bx-crm-ai-merge-fields" :class="{\'hidden-footer\': isFooterHiddenAndSaveDisabled}">\n\t\t\t<div \n\t\t\t\tclass="bx-crm-ai-merge-fields-layout" \n\t\t\t\t@scroll="handleScroll"\n\t\t\t\tref="layout"\n\t\t\t\t:style="{\'visibility\': !isLoading ? \'visible\' : \'hidden\'}"\n\t\t\t\t:class="{\'hidden-footer\': isFooterHiddenAndSaveDisabled}"\n\t\t\t>\n\t\t\t\t<EntityEditorWrapper class="bx-crm-ai-merge-fields-layout__ee_column"/>\n\t\t\t\t<Merger class="bx-crm-ai-merge-fields-layout__aifields_column"/>\n\t\t\t\t<div class="bx-crm-ai-merge-fields-layout__floating-button_column">\n\t\t\t\t\t<FloatingActionButton/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Loader v-if="isLoading" />\n\t\t\t<CloseConfirm v-if="isSliderConfirmPopupShown" />\n\t\t\t<FeedbackMessage v-if="isFeedbackMessageShown" />\n\t\t</div>\n\t'};var v=babelHelpers.classPrivateFieldLooseKey("editor"),L=babelHelpers.classPrivateFieldLooseKey("initialContainerTop"),B=babelHelpers.classPrivateFieldLooseKey("onUserFieldDeployedCb"),P=babelHelpers.classPrivateFieldLooseKey("refreshControlLayout"),y=babelHelpers.classPrivateFieldLooseKey("setEntityEditorBBValue"),E=babelHelpers.classPrivateFieldLooseKey("setPlainTextFieldValue"),_=babelHelpers.classPrivateFieldLooseKey("setUserFieldValue"),I=babelHelpers.classPrivateFieldLooseKey("getValueFromControl");class A{constructor(){Object.defineProperty(this,I,{value:T}),Object.defineProperty(this,_,{value:w}),Object.defineProperty(this,E,{value:M}),Object.defineProperty(this,y,{value:H}),Object.defineProperty(this,P,{value:S}),Object.defineProperty(this,v,{writable:!0,value:null}),Object.defineProperty(this,L,{writable:!0,value:void 0}),Object.defineProperty(this,B,{writable:!0,value:null})}async init(e){babelHelpers.classPrivateFieldLooseBase(this,v)[v]=e;babelHelpers.classPrivateFieldLooseBase(this,L)[L]=babelHelpers.classPrivateFieldLooseBase(this,v)[v].getContainer().getBoundingClientRect().y+5,c.addCustomEvent(window,"BX.UI.EntityUserFieldLayoutLoader:onUserFieldDeployed",(e=>{c.Type.isFunction(babelHelpers.classPrivateFieldLooseBase(this,B)[B])&&babelHelpers.classPrivateFieldLooseBase(this,B)[B](e)}))}setOnUserFieldDeployedCb(e){babelHelpers.classPrivateFieldLooseBase(this,B)[B]=e}async getEditorControlsParams(e){await p(10);const t=[];let s=0;for(const i of babelHelpers.classPrivateFieldLooseBase(this,v)[v].getAllControls()){if(!e.has(i.getId())||!i.getWrapper())continue;const[o,l]=babelHelpers.classPrivateFieldLooseBase(this,I)[I](i);t.push({fieldId:i.getId(),relatedFieldOffsetY:i.getWrapper().getBoundingClientRect().y,originalValue:o,originalModel:l,order:s}),s++}return t}async getEditorControlsPositions(e){const t=new Map;for(const s of babelHelpers.classPrivateFieldLooseBase(this,v)[v].getAllControls()){if(!e.has(s.getId())||!s.getWrapper())continue;const i=s.getWrapper().getBoundingClientRect().y;t.set(s.getId(),i-babelHelpers.classPrivateFieldLooseBase(this,L)[L])}return t}setControlOutline(e,t){const s=babelHelpers.classPrivateFieldLooseBase(this,v)[v].getControlById(e);if(!s)return;const i=s.getWrapper();t?c.Dom.addClass(i,"bx-crm-ai-merge-fields-ee-control-outline"):c.Dom.removeClass(i,"bx-crm-ai-merge-fields-ee-control-outline")}setControlAiClass(e,t){const s=babelHelpers.classPrivateFieldLooseBase(this,v)[v].getControlById(e);if(!s)return;const i=s.getWrapper();t?c.Dom.addClass(i,"bx-crm-ai-merge-fields-ee-control-ai-value"):c.Dom.removeClass(i,"bx-crm-ai-merge-fields-ee-control-ai-value")}async setFieldValue(e,t){const s=babelHelpers.classPrivateFieldLooseBase(this,v)[v].getControlById(e);if(s)switch(s.constructor){case BX.Crm.EntityEditorText:babelHelpers.classPrivateFieldLooseBase(this,E)[E](e,t.value);break;case BX.UI.EntityEditorBB:babelHelpers.classPrivateFieldLooseBase(this,y)[y](e,t.value),babelHelpers.classPrivateFieldLooseBase(this,P)[P](s);break;case BX.Crm.EntityEditorUserField:babelHelpers.classPrivateFieldLooseBase(this,_)[_](e,t.model),babelHelpers.classPrivateFieldLooseBase(this,P)[P](s);break;default:throw new Error("Not supported field type")}}}function S(e){e.refreshLayout({reset:!0})}function H(e,t){const s=e+"_HTML";babelHelpers.classPrivateFieldLooseBase(this,v)[v].getModel().setField(s,t,{enableNotification:!0})}function M(e,t){babelHelpers.classPrivateFieldLooseBase(this,v)[v].getModel().setField(e,t,{enableNotification:!0})}function w(e,t){babelHelpers.classPrivateFieldLooseBase(this,v)[v].getModel().setField(e,t)}function T(e){const t=e.getValue();let s=null,i=null;if(e.constructor===BX.UI.EntityEditorBB){const t=babelHelpers.classPrivateFieldLooseBase(this,v)[v].getModel(),i=e.getId()+"_HTML";s=t.getField(i,"")}else c.Type.isObject(t)&&Object.hasOwn(t,"VALUE")?(s=t.VALUE,i=t):(c.Type.isString(t)||c.Type.isNumber(t))&&(s=t,i=null);return[s,i]}var O={isLoading:e=>e.isLoading,conflictFields:e=>e.conflictFields.sort(((e,t)=>e.order-t.order)),mergeUuid:e=>e.mergeUuid,activityId:e=>e.activityId,activityDirection:e=>e.activityDirection,getEntityInfo:e=>e.entityInfo,isEntityEditorLoaded:e=>e.isEntityEditorLoaded,eeControlPosition:e=>t=>e.eeControlPositions.get(t,0),eeControlPositions:e=>e.eeControlPositions,getexpandedConflictControls:e=>e.expandedConflictControls,getNotVisibleUnresolvedCount:e=>e.notVisibleUnresolvedCount,getMainLayoutScrollPosition:e=>e.mainLayoutScrollPosition,getMainLayoutContainerHeight:e=>e.mainLayoutContainerHeight,getMainLayoutScrollHeight:e=>e.mainLayoutScrollHeight,getFirstUnseenFieldPosition:e=>{const t=e.mainLayoutScrollPosition;let s=null,i=1/0;for(const[o,l]of e.eeControlPositions){const a=e.conflictFields.find((e=>e.name===o));!a||a.isAiValuesUsed||t+120>l||l<i&&(i=l,s=o)}return s?e.eeControlPositions.get(s):null},isFieldsTouched:e=>e.isFieldsTouched,aiValuesAppliedCount:e=>e.aiValuesAppliedCount,isFooterHiddenAndSaveDisabled:e=>0===e.aiValuesAppliedCount,isSliderConfirmPopupShown:e=>e.isSliderConfirmPopupShown,isNeededShowCloseConfirm:e=>e.isNeededShowCloseConfirm,isFeedbackMessageShown:e=>e.aiFeedback.isMessageComponentShown,isAiFeedbackShowBeforeClose:e=>e.aiFeedback.showBeforeClose,aiFeedback:e=>e.aiFeedback},R={setMergeUUID:(e,t)=>{e.mergeUuid=t},setActivityId:(e,t)=>{e.activityId=t},setActivityDirection:(e,t)=>{e.activityDirection=t},startLoading:e=>{e.isLoading=!0},stopLoading:e=>{e.isLoading=!1},setEntityInfo:(e,t)=>{e.entityInfo=t},setConflictFields:(e,t)=>{e.conflictFields=t},setEditMode:(e,t)=>{e.isEditMode=t},setIsEntityEditorLoaded(e,t){e.isEntityEditorLoaded=t},updateConflictField:(e,{name:t,field:s})=>{e.conflictFields=e.conflictFields.map((e=>e.name===t?{...e,...s}:e));const i=e.conflictFields.filter((e=>e.isAiValuesUsed)).length;e.aiValuesAppliedCount=i,e.isNeededShowCloseConfirm=i>0},setEeControlPositions:(e,{fieldId:t,topPosition:s})=>{e.eeControlPositions.set(t,s)},toggleExpandedConflictControls:(e,{fieldId:t,size:s,isExpanded:i})=>{i?e.expandedConflictControls.set(t,s):e.expandedConflictControls.delete(t)},changeMainLayoutScrollPosition:(e,{scrollTop:t,containerHeight:s})=>{const i=t+s;e.mainLayoutScrollPosition=t,e.mainLayoutContainerHeight=s;const o=[];for(const[t,s]of e.eeControlPositions)i<s+30&&o.push(t);if(0===o.length)return void(e.notVisibleUnresolvedCount=0);let l=0;for(const t of o){const s=e.conflictFields.find((e=>e.name===t));s&&!s.isAiValuesUsed&&l++}e.notVisibleUnresolvedCount=l},setIsFieldsTouched(e,t){e.isFieldsTouched=t},setIsConfirmPopupShow(e,t){e.isSliderConfirmPopupShown=t},setNeededShowCloseConfirm(e,t){e.isNeededShowCloseConfirm=t},showFeedbackMessageIfNeeded(e,t){e.aiFeedback.feedbackWasSent||"FEEDBACK_TRIGGER_CONTROL"===t&&e.aiFeedback.isShownByReturnBtn||(e.aiFeedback.lastTriggeredBy=t,"FEEDBACK_TRIGGER_CONTROL"===t&&(e.aiFeedback.isShownByReturnBtn=!0),e.aiFeedback.isMessageComponentShown=!0)},hideFeedbackMessage(e){e.aiFeedback.isMessageComponentShown=!1},setAiFeedbackWasSent(e,t){e.aiFeedback.feedbackWasSent=t},setAiFeedbackShowBeforeClose(e,t){e.aiFeedback.showBeforeClose=t},setMainLayoutScrollHeight(e,t){e.mainLayoutScrollHeight=t}},x=babelHelpers.classPrivateFieldLooseKey("params"),U=babelHelpers.classPrivateFieldLooseKey("fetchEntityEditor");class k{constructor(e){Object.defineProperty(this,U,{value:D}),Object.defineProperty(this,x,{writable:!0,value:void 0}),babelHelpers.classPrivateFieldLooseBase(this,x)[x]=e}async render(){return babelHelpers.classPrivateFieldLooseBase(this,U)[U](babelHelpers.classPrivateFieldLooseBase(this,x)[x]),new Promise((e=>{c.addCustomEvent(window,"BX.Crm.EntityEditor:onUserFieldsDeployed",(async t=>{t.getId()===babelHelpers.classPrivateFieldLooseBase(this,x)[x].domContainerId&&e(t)}))}))}}function D(e){let t="";switch(e.entityTypeName){case"DEAL":t="/bitrix/components/bitrix/crm.deal.details/ajax.php";break;case"LEAD":t="/bitrix/components/bitrix/crm.lead.details/ajax.php";break;default:throw new Error("Unknown entity type: "+e.entityTypeName)}t=`${t}?sessid=${BX.bitrix_sessid()}`,BX.ajax.post(t,{ACTION:"PREPARE_EDITOR_HTML",ACTION_ENTITY_TYPE_NAME:e.entityTypeName,ACTION_ENTITY_ID:e.entityId,GUID:e.domContainerId,CONFIG_ID:e.configId,FORCE_DEFAULT_CONFIG:"N",FORCE_DEFAULT_OPTIONS:"Y",IS_EMBEDDED:"Y",ENABLE_CONFIG_SCOPE_TOGGLE:"N",ENABLE_CONFIGURATION_UPDATE:"N",ENABLE_REQUIRED_USER_FIELD_CHECK:"N",ENABLE_FIELDS_CONTEXT_MENU:"N",CONTEXT:{},READ_ONLY:"Y",MODULE_ID:"crm"},(()=>{}))}var N={async initialize({dispatch:e,getters:t}){await e("fetchFormFieldsToMerge"),await e("createEntityEditor"),await e("collectFieldDataFromEntityEditor"),await e("updateControlPositionInfo")},async fetchFormFieldsToMerge({commit:e,getters:t}){const s=await G(t.mergeUuid);e("setConflictFields",s.fields.map((e=>({name:e.name,type:e.type,title:e.title,aiModel:e.aiModel,isMultiple:e.isMultiple,isUserField:e.isUserField,aiValue:e.aiModel.VALUE,originalValue:null,originalModel:null,isAiValuesUsed:!1})))),e("setEditMode",s.editMode),e("setEntityInfo",s.target),e("setAiFeedbackWasSent",s.target.feedbackWasSent),e("setAiFeedbackShowBeforeClose",!s.target.feedbackWasSent)},async saveFormFieldsToMerge({getters:e,commit:t,dispatch:s}){const i=e.conflictFields.filter((e=>e.isAiValuesUsed)).map((e=>e.name)),o=e.mergeUuid,l=await BX.ajax.runAction("crm.timeline.ai.applyMerge",{method:"GET",getParameters:{mergeUuid:o,fieldNamesToApply:i}});t("setAiFeedbackShowBeforeClose",!1),"success"===l.status?s("closeFormWithoutConfirm"):d.UI.Notification.Center.notify({content:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_SAVE_ERROR"),autoHideDelay:5e3})},showFeedbackMessageBeforeClose({getters:e,commit:t}){t("showFeedbackMessageIfNeeded","FEEDBACK_TRIGGER_APP_CLOSE"),t("setAiFeedbackShowBeforeClose",!1)},closeFeedbackMessage({getters:e,commit:t,dispatch:s},i=!1){i&&(s("sendFeedBack"),t("setAiFeedbackShowBeforeClose",!1)),t("hideFeedbackMessage"),"FEEDBACK_TRIGGER_APP_CLOSE"===e.aiFeedback.lastTriggeredBy&&s("closeFormWithoutConfirm")},closeFormWithoutConfirm({getters:e,commit:t}){t("setNeededShowCloseConfirm",!1),t("setIsConfirmPopupShow",!1);const s=e.mergeUuid;c.onCustomEvent(window,"BX.Crm.AiFormFill:CloseSlider",{mergeUuid:s})},async setEditorFieldValue({dispatch:e,getters:t,commit:s},i){const o=i.name,l=!i.isAiValuesUsed,a=l?i.aiValue:i.originalValue,n=l?i.aiModel:i.originalModel;l||setTimeout((()=>{s("showFeedbackMessageIfNeeded","FEEDBACK_TRIGGER_CONTROL")}),300);const r={value:a,model:n};await K.setFieldValue(o,r),await K.setControlAiClass(o,l),s("setIsFieldsTouched",!0),s("updateConflictField",{name:o,field:{isAiValuesUsed:!i.isAiValuesUsed}})},async createEntityEditor({getters:e,commit:t,dispatch:s}){const i=e.getEntityInfo,o=new k({entityId:i.entityId,configId:i.editorId,entityTypeName:i.entityTypeName,domContainerId:"crm-ai-merge-fields__container__"+e.mergeUuid}),l=await o.render();await K.init(l),K.setOnUserFieldDeployedCb((async()=>{const t=Math.floor(e.getMainLayoutScrollPosition+e.getMainLayoutContainerHeight);let i=0;(e.getMainLayoutScrollHeight||0)-t<40&&(i=400),await p(i),s("updateControlPositionInfo")}))},async collectFieldDataFromEntityEditor({getters:e,commit:t,dispatch:s}){const i=e.conflictFields,o=new Set(i.map((e=>e.name))),l=await K.getEditorControlsParams(o);if(0!==l.length){for(const e of l)t("updateConflictField",{name:e.fieldId,field:{originalValue:e.originalValue,originalModel:e.originalModel,order:e.order}}),t("setEeControlPositions",{fieldId:e.fieldId,topPosition:e.relatedFieldOffsetY});t("setIsEntityEditorLoaded",!0)}},async updateControlPositionInfo({getters:e,commit:t},{updateOnlyFrom:s}={}){const i=e.conflictFields;if(0===i.length)return;const o=new Set(i.map((e=>e.name))),l=await K.getEditorControlsPositions(o),a=e.getMainLayoutScrollPosition||0;for(const[e,t]of l)l.set(e,a+t);for(const e of i){const i=e.name;!s&&s>e.order||l.has(i)&&t("setEeControlPositions",{fieldId:i,topPosition:l.get(i)})}},async applyAllAiFields({dispatch:e,getters:t}){for(const s of t.conflictFields)s.isAiValuesUsed||e("setEditorFieldValue",s)},revertAllAiFields({dispatch:e,getters:t}){for(const s of t.conflictFields)s.isAiValuesUsed&&e("setEditorFieldValue",s)},showEntityEditorControlOutline(e,{fieldName:t,isShow:s}){K.setControlOutline(t,s)},updateSliderFooter({getters:t}){const s=t.isFooterHiddenAndSaveDisabled;e.sliderButtonsAdapter.saveButton.setDisabled(s),null==e.copilotSliderInstance||e.copilotSliderInstance.footerDisplay(!s)},async sendFeedBack({commit:e,getters:t}){const s=t.mergeUuid;if(t.aiFeedback.checkFeedbackBeforeSend){if(await V(s))return void e("setAiFeedbackWasSent",!0)}const i=t.getEntityInfo.entityTypeName;a.sendFeedback(s,i,t.activityId),e("setAiFeedbackWasSent",!0)},sendAiCallParsingData({getters:e},t){const s=e.getEntityInfo.entityTypeName,i=e.activityId,o=e.activityDirection;r.sendData(n.Builder.AI.CallParsingEvent.createDefault(s,i,n.Dictionary.STATUS_SUCCESS).setElement(t).setActivityDirection(o).buildData()),r.sendData(n.Builder.AI.CallParsingEvent.createDefault(s,i,n.Dictionary.STATUS_SUCCESS).setTool(n.Dictionary.TOOL_CRM).setCategory(n.Dictionary.CATEGORY_AI_OPERATIONS).setElement(t).setActivityDirection(o).buildData())}};const V=async e=>a.wasFeedbackSent(e),G=async e=>(await BX.ajax.runAction("crm.timeline.ai.mergeFields",{method:"GET",getParameters:{mergeUuid:e}})).data;let K=null;var X=babelHelpers.classPrivateFieldLooseKey("application"),j=babelHelpers.classPrivateFieldLooseKey("options"),W=babelHelpers.classPrivateFieldLooseKey("store");class ${constructor(e,t={}){if(Object.defineProperty(this,X,{writable:!0,value:void 0}),Object.defineProperty(this,j,{writable:!0,value:void 0}),Object.defineProperty(this,W,{writable:!0,value:void 0}),babelHelpers.classPrivateFieldLooseBase(this,j)[j]=t,this.rootNode=document.querySelector("#"+e),!babelHelpers.classPrivateFieldLooseBase(this,j)[j].mergeUuid)throw new Error("param mergeUuid is required")}get application(){return babelHelpers.classPrivateFieldLooseBase(this,X)[X]}get store(){return babelHelpers.classPrivateFieldLooseBase(this,W)[W]}start(){K=new A,babelHelpers.classPrivateFieldLooseBase(this,W)[W]=l.createStore({state:{mergeUuid:null,isLoading:!0,conflictFields:[],isEditMode:!1,isEntityEditorLoaded:!1,entityInfo:null,eeControlPositions:new Map,expandedConflictControls:new Map,mainLayoutScrollPosition:null,mainLayoutContainerHeight:null,mainLayoutScrollHeight:null,notVisibleUnresolvedCount:0,isFieldsTouched:!1,aiValuesAppliedCount:0,isSliderConfirmPopupShown:!1,isNeededShowCloseConfirm:!1,aiFeedback:{feedbackWasSent:!1,isShownByReturnBtn:!1,isMessageComponentShown:!1,lastTriggeredBy:null,showBeforeClose:!0,checkFeedbackBeforeSend:!1}},getters:O,mutations:R,actions:N}),babelHelpers.classPrivateFieldLooseBase(this,X)[X]=o.BitrixVue.createApp({name:"AiFormFill",components:{Main:C},beforeCreate(){this.$bitrix.Application.set(this)},template:"\n\t\t\t\t<Main/>\n\t\t\t"}),babelHelpers.classPrivateFieldLooseBase(this,W)[W].commit("setMergeUUID",babelHelpers.classPrivateFieldLooseBase(this,j)[j].mergeUuid),babelHelpers.classPrivateFieldLooseBase(this,W)[W].commit("setActivityId",babelHelpers.classPrivateFieldLooseBase(this,j)[j].activityId),babelHelpers.classPrivateFieldLooseBase(this,W)[W].commit("setActivityDirection",babelHelpers.classPrivateFieldLooseBase(this,j)[j].activityDirection),babelHelpers.classPrivateFieldLooseBase(this,X)[X].use(babelHelpers.classPrivateFieldLooseBase(this,W)[W]),babelHelpers.classPrivateFieldLooseBase(this,X)[X].mount(this.rootNode)}stop(){babelHelpers.classPrivateFieldLooseBase(this,X)[X].unmount(),babelHelpers.classPrivateFieldLooseBase(this,X)[X]=null,babelHelpers.classPrivateFieldLooseBase(this,W)[W]=null,K=null}isNeededShowCloseConfirm(){return babelHelpers.classPrivateFieldLooseBase(this,W)[W].getters.isNeededShowCloseConfirm}showCloseConfirm(){babelHelpers.classPrivateFieldLooseBase(this,W)[W].commit("setIsConfirmPopupShow",!0)}isShowAiFeedbackBeforeClose(){return babelHelpers.classPrivateFieldLooseBase(this,W)[W].getters.isAiFeedbackShowBeforeClose}showAiFeedbackBeforeClose(){babelHelpers.classPrivateFieldLooseBase(this,W)[W].dispatch("showFeedbackMessageBeforeClose")}isAppLoading(){return babelHelpers.classPrivateFieldLooseBase(this,W)[W].getters.isLoading}}var z=babelHelpers.classPrivateFieldLooseKey("onSaveCallback"),q=babelHelpers.classPrivateFieldLooseKey("onCancelCallback"),Y=babelHelpers.classPrivateFieldLooseKey("saveButton"),Q=babelHelpers.classPrivateFieldLooseKey("cancelButton"),J=babelHelpers.classPrivateFieldLooseKey("createButtons");class Z{constructor(){Object.defineProperty(this,J,{value:ee}),Object.defineProperty(this,z,{writable:!0,value:null}),Object.defineProperty(this,q,{writable:!0,value:null}),Object.defineProperty(this,Y,{writable:!0,value:null}),Object.defineProperty(this,Q,{writable:!0,value:null}),babelHelpers.classPrivateFieldLooseBase(this,J)[J]()}set onSaveCallback(e){babelHelpers.classPrivateFieldLooseBase(this,z)[z]=e}set onCancelCallback(e){babelHelpers.classPrivateFieldLooseBase(this,q)[q]=e}get saveButton(){return babelHelpers.classPrivateFieldLooseBase(this,Y)[Y]}get cancelButton(){return babelHelpers.classPrivateFieldLooseBase(this,Q)[Q]}getButtons(){return[babelHelpers.classPrivateFieldLooseBase(this,Y)[Y],babelHelpers.classPrivateFieldLooseBase(this,Q)[Q]]}}function ee(){babelHelpers.classPrivateFieldLooseBase(this,Y)[Y]=new u.Button({text:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_SAVE"),size:u.Button.Size.MEDIUM,color:u.Button.Color.SUCCESS,dependOnTheme:!0,onclick:()=>{c.Type.isFunction(babelHelpers.classPrivateFieldLooseBase(this,z)[z])&&babelHelpers.classPrivateFieldLooseBase(this,z)[z]()}}),babelHelpers.classPrivateFieldLooseBase(this,Q)[Q]=new u.Button({text:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_CANCEL"),size:u.Button.Size.MEDIUM,color:u.ButtonColor.LIGHT_BORDER,onclick:()=>{c.Type.isFunction(babelHelpers.classPrivateFieldLooseBase(this,q)[q])&&babelHelpers.classPrivateFieldLooseBase(this,q)[q]()}})}e.sliderButtonsAdapter=null,e.copilotSliderInstance=null;var te=babelHelpers.classPrivateFieldLooseKey("options"),se=babelHelpers.classPrivateFieldLooseKey("copilotSliderClass"),ie=babelHelpers.classPrivateFieldLooseKey("app"),oe=babelHelpers.classPrivateFieldLooseKey("sliderInstance"),le=babelHelpers.classPrivateFieldLooseKey("onLoadEventName"),ae=babelHelpers.classPrivateFieldLooseKey("onCloseEventName"),ne=babelHelpers.classPrivateFieldLooseKey("sliderUrl"),re=babelHelpers.classPrivateFieldLooseKey("containerId"),de=babelHelpers.classPrivateFieldLooseKey("makeSliderToolbar"),ce=babelHelpers.classPrivateFieldLooseKey("createSliderWrapper"),ue=babelHelpers.classPrivateFieldLooseKey("calculateSliderWidth"),be=babelHelpers.classPrivateFieldLooseKey("onSliderLoadFn"),pe=babelHelpers.classPrivateFieldLooseKey("onSliderCloseFn"),he=babelHelpers.classPrivateFieldLooseKey("onAiFormFillDownFn");class me{constructor(t,s){Object.defineProperty(this,he,{value:Ee}),Object.defineProperty(this,pe,{value:ye}),Object.defineProperty(this,be,{value:Pe}),Object.defineProperty(this,ue,{value:Be}),Object.defineProperty(this,ce,{value:Le}),Object.defineProperty(this,de,{value:ve}),Object.defineProperty(this,re,{get:Ce,set:void 0}),Object.defineProperty(this,ne,{get:Fe,set:void 0}),Object.defineProperty(this,ae,{get:ge,set:void 0}),Object.defineProperty(this,le,{get:fe,set:void 0}),Object.defineProperty(this,te,{writable:!0,value:void 0}),Object.defineProperty(this,se,{writable:!0,value:void 0}),Object.defineProperty(this,ie,{writable:!0,value:void 0}),Object.defineProperty(this,oe,{writable:!0,value:void 0}),babelHelpers.classPrivateFieldLooseBase(this,te)[te]=t,babelHelpers.classPrivateFieldLooseBase(this,se)[se]=s,e.sliderButtonsAdapter=new Z}create(){babelHelpers.classPrivateFieldLooseBase(this,oe)[oe]=babelHelpers.classPrivateFieldLooseBase(this,ce)[ce](),c.addCustomEvent("SidePanel.Slider:onLoad",babelHelpers.classPrivateFieldLooseBase(this,be)[be].bind(this),babelHelpers.classPrivateFieldLooseBase(this,le)[le]),c.addCustomEvent("SidePanel.Slider:onClose",babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].bind(this),babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]),c.addCustomEvent(window,"BX.Crm.AiFormFill:CloseSlider",babelHelpers.classPrivateFieldLooseBase(this,he)[he].bind(this)),babelHelpers.classPrivateFieldLooseBase(this,oe)[oe].open()}}function fe(){return"CopilotSliderWrapper:onLoad_"+babelHelpers.classPrivateFieldLooseBase(this,te)[te].mergeUuid}function ge(){return"CopilotSliderWrapper:onClose_"+babelHelpers.classPrivateFieldLooseBase(this,te)[te].mergeUuid}function Fe(){return"crm:copilot-wrapper-slider-"+babelHelpers.classPrivateFieldLooseBase(this,te)[te].mergeUuid}function Ce(){return"crm-ai-merge-fields__container__"+babelHelpers.classPrivateFieldLooseBase(this,te)[te].mergeUuid}function ve(){const e=babelHelpers.classPrivateFieldLooseBase(this,se)[se].makeDefaultToolbarButtons();return[new u.Button({text:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_TRANSCRIPTION"),size:b.Settings.get(b.Setting.UseAirDesign)?u.Button.Size.SMALL:u.Button.Size.MEDIUM,color:u.Button.Color.LIGHT_BORDER,dependOnTheme:!0,useAirDesign:b.Settings.get(b.Setting.UseAirDesign),style:u.Button.AirStyle.OUTLINE,onclick:()=>{if(top.BX.Helper){new t.Call.Transcription({activityId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].activityId,ownerTypeId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].ownerTypeId,ownerId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].ownerId,languageTitle:babelHelpers.classPrivateFieldLooseBase(this,te)[te].languageTitle}).open()}}}),new u.Button({text:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_RESUME"),size:b.Settings.get(b.Setting.UseAirDesign)?u.Button.Size.SMALL:u.Button.Size.MEDIUM,color:u.Button.Color.LIGHT_BORDER,dependOnTheme:!0,useAirDesign:b.Settings.get(b.Setting.UseAirDesign),style:u.Button.AirStyle.OUTLINE,onclick:()=>{if(top.BX.Helper){new t.Call.Summary({activityId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].activityId,ownerTypeId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].ownerTypeId,ownerId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].ownerId,languageTitle:babelHelpers.classPrivateFieldLooseBase(this,te)[te].languageTitle}).open()}}}),...e]}function Le(){const t=e.sliderButtonsAdapter.getButtons(),s=babelHelpers.classPrivateFieldLooseBase(this,de)[de]();return new(babelHelpers.classPrivateFieldLooseBase(this,se)[se])({content:()=>`<div id="${babelHelpers.classPrivateFieldLooseBase(this,re)[re]}"></div>`,sliderTitle:c.Loc.getMessage("CRM_AI_FORM_FILL_MERGER_TITLE"),label:babelHelpers.classPrivateFieldLooseBase(this,te)[te].label,extensions:["crm.ai.form-fill","crm.entity-editor"],url:babelHelpers.classPrivateFieldLooseBase(this,ne)[ne],width:babelHelpers.classPrivateFieldLooseBase(this,ue)[ue](),toolbar:()=>s,buttons:()=>t})}function Be(){const e=BX.SidePanel.Instance.getTopSlider().getWidth()||.86*window.screen.width;return Math.floor(.86*e)}function Pe(t){t.getSlider().getUrl()===babelHelpers.classPrivateFieldLooseBase(this,ne)[ne]&&(e.copilotSliderInstance=babelHelpers.classPrivateFieldLooseBase(this,oe)[oe],babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]=new $(babelHelpers.classPrivateFieldLooseBase(this,re)[re],{mergeUuid:babelHelpers.classPrivateFieldLooseBase(this,te)[te].mergeUuid,activityId:babelHelpers.classPrivateFieldLooseBase(this,te)[te].activityId,activityDirection:babelHelpers.classPrivateFieldLooseBase(this,te)[te].activityDirection}),babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].start(),c.removeAllCustomEvents("SidePanel.Slider:onLoad",babelHelpers.classPrivateFieldLooseBase(this,le)[le]))}function ye(t){if(t.getSlider().getUrl()===babelHelpers.classPrivateFieldLooseBase(this,ne)[ne])if(babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]&&!babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].isAppLoading()){if(babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].isNeededShowCloseConfirm())return babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].showCloseConfirm(),void t.denyAction();if(babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].isShowAiFeedbackBeforeClose())return babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].showAiFeedbackBeforeClose(),void t.denyAction();c.removeAllCustomEvents("SidePanel.Slider:onClose",babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]),c.removeAllCustomEvents(window,"BX.Crm.AiFormFill:CloseSlider"),babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]&&(babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].stop(),babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]=null),e.sliderButtonsAdapter=null,e.copilotSliderInstance=null}else t.denyAction()}function Ee(e){var t;(null==e||null==(t=e.data)?void 0:t.mergeUuid)===babelHelpers.classPrivateFieldLooseBase(this,te)[te].mergeUuid&&babelHelpers.classPrivateFieldLooseBase(this,oe)[oe].close()}e.createAiFormFillApplicationInsideSlider=function(e){var t,s,i;const o=t=>{new me(e,t).create()};c.Type.isFunction(null==(t=BX)||null==(s=t.Crm)||null==(i=s.AI)?void 0:i.Slider)?o(BX.Crm.AI.Slider):top.BX.Runtime.loadExtension("crm.ai.slider").then((e=>{const{Slider:t}=e;o(t)})).catch((()=>{throw new Error("Cant load Crm.AI.Slider extension")}))}}(this.BX.Crm=this.BX.Crm||{},BX.Crm.AI,BX.Crm.AI,BX.UI.Dialogs,BX.Vue3,BX.Vue3.Vuex,BX.Crm.AI.Feedback,BX.Crm.Integration.Analytics,BX.UI.Analytics,BX,BX,BX.UI,BX.Crm.Integration.UI);
//# sourceMappingURL=ai-form-fill.bundle.map.js