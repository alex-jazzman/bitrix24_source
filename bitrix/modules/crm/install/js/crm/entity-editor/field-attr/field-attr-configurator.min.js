BX.namespace("BX.Crm");if(typeof BX.Crm.EntityFieldAttributeConfigurator==="undefined"){BX.Crm.EntityFieldAttributeConfigurator=function(){this._id="";this._settings=null;this._typeId=BX.UI.EntityFieldAttributeType.undefined;this._fieldName="";this._config=null;this._captions=null;this._phases=null;this._groups=null;this._button=null;this._popup=null;this._label=null;this._switchCheckBox=null;this._switchCheckBoxHandler=BX.delegate(this.onSwitchCheckBoxClick,this);this._isPermitted=true;this._isPhaseDependent=true;this._isEnabled=true;this._isOpened=false;this._isChanged=false;this._closingNotifier=BX.CrmNotifier.create(this)};BX.Crm.EntityFieldAttributeConfigurator.prototype={initialize:function(t,e){this._id=BX.type.isNotEmptyString(t)?t:BX.util.getRandomString(4);this._settings=e?e:{};this._isPermitted=BX.prop.getBoolean(this._settings,"isPermitted",true);this._isPhaseDependent=BX.prop.getBoolean(this._settings,"isPhaseDependent",true);this._typeId=BX.prop.getInteger(this._settings,"type",BX.UI.EntityFieldAttributeType.required);this._fieldName=BX.prop.getString(this._settings,"fieldName","");this._captions=BX.prop.getObject(this._settings,"captions",{});this._config=BX.prop.getObject(this._settings,"config",{});var i=BX.prop.getInteger(this._config,"typeId",BX.UI.EntityFieldAttributeType.undefined);if(i===BX.UI.EntityFieldAttributeType.undefined){this._config.typeId=this._typeId}else if(i!==this._typeId){throw"EntityFieldAttributeConfigurator. Configuration type mismatch."}this._phases=BX.prop.getArray(this._settings,"phases",[]);var s=[];var n=[];for(var r=0,o=this._phases.length;r<o;r++){var p=this._phases[r];var h=p["semantics"];if(h==="process"||h==="success"){s.push(p)}else{n.push(p)}}this._groups={};this.createGroup("general","",[{id:"GENERAL",name:this.getCaption("GROUP_TYPE_GENERAL")}],{phaseGroupTypeId:BX.UI.EntityFieldAttributePhaseGroupType.general});if(s.length>0){this.createGroup("pipeline",this.getCaption("GROUP_TYPE_PIPELINE"),s,{phaseGroupTypeId:BX.UI.EntityFieldAttributePhaseGroupType.pipeline})}if(n.length>0){this.createGroup("junk",this.getCaption("GROUP_TYPE_JUNK"),n,{phaseGroupTypeId:BX.UI.EntityFieldAttributePhaseGroupType.junk})}this._isEnabled=!this.isEmpty()},getId:function(){return this._id},getTypeId:function(){return this._typeId},getCaption:function(t){return BX.prop.getString(this._captions,t,t)},getTitle:function(){if(this._typeId===BX.UI.EntityFieldAttributeType.required){var t=BX.prop.getBoolean(this._settings,"isAttrConfigButtonHidden",false);return this.getCaption("REQUIRED_FULL")+(t?"":":")}return""},getPhaseIndexById:function(t){for(var e=0,i=this._phases.length;e<i;e++){if(this._phases[e]["id"]===t){return e}}return-1},getPhaseInfoById:function(t){var e=this.getPhaseIndexById(t);return e>=0?this._phases[e]:null},resolvePhaseName:function(t){if(t===""){return""}var e=this.getPhaseInfoById(t);return e?BX.prop.getString(e,"name",t):t},resolvePhaseGroupType:function(t){if(t===""){return BX.UI.EntityFieldAttributePhaseGroupType.undefined}var e=this.getPhaseInfoById(t);if(!e){return BX.UI.EntityFieldAttributePhaseGroupType.undefined}var i=BX.prop.getString(e,"semantics","");return i==="process"||i==="success"?BX.UI.EntityFieldAttributePhaseGroupType.pipeline:BX.UI.EntityFieldAttributePhaseGroupType.junk},prepareLegendData:function(){var t=BX.Crm.EntityPhaseLayout.getCurrent();var e=BX.prop.getArray(this._config,"groups",[]);for(var i=0,s=e.length;i<s;i++){var n=e[i];var r=BX.prop.getArray(n,"items",[]);if(r.length>0){var o=BX.prop.getString(r[0],"startPhaseId","");var p=this.getPhaseInfoById(o);if(p){var h=BX.prop.getString(p,"color","");if(h===""){var u=BX.prop.getString(p,"semantics","");if(u!==""){h=t.getBackgroundColor(u)}}var a=BX.Crm.EntityFieldAttributeConfigurator.calculateTextColor(h);return{text:BX.prop.getString(p,"name",o),backgroundColor:h,color:a}}}}return{text:this.getCaption("GROUP_TYPE_GENERAL"),backgroundColor:"#CED4DC",color:"#333"}},adjust:function(){var t=this.isEnabled();var e=this.isEmpty();if(t&&e){this._config=this.getDefaultConfiguration()}else if(!t&&!e){this._config=this.getEmptyConfiguration()}if(this._label){this._label.innerHTML=BX.util.htmlspecialchars(this.getTitle())}if(this._button){this._button.adjust()}},setEnabled:function(t){this._isEnabled=!!t},isEnabled:function(){return this._isEnabled},isChanged:function(){return this._isChanged},isEmpty:function(){return BX.prop.getArray(this._config,"groups",[]).length===0},isCustomized:function(){var t=BX.prop.getArray(this._config,"groups",[]);for(var e=0,i=t.length;e<i;e++){var s=BX.prop.getInteger(t[e],"phaseGroupTypeId",BX.UI.EntityFieldAttributePhaseGroupType.undefined);if(s===BX.UI.EntityFieldAttributePhaseGroupType.undefined){continue}if(s!==BX.UI.EntityFieldAttributePhaseGroupType.general){return true}}return false},isPermitted:function(){return this._isPermitted},isPhaseDependent:function(){return this._isPhaseDependent},runLockScript:function(){var lockScript=BX.prop.getString(this._settings,"lockScript","");if(lockScript!==""){eval(lockScript)}},getDefaultConfiguration:function(){return{typeId:this._typeId,groups:[{phaseGroupTypeId:BX.UI.EntityFieldAttributePhaseGroupType.general}]}},getEmptyConfiguration:function(){return{typeId:this._typeId,groups:[]}},getConfiguration:function(){return this._config},acceptChanges:function(){if(!(this.isPermitted()&&this.isChanged())){return}this._config=this.getEmptyConfiguration();if(this._groups["general"].isSelected()){this._config["groups"].push({phaseGroupTypeId:BX.UI.EntityFieldAttributePhaseGroupType.general})}else{this._groups["pipeline"].acceptChanges(this._config);this._groups["junk"].acceptChanges(this._config)}this._isChanged=false},applyConfiguration:function(){for(var t in this._groups){if(!this._groups.hasOwnProperty(t)){continue}this._groups[t].applyConfiguration(this._config)}},createGroup:function(t,e,i,s){if(!this._groups){this._groups={}}this._groups[t]=BX.Crm.EntityFieldAttributePhaseGroup.create(t,{title:e,configurator:this,isReadOnly:!this.isPhaseDependent(),phases:i,phaseGroupTypeId:BX.prop.getInteger(s,"phaseGroupTypeId",BX.UI.EntityFieldAttributePhaseGroupType.undefined)});return this._groups[t]},hasSelectedGroup:function(){for(var t in this._groups){if(!this._groups.hasOwnProperty(t)){continue}if(this._groups[t].isSelected()){return true}}return false},processGroupChange:function(t){if(!this.isPhaseDependent()){this.runLockScript();return}const e=t.getId();if(e==="general"){const e=t.isSelected();if(e){this._groups.pipeline?.setSelected(true);this._groups.junk?.setSelected(true)}}else if(!this.isChildrenGroupsFullySelected()&&(e==="pipeline"||e==="junk")){this._groups.general.setSelected(false)}this.setEnabled(this.hasSelectedGroup());if(!this.isChanged()){this._isChanged=true}},isChildrenGroupsFullySelected:function(){return Object.keys(this._groups).filter((t=>t!=="general")).every((t=>this._groups[t].isFullySelected()))},addClosingListener:function(t){this._closingNotifier.addListener(t)},removeClosingListener:function(t){this._closingNotifier.removeListener(t)},open:function(t){if(this._isOpened){return}this._popup=new BX.PopupWindow(this._id,t,{autoHide:true,draggable:false,closeByEsc:true,offsetLeft:0,offsetTop:0,zIndex:BX.prop.getInteger(this._settings,"zIndex",0),bindOptions:{forceBindPosition:true},content:this.prepareContent(),events:{onPopupShow:BX.delegate(this.onPopupShow,this),onPopupClose:BX.delegate(this.onPopupClose,this),onPopupDestroy:BX.delegate(this.onPopupDestroy,this)}});this._popup.show()},close:function(){if(!this._isOpened){return}if(this._popup){this._popup.close()}},prepareContent:function(){const t=BX.Tag.render`
					<div class="crm-entity-popup-field-addiction-steps-list-container">
					</div>`;const e=BX.Tag.render`
					<div class="crm-entity-popup-field-addiction-step">
						${t}
					</div>`;Object.keys(this._groups).forEach((e=>{const i=this._groups[e];i.setContainer(t);i.layout()}));return e},onPopupShow:function(){this._isOpened=true;this.applyConfiguration()},onPopupClose:function(){if(this.isPermitted()){this.acceptChanges();if(this._switchCheckBox){this._switchCheckBox.checked=this._isEnabled}this.adjust()}if(this._popup){this._popup.destroy()}this._closingNotifier.notify([{config:this._config}])},onPopupDestroy:function(){this._isOpened=false;this._innerWrapper=null;this._popup=null},getButton:function(){if(!this._button){this._button=BX.Crm.EntityFieldAttributeConfigButton.create(this._id,{configurator:this,isHidden:BX.prop.getBoolean(this._settings,"isAttrConfigButtonHidden",false)})}return this._button},getSwitchCheckBox:function(){return this._switchCheckBox},setSwitchCheckBox:function(t){if(this._switchCheckBox){BX.unbind(this._switchCheckBox,"click",this._switchCheckBoxHandler)}this._switchCheckBox=t;if(this._switchCheckBox){BX.bind(this._switchCheckBox,"click",this._switchCheckBoxHandler)}},getLabel:function(){return this._label},setLabel:function(t){this._label=t},onSwitchCheckBoxClick:function(t){this.setEnabled(this._switchCheckBox.checked);this.adjust()}};BX.Crm.EntityFieldAttributeConfigurator.calculateTextColor=function(t){var e,i,s;if(t>7){var n=t.split("(")[1].split(")")[0];n=n.split(",");e=parseInt(n[0]);i=parseInt(n[1]);s=parseInt(n[2])}else{if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(t)){var r=t.substring(1).split("");if(r.length===3){r=[r[0],r[0],r[1],r[1],r[2],r[2]]}r="0x"+r.join("");e=r>>16&255;i=r>>8&255;s=r&255}}var o=.21*e+.72*i+.07*s;return o<145?"#fff":"#333"};BX.Crm.EntityFieldAttributeConfigurator.create=function(t,e){var i=new BX.Crm.EntityFieldAttributeConfigurator;i.initialize(t,e);return i}}
//# sourceMappingURL=field-attr-configurator.map.js