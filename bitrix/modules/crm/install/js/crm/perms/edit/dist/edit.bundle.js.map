{"version":3,"file":"edit.bundle.js","sources":["../src/components/expandcontrol.js","../src/components/permissioncontrol.js","../src/utils.js","../src/store/getters.js","../src/store/mutations.js","../src/store/actions.js","../src/store.js","../src/slider/slider-permissions.js","../src/slider/slider-manager.js","../src/components/row.js","../src/components/desk.js","../src/components/loader.js","../src/components/main.js","../src/app.js"],"sourcesContent":["import '../css/expandcontrol.css';\n\nexport const ExpandControl = {\n\tname: 'ExpandControl',\n\tprops: {\n\t\tentity: Object,\n\t\tisExpanded: Boolean,\n\t},\n\temits: ['toggle'],\n\tmethods: {\n\t\ttoggleState() {\n\t\t\tthis.$emit('toggle');\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t:class=\"{'--expanded': isExpanded}\"\n\t\t\tclass=\"bx-crm-perms-edit-expand_control\"\n\t\t\t@click=\"toggleState\">\n\t\t</div>\n\t`,\n};\n","import '../css/permissioncontrol.css';\nimport { Event, Loc } from 'main.core';\nimport { mapGetters } from 'ui.vue3.vuex';\n\nexport const PermissionControl = {\n\tname: 'PermissionControl',\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tvaluesMap: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tpermissionIdentifier: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['valueChanged'],\n\tdata() {\n\t\treturn {\n\t\t\tlabel: {\n\t\t\t\tinherit: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_INHERIT'),\n\t\t\t},\n\t\t\tisEditMode: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters(['getAssignedAttribute']),\n\t\tcurrentPermissionName()\n\t\t{\n\t\t\tif (\n\t\t\t\tthis.permissionIdentifier.permissionCode === 'AUTOMATION'\n\t\t\t\t&& this.isReadOnlyMode\n\t\t\t)\n\t\t\t{\n\t\t\t\tconst forcePerm = 'X';\n\n\t\t\t\treturn this.valuesMap[forcePerm];\n\t\t\t}\n\n\t\t\tif (this.isStageControl && this.model === '-')\n\t\t\t{\n\t\t\t\treturn this.getParentName;\n\t\t\t}\n\n\t\t\treturn this.valuesMap[this.value];\n\t\t},\n\t\tisInherited() {\n\t\t\treturn this.isStageControl && this.model === '-';\n\t\t},\n\t\tmodel: {\n\t\t\tget() {\n\t\t\t\treturn this.value;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$emit('valueChanged', { identifier: this.permissionIdentifier, value });\n\t\t\t},\n\t\t},\n\t\tisStageControl() {\n\t\t\treturn Boolean(this.permissionIdentifier.stageField);\n\t\t},\n\t\tgetParentName() {\n\t\t\tconst parentChose = this.getAssignedAttribute({\n\t\t\t\tpermissionCode: this.permissionIdentifier.permissionCode,\n\t\t\t\tentityCode: this.permissionIdentifier.entityCode,\n\t\t\t}) || '';\n\n\t\t\treturn this.valuesMap[parentChose];\n\t\t},\n\t\tisReadOnlyMode(): boolean {\n\t\t\tif (this.permissionIdentifier.permissionCode === 'AUTOMATION')\n\t\t\t{\n\t\t\t\treturn this.getAssignedAttribute({ permissionCode: 'WRITE', entityCode: 'CONFIG' }) === 'X';\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t},\n\tmethods: {\n\t\ttoEditMode(e) {\n\t\t\te.stopPropagation();\n\t\t\tif (this.isReadOnlyMode)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.isEditMode = true;\n\t\t\tEvent.bind(window, 'click', this.windowClickListener);\n\t\t},\n\t\twindowClickListener(event) {\n\t\t\tif (\n\t\t\t\tevent.target !== this.$refs.componentRef\n\t\t\t\t&& !event.composedPath().includes(this.$refs.componentRef)\n\t\t\t)\n\t\t\t{\n\t\t\t\tthis.isEditMode = false;\n\t\t\t\tEvent.unbind(window, 'click', this.windowClickListener);\n\t\t\t}\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div \n\t\t\tclass=\"bx-crm-perms-edit-permission_control\"\n\t\t\tref=\"componentRef\"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-text\"\n\t\t\t\t:class=\"{'--readonly': isReadOnlyMode, '--inherited': isInherited}\"\n\t\t\t\tv-if=\"!isEditMode\"\n\t\t\t\t@click=\"toEditMode\"\n\t\t\t>{{ currentPermissionName }}</div>\n\t\t\t<select \n\t\t\t\tv-model=\"model\" \n\t\t\t\tv-if=\"isEditMode\" \n\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-select\"\n\t\t\t>\n\t\t\t\t<option \n\t\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-select-option__grey\" \n\t\t\t\t\tv-if=\"isStageControl\" \n\t\t\t\t\tvalue=\"-\"\n\t\t\t\t>{{ label.inherit }}</option>\n\t\t\t\t<option v-for=\"val in Object.keys(valuesMap)\" :value=\"val\">\n\t\t\t\t\t{{ valuesMap[val] }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</div>\n\t`,\n};\n","import { PermissionEntityIdentifier } from './store';\n\nexport function entityHash(entity): string\n{\n\tif (entity.stageField)\n\t{\n\t\treturn `${entity.entityCode}__${entity.stageField}__${entity.stageCode}`;\n\t}\n\n\treturn entity.entityCode;\n}\n\nexport function hashIdentifier(identifier: PermissionEntityIdentifier): string\n{\n\tlet hash = `${identifier.entityCode}__${identifier.permissionCode}`;\n\n\tif (identifier.stageField)\n\t{\n\t\thash = `${hash}__${identifier.stageField}__${identifier.stageCode}`;\n\t}\n\n\treturn btoa(hash);\n}","import { Type } from 'main.core';\nimport { AssignAttributeParam, MAX_SORT_ORDER_ON_THE_DESK, PermissionEntityIdentifier, Permissions } from '../store';\nimport { entityHash } from '../utils';\n\nexport default {\n\tpermissionEntities(state) {\n\t\treturn state.desk.permissionEntities;\n\t},\n\n\tpermissionEntitiesExpanded(state) {\n\t\treturn state.desk.permissionEntities.filter((entity) => {\n\t\t\treturn !(entity.stageField && !state.ui.expandedStageEntities[entity.entityCode]);\n\t\t});\n\t},\n\n\tgetMainPermissionEntityByCode: (state) => (entityCode) => {\n\t\treturn state.desk.permissionEntities.find((item) => {\n\t\t\treturn item.entityCode === entityCode && !item.stageField;\n\t\t});\n\t},\n\n\tgetEntitiesGroupedByPermission: (state, getters) => (entityCode) => {\n\t\tconst rootEntity = getters.getMainPermissionEntityByCode(entityCode);\n\n\t\tconst entities = state.desk.permissionEntities\n\t\t\t.filter((entity) => entity.entityCode === rootEntity.entityCode);\n\n\t\tlet permissions = [];\n\n\t\tfor (const entity of entities)\n\t\t{\n\t\t\tfor (const permCode of Object.keys(entity.permissions))\n\t\t\t{\n\t\t\t\tif (!Object.hasOwn(entity.permissions, permCode))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst values = entity.permissions[permCode];\n\n\t\t\t\tconst permissionConfig: Permissions = state.desk.availablePermissions.find((perm: Permissions) => {\n\t\t\t\t\treturn perm.code === permCode;\n\t\t\t\t});\n\n\t\t\t\tif (permissionConfig.sortOrder <= MAX_SORT_ORDER_ON_THE_DESK)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tpermissions.push({\n\t\t\t\t\tcode: permCode,\n\t\t\t\t\tname: permissionConfig.name,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisEntityStageSupport: entity.hasStages,\n\t\t\t\t\tisPermissionStageSupport: permissionConfig.canAssignPermissionToStages,\n\t\t\t\t\tstageField: entity.stageField,\n\t\t\t\t\tstageCode: entity.stageCode,\n\t\t\t\t\tstateName: entity.name,\n\t\t\t\t\tsortOrder: parseInt(permissionConfig.sortOrder, 10),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpermissions = permissions.sort((a, b) => {\n\t\t\tif (a.sortOrder === b.sortOrder)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn a.sortOrder < b.sortOrder ? -1 : 1;\n\t\t});\n\n\t\treturn permissions;\n\t},\n\n\tavailablePermissions(state) {\n\t\treturn state.desk.availablePermissions;\n\t},\n\n\tgetAssignedAttribute: (state) => (\n\t\t{ permissionCode, entityCode, stageField, stageCode }: PermissionEntityIdentifier,\n\t) => {\n\t\tif (stageField)\n\t\t{\n\t\t\tlet value = state.roleAssignedPermissions?.[entityCode]?.[permissionCode]?.[stageField]?.[stageCode];\n\n\t\t\t// Not assigned value of stage attribute means it is inherited val from root permission entity\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tvalue = '-';\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\treturn state.roleAssignedPermissions?.[entityCode]?.[permissionCode]?.['-'] || null;\n\t},\n\n\tisStageEntitiesVisible: (state) => (entity) => {\n\t\tconst hash = entityHash(entity);\n\n\t\treturn Boolean(state.ui.expandedStageEntities[hash]);\n\t},\n\n\tpermissionsOnMainView(state) {\n\t\treturn state.desk.availablePermissions.filter((perm) => {\n\t\t\treturn perm.sortOrder <= MAX_SORT_ORDER_ON_THE_DESK;\n\t\t});\n\t},\n\n\thasTariffPermission(state): boolean {\n\t\treturn state.restriction.hasPermission;\n\t},\n\n\tgetRestrictionScript(state): ?string {\n\t\treturn state.restriction.restrictionScript;\n\t},\n\n\tgetAvailablePermissionsOrders(state) {\n\t\treturn state.desk.availablePermissionsOrders;\n\t},\n\n\tgetSaveData(state) {\n\t\tconst toRemove = [];\n\t\tconst toChange = [];\n\t\tfor (const hash of Object.keys(state.touched.touchedAttributes))\n\t\t{\n\t\t\tconst touched: AssignAttributeParam = state.touched.touchedAttributes[hash];\n\t\t\tif (touched.identifier.stageField)\n\t\t\t{\n\t\t\t\tif (touched.value === '-')\n\t\t\t\t{\n\t\t\t\t\ttoRemove.push({ ...touched.identifier });\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttoChange.push({ ...touched.identifier, value: touched.value });\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (touched.value === '')\n\t\t\t{\n\t\t\t\ttoRemove.push({ ...touched.identifier });\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttoChange.push({ ...touched.identifier, value: touched.value });\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tid: state.role.id,\n\t\t\tname: state.role.name,\n\t\t\tpermissions: {\n\t\t\t\ttoRemove,\n\t\t\t\ttoChange,\n\t\t\t},\n\t\t};\n\t},\n\n\tgetRoleName(state) {\n\t\treturn state.role.name;\n\t},\n\n\tgetRoleId(state): number {\n\t\treturn state.role.id;\n\t},\n\n\tisSaveInProgress(state): boolean {\n\t\treturn state.ui.isSaveInProgress;\n\t},\n\n\tgetLastErrorMessage(state): string {\n\t\treturn state.ui.lastErrorMessage;\n\t},\n\n\tsetSaveInProgress(state): boolean {\n\t\treturn state.ui.isSaveInProgress;\n\t},\n};\n","/* eslint no-param-reassign: off */\nimport { AppData } from '../app';\nimport { AssignAttributeParam, PermissionEntityIdentifier } from '../store';\nimport { entityHash, hashIdentifier } from '../utils';\nimport { Type } from 'main.core';\n\nexport default {\n\tsetInitData(state, data: AppData) {\n\t\tstate.roleAssignedPermissions = data.roleAssignedPermissions;\n\t\tstate.desk.permissionEntities = data.permissionEntities;\n\t\tstate.restriction.hasPermission = data.restriction.hasPermission;\n\t\tstate.restriction.restrictionScript = data.restriction.restrictionScript;\n\n\t\tconst availablePermissionsOrders = {};\n\t\tconst availablePermissions = data.availablePermissions.map(item => {\n\t\t\tconst sortOrder = parseInt(item.sortOrder, 10);\n\t\t\tavailablePermissionsOrders[item.code] = sortOrder;\n\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tsortOrder,\n\t\t\t};\n\t\t});\n\n\t\tstate.desk.availablePermissionsOrders = availablePermissionsOrders;\n\t\tstate.desk.availablePermissions = availablePermissions;\n\n\t\tstate.role.id = parseInt(data.role.id, 10);\n\t\tstate.role.name = data.role.name;\n\n\t\tstate.touched.originalAttributes = structuredClone(data.roleAssignedPermissions);\n\t},\n\n\tassignPermissionAttribute(state, payload: AssignAttributeParam) {\n\t\tsetAssignedAttributes(state.roleAssignedPermissions, payload.identifier, payload.value);\n\t\tthis.commit('setAttributeTouched', { identifier: payload.identifier, value: payload.value });\n\t},\n\n\tsetAttributeTouched(state, payload: AssignAttributeParam) {\n\t\tconst permissionCode = payload.identifier.permissionCode;\n\t\tconst entityCode = payload.identifier.entityCode;\n\t\tconst stageField = payload.identifier.stageField;\n\t\tconst stageCode = payload.identifier.stageCode;\n\n\t\tconst value = payload.value;\n\t\tlet original = '';\n\t\tif (stageField)\n\t\t{\n\t\t\toriginal = state.touched.originalAttributes?.[entityCode]?.[permissionCode]?.[stageField]?.[stageCode];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toriginal = state.touched.originalAttributes?.[entityCode]?.[permissionCode]?.['-'];\n\t\t}\n\n\t\tconst hash = hashIdentifier(payload.identifier);\n\n\t\tif (original === value)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tdelete state.touched.touchedAttributes[hash];\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstate.touched.touchedAttributes[hash] = {\n\t\t\t\tvalue,\n\t\t\t\tidentifier: payload.identifier,\n\t\t\t};\n\t\t}\n\t},\n\n\tresetTouchedAttributes(state) {\n\t\tstate.touched.originalAttributes = JSON.parse(JSON.stringify((state.roleAssignedPermissions)));\n\t\tstate.touched.touchedAttributes = {};\n\t},\n\n\ttoggleStagesVisibility(state, entity) {\n\t\tconst hash = entityHash(entity);\n\t\tif (state.ui.expandedStageEntities[hash])\n\t\t{\n\t\t\tdelete state.ui.expandedStageEntities[hash];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstate.ui.expandedStageEntities[hash] = true;\n\t\t}\n\t},\n\n\tsetRoleName(state, newName) {\n\t\tstate.role.name = newName;\n\t},\n\n\tsetSaveInProgress(state, value: boolean) {\n\t\tstate.ui.isSaveInProgress = value;\n\t},\n\n\tsetLastErrorMessage(state, message): string {\n\t\tstate.ui.lastErrorMessage = message;\n\t},\n};\n\nfunction setAssignedAttributes(obj, identifier: PermissionEntityIdentifier, value)\n{\n\tconst permissionCode = identifier.permissionCode;\n\tconst entityCode = identifier.entityCode;\n\tconst stageField = identifier.stageField;\n\tconst stageCode = identifier.stageCode;\n\n\tif (!obj[entityCode])\n\t{\n\t\tobj[entityCode] = {};\n\t}\n\n\tif (!obj[entityCode][permissionCode])\n\t{\n\t\tobj[entityCode][permissionCode] = {};\n\t}\n\n\tif (stageField)\n\t{\n\t\tif (!obj[entityCode][permissionCode][stageField])\n\t\t{\n\t\t\tobj[entityCode][permissionCode][stageField] = {};\n\t\t}\n\n\t\tobj[entityCode][permissionCode][stageField][stageCode] = value;\n\n\t\treturn;\n\t}\n\n\tif (value === '')\n\t{\n\t\tdelete obj[entityCode][permissionCode]['-'];\n\t}\n\telse\n\t{\n\t\tobj[entityCode][permissionCode]['-'] = value;\n\t}\n\n\tclearEmptyNodes(obj);\n}\n\nfunction clearEmptyNodes(node, nodeName, parent)\n{\n\tif (!Type.isObject(node))\n\t{\n\t\treturn;\n\t}\n\n\tfor (const [childName, childNode] of Object.entries(node))\n\t{\n\t\tif (isObjectEmpty(childNode))\n\t\t{\n\t\t\tdelete node[childName];\n\t\t\tcontinue;\n\t\t}\n\n\t\tclearEmptyNodes(childNode, childName, node);\n\t}\n\n\tif (parent && isObjectEmpty(node))\n\t{\n\t\tdelete parent[nodeName];\n\t}\n}\n\nfunction isObjectEmpty(obj): boolean\n{\n\tif (!obj)\n\t{\n\t\treturn true;\n\t}\n\n\treturn Object.keys(obj).length === 0;\n}\n","export default {\n\tasync saveRolePermission({ commit, getters }, action: string) {\n\t\tif (getters.setSaveInProgress)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tcommit('setSaveInProgress', true);\n\t\tcommit('setLastErrorMessage', '');\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await BX.ajax.runComponentAction(\n\t\t\t\t'bitrix:crm.config.perms.role.edit.v2',\n\t\t\t\t'save',\n\t\t\t\t{\n\t\t\t\t\tmode: 'class',\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tvalues: getters.getSaveData,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst redirectUrl = response?.data?.redirectUrl;\n\t\t\tconst roleUrl = response?.data?.roleUrl;\n\n\t\t\tif (action === 'save' && redirectUrl)\n\t\t\t{\n\t\t\t\twindow.location.href = redirectUrl;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'apply' && roleUrl && getters.getRoleId === 0)\n\t\t\t{\n\t\t\t\twindow.location.href = roleUrl;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommit('resetTouchedAttributes');\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tconst errMessage = err?.data?.message;\n\t\t\tcommit('setLastErrorMessage', errMessage);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tcommit('setSaveInProgress', false);\n\t\t}\n\t},\n\n\tasync deleteRole({ commit, getters}){\n\t\tif (getters.setSaveInProgress)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst roleId = getters.getRoleId;\n\n\t\tif (!roleId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tcommit('setSaveInProgress', true);\n\t\tcommit('setLastErrorMessage', '');\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await BX.ajax.runComponentAction(\n\t\t\t\t'bitrix:crm.config.perms.role.edit.v2',\n\t\t\t\t'delete',\n\t\t\t\t{\n\t\t\t\t\tmode: 'class',\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tvalues: { roleId },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tlet redirectUrl = response?.data?.redirectUrl;\n\n\t\t\tif (!redirectUrl)\n\t\t\t{\n\t\t\t\tredirectUrl = '/';\n\t\t\t}\n\n\t\t\twindow.location.href = redirectUrl;\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tconst errMessage = err?.data?.message;\n\t\t\tcommit('setLastErrorMessage', errMessage);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tcommit('setSaveInProgress', false);\n\t\t}\n\t}\n};\n","import getters from './store/getters';\nimport mutations from './store/mutations';\nimport actions from './store/actions';\n\nexport const MAX_SORT_ORDER_ON_THE_DESK = 7;\n\nexport interface PermissionEntityIdentifier {\n\tpermissionCode: string;\n\tentityCode: string;\n\tstageField: ?string;\n\tstageCode: ?string;\n}\n\nexport interface AssignAttributeParam {\n\tidentifier: PermissionEntityIdentifier,\n\tvalue: string\n}\n\nexport interface Permissions {\n\tcode: string;\n\tname: string;\n\tsortOrder: number;\n\tcanAssignPermissionToStages: boolean;\n}\n\nfunction initState()\n{\n\treturn {\n\t\tui: {\n\t\t\texpandedStageEntities: {},\n\t\t\tisSaveInProgress: false,\n\t\t\tlastErrorMessage: '',\n\t\t},\n\t\troleAssignedPermissions: {},\n\t\trestriction: {\n\t\t\thasPermission: null,\n\t\t\trestrictionScript: '',\n\t\t},\n\t\trole: {\n\t\t\tid: 0,\n\t\t\tname: '',\n\t\t},\n\t\tdesk: {\n\t\t\tavailablePermissions: [],\n\t\t\tpermissionEntities: [],\n\t\t\tavailablePermissionsOrders: {},\n\t\t},\n\t\ttouched: {\n\t\t\toriginalAttributes: {},\n\t\t\ttouchedAttributes: {},\n\t\t},\n\t};\n}\n\nexport default () => {\n\treturn {\n\t\tstate: initState(),\n\t\tgetters,\n\t\tmutations,\n\t\tactions,\n\t};\n};\n","import { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { ExpandControl } from '../components/expandcontrol';\nimport { PermissionControl } from '../components/permissioncontrol';\nimport { PermissionEntityIdentifier } from '../store';\n\nexport const SliderPermissions = {\n\tname: 'SliderPermissions',\n\tprops: {\n\t\tentityCode: {\n\t\t\trequired: true,\n\t\t\ttype: String,\n\t\t},\n\t},\n\tcomponents: {\n\t\tExpandControl,\n\t\tPermissionControl,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tui: {\n\t\t\t\tstageVisibilityCodes: {},\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters(['getEntitiesGroupedByPermission', 'getAssignedAttribute']),\n\t\tpermissions() {\n\t\t\treturn this.getEntitiesGroupedByPermission(this.entityCode);\n\t\t},\n\t\tdisplayList() {\n\t\t\treturn this.permissions.filter((perm) => {\n\t\t\t\tif (!perm.stageField)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn this.ui.stageVisibilityCodes[perm.code];\n\t\t\t});\n\t\t},\n\t\tisShowExpandControl: () => (perm) => {\n\n\t\t\tif (perm.stageField)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!perm.isEntityStageSupport)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!perm.isPermissionStageSupport)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\tgetName: () => (perm) => {\n\t\t\tif (!perm.stageField)\n\t\t\t{\n\t\t\t\treturn perm.name;\n\t\t\t}\n\n\t\t\treturn perm.stateName;\n\t\t},\n\t},\n\tmounted() {},\n\tmethods: {\n\t\t...mapMutations(['assignPermissionAttribute']),\n\t\tonToggleStageVisibility(code) {\n\t\t\tif (this.ui.stageVisibilityCodes[code])\n\t\t\t{\n\t\t\t\tdelete this.ui.stageVisibilityCodes[code];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.ui.stageVisibilityCodes[code] = true;\n\t\t\t}\n\t\t},\n\t\tisExpanded(code) {\n\t\t\treturn this.ui.stageVisibilityCodes[code] || false;\n\t\t},\n\t\tisRowStageRow(perm) {\n\t\t\treturn Boolean(perm.stageField);\n\t\t},\n\t\tgetAttributeValue(identifier: PermissionEntityIdentifier) {\n\t\t\treturn this.getAssignedAttribute(identifier) || '';\n\t\t},\n\t\tonAttributeValueChanged(payload) {\n\t\t\tthis.assignPermissionAttribute({ identifier: payload.identifier, value: payload.value });\n\t\t},\n\t\tgetIdentifier(permissionCode, stageField, stageCode): PermissionEntityIdentifier {\n\t\t\treturn {\n\t\t\t\tpermissionCode,\n\t\t\t\tentityCode: this.entityCode,\n\t\t\t\tstageField,\n\t\t\t\tstageCode,\n\t\t\t};\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-crm-perms-edit-entity-permissions\">\n\t\t\t<div\n\t\t\t\tv-for=\"perm of displayList\"\n\t\t\t\tclass=\"bx-crm-perms-edit-entity-permissions-item\"\n\t\t\t\t:class=\"{'stage-item': isRowStageRow(perm)}\"\n\t\t\t>\n\t\t\t\t<div class=\"bx-crm-perms-edit-entity-permissions-item__column\">\n\t\t\t\t\t<ExpandControl \n\t\t\t\t\t\tv-if=\"isShowExpandControl(perm)\"\n\t\t\t\t\t\t:is-expanded=\"isExpanded(perm.code)\"\n\t\t\t\t\t\t@toggle=\"onToggleStageVisibility(perm.code)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<span :class=\"{'small-label': isRowStageRow(perm)}\">\n\t\t\t\t\t\t{{ getName(perm) }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-crm-perms-edit-entity-permissions-item__column\">\n\t\t\t\t\t<PermissionControl\n\t\t\t\t\t\t:value=\"getAttributeValue(getIdentifier(perm.code, perm.stageField, perm.stageCode))\"\n\t\t\t\t\t\t:values-map=\"perm.values\"\n\t\t\t\t\t\t:permission-identifier=\"getIdentifier(perm.code, perm.stageField, perm.stageCode)\"\n\t\t\t\t\t\t@value-changed=\"onAttributeValueChanged\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import 'ui.design-tokens';\nimport './../css/slider.css';\nimport { Loc } from 'main.core';\nimport { Button } from 'ui.buttons';\nimport { SidePanel } from 'ui.sidepanel';\nimport { Layout } from 'ui.sidepanel.layout';\nimport { BitrixVue } from 'ui.vue3';\nimport { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { SliderPermissions } from './slider-permissions';\n\nexport class SliderManager\n{\n\t#url;\n\n\t#containerId;\n\n\t#sliderApplication;\n\n\tconstructor(entityCode, storage)\n\t{\n\t\tconst rnd = Math.round(Math.random() * 10000);\n\n\t\tthis.#url = `bx-crm-perms-role-edit-slider__${Date.now()}`;\n\t\tthis.#containerId = `bx-crm-perms-role-edit-slider-container__${Date.now()}__${rnd}`;\n\t\tthis.#sliderApplication = this.#createApplication(entityCode);\n\t\tthis.#sliderApplication.use(storage);\n\t}\n\n\tasync open() {\n\t\tSidePanel.Instance.open(this.#url, await this.#getOptions());\n\t}\n\n\tclose() {}\n\n\tasync #getOptions() {\n\t\tconst buttons = [\n\t\t\tnew Button({\n\t\t\t\ttext: Loc.getMessage('UI_BUTTONS_CLOSE_BTN_TEXT'),\n\t\t\t\tsize: Button.Size.MEDIUM,\n\t\t\t\tcolor: Button.Color.LIGHT_BORDER,\n\t\t\t\tdependOnTheme: false,\n\t\t\t\tonclick: () => {\n\t\t\t\t\tthis.#closeApplication();\n\t\t\t\t\tSidePanel.Instance.close();\n\t\t\t\t},\n\t\t\t}),\n\t\t];\n\n\t\tconst layout = await Layout.createLayout({\n\t\t\ttitle: '',\n\t\t\tcontent: () => `<div id=\"${this.#containerId}\"></div>`,\n\t\t\tbuttons: () => buttons,\n\t\t\tdesign: { section: false },\n\t\t});\n\n\t\treturn {\n\t\t\tcontentClassName: '',\n\t\t\tallowChangeTitle: false,\n\t\t\twidth: 800,\n\t\t\tcacheable: false,\n\t\t\tallowChangeHistory: false,\n\t\t\tlabel: '',\n\t\t\tcontentCallback: (slider) => {\n\t\t\t\treturn layout.render();\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\tonOpenComplete: () => {\n\t\t\t\t\tconst rootNode = document.getElementById(this.#containerId);\n\t\t\t\t\tthis.#sliderApplication.mount(rootNode);\n\t\t\t\t},\n\t\t\t\tonClose: () => {\n\t\t\t\t\tthis.#closeApplication();\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\t#closeApplication() {\n\t\tif (this.#sliderApplication)\n\t\t{\n\t\t\tthis.#sliderApplication.unmount();\n\t\t\tthis.#sliderApplication = null;\n\t\t}\n\t}\n\n\t#createApplication(entityCode) {\n\t\treturn BitrixVue.createApp({\n\t\t\tname: 'CrmConfigPermsRoleEditSlider',\n\t\t\tcomponents: {\n\t\t\t\tSliderPermissions,\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tentityCode: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\ttype: String,\n\t\t\t\t},\n\t\t\t},\n\t\t\tcomputed: {\n\t\t\t\t...mapGetters(['permissionEntities', 'getMainPermissionEntityByCode']),\n\t\t\t\tentity() {\n\t\t\t\t\treturn this.getMainPermissionEntityByCode(this.entityCode);\n\t\t\t\t},\n\t\t\t\tentityName() {\n\t\t\t\t\treturn this?.entity?.name || '';\n\t\t\t\t},\n\t\t\t},\n\t\t\tmethods: {\n\t\t\t\t...mapMutations(['assignPermissionAttribute']),\n\t\t\t},\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"bx-crm-perms-edit-slider\">\n\t\t\t\t\t<h1>{{ entityName }}</h1>\n\t\t\t\t\t<SliderPermissions\n\t\t\t\t\t\t:entity-code=\"entityCode\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t}, { entityCode });\n\t}\n\n\tstatic create(entity, storage) {\n\t\treturn new SliderManager(entity, storage);\n\t}\n}\n","import { Loc } from 'main.core';\nimport { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { SliderManager } from '../slider/slider-manager';\nimport { MAX_SORT_ORDER_ON_THE_DESK, PermissionEntityIdentifier, Permissions } from '../store';\nimport { PermissionControl } from './permissioncontrol';\nimport { ExpandControl } from './expandcontrol';\n\nexport default {\n\tname: 'Row',\n\tprops: {\n\t\tentity: Object,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlabels: {\n\t\t\t\tmoreName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_MORE'),\n\t\t\t},\n\t\t\tmaxOrder: 0,\n\t\t};\n\t},\n\tcomponents: {\n\t\tPermissionControl,\n\t\tExpandControl,\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'availablePermissions',\n\t\t\t'isStageEntitiesVisible',\n\t\t\t'getAssignedAttribute',\n\t\t\t'permissionsOnMainView',\n\t\t\t'groupEntityPermission',\n\t\t\t'getAvailablePermissionsOrders',\n\t\t]),\n\t\tisExpandedStages() {\n\t\t\treturn this.isStageEntitiesVisible(this.entity);\n\t\t},\n\t\tisShowMore(): boolean {\n\t\t\treturn this.maxOrder > MAX_SORT_ORDER_ON_THE_DESK;\n\t\t},\n\t},\n\tmounted()\n\t{\n\t\tlet maxOrder = 0;\n\t\tfor (const permCode of Object.keys(this.entity.permissions))\n\t\t{\n\t\t\tmaxOrder = Math.max(maxOrder, this.getAvailablePermissionsOrders[permCode] || 0);\n\t\t}\n\n\t\tthis.maxOrder = maxOrder;\n\t},\n\tmethods: {\n\t\t...mapMutations(['toggleStagesVisibility', 'assignPermissionAttribute', 'setEditMode']),\n\t\texpandChanged() {\n\t\t\tthis.toggleStagesVisibility(this.entity);\n\t\t},\n\t\topenSlider() {\n\n\t\t\tSliderManager.create(this.entity.entityCode, this.$store).open();\n\t\t},\n\t\tattributeValue(permissionCode) {\n\t\t\tconst identifier = this.getIdentifier(permissionCode);\n\n\t\t\treturn this.getAssignedAttribute(identifier) || '';\n\t\t},\n\t\tonAttributeValueChanged(payload) {\n\t\t\tthis.assignPermissionAttribute({ identifier: payload.identifier, value: payload.value });\n\t\t},\n\t\tgetIdentifier(permissionCode): PermissionEntityIdentifier {\n\t\t\treturn {\n\t\t\t\tpermissionCode,\n\t\t\t\tentityCode: this.entity.entityCode,\n\t\t\t\tstageField: this.entity.stageField,\n\t\t\t\tstageCode: this.entity.stageCode,\n\t\t\t};\n\t\t},\n\t\tisShowControl(perm: Permissions): boolean {\n\t\t\tif (!this.entity.permissions[perm.code])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.entity.stageField && perm.canAssignPermissionToStages === false)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<tr \n\t\t\tclass=\"bx-crm-perms-desk-row bx-crm-perms-edit-desk__body\"\n\t\t>\n\t\t\t<td class=\"bx-crm-perms-desk-row-item\">\n\t\t\t\t<ExpandControl \n\t\t\t\t\tv-if=\"entity.hasStages\" \n\t\t\t\t\t:is-expanded=\"isExpandedStages\" \n\t\t\t\t\t@toggle=\"expandChanged\" \n\t\t\t\t/> \n\t\t\t\t<span :class=\"{'stage-row': !!entity.stageField}\">{{ entity.name }}</span>\n\t\t\t</td>\n\t\t\t<td\n\t\t\t\tv-for=\"perm of permissionsOnMainView\"\n\t\t\t\tclass=\"bx-crm-perms-desk-row-item\"\n\t\t\t\t:data-permission-code=\"perm.code\"\n\t\t\t\t:data-permission-entity=\"entity.entityCode\"\n\t\t\t\t:data-permission-attr-field=\"entity.stageField\"\n\t\t\t\t:data-permission-attr-value=\"entity.stageCode\"\n\t\t\t>\n\t\t\t\t<PermissionControl\n\t\t\t\t\tv-if=\"isShowControl(perm)\"\n\t\t\t\t\t:value=\"attributeValue(perm.code)\"\n\t\t\t\t\t:values-map=\"entity.permissions[perm.code]\"\n\t\t\t\t\t:permission-identifier=\"getIdentifier(perm.code)\"\n\t\t\t\t\t@value-changed=\"onAttributeValueChanged\"\n\t\t\t\t></PermissionControl>\n\t\t\t</td>\n\t\t\t<td \n\t\t\t\tv-if=\"!entity.stageField\"\n\t\t\t\tclass=\"bx-crm-perms-desk-row-item\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tv-if=\"isShowMore\"\n\t\t\t\t\tclass=\"bx-crm-perms-edit-permission_control-text bx-crm-perms-desk-row-more\"\n\t\t\t\t\t@click=\"openSlider\"\n\t\t\t\t>\n\t\t\t\t\t{{ labels.moreName }}\n\t\t\t\t</span>\n\t\t\t</td>\n\t\t</tr>\n\t`,\n};\n","import 'ui.design-tokens';\nimport '../css/desk.css';\nimport { mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport Row from './row';\nimport { PermissionControl } from './permissioncontrol';\nimport { Loc } from 'main.core';\nimport { MAX_SORT_ORDER_ON_THE_DESK } from './../store';\n\nexport const Desk = {\n\tname: 'Desk',\n\tcomponents: {\n\t\tPermissionControl,\n\t\tRow,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlabels: {\n\t\t\t\tallowToChangeConfigName: Loc.getMessage('CRM_PERMS_EDIT_ALLOW_TO_CHANGE_CONFIG'),\n\t\t\t\tsaveName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_SAVE'),\n\t\t\t\tapplyName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_APPLY'),\n\t\t\t\troleName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ROLE'),\n\t\t\t\tnotAllowedByTariff: Loc.getMessage('CRM_PERMS_EDIT_RESTRICTION'),\n\t\t\t\troleDelete: Loc.getMessage('CRM_PERMS_EDIT_ROLE_DELETE'),\n\t\t\t\tadditionalName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ADDITIONAL'),\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'permissionEntitiesExpanded',\n\t\t\t'permissionsOnMainView',\n\t\t\t'getAssignedAttribute',\n\t\t]),\n\t\tconfigWrite: {\n\t\t\tget() {\n\t\t\t\treturn this.getAssignedAttribute({ permissionCode: 'WRITE', entityCode: 'CONFIG' }) === 'X';\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.assignPermissionAttribute({\n\t\t\t\t\tvalue: value ? 'X' : '',\n\t\t\t\t\tidentifier: { permissionCode: 'WRITE', entityCode: 'CONFIG' },\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\tcolumnsCount() {\n\t\t\treturn MAX_SORT_ORDER_ON_THE_DESK + 2;\n\t\t},\n\n\t},\n\tmethods: {\n\t\t...mapMutations(['assignPermissionAttribute']),\n\t\tgetStages(entity) {\n\t\t\treturn entity.fields.STAGE_ID || {};\n\t\t},\n\t},\n\tmounted() {},\n\ttemplate: `\n\t\t<table class=\"bx-crm-perms-edit-desk\">\n\t\t\t<tr class=\"bx-crm-perms-desk-row bx-crm-perms-edit-desk__head\">\n\t\t\t\t<th class=\"bx-crm-perms-desk-row-item\"></th>\n\t\t\t\t<th\n\t\t\t\t\tv-for=\"perm in permissionsOnMainView\"\n\t\t\t\t\t:key=\"perm.code\"\n\t\t\t\t\tclass=\"bx-crm-perms-desk-row-item\"\n\t\t\t\t>\n\t\t\t\t\t{{ perm.name }}\n\t\t\t\t</th>\n\t\t\t\t<th class=\"bx-crm-perms-desk-row-item\">\n\t\t\t\t\t{{ labels.additionalName }}\n\t\t\t\t</th>\n\t\t\t</tr>\n\n\t\t\t<Row v-for=\"permissionEntity of permissionEntitiesExpanded\" :entity=\"permissionEntity\" />\n\n\t\t\t<tr class=\"bx-crm-perms-desk-row bx-crm-perms-edit-desk__footer\">\n\t\t\t\t<td class=\"bx-crm-perms-desk-row-item\" :colspan=\"columnsCount\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input name=\"WRITE\" type=\"checkbox\" v-model=\"configWrite\">\n\t\t\t\t\t\t{{ labels.allowToChangeConfigName }}\n\t\t\t\t\t</label>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t`,\n};\n","import '../css/loader.css';\nimport { Loader as BXLoader } from 'ui.loader';\n\nexport const Loader = {\n\tname: 'Loader',\n\tmounted() {\n\t\tconst loader = new BXLoader({\n\t\t\ttarget: this.$refs.loaderRef,\n\t\t\ttype: 'BULLET',\n\t\t\tsize: 'XL',\n\t\t});\n\t\tloader.render();\n\t\tloader.show();\n\t},\n\ttemplate: `\n\t\t<div>\n\t\t\t<div class=\"bx-crm-perms-edit-loader\"></div>\n\t\t\t<div class=\"bx-crm-perms-edit-loader-progress\" ref=\"loaderRef\"></div>\n\t\t</div>\n\t`,\n};\n","import './../css/main.css';\nimport { Loc } from 'main.core';\nimport { mapActions, mapGetters, mapMutations } from 'ui.vue3.vuex';\nimport { Desk } from './desk';\nimport { Loader } from './loader';\n\nexport const Main = {\n\tname: 'Main',\n\tcomponents: {\n\t\tDesk,\n\t\tLoader,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tlabels: {\n\t\t\t\tsaveName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_SAVE'),\n\t\t\t\tapplyName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_APPLY'),\n\t\t\t\troleName: Loc.getMessage('CRM_PERMS_EDIT_ENTITIES_ROLE'),\n\t\t\t\tnotAllowedByTariff: Loc.getMessage('CRM_PERMS_EDIT_RESTRICTION'),\n\t\t\t\troleDelete: Loc.getMessage('CRM_PERMS_EDIT_ROLE_DELETE'),\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'hasTariffPermission',\n\t\t\t'getRoleName',\n\t\t\t'getRestrictionScript',\n\t\t\t'getLastErrorMessage',\n\t\t\t'getRoleId',\n\t\t\t'isSaveInProgress',\n\t\t]),\n\t\troleName: {\n\t\t\tget() {\n\t\t\t\treturn this.getRoleName;\n\t\t\t},\n\t\t\tset(val) {\n\t\t\t\tthis.setRoleName(val);\n\t\t\t},\n\t\t},\n\t\tisShowDeleteBtn(): boolean {\n\t\t\treturn this.getRoleId > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\t...mapMutations(['setRoleName']),\n\t\t...mapActions(['saveRolePermission', 'deleteRole']),\n\t\tasync onPressSave() {\n\t\t\tawait this.performSave('save');\n\t\t},\n\t\tasync onPressApply() {\n\t\t\tawait this.performSave('apply');\n\t\t},\n\t\tasync onPressDeleteRole() {\n\t\t\tif (!this.hasTariffPermission)\n\t\t\t{\n\t\t\t\tthis.executeTariffRestrictionScript();\n\t\t\t}\n\n\t\t\tawait this.deleteRole();\n\t\t},\n\t\tasync performSave(action: string) {\n\t\t\tif (!this.hasTariffPermission)\n\t\t\t{\n\t\t\t\tthis.executeTariffRestrictionScript();\n\t\t\t}\n\n\t\t\tawait this.saveRolePermission(action);\n\t\t},\n\t\texecuteTariffRestrictionScript()\n\t\t{\n\t\t\tconst script = this.getRestrictionScript;\n\n\t\t\tif (script)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-eval\n\t\t\t\teval(script);\n\t\t\t}\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-crm-perms-main\">\n\t\t\t<Loader v-if=\"isSaveInProgress\"/>\n\t\t\t<p class=\"bx-crm-perms-desk-error\" v-if=\"getLastErrorMessage\">\n\t\t\t\t{{ getLastErrorMessage }}\n\t\t\t</p>\n\t\n\t\t\t<label>\n\t\t\t\t{{ labels.roleName }}:\n\t\t\t\t<input name=\"NAME\" v-model=\"roleName\" class=\"bx-crm-perms-desk-input-role_name\">\n\t\t\t</label>\n\t\n\t\t\t<Desk/>\n\n\t\t\t<div class=\"bx-crm-perms-desk-footer\">\n\t\t\t\t<div class=\"bx-crm-perms-desk-footer-colleft\">\n\t\t\t\t\t<button @click=\"onPressSave\" class=\"bx-crm-perms-desk-btn\" name=\"save\">{{ labels.saveName }}</button>\n\t\t\t\t\t<button @click=\"onPressApply\" class=\"bx-crm-perms-desk-btn\" name=\"apply\">{{ labels.applyName }}</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-crm-perms-desk-footer-colright\">\n\t\t\t\t\t<span \n\t\t\t\t\t\tv-if=\"isShowDeleteBtn\" \n\t\t\t\t\t\tclass=\"bx-crm-perms-desk-delete\"\n\t\t\t\t\t\t@click=\"onPressDeleteRole\"\n\t\t\t\t\t>{{ labels.roleDelete }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tv-if=\"!hasTariffPermission\"\n\t\t\t\tclass=\"ui-alert ui-alert-warning\"\n\t\t\t\tstyle=\"margin: 15px 0 0 0;\"\n\t\t\t>\n\t\t\t\t<span class=\"ui-alert-message\" v-html=\"labels.notAllowedByTariff\"></span>\n\t\t\t</div>\n\n\t\t</div>\n\t`,\n};\n","import { BitrixVue } from 'ui.vue3';\nimport { createStore } from 'ui.vue3.vuex';\nimport { Main } from './components/main';\nimport store from './store';\n\ninterface EditOptions {\n\tcontainerId: string;\n}\n\nexport interface AppData {\n\trole: {\n\t\tid: number;\n\t\tname: string;\n\t},\n\tavailablePermissions: Object;\n\tpermissionEntities: Object;\n\troleAssignedPermissions: Object;\n\trestriction: {\n\t\thasPermission: boolean;\n\t\trestrictionScript: ?string;\n\t}\n}\n\nexport class EditApp\n{\n\t#options: EditOptions;\n\n\t#application = null;\n\n\tconstructor(options: EditOptions)\n\t{\n\t\tthis.#options = options;\n\t}\n\n\tstart(data: AppData) {\n\t\tconst storage = createStore(store());\n\t\tthis.#application = BitrixVue.createApp({\n\t\t\tname: 'CrmConfigPermsRoleEdit',\n\t\t\tcomponents: { Main },\n\t\t\ttemplate: `\n\t\t\t\t<Main/>\n\t\t\t`,\n\t\t});\n\n\t\tstorage.commit('setInitData', data);\n\t\tthis.#application.use(storage);\n\n\t\tconst rootNode = document.getElementById(this.#options.containerId);\n\t\tthis.#application.mount(rootNode);\n\t}\n}\n"],"names":["ExpandControl","name","props","entity","Object","isExpanded","Boolean","emits","methods","toggleState","this","$emit","template","PermissionControl","value","type","String","required","valuesMap","permissionIdentifier","data","label","inherit","Loc","getMessage","isEditMode","computed","mapGetters","currentPermissionName","permissionCode","isReadOnlyMode","isStageControl","model","getParentName","isInherited","get","set","identifier","stageField","parentChose","getAssignedAttribute","entityCode","toEditMode","e","stopPropagation","Event","bind","window","windowClickListener","event","target","$refs","componentRef","composedPath","includes","unbind","entityHash","stageCode","hashIdentifier","hash","btoa","permissionEntities","state","desk","permissionEntitiesExpanded","filter","ui","expandedStageEntities","getMainPermissionEntityByCode","find","item","getEntitiesGroupedByPermission","getters","_step","rootEntity","entities","permissions","permCode","hasOwn","values","permissionConfig","availablePermissions","perm","code","sortOrder","MAX_SORT_ORDER_ON_THE_DESK","push","isEntityStageSupport","hasStages","isPermissionStageSupport","canAssignPermissionToStages","stateName","parseInt","keys","_iterator","sort","a","b","roleAssignedPermissions","_state$roleAssignedPe","_state$roleAssignedPe2","_state$roleAssignedPe3","_state$roleAssignedPe4","Type","isUndefined","_state$roleAssignedPe5","_state$roleAssignedPe6","_state$roleAssignedPe7","isStageEntitiesVisible","permissionsOnMainView","hasTariffPermission","restriction","hasPermission","getRestrictionScript","restrictionScript","getAvailablePermissionsOrders","availablePermissionsOrders","getSaveData","toRemove","toChange","touched","touchedAttributes","id","role","getRoleName","getRoleId","isSaveInProgress","getLastErrorMessage","lastErrorMessage","setSaveInProgress","setInitData","map","originalAttributes","structuredClone","assignPermissionAttribute","payload","setAssignedAttributes","commit","setAttributeTouched","original","_state$touched$origin","_state$touched$origin2","_state$touched$origin3","_state$touched$origin4","_state$touched$origin5","_state$touched$origin6","_state$touched$origin7","resetTouchedAttributes","JSON","parse","stringify","toggleStagesVisibility","setRoleName","newName","setLastErrorMessage","message","obj","clearEmptyNodes","node","nodeName","parent","isObject","entries","childName","childNode","isObjectEmpty","length","saveRolePermission","action","_context","BX","ajax","runComponentAction","mode","json","response","redirectUrl","_response$data","roleUrl","_response$data2","location","href","errMessage","_err$data","deleteRole","_context2","roleId","_response$data3","_err$data2","initState","mutations","actions","SliderPermissions","components","stageVisibilityCodes","displayList","_this","isShowExpandControl","getName","mounted","mapMutations","onToggleStageVisibility","isRowStageRow","getAttributeValue","onAttributeValueChanged","getIdentifier","SliderManager","storage","babelHelpers","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","rnd","Math","round","random","Date","now","use","key","SidePanel","Instance","open","_getOptions3","buttons","Button","text","size","Size","MEDIUM","color","Color","LIGHT_BORDER","dependOnTheme","onclick","_classPrivateMethodGet","close","Layout","createLayout","title","content","design","section","layout","contentClassName","allowChangeTitle","width","cacheable","allowChangeHistory","contentCallback","slider","render","events","onOpenComplete","rootNode","document","getElementById","mount","onClose","unmount","BitrixVue","createApp","entityName","_this$entity","labels","moreName","maxOrder","isExpandedStages","isShowMore","max","expandChanged","openSlider","create","$store","attributeValue","isShowControl","Desk","Row","allowToChangeConfigName","saveName","applyName","roleName","notAllowedByTariff","roleDelete","additionalName","configWrite","columnsCount","getStages","fields","STAGE_ID","Loader","loader","BXLoader","loaderRef","show","Main","val","isShowDeleteBtn","mapActions","onPressSave","performSave","onPressApply","_this2","onPressDeleteRole","_this3","executeTariffRestrictionScript","_context3","_this4","_context4","script","eval","EditApp","options","createStore","store","containerId"],"mappings":"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"}