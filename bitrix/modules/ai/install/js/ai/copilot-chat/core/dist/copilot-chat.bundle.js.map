{"version":3,"file":"copilot-chat.bundle.js","sources":["../src/copilot-chat-api.js","../src/copilot-chat.js"],"sourcesContent":["import { EventEmitter } from 'main.core.events';\nimport { ajax } from 'main.core';\nimport { PULL, PullClient } from 'pull.client';\n\nexport type CopilotChatApiOptions = {\n\tscenarioCode: string;\n\tentityType?: string;\n\tentityId?: string;\n\tchatId?: number;\n\tinitChatExtraOptions?: Object;\n};\n\nexport class CopilotChatApi extends EventEmitter\n{\n\t#scenarioCode: string;\n\t#entityType: string;\n\t#entityId: string;\n\t#chatId: ?number;\n\t#initChatExtraOptions: Object;\n\n\tconstructor(options: CopilotChatApiOptions)\n\t{\n\t\tsuper(options);\n\n\t\tthis.setEventNamespace('AI.CopilotChatAPI');\n\t\tthis.#scenarioCode = options.scenarioCode;\n\t\tthis.#entityType = options.entityType;\n\t\tthis.#entityId = options.entityId;\n\t\tthis.#chatId = options.chatId;\n\t\tthis.#initChatExtraOptions = options.initChatExtraOptions ?? {};\n\n\t\tthis.#initPull();\n\t}\n\n\tasync #initPull(): void\n\t{\n\t\ttry\n\t\t{\n\t\t\tawait PULL.start();\n\n\t\t\tPULL.subscribe({\n\t\t\t\ttype: PullClient.SubscriptionType.Server,\n\t\t\t\tmoduleId: 'ai',\n\t\t\t\tcallback: (data) => {\n\t\t\t\t\tif (data.command === CopilotChatApiPullEvents.NEW_MESSAGE)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#handleNewMessageEvent(data.params);\n\t\t\t\t\t}\n\t\t\t\t\telse if (data.command === CopilotChatApiPullEvents.INPUT_STATUS_CHANGED)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#handleInputStatusChangedEvent(data.params);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\n\t#handleNewMessageEvent(data: CopilotChatPullEventNewMessageData): void\n\t{\n\t\tif (data.message.chatId !== this.#chatId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.emit(CopilotChatApiEvents.NEW_MESSAGE, data);\n\t}\n\n\t#handleInputStatusChangedEvent(data: Object): void\n\t{\n\t\tthis.emit(CopilotChatApiEvents.INPUT_STATUS_CHANGED, data);\n\t}\n\n\tasync initChatData(): Promise<InitChatDataResponseData>\n\t{\n\t\tconst data = {\n\t\t\tscenarioCode: this.#scenarioCode,\n\t\t\tentityType: this.#entityType,\n\t\t\tentityId: this.#entityId,\n\t\t\tparameters: this.#initChatExtraOptions,\n\t\t};\n\n\t\tif (this.#chatId)\n\t\t{\n\t\t\tdata.chatId = this.#chatId;\n\t\t}\n\n\t\tconst result = await ajax.runAction('ai.chat.init', {\n\t\t\tdata,\n\t\t});\n\n\t\tdata.chatId = result.data.chat.id;\n\t\tthis.emit(CopilotChatApiEvents.INIT_CHAT, data);\n\n\t\tthis.#chatId = result.data.chat.id;\n\n\t\treturn result.data;\n\t}\n\n\tasync sendMessage(messageData: ChatSendMessageData): Promise<ChatSendMessageResponseData>\n\t{\n\t\tconst data = {\n\t\t\tmessageData,\n\t\t\tscenarioCode: this.#scenarioCode,\n\t\t\tchatId: this.#chatId,\n\t\t};\n\n\t\tconst result = await ajax.runAction('ai.chat.sendMessage', {\n\t\t\tdata,\n\t\t});\n\n\t\treturn result.data;\n\t}\n\n\tasync loadMessages(offsetMessageId: number): Promise<ChatDataMessage[]>\n\t{\n\t\tconst result = await ajax.runAction('ai.chat.getMessages', {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\toffsetMessageId,\n\t\t\t\tlimit: 20,\n\t\t\t},\n\t\t});\n\n\t\treturn result.data.messages ?? [];\n\t}\n}\n\nexport type InitChatDataResponseData = {\n\tchat: {\n\t\tid: number;\n\t\tinputStatus: \"Lock\" | \"Unlock\"\n\t};\n\tmessages: ChatDataMessage[];\n\tuserPhoto: ?string;\n}\n\nexport type ChatSendMessageData = {\n\tcontent: string;\n\tmessageId?: number;\n\tbuttonId?: number;\n};\n\nexport type ChatSendMessageResponseData = {\n\tmessage: ChatDataMessage,\n}\n\nexport type ChatDataMessage = {\n\tauthorId: number;\n\tchatId: number;\n\tcontent: string;\n\tdateCreate: string;\n\tid: 2;\n\tisSystem: false;\n\tisViewed: false;\n\ttype: string;\n\tparams: Object;\n}\n\nexport const CopilotChatApiEvents = {\n\tINIT_CHAT: 'initChat',\n\tNEW_MESSAGE: 'newMessage',\n\tINPUT_STATUS_CHANGED: 'InputStatusChangedEvent',\n};\n\nconst CopilotChatApiPullEvents = Object.freeze({\n\tNEW_MESSAGE: 'newMessage',\n\tINPUT_STATUS_CHANGED: 'InputStatusChanged',\n});\n\ntype CopilotChatPullEventNewMessageData = {\n\tchat: {\n\t\tinputStatus: \"Unlock\";\n\t};\n\tmessage: {\n\t\tauthorId: number;\n\t\tchatId: number;\n\t\tcontent: number;\n\t\tdateCreate: string;\n\t\tid: 46;\n\t\tisSystem: false;\n\t\tisViewed: true;\n\t\tparams: [];\n\t\ttype: \"Default\";\n\t}\n};\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport {\n\tCopilotChat as CopilotChatComponent,\n\tCopilotChatEvents as CopilotChatWidgetEvents,\n\tCopilotChatMessageStatus,\n} from 'ai.copilot-chat.ui';\nimport type { CopilotChatOptions, CopilotChatMessage } from 'ai.copilot-chat.ui';\nimport { CopilotChatApi, CopilotChatApiEvents } from './copilot-chat-api';\n\ntype CoreCopilotChatOptions = {\n\tscenarioCode: string;\n\tentityType: string;\n\tentityId: string;\n\tchatId?: ?number;\n\tinitChatExtraOptions: Object;\n\tchatOptions: CopilotChatOptions;\n};\n\nexport class CopilotChat extends EventEmitter\n{\n\t#chatInstance: CopilotChatComponent;\n\t#scenarioCode: string;\n\t#entityType: string;\n\t#entityId: string;\n\t#chatOptions: CopilotChatOptions;\n\t#chatAPI: CopilotChatApi;\n\t#isHistoryFetched: boolean = false;\n\t#isLoadAllMessages: boolean = false;\n\n\tconstructor(options: CoreCopilotChatOptions)\n\t{\n\t\tsuper(options);\n\t\tthis.setEventNamespace('AI.CopilotChat');\n\n\t\tthis.#validateOptions(options);\n\n\t\tthis.#scenarioCode = options.scenarioCode;\n\t\tthis.#entityType = options.entityType;\n\t\tthis.#entityId = options.entityId;\n\t\tthis.#chatOptions = options.chatOptions;\n\n\t\tthis.#chatAPI = new CopilotChatApi({\n\t\t\tchatId: options.chatId || null,\n\t\t\tscenarioCode: this.#scenarioCode,\n\t\t\tentityType: this.#entityType,\n\t\t\tentityId: this.#entityId,\n\t\t\tinitChatExtraOptions: options.initChatExtraOptions ?? {},\n\t\t});\n\n\t\tthis.#initChatInstance();\n\t}\n\n\tshow(): void\n\t{\n\t\tthis.#chatInstance.show();\n\n\t\tif (this.#isHistoryFetched === false)\n\t\t{\n\t\t\tthis.#initChat();\n\t\t}\n\t}\n\n\thide(): void\n\t{\n\t\tthis.#chatInstance?.hide();\n\t}\n\n\tisShown(): boolean\n\t{\n\t\treturn Boolean(this.#chatInstance?.isShown());\n\t}\n\n\t#initChatInstance(): CopilotChatComponent\n\t{\n\t\tthis.#chatInstance = new CopilotChatComponent({\n\t\t\tshowCopilotWarningMessage: true,\n\t\t\tuseChatStatus: true,\n\t\t\tscrollToTheEndAfterFirstShow: true,\n\t\t\t...this.#chatOptions,\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.ADD_USER_MESSAGE, async (event) => {\n\t\t\tconst message: CopilotChatMessage = event.getData().message;\n\n\t\t\tthis.#sendMessage(message);\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.RETRY_LOAD_HISTORY, async (event) => {\n\t\t\tthis.#initChat();\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.MESSAGES_SCROLL_TOP, async () => {\n\t\t\tif (this.#chatInstance.isOldMessagesLoading() || this.#isLoadAllMessages)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.#loadOldMessages();\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.RETRY_SEND_MESSAGE, async (event) => {\n\t\t\tconst message = this.#chatInstance.getMessageById(event.getData().messageId);\n\n\t\t\tthis.#sendMessage(message);\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.REMOVE_MESSAGE, (event) => {\n\t\t\tconst messageId = event.getData().messageId;\n\n\t\t\tthis.#chatInstance.removeMessage(messageId);\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.CLICK_ON_MESSAGE_BUTTON, async (event) => {\n\t\t\tconst messageId = event.getData().messageId;\n\t\t\tconst button = event.getData().button;\n\n\t\t\tthis.#chatInstance.addUserMessage({\n\t\t\t\tid: -parseInt(Math.random() * 1000, 10),\n\t\t\t\tcontent: button.text,\n\t\t\t\ttype: 'ButtonClicked',\n\t\t\t\tparams: {\n\t\t\t\t\tmessageId,\n\t\t\t\t\tbuttonId: button.id,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tthis.#chatAPI.subscribe(CopilotChatApiEvents.INIT_CHAT, (event) => {\n\t\t\tthis.emit(CopilotChatEvents.INIT_CHAT, event);\n\t\t});\n\n\t\tthis.#chatAPI.subscribe(CopilotChatApiEvents.NEW_MESSAGE, (event) => {\n\t\t\tthis.emit(CopilotChatEvents.NEW_MESSAGE, event);\n\t\t});\n\n\t\tthis.#chatAPI.subscribe(CopilotChatApiEvents.NEW_MESSAGE, (event) => {\n\t\t\tconst message = event.getData().message;\n\n\t\t\tif (this.#chatInstance.isMessageInList(message.id))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#addChatMessage(message);\n\t\t});\n\n\t\tthis.#chatAPI.subscribe(CopilotChatApiEvents.INPUT_STATUS_CHANGED, (event) => {\n\t\t\tconst { status } = event.getData();\n\n\t\t\tswitch (status)\n\t\t\t{\n\t\t\t\tcase 'Lock':\n\t\t\t\t{\n\t\t\t\t\tthis.#chatInstance.disableInput();\n\t\t\t\t\tthis.#chatInstance.setCopilotWritingStatus(false);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'Unlock':\n\t\t\t\t{\n\t\t\t\t\tthis.#chatInstance.enableInput();\n\t\t\t\t\tthis.#chatInstance.setCopilotWritingStatus(false);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'Writing':\n\t\t\t\t{\n\t\t\t\t\tthis.#chatInstance.setCopilotWritingStatus(true);\n\t\t\t\t\tthis.#chatInstance.disableInput();\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tconsole.warn('AI.CopilotChat.Core: Unknown input status', status);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.#chatInstance.subscribe(CopilotChatWidgetEvents.MESSAGES_SCROLL_TOP, () => {\n\t\t\t// todo make loading messages\n\t\t});\n\n\t\treturn this.#chatInstance;\n\t}\n\n\tasync #loadOldMessages(): void\n\t{\n\t\tthis.#chatInstance.startLoadingOldMessages();\n\t\tconst messages = await this.#chatAPI.loadMessages(this.#chatInstance.getFirstMessageId());\n\n\t\tif (messages.length === 0)\n\t\t{\n\t\t\tthis.#isLoadAllMessages = true;\n\t\t}\n\t\tthis.#chatInstance.finishLoadingOldMessages();\n\t\tthis.#chatInstance.unshiftMessages(messages);\n\t}\n\n\tasync #initChat(): void\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (this.#chatInstance.isShown())\n\t\t\t{\n\t\t\t\tthis.#chatInstance.hideLoadHistoryError();\n\t\t\t\tthis.#chatInstance.showLoader();\n\t\t\t}\n\n\t\t\tconst data = await this.#chatAPI.initChatData();\n\n\t\t\tthis.#chatInstance.setUserAvatar(data.userPhoto);\n\n\t\t\tconst messages = data.messages;\n\n\t\t\tmessages.forEach((message) => {\n\t\t\t\tthis.#addChatMessage(message, false);\n\t\t\t});\n\n\t\t\tthis.#isHistoryFetched = true;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tthis.#chatInstance.showLoadHistoryError();\n\t\t\tconsole.error(e);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.#chatInstance.hideLoader();\n\t\t}\n\t}\n\n\t#addChatMessage(message: any): void\n\t{\n\t\tconst chatMessage: CopilotChatMessage = {\n\t\t\tauthorId: message.authorId,\n\t\t\tcontent: message.content,\n\t\t\ttype: message.type,\n\t\t\tstatus: CopilotChatMessageStatus.DEPART,\n\t\t\tid: message.id,\n\t\t\tparams: message.params ?? [],\n\t\t};\n\n\t\tif (message.isSystem === true)\n\t\t{\n\t\t\tthis.#chatInstance.addSystemMessage(chatMessage, false);\n\t\t}\n\t\telse if (message.authorId === 0)\n\t\t{\n\t\t\tthis.#chatInstance.addBotMessage(chatMessage, false);\n\t\t}\n\t\telse if (message.authorId > 0)\n\t\t{\n\t\t\tthis.#chatInstance.addUserMessage(chatMessage, false);\n\t\t}\n\t}\n\n\tasync #sendMessage(message: any): void\n\t{\n\t\tthis.#chatInstance.setMessageStatusDepart(message.id);\n\n\t\tthis.#chatInstance.disableInput();\n\t\ttry\n\t\t{\n\t\t\tconst data = await this.#chatAPI.sendMessage({\n\t\t\t\tcontent: message.content,\n\t\t\t\tmessageId: message.params?.messageId ?? null,\n\t\t\t\tbuttonId: message.params?.buttonId ?? null,\n\t\t\t});\n\n\t\t\tthis.#chatInstance.setMessageId(message.id, data.message.id);\n\t\t\tthis.#chatInstance.setMessageDate(data.message.id, data.message.dateCreate);\n\t\t\tthis.#chatInstance.setMessageStatusDelivered(data.message.id);\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\tthis.#chatInstance.setMessageStatusError(message.id);\n\t\t\tthis.#chatInstance.enableInput();\n\t\t}\n\t}\n\n\t#validateOptions(options: CoreCopilotChatOptions = {}): void\n\t{\n\t\tconst scenarioCode = options.scenarioCode;\n\t\tconst entityType = options.entityType;\n\t\tconst entityId = options.entityId;\n\n\t\tif (Type.isStringFilled(scenarioCode) === false)\n\t\t{\n\t\t\tthrow new TypeError('scenarioCode option is required and must be the string');\n\t\t}\n\n\t\tif (Type.isStringFilled(entityType) === false)\n\t\t{\n\t\t\tthrow new TypeError('entityType option is required and must be the string');\n\t\t}\n\n\t\tif (Type.isStringFilled(entityId) === false)\n\t\t{\n\t\t\tthrow new TypeError('entityId option is required and must be the string');\n\t\t}\n\t}\n}\n\nexport const CopilotChatEvents = {\n\tINIT_CHAT: 'initChat',\n\tNEW_MESSAGE: 'newMessage',\n};\n"],"names":["CopilotChatApi","EventEmitter","constructor","options","setEventNamespace","scenarioCode","entityType","entityId","chatId","initChatExtraOptions","initChatData","data","parameters","result","ajax","runAction","chat","id","emit","CopilotChatApiEvents","INIT_CHAT","sendMessage","messageData","loadMessages","offsetMessageId","limit","messages","PULL","start","subscribe","type","PullClient","SubscriptionType","Server","moduleId","callback","command","CopilotChatApiPullEvents","NEW_MESSAGE","params","INPUT_STATUS_CHANGED","e","console","error","message","Object","freeze","CopilotChat","chatOptions","show","hide","isShown","Boolean","CopilotChatComponent","showCopilotWarningMessage","useChatStatus","scrollToTheEndAfterFirstShow","CopilotChatWidgetEvents","ADD_USER_MESSAGE","event","getData","RETRY_LOAD_HISTORY","MESSAGES_SCROLL_TOP","isOldMessagesLoading","RETRY_SEND_MESSAGE","getMessageById","messageId","REMOVE_MESSAGE","removeMessage","CLICK_ON_MESSAGE_BUTTON","button","addUserMessage","parseInt","Math","random","content","text","buttonId","CopilotChatEvents","isMessageInList","status","disableInput","setCopilotWritingStatus","enableInput","warn","startLoadingOldMessages","getFirstMessageId","length","finishLoadingOldMessages","unshiftMessages","hideLoadHistoryError","showLoader","setUserAvatar","userPhoto","forEach","showLoadHistoryError","hideLoader","chatMessage","authorId","CopilotChatMessageStatus","DEPART","isSystem","addSystemMessage","addBotMessage","setMessageStatusDepart","setMessageId","setMessageDate","dateCreate","setMessageStatusDelivered","setMessageStatusError","Type","isStringFilled","TypeError"],"mappings":"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"}