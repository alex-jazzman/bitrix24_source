this.BX=this.BX||{};this.BX.AI=this.BX.AI||{};this.BX.AI.CopilotChat=this.BX.AI.CopilotChat||{};(function(e,s,a,t,i){"use strict";var l=babelHelpers.classPrivateFieldLooseKey("scenarioCode");var r=babelHelpers.classPrivateFieldLooseKey("entityType");var o=babelHelpers.classPrivateFieldLooseKey("entityId");var b=babelHelpers.classPrivateFieldLooseKey("chatId");var d=babelHelpers.classPrivateFieldLooseKey("initChatExtraOptions");var c=babelHelpers.classPrivateFieldLooseKey("initPull");var n=babelHelpers.classPrivateFieldLooseKey("handleNewMessageEvent");var h=babelHelpers.classPrivateFieldLooseKey("handleInputStatusChangedEvent");class p extends a.EventEmitter{constructor(e){var s;super(e);Object.defineProperty(this,h,{value:u});Object.defineProperty(this,n,{value:P});Object.defineProperty(this,c,{value:v});Object.defineProperty(this,l,{writable:true,value:void 0});Object.defineProperty(this,r,{writable:true,value:void 0});Object.defineProperty(this,o,{writable:true,value:void 0});Object.defineProperty(this,b,{writable:true,value:void 0});Object.defineProperty(this,d,{writable:true,value:void 0});this.setEventNamespace("AI.CopilotChatAPI");babelHelpers.classPrivateFieldLooseBase(this,l)[l]=e.scenarioCode;babelHelpers.classPrivateFieldLooseBase(this,r)[r]=e.entityType;babelHelpers.classPrivateFieldLooseBase(this,o)[o]=e.entityId;babelHelpers.classPrivateFieldLooseBase(this,b)[b]=e.chatId;babelHelpers.classPrivateFieldLooseBase(this,d)[d]=(s=e.initChatExtraOptions)!=null?s:{};babelHelpers.classPrivateFieldLooseBase(this,c)[c]()}async initChatData(){const e={scenarioCode:babelHelpers.classPrivateFieldLooseBase(this,l)[l],entityType:babelHelpers.classPrivateFieldLooseBase(this,r)[r],entityId:babelHelpers.classPrivateFieldLooseBase(this,o)[o],parameters:babelHelpers.classPrivateFieldLooseBase(this,d)[d]};if(babelHelpers.classPrivateFieldLooseBase(this,b)[b]){e.chatId=babelHelpers.classPrivateFieldLooseBase(this,b)[b]}const s=await t.ajax.runAction("ai.chat.init",{data:e});e.chatId=s.data.chat.id;this.emit(L.INIT_CHAT,e);babelHelpers.classPrivateFieldLooseBase(this,b)[b]=s.data.chat.id;return s.data}async sendMessage(e){const s={messageData:e,scenarioCode:babelHelpers.classPrivateFieldLooseBase(this,l)[l],chatId:babelHelpers.classPrivateFieldLooseBase(this,b)[b]};const a=await t.ajax.runAction("ai.chat.sendMessage",{data:s});return a.data}async loadMessages(e){var s;const a=await t.ajax.runAction("ai.chat.getMessages",{data:{chatId:babelHelpers.classPrivateFieldLooseBase(this,b)[b],offsetMessageId:e,limit:20}});return(s=a.data.messages)!=null?s:[]}}async function v(){try{await i.PULL.start();i.PULL.subscribe({type:i.PullClient.SubscriptionType.Server,moduleId:"ai",callback:e=>{if(e.command===H.NEW_MESSAGE){babelHelpers.classPrivateFieldLooseBase(this,n)[n](e.params)}else if(e.command===H.INPUT_STATUS_CHANGED){babelHelpers.classPrivateFieldLooseBase(this,h)[h](e.params)}}})}catch(e){console.error(e)}}function P(e){if(e.message.chatId!==babelHelpers.classPrivateFieldLooseBase(this,b)[b]){return}this.emit(L.NEW_MESSAGE,e)}function u(e){this.emit(L.INPUT_STATUS_CHANGED,e)}const L={INIT_CHAT:"initChat",NEW_MESSAGE:"newMessage",INPUT_STATUS_CHANGED:"InputStatusChangedEvent"};const H=Object.freeze({NEW_MESSAGE:"newMessage",INPUT_STATUS_CHANGED:"InputStatusChanged"});var F=babelHelpers.classPrivateFieldLooseKey("chatInstance");var B=babelHelpers.classPrivateFieldLooseKey("scenarioCode");var y=babelHelpers.classPrivateFieldLooseKey("entityType");var C=babelHelpers.classPrivateFieldLooseKey("entityId");var g=babelHelpers.classPrivateFieldLooseKey("chatOptions");var E=babelHelpers.classPrivateFieldLooseKey("chatAPI");var I=babelHelpers.classPrivateFieldLooseKey("isHistoryFetched");var f=babelHelpers.classPrivateFieldLooseKey("isLoadAllMessages");var S=babelHelpers.classPrivateFieldLooseKey("initChatInstance");var A=babelHelpers.classPrivateFieldLooseKey("loadOldMessages");var M=babelHelpers.classPrivateFieldLooseKey("initChat");var T=babelHelpers.classPrivateFieldLooseKey("addChatMessage");var m=babelHelpers.classPrivateFieldLooseKey("sendMessage");var w=babelHelpers.classPrivateFieldLooseKey("validateOptions");class O extends a.EventEmitter{constructor(e){var s;super(e);Object.defineProperty(this,w,{value:U});Object.defineProperty(this,m,{value:K});Object.defineProperty(this,T,{value:D});Object.defineProperty(this,M,{value:j});Object.defineProperty(this,A,{value:N});Object.defineProperty(this,S,{value:_});Object.defineProperty(this,F,{writable:true,value:void 0});Object.defineProperty(this,B,{writable:true,value:void 0});Object.defineProperty(this,y,{writable:true,value:void 0});Object.defineProperty(this,C,{writable:true,value:void 0});Object.defineProperty(this,g,{writable:true,value:void 0});Object.defineProperty(this,E,{writable:true,value:void 0});Object.defineProperty(this,I,{writable:true,value:false});Object.defineProperty(this,f,{writable:true,value:false});this.setEventNamespace("AI.CopilotChat");babelHelpers.classPrivateFieldLooseBase(this,w)[w](e);babelHelpers.classPrivateFieldLooseBase(this,B)[B]=e.scenarioCode;babelHelpers.classPrivateFieldLooseBase(this,y)[y]=e.entityType;babelHelpers.classPrivateFieldLooseBase(this,C)[C]=e.entityId;babelHelpers.classPrivateFieldLooseBase(this,g)[g]=e.chatOptions;babelHelpers.classPrivateFieldLooseBase(this,E)[E]=new p({chatId:e.chatId||null,scenarioCode:babelHelpers.classPrivateFieldLooseBase(this,B)[B],entityType:babelHelpers.classPrivateFieldLooseBase(this,y)[y],entityId:babelHelpers.classPrivateFieldLooseBase(this,C)[C],initChatExtraOptions:(s=e.initChatExtraOptions)!=null?s:{}});babelHelpers.classPrivateFieldLooseBase(this,S)[S]()}show(){babelHelpers.classPrivateFieldLooseBase(this,F)[F].show();if(babelHelpers.classPrivateFieldLooseBase(this,I)[I]===false){babelHelpers.classPrivateFieldLooseBase(this,M)[M]()}}hide(){var e;(e=babelHelpers.classPrivateFieldLooseBase(this,F)[F])==null?void 0:e.hide()}isShown(){var e;return Boolean((e=babelHelpers.classPrivateFieldLooseBase(this,F)[F])==null?void 0:e.isShown())}}function _(){babelHelpers.classPrivateFieldLooseBase(this,F)[F]=new s.CopilotChat({showCopilotWarningMessage:true,useChatStatus:true,scrollToTheEndAfterFirstShow:true,...babelHelpers.classPrivateFieldLooseBase(this,g)[g]});babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.ADD_USER_MESSAGE,(async e=>{const s=e.getData().message;babelHelpers.classPrivateFieldLooseBase(this,m)[m](s)}));babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.RETRY_LOAD_HISTORY,(async e=>{babelHelpers.classPrivateFieldLooseBase(this,M)[M]()}));babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.MESSAGES_SCROLL_TOP,(async()=>{if(babelHelpers.classPrivateFieldLooseBase(this,F)[F].isOldMessagesLoading()||babelHelpers.classPrivateFieldLooseBase(this,f)[f]){return}await babelHelpers.classPrivateFieldLooseBase(this,A)[A]()}));babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.RETRY_SEND_MESSAGE,(async e=>{const s=babelHelpers.classPrivateFieldLooseBase(this,F)[F].getMessageById(e.getData().messageId);babelHelpers.classPrivateFieldLooseBase(this,m)[m](s)}));babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.REMOVE_MESSAGE,(e=>{const s=e.getData().messageId;babelHelpers.classPrivateFieldLooseBase(this,F)[F].removeMessage(s)}));babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.CLICK_ON_MESSAGE_BUTTON,(async e=>{const s=e.getData().messageId;const a=e.getData().button;babelHelpers.classPrivateFieldLooseBase(this,F)[F].addUserMessage({id:-parseInt(Math.random()*1e3,10),content:a.text,type:"ButtonClicked",params:{messageId:s,buttonId:a.id}})}));babelHelpers.classPrivateFieldLooseBase(this,E)[E].subscribe(L.INIT_CHAT,(e=>{this.emit(G.INIT_CHAT,e)}));babelHelpers.classPrivateFieldLooseBase(this,E)[E].subscribe(L.NEW_MESSAGE,(e=>{this.emit(G.NEW_MESSAGE,e)}));babelHelpers.classPrivateFieldLooseBase(this,E)[E].subscribe(L.NEW_MESSAGE,(e=>{const s=e.getData().message;if(babelHelpers.classPrivateFieldLooseBase(this,F)[F].isMessageInList(s.id)){return}babelHelpers.classPrivateFieldLooseBase(this,T)[T](s)}));babelHelpers.classPrivateFieldLooseBase(this,E)[E].subscribe(L.INPUT_STATUS_CHANGED,(e=>{const{status:s}=e.getData();switch(s){case"Lock":{babelHelpers.classPrivateFieldLooseBase(this,F)[F].disableInput();babelHelpers.classPrivateFieldLooseBase(this,F)[F].setCopilotWritingStatus(false);break}case"Unlock":{babelHelpers.classPrivateFieldLooseBase(this,F)[F].enableInput();babelHelpers.classPrivateFieldLooseBase(this,F)[F].setCopilotWritingStatus(false);break}case"Writing":{babelHelpers.classPrivateFieldLooseBase(this,F)[F].setCopilotWritingStatus(true);babelHelpers.classPrivateFieldLooseBase(this,F)[F].disableInput();break}default:{console.warn("AI.CopilotChat.Core: Unknown input status",s)}}}));babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribe(s.CopilotChatEvents.MESSAGES_SCROLL_TOP,(()=>{}));return babelHelpers.classPrivateFieldLooseBase(this,F)[F]}async function N(){babelHelpers.classPrivateFieldLooseBase(this,F)[F].startLoadingOldMessages();const e=await babelHelpers.classPrivateFieldLooseBase(this,E)[E].loadMessages(babelHelpers.classPrivateFieldLooseBase(this,F)[F].getFirstMessageId());if(e.length===0){babelHelpers.classPrivateFieldLooseBase(this,f)[f]=true}babelHelpers.classPrivateFieldLooseBase(this,F)[F].finishLoadingOldMessages();babelHelpers.classPrivateFieldLooseBase(this,F)[F].unshiftMessages(e)}async function j(){try{if(babelHelpers.classPrivateFieldLooseBase(this,F)[F].isShown()){babelHelpers.classPrivateFieldLooseBase(this,F)[F].hideLoadHistoryError();babelHelpers.classPrivateFieldLooseBase(this,F)[F].showLoader()}const e=await babelHelpers.classPrivateFieldLooseBase(this,E)[E].initChatData();babelHelpers.classPrivateFieldLooseBase(this,F)[F].setUserAvatar(e.userPhoto);const s=e.messages;s.forEach((e=>{babelHelpers.classPrivateFieldLooseBase(this,T)[T](e,false)}));babelHelpers.classPrivateFieldLooseBase(this,I)[I]=true}catch(e){babelHelpers.classPrivateFieldLooseBase(this,F)[F].showLoadHistoryError();console.error(e)}finally{babelHelpers.classPrivateFieldLooseBase(this,F)[F].hideLoader()}}function D(e){var a;const t={authorId:e.authorId,content:e.content,type:e.type,status:s.CopilotChatMessageStatus.DEPART,id:e.id,params:(a=e.params)!=null?a:[]};if(e.isSystem===true){babelHelpers.classPrivateFieldLooseBase(this,F)[F].addSystemMessage(t,false)}else if(e.authorId===0){babelHelpers.classPrivateFieldLooseBase(this,F)[F].addBotMessage(t,false)}else if(e.authorId>0){babelHelpers.classPrivateFieldLooseBase(this,F)[F].addUserMessage(t,false)}}async function K(e){babelHelpers.classPrivateFieldLooseBase(this,F)[F].setMessageStatusDepart(e.id);babelHelpers.classPrivateFieldLooseBase(this,F)[F].disableInput();try{var s,a,t,i;const l=await babelHelpers.classPrivateFieldLooseBase(this,E)[E].sendMessage({content:e.content,messageId:(s=(a=e.params)==null?void 0:a.messageId)!=null?s:null,buttonId:(t=(i=e.params)==null?void 0:i.buttonId)!=null?t:null});babelHelpers.classPrivateFieldLooseBase(this,F)[F].setMessageId(e.id,l.message.id);babelHelpers.classPrivateFieldLooseBase(this,F)[F].setMessageDate(l.message.id,l.message.dateCreate);babelHelpers.classPrivateFieldLooseBase(this,F)[F].setMessageStatusDelivered(l.message.id)}catch{babelHelpers.classPrivateFieldLooseBase(this,F)[F].setMessageStatusError(e.id);babelHelpers.classPrivateFieldLooseBase(this,F)[F].enableInput()}}function U(e={}){const s=e.scenarioCode;const a=e.entityType;const i=e.entityId;if(t.Type.isStringFilled(s)===false){throw new TypeError("scenarioCode option is required and must be the string")}if(t.Type.isStringFilled(a)===false){throw new TypeError("entityType option is required and must be the string")}if(t.Type.isStringFilled(i)===false){throw new TypeError("entityId option is required and must be the string")}}const G={INIT_CHAT:"initChat",NEW_MESSAGE:"newMessage"};e.CopilotChat=O;e.CopilotChatEvents=G})(this.BX.AI.CopilotChat.Core=this.BX.AI.CopilotChat.Core||{},BX.AI.CopilotChat.UI,BX.Event,BX,BX);
//# sourceMappingURL=copilot-chat.bundle.map.js