<? namespace Bitrix\Main\Security\W;$GLOBALS['____401114894']= array(base64_decode('dG'.'l'.'tZQ=='),base64_decode('d'.'G'.'ltZQ=='),base64_decode('anNvb'.'l9k'.'ZWNvZGU='),base64_decode('YXJyY'.'XlfbWVyZ2U='),base64_decode(''.'am9pbg=='),base64_decode(''.'a'.'m9pbg=='),base64_decode('am'.'9'.'p'.'b'.'g'.'=='),base64_decode('Y'.'XJyYXlfc'.'G9w'),base64_decode('YX'.'JyYX'.'lfc2hpZnQ='),base64_decode('YXJy'.'YXlfc2'.'hpZnQ='),base64_decode('Y'.'XJy'.'YX'.'lfc2h'.'pZ'.'nQ='),base64_decode('YXJy'.'YXlfc2'.'hpZnQ='),base64_decode(''.'Y'.'X'.'J'.'yYXl'.'fbWVyZ2'.'U='),base64_decode(''.'a'.'XN'.'f'.'YXJyY'.'Xk='),base64_decode('YXJyYXl'.'fbWVyZ2U='),base64_decode('aW5'.'fYX'.'Jy'.'YXk='),base64_decode('aW5f'.'Y'.'XJyYXk='),base64_decode('aW5fYX'.'J'.'y'.'YXk='),base64_decode('aW5fYXJyYXk='),base64_decode('aW5fYXJyY'.'Xk='),base64_decode('dGltZQ=='),base64_decode('dGl'.'tZQ=='),base64_decode('YXJyYXlfbWF'.'w'),base64_decode('Z2V0X2xvYWRlZF9'.'leHRl'.'bn'.'Np'.'b'.'25z'),base64_decode('anN'.'vb'.'l'.'9lbmN'.'vZGU='),base64_decode('a'.'nNvbl9lbmN'.'vZGU'.'='),base64_decode('cGhwd'.'mVyc2'.'l'.'vbg=='),base64_decode('anN'.'vbl9l'.'b'.'mNvZ'.'GU='),base64_decode('am9pbg'.'='.'='));if(!function_exists(__NAMESPACE__.'\\___1504224230')){function ___1504224230($_1964062190){static $_261214558= false; if($_261214558 == false) $_261214558=array('V1dBT'.'E'.'xfTE9'.'D'.'Sw'.'==','c2VjdXJp'.'dHk=','REFU'.'Q'.'Q==',''.'e'.'yI=','V1dBTEx'.'f'.'TE'.'9DS'.'w==','c2VjdXJpdHk=','U0VDVVJJV'.'FlfV'.'1'.'dB'.'TExfRVhDRVB'.'USU9O','RkFJT'.'F9DSEVD'.'S0lORw==','Q2FuIG5'.'vdCBleG'.'VjdXRlIHd3Y'.'WxsIHJ1bGVzOiA=','IF'.'R'.'yY'.'WNl'.'OiA'.'=','UkVRV'.'UV'.'TVF9'.'VUkk=','a2V5cw='.'=','dm'.'FsdWVz','U0VDVVJJVF'.'l'.'f'.'V1dB'.'TExfTU9ES'.'UZZ','Lg==','U'.'0VDVVJJVFlfV1dBTExfVU5'.'TRV'.'Q=','Lg==',''.'U0VDVVJ'.'JVFlfV1dBTExfRVhJVA==',''.'L'.'g==','Z2x'.'v'.'YmFs','a'.'2'.'V'.'5cw==','dmFs'.'dWVz','Z2V0',''.'Z2V0','cG9zd'.'A='.'=','c'.'G9'.'zd'.'A==','Y29'.'va2l'.'l',''.'Y'.'29va'.'2ll','cm'.'Vx'.'dW'.'V'.'z'.'dA==','c'.'m'.'VxdWVz'.'dA==','Z2xv'.'YmFs','Z2'.'xvY'.'mF'.'s','bWFpbl9z'.'ZW'.'M'.'=','V1dBT'.'ExfQUN'.'UVUF'.'MS'.'VpFX1'.'JVTEVT','dg==','dm'.'V'.'yc'.'2lvbg==','aQ==','a'.'X'.'NJbn'.'N0'.'YWxsZWQ=',''.'dg='.'=','aW5p','bW9kdWxlcw'.'='.'=',''.'b'.'GljZW5zZQ'.'==','cGh'.'w','d'.'g==','ZXh0','c2VjdXJpdHk=','ZG'.'I=','dHl'.'w'.'ZQ'.'==','ZG'.'I'.'=','dm'.'Vyc2lv'.'b'.'g'.'==','Z'.'GI=','dHlwZ'.'Q==','ZGI=','dH'.'lwZQ'.'==','dmVy'.'c2l'.'vb'.'g'.'==','ZGI=','dm'.'Vyc2l'.'vbg==','ZW52a'.'XJvbm'.'1'.'lb'.'nQ=','d'.'m1fdmV'.'yc2lvbg==','dm0'.'=',''.'dg==','ZW52aXJvb'.'m1lb'.'nQ=','dm'.'1fd'.'mVy'.'c'.'2'.'lvbg==','c29ja2'.'V0'.'VG'.'ltZW'.'91dA==','c3R'.'yZW'.'FtVGltZW91dA'.'==',''.'K'.'C'.'c=',''.'Z'.'G'.'F0'.'Y'.'Q==','J'.'ywgJw='.'=','bW'.'9kdWxl','JywgJw='.'=',''.'bW9'.'kdWxlX3Zlc'.'nNpb24=',''.'Jyk=',''.'LCA'.'=','U0VDVVJJV'.'Flf'.'V'.'1dBTExf'.'RVhDRV'.'B'.'US'.'U9O','bW'.'Fpb'.'g==','RkFJTF9SRUZSRVN'.'ISU5H','Q2'.'FuI'.'G5'.'vdCB'.'y'.'ZWZyZ'.'XNoIHd'.'3YWxsIH'.'J1bGVz'.'OiA=','IFRy'.'Y'.'WNl'.'OiA=',''.'Z'.'G'.'F0'.'YQ='.'=','eyI=','LS0t'.'L'.'S'.'1CR'.'UdJTi'.'BQVUJMSUMg'.'S0VZLS0tLS0=','Ck1JSUJJakF'.'OQ'.'mdrcWhr'.'aUc5dzB'.'CQVFFRkFB'.'T0NB'.'UThB'.'TUlJQkN'.'nS0'.'NBUU'.'VBcThRRTBIam1ISlV'.'T'.'dFd'.'WNm4'.'wemEKUl'.'ZvTHgwMkt6Ym'.'ZyYlMvU'.'DZzV2'.'F4'.'VH'.'p'.'3O'.'F'.'NlR1'.'R0YlRDT3'.'JwSGk1UUY2T1J5'.'al'.'ovWHh'.'6'.'L0'.'tMVT'.'FHYm9mOUNaMwo0e'.'jdTa3FVdDY2aWJ'.'Ydk9'.'GQng0Zncv'.'QVBQUkdEc'.'XR'.'tMG5E'.'M2ZnR3N1M1JlUGd'.'3M'.'jlpOCt'.'2bTdtd'.'EJLS'.'lVZbDRyClZ'.'wYjZ'.'zZlpFVDlLRWI2V'.'DF'.'IRFltRXZj'.'MWhxL2'.'lpdX'.'l'.'4T'.'HJa'.'Wmk1UTZVZmY0VUV2VE'.'krNjhzc0'.'ZSa1'.'Erb'.'3d'.'UUnkKZU9JTWJGaE0vVVRtZ'.'lZZYlRSR'.'n'.'kyb1V'.'ROFdNemEybko1U2'.'FoemkxVUtPMWpBal'.'hU'.'UFJyemM'.'3QWp1Nj'.'M'.'5ajFP'.'MApwcHFmbTV4Z1'.'dsRkF'.'K'.'a0hRVGdiZ'.'GQ1QVd'.'xREZRa3Q5SEtrW'.'S'.'t'.'UbmZCTE'.'dWTXZWeVB3VEhOV1'.'FZQX'.'c0'.'eHBnL3dBC'.'lp3'.'SURBUUFCCi'.'0'.'t'.'LS'.'0'.'tRU5'.'EIFB'.'V'.'Qkx'.'JQyB'.'L'.'RVk'.'tLS0tLQ'.'==');return base64_decode($_261214558[$_1964062190]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\Loader; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use CSecuritySystemInformation; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_118926364= 'https://wwall.bitrix.info/rules.php'; protected $_1458969802= true; public function handle(){ try{  $_37913787= RuleRecordTable::getList([ 'cache' =>['ttl' => 3600* 24* 7]])->fetchAll(); if(empty($_37913787)){ return;}  $_633766725= Cache::createInstance(); $_1306075472= false; if($_633766725->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1011275391= $_633766725->getVars(); if($GLOBALS['____401114894'][0]()- $_1011275391> round(0+4+4+4+4+4)){  $_1622966474= Application::getConnection(); $_380812260= RuleRecordTable::getTableName(); $_1622966474->truncateTable($_380812260); RuleRecordTable::cleanCache(); $_633766725->clean(___1504224230(0), ___1504224230(1));}} elseif($_633766725->startDataCache()){  $_633766725->endDataCache($GLOBALS['____401114894'][1]()); $_1306075472= true;} foreach($_37913787 as $_2012270565){ $_730828736= new PublicKeyCipher; $_400148987= $_730828736->decrypt($_2012270565[___1504224230(2)], static::__1945094144()); if(!str_starts_with($_400148987, ___1504224230(3))){ continue;} $_638882126= $GLOBALS['____401114894'][2]($_400148987, true); if(!empty($_638882126)){ $_1939141232= Rule::make($_638882126); $_1842249829= $this->handleRule($_1939141232); $this->applyHandlingResults($_1842249829);}}  if($_1306075472){ $_633766725->clean(___1504224230(4), ___1504224230(5));}} catch(\Throwable $_1032585464){ $this->logEvent( ___1504224230(6), ___1504224230(7), ___1504224230(8). $_1032585464->getMessage(). ___1504224230(9). $_1032585464->getTraceAsString());}}  public function handleRule(Rule $_1939141232): array{ $_1842249829=[]; if($_1939141232->matchPath($_SERVER[___1504224230(10)])){  $_1972446298= $this->getContextElements($_1939141232->getContext()); foreach($_1972446298 as $_192893665 => &$_914276099){ $_1842249829= $GLOBALS['____401114894'][3]($_1842249829, $this->recursiveContextKeyHandle($_192893665, $_914276099,[], $_1939141232));}} return $_1842249829;}  public function applyHandlingResults(array $_1842249829){ $_1972446298= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1842249829 as $_750375586){ $_914276099=& $_1972446298[$_750375586->getContextName()]; $_546250472= $_750375586->getRuleResult(); $_1939141232= $_750375586->getRule(); if($_546250472 instanceof ModifyResult){ if($_1939141232->getProcess() === ___1504224230(11)){  static::rewriteContextKey( $_750375586->getContextName(), $_914276099, $_750375586->getContextKey(), $_546250472->getCleanValue());} elseif($_1939141232->getProcess() === ___1504224230(12)){ static::rewriteContextValue( $_750375586->getContextName(), $_914276099, $_750375586->getContextKey(), $_546250472->getCleanValue());} $this->logEvent( ___1504224230(13), $_750375586->getContextName(), $GLOBALS['____401114894'][4](___1504224230(14), $_750375586->getContextKey()));} elseif($_546250472 instanceof CheckResult &&!$_546250472->isSuccess()){ if($_546250472->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_750375586->getContextName(), $_914276099, $_750375586->getContextKey(),); $this->logEvent( ___1504224230(15), $_750375586->getContextName(), $GLOBALS['____401114894'][5](___1504224230(16), $_750375586->getContextKey()));} elseif($_546250472->getAction() === RuleAction::EXIT){ $this->logEvent( ___1504224230(17), $_750375586->getContextName(), $GLOBALS['____401114894'][6](___1504224230(18), $_750375586->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1458969802= false;} protected function rewriteContextKey($_192893665, &$_914276099, $_1652032419, $_250496002){ $_240158314= $_1652032419;  $GLOBALS['____401114894'][7]($_240158314); $_240158314[]= $_250496002; if($_192893665 === ___1504224230(19)){ $_1710186188= $GLOBALS['____401114894'][8]($_1652032419); $GLOBALS['____401114894'][9]($_240158314); if(empty($_1652032419)){ $GLOBALS[$_250496002]= $GLOBALS[$_1710186188]; unset($GLOBALS[$_1710186188]);} else{ $_914276099=& $GLOBALS[$_1710186188]; $_1200263580= ArrayHelper::getByNestedKey($_914276099, $_1652032419);  ArrayHelper::setByNestedKey($_914276099, $_240158314, $_1200263580);  ArrayHelper::unsetByNestedKey($_914276099, $_1652032419);}} else{ $_1200263580= ArrayHelper::getByNestedKey($_914276099, $_1652032419);  ArrayHelper::setByNestedKey($_914276099, $_240158314, $_1200263580);  ArrayHelper::unsetByNestedKey($_914276099, $_1652032419);}} protected function rewriteContextValue($_192893665, &$_914276099, $_1866037985, $_1200263580){ if($_192893665 === 'global'){ $_1710186188= $GLOBALS['____401114894'][10]($_1866037985); if(empty($_1866037985)){ $GLOBALS[$_1710186188]= $_1200263580;} else{ $_914276099=& $GLOBALS[$_1710186188]; ArrayHelper::setByNestedKey($_914276099, $_1866037985, $_1200263580);}} else{  ArrayHelper::setByNestedKey($_914276099, $_1866037985, $_1200263580);}} protected function unsetContextValue($_192893665, &$_914276099, $_1866037985){ if($_192893665 === 'global'){ $_1710186188= $GLOBALS['____401114894'][11]($_1866037985); if(empty($_1866037985)){ unset($GLOBALS[$_1710186188]);} else{ $_914276099=& $GLOBALS[$_1710186188]; ArrayHelper::unsetByNestedKey($_914276099, $_1866037985);}} else{ ArrayHelper::unsetByNestedKey($_914276099, $_1866037985);}}  protected function recursiveContextKeyHandle(string $_192893665, array &$_914276099, array $_931990465, Rule $_1939141232): array{  $_1842249829=[]; foreach($_914276099 as $_126942730 => $_1200263580){ $_1866037985= $GLOBALS['____401114894'][12]($_931990465,[$_126942730]); if($_1939141232->matchKey($_1866037985)){  if($_1939141232->getProcess() === ___1504224230(20)){ $_546250472= $_1939141232->evaluate($_126942730);} elseif($_1939141232->getProcess() === ___1504224230(21)){ $_546250472= $_1939141232->evaluateValue($_1200263580);}  if(!empty($_546250472) && $_546250472 instanceof RuleResult){ $_1842249829[]= new HandlingResult($_192893665, $_1866037985, $_546250472, $_1939141232);}}  if($GLOBALS['____401114894'][13]($_1200263580)){ $_1842249829= $GLOBALS['____401114894'][14]($_1842249829, $this->recursiveContextKeyHandle( $_192893665, $_914276099[$_126942730], $_1866037985, $_1939141232));}} return $_1842249829;} protected function getContextElements(array $_76441538){ $_1959397805=[]; if($GLOBALS['____401114894'][15](___1504224230(22), $_76441538, true)){ $_1959397805[___1504224230(23)]= &$_GET;} if($GLOBALS['____401114894'][16](___1504224230(24), $_76441538, true)){ $_1959397805[___1504224230(25)]= &$_POST;} if($GLOBALS['____401114894'][17](___1504224230(26), $_76441538, true)){ $_1959397805[___1504224230(27)]= &$_COOKIE;} if($GLOBALS['____401114894'][18](___1504224230(28), $_76441538, true)){ $_1959397805[___1504224230(29)]= &$_REQUEST;} if($GLOBALS['____401114894'][19](___1504224230(30), $_76441538, true)){ $_1959397805[___1504224230(31)]= $GLOBALS;} return $_1959397805;} public static function refreshRules(){ try{ $_1213131590= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____401114894'][20]()- $_1213131590)< static::CACHE_RULES_TTL){ return;} Option::set(___1504224230(32), ___1504224230(33), $GLOBALS['____401114894'][21]()); $_119385645= null;  $_1707708832= $GLOBALS['____401114894'][22](function($_1264789610){ return[___1504224230(34) => $_1264789610[___1504224230(35)], ___1504224230(36) => (int) $_1264789610[___1504224230(37)]];}, ModuleManager::getModulesFromDisk());  $_1486584026=[]; foreach($GLOBALS['____401114894'][23]() as $_793808171){ $_580036170= new ReflectionExtension($_793808171); $_1486584026[$_793808171]=[ ___1504224230(38) => $_580036170->getVersion(), ___1504224230(39) => $_580036170->getINIEntries()];} $_295979255=[ ___1504224230(40) => $GLOBALS['____401114894'][24]($_1707708832), ___1504224230(41) => Application::getInstance()->getLicense()->getHashLicenseKey(), ___1504224230(42) => $GLOBALS['____401114894'][25]([ ___1504224230(43) => $GLOBALS['____401114894'][26](), ___1504224230(44) => $_1486584026])]; if(Loader::includeModule(___1504224230(45))){ $_1053436629= CSecuritySystemInformation::getSystemInformation(); if(isset($_1053436629[___1504224230(46)][___1504224230(47)]) && isset($_1053436629[___1504224230(48)][___1504224230(49)])){ $_295979255[___1504224230(50)]=[ ___1504224230(51) => $_1053436629[___1504224230(52)][___1504224230(53)], ___1504224230(54) => $_1053436629[___1504224230(55)][___1504224230(56)]];} if(isset($_1053436629[___1504224230(57)][___1504224230(58)])){ $_295979255[___1504224230(59)]=[___1504224230(60) => $_1053436629[___1504224230(61)][___1504224230(62)]];}}  $_1922806859= new HttpClient([ ___1504224230(63) => round(0+5), ___1504224230(64) => round(0+1.25+1.25+1.25+1.25)]); $_880074909= $_1922806859->post( static::$_118926364, $_295979255); if($_1922806859->getStatus() == round(0+200) &&!empty($_880074909)){ $_119385645= Json::decode($_880074909);}  if($_119385645 !== null){ $_1622966474= Application::getConnection(); $_380812260= RuleRecordTable::getTableName(); if(!empty($_119385645)){ foreach($_119385645 as $_310108930){ if(!static::checkRuleSign($_310108930)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____401114894'][27]($_310108930));}}}  $_1622966474->truncateTable($_380812260);  if(!empty($_119385645)){ $_1684390722=[]; foreach($_119385645 as $_310108930){ $_1684390722[]= ___1504224230(65). $_1622966474->getSqlHelper()->forSql($_310108930[___1504224230(66)]). ___1504224230(67). $_1622966474->getSqlHelper()->forSql($_310108930[___1504224230(68)]). ___1504224230(69). $_1622966474->getSqlHelper()->forSql($_310108930[___1504224230(70)]). ___1504224230(71);} $_847535569= $GLOBALS['____401114894'][28](___1504224230(72), $_1684390722);  $_1622966474->query("INSERT INTO {$_380812260} (DATA, MODULE, MODULE_VERSION) VALUES {$_847535569}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1032585464){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1504224230(73), ___1504224230(74), ___1504224230(75), ___1504224230(76). $_1032585464->getMessage(). ___1504224230(77). $_1032585464->getTraceAsString());}} protected static function checkRuleSign($_1939141232){ $_730828736= new PublicKeyCipher; $_638882126= $_730828736->decrypt($_1939141232[___1504224230(78)], static::__1945094144()); return str_starts_with($_638882126, ___1504224230(79));} private static function __1945094144(){ $_1519478937= ''; $_1519478937 .= ___1504224230(80); $_1519478937 .= ___1504224230(81); return $_1519478937;} protected function logEvent($_753850919, $_91633462, $_849206528){ if($this->_1458969802){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_753850919, 'main', $_91633462, $_849206528);}}}?>