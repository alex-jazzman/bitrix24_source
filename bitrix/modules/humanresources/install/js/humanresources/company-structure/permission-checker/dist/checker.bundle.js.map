{"version":3,"file":"checker.bundle.js","sources":["../../org-chart/src/api.js","../src/entity-permission-checkers/base-permission-checker.js","../src/consts.js","../src/entity-permission-checkers/team-checker.js","../src/entity-permission-checkers/department-checker.js","../src/checker.js"],"sourcesContent":["import { getData, postData } from 'humanresources.company-structure.api';\nimport { getNodeColorSettings } from 'humanresources.company-structure.utils';\nimport type { TreeItem } from './types';\n\nconst createTreeDataStore = (treeData: Array<TreeItem>): Map<number, TreeItem> => {\n\tconst dataMap = new Map();\n\ttreeData.forEach((item) => {\n\t\tconst { id, parentId, colorName, entityType } = item;\n\t\tconst mapItem = dataMap.get(id) ?? {};\n\t\tconst teamColor = getNodeColorSettings(colorName, entityType);\n\t\tdataMap.set(id, { ...mapItem, ...item, teamColor });\n\t\tif (parentId === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst mapParentItem = dataMap.get(parentId) ?? {};\n\t\tconst children = mapParentItem.children ?? [];\n\t\tdataMap.set(parentId, {\n\t\t\t...mapParentItem,\n\t\t\tchildren: [...children, id],\n\t\t});\n\t});\n\n\treturn dataMap;\n};\n\nexport const chartAPI = {\n\tremoveDepartment: (id: Number): Promise<void> => {\n\t\treturn getData('humanresources.api.Structure.Node.delete', { nodeId: id });\n\t},\n\tgetDepartmentsData: (): Promise<Array<TreeItem>> => {\n\t\treturn getData('humanresources.api.Structure.get', {}, { tool: 'structure', category: 'structure', event: 'open_structure' });\n\t},\n\tgetCurrentDepartments: (): Promise<number[]> => {\n\t\treturn getData('humanresources.api.Structure.Node.current');\n\t},\n\tgetDictionary: (): Promise<string> => {\n\t\treturn getData('humanresources.api.Structure.dictionary');\n\t},\n\tgetUserId: (): Promise<number> => {\n\t\treturn getData('humanresources.api.User.getCurrentId');\n\t},\n\tfirstTimeOpened: (): Promise<void> => {\n\t\treturn postData('humanresources.api.User.firstTimeOpen');\n\t},\n\tupdateDepartment: (nodeId: number, parentId: number): Promise<void> => {\n\t\treturn postData('humanresources.api.Structure.Node.update', {\n\t\t\tnodeId,\n\t\t\tparentId,\n\t\t\tname: null,\n\t\t});\n\t},\n\tchangeOrder: (draggedId: Number, direction: Number, count: number): Promise<void> => {\n\t\treturn postData('humanresources.api.Structure.Node.changeOrder', {\n\t\t\tnodeId: draggedId,\n\t\t\tdirection,\n\t\t\tcount,\n\t\t});\n\t},\n\tcreateTreeDataStore,\n};\n","export class BasePermissionChecker\n{\n\tisCheckerAction(action): boolean\n\t{\n\t\tthrow new Error('The method isCheckerAction must be implemented in the subclass');\n\t}\n\n\thasPermission(action: string, nodeId: number, permissionValue: any, minLevel: ?any): boolean\n\t{\n\t\tthrow new Error('The method hasPermission must be implemented in the subclass');\n\t}\n}\n","export const PermissionActions = Object.freeze({\n\tstructureView: 'ACTION_STRUCTURE_VIEW',\n\tdepartmentCreate: 'ACTION_DEPARTMENT_CREATE',\n\tdepartmentDelete: 'ACTION_DEPARTMENT_DELETE',\n\tdepartmentEdit: 'ACTION_DEPARTMENT_EDIT',\n\temployeeAddToDepartment: 'ACTION_EMPLOYEE_ADD_TO_DEPARTMENT',\n\temployeeRemoveFromDepartment: 'ACTION_EMPLOYEE_REMOVE_FROM_DEPARTMENT',\n\temployeeFire: 'ACTION_FIRE_EMPLOYEE',\n\tdepartmentCommunicationEdit: 'ACTION_DEPARTMENT_COMMUNICATION_EDIT',\n\taccessEdit: 'ACTION_USERS_ACCESS_EDIT',\n\tteamAccessEdit: 'ACTION_TEAM_ACCESS_EDIT',\n\tinviteToDepartment: 'ACTION_USER_INVITE',\n\tteamView: 'ACTION_TEAM_VIEW',\n\tteamCreate: 'ACTION_TEAM_CREATE',\n\tteamEdit: 'ACTION_TEAM_EDIT',\n\tteamDelete: 'ACTION_TEAM_DELETE',\n\tteamAddMember: 'ACTION_TEAM_MEMBER_ADD',\n\tteamRemoveMember: 'ACTION_TEAM_MEMBER_REMOVE',\n\tteamSettingsEdit: 'ACTION_TEAM_SETTINGS_EDIT',\n\tteamCommunicationEdit: 'ACTION_TEAM_COMMUNICATION_EDIT',\n});\n\nexport const PermissionLevels = Object.freeze({\n\tfullCompany: 30,\n\tselfAndSub: 20,\n\tself: 10,\n\tnone: 0,\n});\n","import { useChartStore } from 'humanresources.company-structure.chart-store';\nimport { BasePermissionChecker } from './base-permission-checker';\nimport { PermissionChecker } from 'humanresources.company-structure.permission-checker';\nimport { PermissionActions, PermissionLevels } from '../consts';\nimport { EntityTypes } from 'humanresources.company-structure.utils';\n\nexport class TeamPermissionChecker extends BasePermissionChecker\n{\n\tconstructor(departmentChecker, currentUserPermissions)\n\t{\n\t\tsuper();\n\t\tthis.departmentChecker = departmentChecker;\n\t\tthis.currentUserPermissions = currentUserPermissions;\n\t}\n\n\tisCheckerAction(action: string): boolean\n\t{\n\t\tconst teamActions = [\n\t\t\tPermissionActions.teamView,\n\t\t\tPermissionActions.teamCreate,\n\t\t\tPermissionActions.teamEdit,\n\t\t\tPermissionActions.teamDelete,\n\t\t\tPermissionActions.teamAddMember,\n\t\t\tPermissionActions.teamRemoveMember,\n\t\t\tPermissionActions.teamSettingsEdit,\n\t\t\tPermissionActions.teamCommunicationEdit,\n\t\t];\n\n\t\treturn teamActions.includes(action);\n\t}\n\n\thasPermission(\n\t\taction: string,\n\t\tentityId: number,\n\t\tpermissionValue: {TEAM: number, DEPARTMENT: number},\n\t\tminValue?: { TEAM?: number, DEPARTMENT?: number } | null,\n\t): boolean\n\t{\n\t\tif (minValue)\n\t\t{\n\t\t\tconst isTeamPermissionInsufficient = permissionValue.TEAM < (minValue?.TEAM || 0);\n\t\t\tconst isDepartmentPermissionInsufficient = permissionValue.DEPARTMENT < (minValue?.DEPARTMENT || 0);\n\n\t\t\tif (isTeamPermissionInsufficient || isDepartmentPermissionInsufficient)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (permissionValue.TEAM === PermissionLevels.fullCompany)\n\t\t{\n\t\t\tconst departments = useChartStore().departments;\n\t\t\tconst currentNode = departments.get(entityId);\n\n\t\t\tif (\n\t\t\t\t(action === PermissionActions.teamCreate || action === PermissionActions.teamEdit)\n\t\t\t\t&& currentNode.entityType === EntityTypes.department\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn PermissionChecker.hasPermission(PermissionActions.structureView, currentNode.id);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.hasPermissionByTeamPermission(entityId, permissionValue.TEAM))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.hasPermissionByDepartmentPermission(entityId, permissionValue.DEPARTMENT, action);\n\t}\n\n\thasPermissionByTeamPermission(nodeId: number, level: number = PermissionLevels.none): boolean\n\t{\n\t\tif (level === PermissionLevels.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodes = useChartStore().departments;\n\t\tconst userEntities = useChartStore().currentDepartments;\n\t\tconst userTeams = new Set(\n\t\t\tuserEntities.filter((id) => {\n\t\t\t\tconst department = nodes.get(id);\n\n\t\t\t\treturn department && department.entityType === EntityTypes.team;\n\t\t\t}),\n\t\t);\n\n\t\tif (userTeams.has(nodeId))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (level === PermissionLevels.self)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet currentDepartment = nodes.get(nodeId);\n\t\twhile (currentDepartment)\n\t\t{\n\t\t\tif (currentDepartment.entityType === EntityTypes.department)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (userTeams.has(currentDepartment.id))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcurrentDepartment = nodes.get(currentDepartment.parentId);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasPermissionByDepartmentPermission(nodeId, level = PermissionLevels.none, action = ''): boolean\n\t{\n\t\tif (level === PermissionLevels.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodes = useChartStore().departments;\n\t\tconst userEntities = useChartStore().currentDepartments;\n\t\tconst userDepartments = new Set(\n\t\t\tuserEntities.filter((id) => {\n\t\t\t\tconst department = nodes.get(id);\n\n\t\t\t\treturn department && department.entityType === EntityTypes.department;\n\t\t\t}),\n\t\t);\n\n\t\tif (userDepartments.has(nodeId))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet currentDepartment = nodes.get(nodeId);\n\t\twhile (currentDepartment)\n\t\t{\n\t\t\tif (userDepartments.has(currentDepartment.id))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (level === PermissionLevels.self && currentDepartment.entityType === EntityTypes.department)\n\t\t\t{\n\t\t\t\tif (action === PermissionActions.teamCreate || action === PermissionActions.teamEdit)\n\t\t\t\t{\n\t\t\t\t\treturn userDepartments.has(currentDepartment.id);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurrentDepartment = nodes.get(currentDepartment.parentId);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","import { useChartStore } from 'humanresources.company-structure.chart-store';\nimport { BasePermissionChecker } from './base-permission-checker';\nimport { PermissionActions, PermissionLevels } from '../consts';\nimport { Type } from 'main.core';\n\nexport class DepartmentPermissionChecker extends BasePermissionChecker\n{\n\tisCheckerAction(action: string): boolean\n\t{\n\t\tconst departmentActions = [\n\t\t\tPermissionActions.structureView,\n\t\t\tPermissionActions.departmentCreate,\n\t\t\tPermissionActions.departmentDelete,\n\t\t\tPermissionActions.departmentEdit,\n\t\t\tPermissionActions.employeeAddToDepartment,\n\t\t\tPermissionActions.employeeRemoveFromDepartment,\n\t\t\tPermissionActions.employeeFire,\n\t\t\tPermissionActions.departmentCommunicationEdit,\n\t\t\tPermissionActions.inviteToDepartment,\n\t\t];\n\n\t\treturn departmentActions.includes(action);\n\t}\n\n\thasPermission(action: string, departmentId: number, permissionValue: number, minLevel?: number): boolean\n\t{\n\t\tif (\n\t\t\t!this.isCheckerAction(action)\n\t\t\t&& !Type.isNumber(permissionValue)\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\tminLevel !== null\n\t\t\t&& permissionValue < minLevel\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst departments = useChartStore().departments;\n\t\tif (action === PermissionActions.departmentDelete)\n\t\t{\n\t\t\tconst rootId = [...departments.values()].find((department) => department.parentId === 0).id;\n\t\t\tif (departmentId === rootId)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tconst userDepartments = useChartStore().currentDepartments;\n\t\tswitch (permissionValue)\n\t\t{\n\t\t\tcase PermissionLevels.fullCompany:\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcase PermissionLevels.selfAndSub:\n\t\t\t{\n\t\t\t\tlet currentDepartment = departments.get(departmentId);\n\t\t\t\twhile (currentDepartment)\n\t\t\t\t{\n\t\t\t\t\tif (userDepartments.includes(currentDepartment.id))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepartment = departments.get(currentDepartment.parentId);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcase PermissionLevels.self:\n\t\t\t{\n\t\t\t\treturn userDepartments.includes(departmentId);\n\t\t\t}\n\n\t\t\tcase PermissionLevels.none:\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/* eslint-disable no-constructor-return */\nimport { chartAPI } from '../../org-chart/src/api';\nimport { TeamPermissionChecker } from './entity-permission-checkers/team-checker';\nimport { DepartmentPermissionChecker } from './entity-permission-checkers/department-checker';\nimport { useChartStore } from 'humanresources.company-structure.chart-store';\nimport { EntityTypes } from 'humanresources.company-structure.utils';\nimport { PermissionLevels, PermissionActions } from './consts';\n\nexport class PermissionCheckerClass\n{\n\tconstructor(): PermissionCheckerClass\n\t{\n\t\tif (!PermissionCheckerClass.instance)\n\t\t{\n\t\t\tthis.currentUserPermissions = {};\n\t\t\tthis.isTeamsAvailable = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tthis.departmentChecker = new DepartmentPermissionChecker();\n\t\t\tthis.teamChecker = new TeamPermissionChecker(this.departmentChecker, this.currentUserPermissions);\n\t\t\tPermissionCheckerClass.instance = this;\n\t\t}\n\n\t\treturn PermissionCheckerClass.instance;\n\t}\n\n\tgetInstance(): PermissionCheckerClass\n\t{\n\t\treturn PermissionCheckerClass.instance;\n\t}\n\n\tasync init(): Promise<void>\n\t{\n\t\tif (this.isInitialized)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tcurrentUserPermissions,\n\t\t\tteamsAvailable,\n\t\t} = await chartAPI.getDictionary();\n\n\t\tthis.currentUserPermissions = currentUserPermissions;\n\t\tthis.isTeamsAvailable = teamsAvailable;\n\n\t\tthis.isInitialized = true;\n\t}\n\n\thasPermission(action: string, entityId: number, minLevel: any = null): boolean\n\t{\n\t\tconst permissionLevel = this.currentUserPermissions[action];\n\n\t\tif (!permissionLevel || !entityId)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.departmentChecker.isCheckerAction(action))\n\t\t{\n\t\t\treturn this.departmentChecker.hasPermission(\n\t\t\t\taction,\n\t\t\t\tentityId,\n\t\t\t\tpermissionLevel,\n\t\t\t\tminLevel,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis.isTeamsAvailable\n\t\t\t&& this.teamChecker.isCheckerAction(action)\n\t\t)\n\t\t{\n\t\t\treturn this.teamChecker.hasPermission(\n\t\t\t\taction,\n\t\t\t\tentityId,\n\t\t\t\tpermissionLevel,\n\t\t\t\tminLevel,\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasPermissionOfAction(action: string): boolean\n\t{\n\t\tconst permissionLevel = this.currentUserPermissions[action];\n\n\t\tif (!permissionLevel)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.teamChecker.isCheckerAction(action))\n\t\t{\n\t\t\tif (!this.isTeamsAvailable)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn permissionLevel.TEAM > PermissionLevels.none || permissionLevel.DEPARTMENT > PermissionLevels.none;\n\t\t}\n\n\t\treturn permissionLevel > PermissionLevels.none;\n\t}\n\n\tcanSortEntitiesByParentId(entityId: number): boolean\n\t{\n\t\tconst entities = useChartStore().departments;\n\t\tconst entity = entities.get(entityId);\n\t\tif (!entity)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst teamTeamMinValue = { TEAM: PermissionLevels.selfAndSub };\n\t\tconst teamDepartmentMinValue = { DEPARTMENT: PermissionLevels.selfAndSub };\n\n\t\tconst teamAction = PermissionActions.teamEdit;\n\t\tif (entity.entityType === EntityTypes.team)\n\t\t{\n\t\t\treturn this.hasPermission(teamAction, entityId, teamTeamMinValue)\n\t\t\t\t|| this.hasPermission(teamAction, entityId, teamDepartmentMinValue)\n\t\t\t;\n\t\t}\n\n\t\tif (entity.entityType === EntityTypes.department)\n\t\t{\n\t\t\tconst departmentAction = PermissionActions.departmentEdit;\n\n\t\t\treturn this.hasPermission(departmentAction, entityId, PermissionLevels.selfAndSub);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tcanBeParentForEntity(entityId: number, type: EntityTypes): boolean\n\t{\n\t\tif (type === EntityTypes.department)\n\t\t{\n\t\t\treturn this.hasPermission(PermissionActions.departmentEdit, entityId);\n\t\t}\n\n\t\tif (type === EntityTypes.team)\n\t\t{\n\t\t\treturn this.hasPermission(PermissionActions.teamEdit, entityId);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport const PermissionChecker = new PermissionCheckerClass();\n"],"names":["createTreeDataStore","treeData","dataMap","Map","forEach","item","id","parentId","colorName","entityType","mapItem","get","teamColor","getNodeColorSettings","set","mapParentItem","children","chartAPI","removeDepartment","getData","nodeId","getDepartmentsData","tool","category","event","getCurrentDepartments","getDictionary","getUserId","firstTimeOpened","postData","updateDepartment","name","changeOrder","draggedId","direction","count","BasePermissionChecker","isCheckerAction","action","Error","hasPermission","permissionValue","minLevel","PermissionActions","Object","freeze","structureView","departmentCreate","departmentDelete","departmentEdit","employeeAddToDepartment","employeeRemoveFromDepartment","employeeFire","departmentCommunicationEdit","accessEdit","teamAccessEdit","inviteToDepartment","teamView","teamCreate","teamEdit","teamDelete","teamAddMember","teamRemoveMember","teamSettingsEdit","teamCommunicationEdit","PermissionLevels","fullCompany","selfAndSub","self","none","TeamPermissionChecker","constructor","departmentChecker","currentUserPermissions","teamActions","includes","entityId","minValue","isTeamPermissionInsufficient","TEAM","isDepartmentPermissionInsufficient","DEPARTMENT","departments","useChartStore","currentNode","EntityTypes","department","PermissionChecker","hasPermissionByTeamPermission","hasPermissionByDepartmentPermission","level","nodes","userEntities","currentDepartments","userTeams","Set","filter","team","has","currentDepartment","userDepartments","DepartmentPermissionChecker","departmentActions","departmentId","Type","isNumber","rootId","values","find","PermissionCheckerClass","instance","isTeamsAvailable","isInitialized","teamChecker","getInstance","init","teamsAvailable","permissionLevel","hasPermissionOfAction","canSortEntitiesByParentId","entities","entity","teamTeamMinValue","teamDepartmentMinValue","teamAction","departmentAction","canBeParentForEntity","type"],"mappings":"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"}