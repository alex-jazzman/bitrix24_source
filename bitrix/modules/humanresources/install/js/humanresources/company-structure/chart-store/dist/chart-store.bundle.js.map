{"version":3,"file":"chart-store.bundle.js","sources":["../src/index.js"],"sourcesContent":["import { Type } from 'main.core';\nimport { defineStore } from 'ui.vue3.pinia';\nimport { getData } from 'humanresources.company-structure.api';\nimport {\n\tEntityTypes,\n\tWizardApiEntityChangedDict,\n\tNodeSettingsTypes,\n\ttype ChatOrChannelDetailed,\n\ttype UserData,\n\ttype NodeColorSettingsType,\n} from 'humanresources.company-structure.utils';\n\nexport type DepartmentData = {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\tparentId: number;\n\theads: Array<UserData>;\n\temployees: Array<UserData>;\n\tuserCount: number;\n\tchats: Array<number>,\n\tchatsDetailed: Array<ChatOrChannelDetailed>,\n\tchannels: Array<number>,\n\tchannelsDetailed: Array<ChatOrChannelDetailed>,\n\tcreateDefaultChat: boolean,\n\tcreateDefaultChannel: boolean,\n\tteamColor: NodeColorSettingsType,\n\tsettings: {\n\t\t[NodeSettingsTypes.businessProcAuthority]: Set,\n\t\t[NodeSettingsTypes.reportsAuthority]: Set,\n\t},\n\tentityType: EntityTypes.department | EntityTypes.team | EntityTypes.company,\n\tapiEntityChanged: WizardApiEntityChangedDict.department | WizardApiEntityChangedDict.employees,\n};\n\nexport const useChartStore = defineStore('hr-org-chart', {\n\tstate: () => ({\n\t\tdepartments: new Map(),\n\t\tcurrentDepartments: [],\n\t\tfocusedNode: 0,\n\t\tsearchedUserId: 0,\n\t\tuserId: 0,\n\t}),\n\tactions: {\n\t\tasync refreshDepartments(nodeIds: number[]): Promise<void>\n\t\t{\n\t\t\tif (nodeIds.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [departments, currentDepartments] = await Promise.all([\n\t\t\t\tgetData('humanresources.api.Structure.Node.getByIds', { nodeIds }),\n\t\t\t\tgetData('humanresources.api.Structure.Node.current'),\n\t\t\t]);\n\t\t\tthis.currentDepartments = currentDepartments;\n\t\t\tObject.keys(departments).forEach((id) => {\n\t\t\t\tconst department = departments[id];\n\t\t\t\tconst existingDepartment = this.departments.get(Number(id)) || {};\n\t\t\t\tthis.departments.set(Number(id), {\n\t\t\t\t\t...existingDepartment,\n\t\t\t\t\theads: department.heads,\n\t\t\t\t\tuserCount: department.userCount,\n\t\t\t\t\temployees: null,\n\t\t\t\t\temployeeListOptions: {\n\t\t\t\t\t\tpage: 0,\n\t\t\t\t\t\tshouldUpdateList: true,\n\t\t\t\t\t\tisListUpdated: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tchangeCurrentDepartment(oldDepartmentId: number, newDepartmentId: ?number): void\n\t\t{\n\t\t\tconst currentDepartments = this.currentDepartments.filter((departmentId) => {\n\t\t\t\treturn departmentId !== oldDepartmentId && departmentId !== newDepartmentId;\n\t\t\t});\n\n\t\t\tif (!newDepartmentId)\n\t\t\t{\n\t\t\t\tthis.currentDepartments = currentDepartments;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.currentDepartments = [\n\t\t\t\t...currentDepartments,\n\t\t\t\tnewDepartmentId,\n\t\t\t];\n\t\t},\n\t\tasync loadHeads(nodeIds: number[]): Promise<void>\n\t\t{\n\t\t\tif (nodeIds.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst heads = await getData('humanresources.api.Structure.Node.getHeadsByIds', { nodeIds });\n\t\t\tnodeIds.forEach((departmentId) => {\n\t\t\t\tconst department = this.departments.get(departmentId);\n\t\t\t\tif (heads[departmentId])\n\t\t\t\t{\n\t\t\t\t\tthis.departments.set(departmentId, { ...department, heads: heads[departmentId] });\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tupdateDepartment(departmentData: DepartmentData, position: ?number): void\n\t\t{\n\t\t\tconst { id, parentId } = departmentData;\n\t\t\tconst oldData = this.departments.get(id);\n\t\t\tconst prevParent = this.departments.get(oldData.parentId);\n\t\t\tthis.departments.set(id, { ...oldData, ...departmentData });\n\t\t\tif (parentId !== 0 && prevParent.id !== parentId)\n\t\t\t{\n\t\t\t\tprevParent.children = prevParent.children.filter((childId) => childId !== id);\n\t\t\t\tconst newParent = this.departments.get(parentId);\n\t\t\t\tnewParent.children = newParent.children ?? [];\n\t\t\t\tif (Type.isNumber(position))\n\t\t\t\t{\n\t\t\t\t\tnewParent.children.splice(position, 0, id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewParent.children.push(id);\n\t\t\t\t}\n\n\t\t\t\tthis.departments.set(id, { ...this.departments.get(id), prevParentId: prevParent.id });\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["useChartStore","defineStore","state","departments","Map","currentDepartments","focusedNode","searchedUserId","userId","actions","refreshDepartments","nodeIds","length","Promise","all","getData","Object","keys","forEach","id","department","existingDepartment","get","Number","set","heads","userCount","employees","employeeListOptions","page","shouldUpdateList","isListUpdated","changeCurrentDepartment","oldDepartmentId","newDepartmentId","filter","departmentId","loadHeads","updateDepartment","departmentData","position","parentId","oldData","prevParent","children","childId","newParent","Type","isNumber","splice","push","prevParentId"],"mappings":"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"}