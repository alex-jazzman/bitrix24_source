{"version":3,"file":"datetime-limit-selector.bundle.js","sources":["../src/datetime-limit-selector.js"],"sourcesContent":["import { Extension, Loc, Tag, Dom, Text } from 'main.core';\nimport { UI } from 'ui.notification';\nimport { EventEmitter } from 'main.core.events';\nimport { DateTimeFormat, Timezone } from 'main.date';\nimport { Api } from 'sign.v2.api';\nimport './style.css';\nimport 'ui.design-tokens';\n\nexport class DatetimeLimitSelector extends EventEmitter\n{\n\t#api: Api;\n\t#documentUids: Array<string>;\n\t#documentDateField: HTMLElement;\n\t#selectedDate: Date | null = null;\n\t#signingMinMinutes: number;\n\t#signingMaxMonth: number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.Sign.V2.DatetimeLimitSelector');\n\n\t\tthis.#documentUids = [];\n\t\tthis.#api = new Api();\n\n\t\tthis.#documentDateField = this.#getDateField();\n\n\t\tconst settings = Extension.getSettings('sign.v2.datetime-limit-selector');\n\n\t\tconst defaultSignUntilDate = settings.get('defaultSignUntilDate', null);\n\t\tthis.setDate(defaultSignUntilDate ? new Date(defaultSignUntilDate) : new Date());\n\n\t\tthis.#signingMinMinutes = settings.get('signingMinMinutes', 5);\n\t\tthis.#signingMaxMonth = settings.get('signingMaxMonth', 3);\n\t}\n\n\tgetLayout(): HTMLElement\n\t{\n\t\treturn Tag.render`\n\t\t\t<div class=\"sign-datetime-limit-selector\">\n\t\t\t\t<span class=\"sign-datetime-limit-selector__label\">\n\t\t\t\t\t${Loc.getMessage('SIGN_BLANK_DATETIME_SELECTOR_LABEL')}\n\t\t\t\t</span>\n\t\t\t\t${this.#documentDateField}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t#getDateField(): HTMLElement\n\t{\n\t\treturn Tag.render`\n\t\t\t<div\n\t\t\t\tclass=\"sign-datetime-limit-selector_field\"\n\t\t\t\tonclick=\"${() => {\n\t\t\t\t\tBX.calendar({\n\t\t\t\t\t\tnode: this.#documentDateField,\n\t\t\t\t\t\tfield: this.#documentDateField,\n\t\t\t\t\t\tcurrentTime: this.#selectedDate.getTime() / 1000,\n\t\t\t\t\t\tvalue: DateTimeFormat.format(DateTimeFormat.getFormat('FORMAT_DATETIME'), this.#selectedDate.getTime() / 1000),\n\t\t\t\t\t\tbTime: true,\n\t\t\t\t\t\tbHideTime: false,\n\t\t\t\t\t\tcallback: (date) => {\n\t\t\t\t\t\t\tthis.emit('beforeDateModify');\n\n\t\t\t\t\t\t\tif (!this.#isDatePassMinValidation(date))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst validationErrorMessage = Loc.getMessagePlural('PERIOD_TOO_SHORT', this.#signingMinMinutes, {\n\t\t\t\t\t\t\t\t\t'#MIN_PERIOD#': this.#signingMinMinutes,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tUI.Notification.Center.notify({\n\t\t\t\t\t\t\t\t\tcontent: Text.encode(validationErrorMessage),\n\t\t\t\t\t\t\t\t\tautoHideDelay: 4000,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!this.#isDatePassMaxValidation(date))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst validationErrorMessage = Loc.getMessagePlural('PERIOD_TOO_LONG', this.#signingMaxMonth, {\n\t\t\t\t\t\t\t\t\t'#MONTH#': this.#signingMaxMonth,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tUI.Notification.Center.notify({\n\t\t\t\t\t\t\t\t\tcontent: Text.encode(validationErrorMessage),\n\t\t\t\t\t\t\t\t\tautoHideDelay: 4000,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.emit('afterDateModify');\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback_after: (date) => {\n\t\t\t\t\t\t\tthis.setDate(date);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}}\"\n\t\t\t>\n\t\t\t\t<span class=\"sign-datetime-limit-selector_field-text\"></span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tgetSelectedDate(): Date | null\n\t{\n\t\treturn this.#selectedDate;\n\t}\n\n\tsetDate(date: Date): void\n\t{\n\t\tthis.#selectedDate = date;\n\n\t\tconst dateFormatted = DateTimeFormat.format(DateTimeFormat.getFormat('MEDIUM_DATE_FORMAT'), date);\n\t\tconst timeFormatted = DateTimeFormat.format(DateTimeFormat.getFormat('SHORT_TIME_FORMAT'), date);\n\t\tconst formattedDate = Loc.getMessage('SIGN_BLANK_DATETIME_SELECTOR_DATE', {\n\t\t\t'#MEDIUM_DATE#': dateFormatted,\n\t\t\t'#SHORT_TIME#': timeFormatted,\n\t\t});\n\n\t\tconst dateTextNode = this.#documentDateField.firstElementChild;\n\t\tdateTextNode.textContent = formattedDate;\n\t}\n\n\tisValid(): boolean\n\t{\n\t\treturn !Dom.hasClass(this.#documentDateField, '--invalid');\n\t}\n\n\t#isDatePassMinValidation(date: Date): boolean\n\t{\n\t\tconst minValidDateTime = Timezone.UserTime.getDate();\n\t\tminValidDateTime.setMinutes(minValidDateTime.getMinutes() + this.#signingMinMinutes);\n\n\t\treturn date.getTime() > minValidDateTime.getTime();\n\t}\n\n\t#isDatePassMaxValidation(date: Date): boolean\n\t{\n\t\tconst maxValidDateTime = Timezone.UserTime.getDate();\n\t\tmaxValidDateTime.setMonth(maxValidDateTime.getMonth() + this.#signingMaxMonth);\n\n\t\treturn date.getTime() < maxValidDateTime.getTime();\n\t}\n\n\tsetValidClass(): void\n\t{\n\t\tDom.removeClass(this.#documentDateField, '--invalid');\n\t}\n\n\tsetInvalidClass(): void\n\t{\n\t\tDom.addClass(this.#documentDateField, '--invalid');\n\t}\n\n\tasync saveSelectedDateForUids(): Promise<void>\n\t{\n\t\tconst timestamp = Timezone.UserTime.toUTCTimestamp(this.#selectedDate);\n\n\t\ttry\n\t\t{\n\t\t\tawait Promise.all(this.#documentUids.map((uid) => this.#api.modifyDateSignUntil(uid, timestamp)));\n\t\t\tthis.setValidClass();\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.setInvalidClass();\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tsetDocumentUids(uids: Array<string>): void\n\t{\n\t\tthis.#documentUids = uids;\n\t}\n}\n"],"names":["DatetimeLimitSelector","EventEmitter","constructor","setEventNamespace","Api","settings","Extension","getSettings","defaultSignUntilDate","get","setDate","Date","getLayout","Tag","render","Loc","getMessage","getSelectedDate","date","dateFormatted","DateTimeFormat","format","getFormat","timeFormatted","formattedDate","dateTextNode","firstElementChild","textContent","isValid","Dom","hasClass","setValidClass","removeClass","setInvalidClass","addClass","saveSelectedDateForUids","timestamp","Timezone","UserTime","toUTCTimestamp","Promise","all","map","uid","modifyDateSignUntil","error","setDocumentUids","uids","BX","calendar","node","field","currentTime","getTime","value","bTime","bHideTime","callback","emit","validationErrorMessage","getMessagePlural","UI","Notification","Center","notify","content","Text","encode","autoHideDelay","callback_after","minValidDateTime","getDate","setMinutes","getMinutes","maxValidDateTime","setMonth","getMonth"],"mappings":"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"}