this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,t,a,s){"use strict";function o(e){if(!t.Type.isArrayFilled(Object.values(e.data))){return null}return{id:e.id,name:e.data.name,image:e.data.image,type:e.type,phones:e.data.phones,emails:e.data.emails,isReturning:e.isReturning}}let r=e=>e,i;const l="WORK";const n=Object.freeze({AddFormattedName:"crm.controller.integration.booking.contact.addFormattedName",ParseFormattedName:"crm.controller.integration.booking.contact.parseFormattedName",CompanyAdd:"crm.company.add",ContactAdd:"crm.contact.add",CompanyGet:"crm.company.get",ContactGet:"crm.contact.get",GetCompanyContacts:"crm.company.contact.items.get",CompanyUpdate:"crm.company.update",ContactUpdate:"crm.contact.update",DealContactGet:"crm.deal.contact.items.get"});const d=Object.freeze({AddFormattedName:"add_formatted_name",ParseName:"parse_name_#id#",CompanyAdd:"company_add_#id#",ContactAdd:"contact_add_#id#",CompanyGet:"company_get_#id#",ContactGet:"contact_get_#id#",GetCompanyContacts:"get_company_contacts",CompanyUpdate:"company_update_#id#",ContactUpdate:"contact_update_#id#",DealContactGet:"deal_contact_get_#id#"});var c=babelHelpers.classPrivateFieldLooseKey("requestSaveMany");var p=babelHelpers.classPrivateFieldLooseKey("categorizeClients");var m=babelHelpers.classPrivateFieldLooseKey("executeBatchRequest");var b=babelHelpers.classPrivateFieldLooseKey("handleErrors");var u=babelHelpers.classPrivateFieldLooseKey("updateClientIds");var y=babelHelpers.classPrivateFieldLooseKey("isClientToUpdate");var h=babelHelpers.classPrivateFieldLooseKey("getParseNameMethods");var v=babelHelpers.classPrivateFieldLooseKey("getCompanyAddMethods");var C=babelHelpers.classPrivateFieldLooseKey("getContactAddMethods");var P=babelHelpers.classPrivateFieldLooseKey("getCompanyGetMethods");var L=babelHelpers.classPrivateFieldLooseKey("getContactGetMethods");var B=babelHelpers.classPrivateFieldLooseKey("getCompanyUpdateMethods");var E=babelHelpers.classPrivateFieldLooseKey("getContactUpdateMethods");var F=babelHelpers.classPrivateFieldLooseKey("prepareContactNameFields");var f=babelHelpers.classPrivateFieldLooseKey("prepareCommunicationsForUpdate");var H=babelHelpers.classPrivateFieldLooseKey("requestLinkedContactId");var A=babelHelpers.classPrivateFieldLooseKey("getEntityById");var g=babelHelpers.classPrivateFieldLooseKey("getPrimaryContactIdByDeal");var N=babelHelpers.classPrivateFieldLooseKey("getRequestKey");class T{constructor(){Object.defineProperty(this,N,{value:q});Object.defineProperty(this,g,{value:x});Object.defineProperty(this,A,{value:Y});Object.defineProperty(this,H,{value:X});Object.defineProperty(this,f,{value:k});Object.defineProperty(this,F,{value:R});Object.defineProperty(this,E,{value:$});Object.defineProperty(this,B,{value:V});Object.defineProperty(this,L,{value:w});Object.defineProperty(this,P,{value:K});Object.defineProperty(this,C,{value:j});Object.defineProperty(this,v,{value:S});Object.defineProperty(this,h,{value:D});Object.defineProperty(this,y,{value:G});Object.defineProperty(this,u,{value:U});Object.defineProperty(this,b,{value:M});Object.defineProperty(this,m,{value:I});Object.defineProperty(this,p,{value:_});Object.defineProperty(this,c,{value:O})}async saveMany(e){try{const t=await babelHelpers.classPrivateFieldLooseBase(this,c)[c](e);await s.Core.getStore().dispatch("clients/upsertMany",t);return{clients:t.map((({id:e,type:t})=>({id:e,type:t})))}}catch(e){console.error("ClientService: saveMany error",e);return{error:e}}}async getLinkedContactByCompany(e){var t;const a=s.Core.getStore().getters["clients/getByClientData"](e);(t=a.contactId)!=null?t:a.contactId=await babelHelpers.classPrivateFieldLooseBase(this,H)[H](e);await s.Core.getStore().dispatch("clients/update",{id:a.id,client:a});return this.getContactById(a.contactId)}async getContactById(e){const t=s.Core.getStore().getters["clients/getByClientData"]({id:e,type:{module:a.Module.Crm,code:a.CrmEntity.Contact}});return t||babelHelpers.classPrivateFieldLooseBase(this,A)[A]({id:e,methodName:n.ContactGet,requestKey:d.ContactGet,entityCode:a.CrmEntity.Contact})}async getCompanyById(e){return babelHelpers.classPrivateFieldLooseBase(this,A)[A]({id:e,methodName:n.CompanyGet,requestKey:d.CompanyGet,entityCode:a.CrmEntity.Company})}async getLinkedContactByDeal(e){try{const t=await babelHelpers.classPrivateFieldLooseBase(this,g)[g](e);return t?this.getContactById(t):undefined}catch(e){console.error("ClientService: getLinkedContactByDeal error",e);return undefined}}}async function O(e){const{companies:t,companiesToAdd:a,companiesToUpdate:s,contactsToAdd:o,contactsToUpdate:r}=babelHelpers.classPrivateFieldLooseBase(this,p)[p](e);const i=[...a,...s,...o,...r];i.forEach(((e,t)=>{e.index=t}));const l={...babelHelpers.classPrivateFieldLooseBase(this,h)[h]([...o,...r]),...babelHelpers.classPrivateFieldLooseBase(this,v)[v](a),...babelHelpers.classPrivateFieldLooseBase(this,C)[C](o,t),...babelHelpers.classPrivateFieldLooseBase(this,P)[P](s),...babelHelpers.classPrivateFieldLooseBase(this,B)[B](s),...babelHelpers.classPrivateFieldLooseBase(this,L)[L](r),...babelHelpers.classPrivateFieldLooseBase(this,E)[E](r)};const n=await babelHelpers.classPrivateFieldLooseBase(this,m)[m](l);babelHelpers.classPrivateFieldLooseBase(this,b)[b](n);babelHelpers.classPrivateFieldLooseBase(this,u)[u](a,o,n);return e}function _(e){const t=e.filter((e=>e.type.code===a.CrmEntity.Company));const s=e.filter((e=>e.type.code===a.CrmEntity.Contact));return{companies:t,contacts:s,companiesToAdd:t.filter((e=>!e.id)),companiesToUpdate:t.filter(babelHelpers.classPrivateFieldLooseBase(this,y)[y].bind(this)),contactsToAdd:s.filter((e=>!e.id)),contactsToUpdate:s.filter(babelHelpers.classPrivateFieldLooseBase(this,y)[y].bind(this))}}async function I(e){return new Promise((t=>{if(Object.keys(e).length===0){t([])}BX.rest.callBatch(e,(e=>t(e)))}))}function M(e){const a=Object.values(e).map((e=>{var t;return(t=e.answer.error)==null?void 0:t.error_description})).filter((e=>e));if(t.Type.isArrayFilled(a)){throw new Error(t.Tag.render(i||(i=r`<span>${0}</span>`),a[0]).textContent)}}function U(e,t,a){e.forEach((e=>{e.id=a[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.CompanyAdd,e.index)].data()}));t.forEach((e=>{e.id=a[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactAdd,e.index)].data()}))}function G(e){if(!e.id){return false}const t=s.Core.getStore().getters["clients/getByClientData"](e);return e.name!==t.name||e.phones[0]!==t.phones[0]||e.emails[0]!==t.emails[0]}function D(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ParseName,t.index)]:{method:n.ParseFormattedName,params:{fields:{FORMATTED_NAME:t.name}}}})),{})}function S(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.CompanyAdd,t.index)]:{method:n.CompanyAdd,params:{fields:{TITLE:t.name,PHONE:t.phones.map((e=>({VALUE:e,VALUE_TYPE:l}))),EMAIL:t.emails.map((e=>({VALUE:e,VALUE_TYPE:l})))},params:{REGISTER_SONET_EVENT:"Y"}}}})),{})}function j(e,t){return e.reduce(((e,a)=>{var s,o;const r=(s=(o=t[0])==null?void 0:o.id)!=null?s:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.CompanyAdd)}]`;return{...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactAdd,a.index)]:{method:n.ContactAdd,params:{fields:{COMPANY_ID:t.length>0?r:undefined,...babelHelpers.classPrivateFieldLooseBase(this,F)[F](a.index),PHONE:a.phones.map((e=>({VALUE:e,VALUE_TYPE:l}))),EMAIL:a.emails.map((e=>({VALUE:e,VALUE_TYPE:l})))},params:{REGISTER_SONET_EVENT:"Y"}}}}}),{})}function K(e){return e.reduce(((e,{id:t})=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.CompanyGet,t)]:[n.CompanyGet,{id:t}]})),{})}function w(e){return e.reduce(((e,{id:t})=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactGet,t)]:[n.ContactGet,{id:t}]})),{})}function V(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.CompanyUpdate,t.id)]:{method:n.CompanyUpdate,params:{id:t.id,fields:{TITLE:t.name,...babelHelpers.classPrivateFieldLooseBase(this,f)[f](t)},params:{REGISTER_SONET_EVENT:"Y"}}}})),{})}function $(e){return e.reduce(((e,t)=>({...e,[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactUpdate,t.id)]:{method:n.ContactUpdate,params:{id:t.id,fields:{...babelHelpers.classPrivateFieldLooseBase(this,F)[F](t.index),...babelHelpers.classPrivateFieldLooseBase(this,f)[f](t)},params:{REGISTER_SONET_EVENT:"Y"}}}})),{})}function R(e){return{NAME:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ParseName,e)}][NAME]`,SECOND_NAME:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ParseName,e)}][SECOND_NAME]`,LAST_NAME:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ParseName,e)}][LAST_NAME]`}}function k(e){const t=s.Core.getStore().getters["clients/getByClientData"](e);const o=e.type.code===a.CrmEntity.Company?babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.CompanyGet,e.id):babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactGet,e.id);const r=[{ID:t.phones[0]?`$result[${o}][PHONE][0][ID]`:undefined,VALUE:e.phones[0],VALUE_TYPE:l}];const i=[{ID:t.emails[0]?`$result[${o}][EMAIL][0][ID]`:undefined,VALUE:e.emails[0],VALUE_TYPE:l}];return{PHONE:e.phones.length>0?r:undefined,EMAIL:e.emails.length>0?i:undefined}}async function X(e){try{const t=e.id;const o=await new Promise((e=>{BX.rest.callBatch({[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.GetCompanyContacts)]:[n.GetCompanyContacts,{id:t}],[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactGet)]:{method:n.ContactGet,params:{id:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.GetCompanyContacts)}][0][CONTACT_ID]`}},[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.AddFormattedName)]:{method:n.AddFormattedName,params:{fields:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.ContactGet)}]`}}},(t=>{var s,o,r,i,l;const n=t[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.AddFormattedName)].data();if(!(n!=null&&n.ID)){e(null)}e({id:Number(n.ID),name:n.FORMATTED_NAME,image:(s=n.PHOTO)==null?void 0:s.showUrl,type:{module:a.Module.Crm,code:a.CrmEntity.Contact},phones:(o=(r=n.PHONE)==null?void 0:r.map((({VALUE:e})=>e)))!=null?o:[],emails:(i=(l=n.EMAIL)==null?void 0:l.map((({VALUE:e})=>e)))!=null?i:[]})}))}));if(o===null){return 0}await s.Core.getStore().dispatch("clients/upsert",o);return o.id}catch(e){console.error("ClientService: loadLinkedContactByCompany error",e);return 0}}async function Y(e={}){try{const{id:t,methodName:o,requestKey:r,entityCode:i}=e;const l=await new Promise((e=>{BX.rest.callBatch({[babelHelpers.classPrivateFieldLooseBase(this,N)[N](r,t)]:{method:o,params:{id:t}},[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.AddFormattedName)]:{method:n.AddFormattedName,params:{fields:`$result[${babelHelpers.classPrivateFieldLooseBase(this,N)[N](r,t)}]`}}},(t=>{var s,o,r,l,n,c;const p=t[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.AddFormattedName)].data();if(!(p!=null&&p.ID)){e(null)}e({id:Number(p.ID),name:i===a.CrmEntity.Company?p.TITLE:p.FORMATTED_NAME,image:i===a.CrmEntity.Company?(s=p.LOGO)==null?void 0:s.showUrl:(o=p.PHOTO)==null?void 0:o.showUrl,type:{module:a.Module.Crm,code:i},phones:(r=(l=p.PHONE)==null?void 0:l.map((({VALUE:e})=>e)))!=null?r:[],emails:(n=(c=p.EMAIL)==null?void 0:c.map((({VALUE:e})=>e)))!=null?n:[]})}))}));if(l===null){return undefined}await s.Core.getStore().dispatch("clients/upsert",l);return l}catch(e){console.error(`ClientService: getEntityById error for ${entityCode}`,e);return undefined}}async function x(e){return new Promise((t=>{BX.rest.callBatch({[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.DealContactGet,e)]:{method:n.DealContactGet,params:{id:e}}},(a=>{const s=a[babelHelpers.classPrivateFieldLooseBase(this,N)[N](d.DealContactGet,e)].data();if(!s){t(null)}const o=s.find((e=>e.IS_PRIMARY==="Y"));t(o?o.CONTACT_ID:null)}))}))}function q(e,t=0){return e.replace("#id#",t)}const z=new T;const W={mapDtoToModel:o};e.ClientMappers=W;e.clientService=z})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX,BX.Booking.Const,BX.Booking);
//# sourceMappingURL=client-service.bundle.map.js