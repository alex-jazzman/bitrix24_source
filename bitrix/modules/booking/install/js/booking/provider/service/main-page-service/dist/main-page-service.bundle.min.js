this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,t,s,o,r,a,i,l,n,c){"use strict";var d=babelHelpers.classPrivateFieldLooseKey("response");var p=babelHelpers.classPrivateFieldLooseKey("extractClients");var g=babelHelpers.classPrivateFieldLooseKey("extractClientsFromBookings");var u=babelHelpers.classPrivateFieldLooseKey("extractClientsFromWaitListItems");var b=babelHelpers.classPrivateFieldLooseKey("extractClientsFromItem");class v{constructor(e){Object.defineProperty(this,u,{value:B});Object.defineProperty(this,g,{value:C});Object.defineProperty(this,p,{value:h});Object.defineProperty(this,d,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,d)[d]=e}getFavoriteIds(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].favorites.resources.map((e=>e.id))}getBookings(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].bookings.map((e=>a.BookingMappers.mapDtoToModel(e)))}getClientsProviderModuleId(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].clients.providerModuleId}getClients(){return[...babelHelpers.classPrivateFieldLooseBase(this,p)[p](r.CrmEntity.Contact),...babelHelpers.classPrivateFieldLooseBase(this,p)[p](r.CrmEntity.Company),...babelHelpers.classPrivateFieldLooseBase(this,u)[u](),...babelHelpers.classPrivateFieldLooseBase(this,g)[g]()]}getCounters(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].counters}getResources(){var e,t;const s=(e=(t=babelHelpers.classPrivateFieldLooseBase(this,d)[d].favorites)==null?void 0:t.resources)!=null?e:[];const o=babelHelpers.classPrivateFieldLooseBase(this,d)[d].bookings.flatMap((({resources:e})=>e));const r={};[...s,...o].forEach((e=>{var t,s;(s=r[t=e.id])!=null?s:r[t]=l.ResourceMappers.mapDtoToModel(e)}));return Object.values(r)}getResourceTypes(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].resourceTypes.map((e=>n.ResourceTypeMappers.mapDtoToModel(e)))}getWaitListItems(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].waitListItems.map((e=>c.WaitListMappers.mapDtoToModel(e)))}getIntersectionMode(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].isIntersectionForAll}getIsCurrentSenderAvailable(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].isCurrentSenderAvailable}getFormsMenu(){return babelHelpers.classPrivateFieldLooseBase(this,d)[d].formsMenu}}function h(e){const t=babelHelpers.classPrivateFieldLooseBase(this,d)[d].clients.providerModuleId;if(!t){return[]}return Object.values(babelHelpers.classPrivateFieldLooseBase(this,d)[d].clients.recent[e]).map((s=>({...s,type:{module:t,code:e}})))}function C(){return babelHelpers.classPrivateFieldLooseBase(v,b)[b](babelHelpers.classPrivateFieldLooseBase(this,d)[d].bookings)}function B(){return babelHelpers.classPrivateFieldLooseBase(v,b)[b](babelHelpers.classPrivateFieldLooseBase(this,d)[d].waitListItems)}function M(e){return e.flatMap((({clients:e})=>e.map((e=>i.ClientMappers.mapDtoToModel(e)))))}Object.defineProperty(v,b,{value:M});var P=babelHelpers.classPrivateFieldLooseKey("response");class F{constructor(e){Object.defineProperty(this,P,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,P)[P]=e}getCounters(){return babelHelpers.classPrivateFieldLooseBase(this,P)[P].counters}getTotalClients(){return babelHelpers.classPrivateFieldLooseBase(this,P)[P].clientStatistics.total}getTotalNewClientsToday(){return babelHelpers.classPrivateFieldLooseBase(this,P)[P].clientStatistics.totalToday}getMoneyStatistics(){return babelHelpers.classPrivateFieldLooseBase(this,P)[P].moneyStatistics}}var y=babelHelpers.classPrivateFieldLooseKey("dateCache");var I=babelHelpers.classPrivateFieldLooseKey("requestData");var L=babelHelpers.classPrivateFieldLooseKey("requestDataForBooking");class S{constructor(){Object.defineProperty(this,L,{value:f});Object.defineProperty(this,I,{value:m});Object.defineProperty(this,y,{writable:true,value:[]})}clearCache(e){babelHelpers.classPrivateFieldLooseBase(this,y)[y]=babelHelpers.classPrivateFieldLooseBase(this,y)[y].filter((t=>s.resourcesDateCache.isDateLoaded(t,e)))}async fetchData(e){if(babelHelpers.classPrivateFieldLooseBase(this,y)[y].includes(e)){return}babelHelpers.classPrivateFieldLooseBase(this,y)[y].push(e);await this.loadData(e)}async loadData(e){try{if(t.Core.getStore().getters[`${r.Model.Interface}/editingBookingId`]>0){await babelHelpers.classPrivateFieldLooseBase(this,L)[L](e)}else{await babelHelpers.classPrivateFieldLooseBase(this,I)[I](e)}}catch(e){console.error("BookingMainPageGetRequest: error",e)}}async fetchCounters(){try{const e=await(new o.ApiClient).get("MainPage.getCounters");const s=new F(e);await Promise.all([t.Core.getStore().dispatch(`${r.Model.Interface}/setTotalClients`,s.getTotalClients()),t.Core.getStore().dispatch(`${r.Model.Interface}/setTotalNewClientsToday`,s.getTotalNewClientsToday()),t.Core.getStore().dispatch(`${r.Model.Interface}/setMoneyStatistics`,s.getMoneyStatistics()),t.Core.getStore().dispatch(`${r.Model.Counters}/set`,s.getCounters())])}catch(e){console.error("BookingMainPageGetCountersRequest: error",e)}}async activateDemo(){try{return await(new o.ApiClient).get("MainPage.activateDemo")}catch(e){console.error("BookingMainPageActivateDemoRequest: error",e)}return Promise.resolve(false)}}async function m(e){const a=await(new o.ApiClient).get("MainPage.get",{dateTs:e});const i=new v(a);s.resourcesDateCache.upsertIds(e,i.getFavoriteIds());await Promise.all([t.Core.getStore().dispatch(`${r.Model.Favorites}/set`,i.getFavoriteIds()),t.Core.getStore().dispatch(`${r.Model.Interface}/setResourcesIds`,i.getFavoriteIds()),t.Core.getStore().dispatch(`${r.Model.Interface}/setIntersectionMode`,i.getIntersectionMode()),t.Core.getStore().dispatch(`${r.Model.Resources}/upsertMany`,i.getResources()),t.Core.getStore().dispatch(`${r.Model.ResourceTypes}/upsertMany`,i.getResourceTypes()),t.Core.getStore().dispatch(`${r.Model.Counters}/set`,i.getCounters()),t.Core.getStore().dispatch(`${r.Model.Bookings}/upsertMany`,i.getBookings()),t.Core.getStore().dispatch(`${r.Model.WaitList}/upsertMany`,i.getWaitListItems()),t.Core.getStore().dispatch(`${r.Model.Clients}/upsertMany`,i.getClients()),t.Core.getStore().dispatch(`${r.Model.Clients}/setProviderModuleId`,i.getClientsProviderModuleId()),t.Core.getStore().dispatch(`${r.Model.Interface}/setIsCurrentSenderAvailable`,i.getIsCurrentSenderAvailable()),t.Core.getStore().dispatch(`${r.Model.FormsMenu}/setFormsMenu`,i.getFormsMenu())])}async function f(e){const a=t.Core.getParams().editingBookingId;const i=Intl.DateTimeFormat().resolvedOptions().timeZone;const l=t.Core.getStore().getters[`${r.Model.Favorites}/get`];const n=await(new o.ApiClient).get("MainPage.getForBooking",{dateTs:e,bookingId:a,timezone:i,resourcesIds:l});const c=new v(n);const d=[t.Core.getStore().dispatch(`${r.Model.Interface}/setIntersectionMode`,c.getIntersectionMode()),t.Core.getStore().dispatch(`${r.Model.Resources}/upsertMany`,c.getResources()),t.Core.getStore().dispatch(`${r.Model.ResourceTypes}/upsertMany`,c.getResourceTypes()),t.Core.getStore().dispatch(`${r.Model.Counters}/set`,c.getCounters()),t.Core.getStore().dispatch(`${r.Model.Bookings}/upsertMany`,c.getBookings()),t.Core.getStore().dispatch(`${r.Model.Clients}/upsertMany`,c.getClients()),t.Core.getStore().dispatch(`${r.Model.Clients}/setProviderModuleId`,c.getClientsProviderModuleId()),t.Core.getStore().dispatch(`${r.Model.Interface}/setIsCurrentSenderAvailable`,c.getIsCurrentSenderAvailable())];const p=c.getBookings().find((e=>e.id===a));if(!p&&e===0){d.push(t.Core.getStore().dispatch(`${r.Model.Interface}/setEditingBookingId`,0))}let g=new Date(e*1e3);if(p&&e===0){const e=new Date(p.dateFromTs);g=new Date(e.getFullYear(),e.getMonth(),e.getDate());d.push(t.Core.getStore().dispatch(`${r.Model.Interface}/setSelectedDateTs`,g.getTime()));babelHelpers.classPrivateFieldLooseBase(this,y)[y].push(g.getTime()/1e3)}let u=l;if(p&&l.length===0){u=[p.resourcesIds[0]];d.push(t.Core.getStore().dispatch(`${r.Model.Favorites}/set`,[p.resourcesIds[0]]),t.Core.getStore().dispatch(`${r.Model.Interface}/setResourcesIds`,[p.resourcesIds[0]]))}s.resourcesDateCache.upsertIds(g.getTime()/1e3,u);await Promise.all(d)}const H=new S;e.mainPageService=H})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX.Booking,BX.Booking.Lib,BX.Booking.Lib,BX.Booking.Const,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service,BX.Booking.Provider.Service);
//# sourceMappingURL=main-page-service.bundle.map.js