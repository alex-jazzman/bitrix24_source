{"version":3,"file":"calendar-service.bundle.js","sources":["../src/lib/request-next-booking-dates-generator.js","../src/calendar-service.js"],"sourcesContent":["import type { BookingListFilter } from 'booking.lib.booking-filter';\nimport type { CalendarGetBookingsDatesResponse } from '../types';\n\nexport async function* requestNextBookingDatesGenerator(\n\tstartDateTs: number,\n\tlimitDateTs: number,\n\tfilter: BookingListFilter,\n\trequest: (filter: BookingListFilter) => Promise<CalendarGetBookingsDatesResponse>,\n): AsyncGenerator<CalendarGetBookingsDatesResponse, void>\n{\n\tconst direction = startDateTs < limitDateTs ? 1 : -1;\n\tconst getWithin = getWithinBuilder(3, direction, limitDateTs);\n\tlet { fromDate, toDate } = getWithin(new Date(startDateTs));\n\n\tconst isLimit = (toDateTs: number): boolean => {\n\t\treturn direction === 1 ? toDateTs > limitDateTs : toDateTs < limitDateTs;\n\t};\n\n\twhile (!isLimit(fromDate.getTime()))\n\t{\n\t\tconst data = await request({\n\t\t\t...filter,\n\t\t\tWITHIN: {\n\t\t\t\tDATE_FROM: fromDate.getTime() / 1000,\n\t\t\t\tDATE_TO: toDate.getTime() / 1000,\n\t\t\t},\n\t\t});\n\n\t\tconst nextDates = getWithin(direction === 1 ? toDate : fromDate);\n\t\tfromDate = nextDates.fromDate;\n\t\ttoDate = nextDates.toDate;\n\n\t\tif (data.foundDates.length > 0)\n\t\t{\n\t\t\tyield data;\n\t\t}\n\t}\n}\n\nfunction getWithinBuilder(duration: number, direction: 1 | -1, limitDateTs: number): (Date) => {\n\tfromDate: Date,\n\ttoDate: Date\n}\n{\n\tlet intervalDuration = duration;\n\n\treturn function(firstDate: Date): { fromDate: Date, toDate: Date } {\n\t\tintervalDuration++;\n\n\t\tconst secondDate = new Date(firstDate);\n\t\tsecondDate.setMonth(secondDate.getMonth() + (intervalDuration + 1) * direction);\n\t\tsecondDate.setDate(0);\n\n\t\tif (direction === 1)\n\t\t{\n\t\t\treturn {\n\t\t\t\tfromDate: firstDate,\n\t\t\t\ttoDate: secondDate.getDate() > limitDateTs ? new Date(limitDateTs) : secondDate,\n\t\t\t};\n\t\t}\n\n\t\tconst fromDate = secondDate.getTime() < limitDateTs ? new Date(limitDateTs) : secondDate;\n\t\tconst toDate = firstDate;\n\n\t\tif (toDate.getTime() === fromDate.getTime())\n\t\t{\n\t\t\ttoDate.setDate(toDate.getDate() + 1);\n\t\t}\n\n\t\treturn {\n\t\t\tfromDate,\n\t\t\ttoDate,\n\t\t};\n\t};\n}\n","import { Type } from 'main.core';\n\nimport { Core } from 'booking.core';\nimport { Model } from 'booking.const';\nimport { ApiClient } from 'booking.lib.api-client';\nimport { bookingFilter, bookingDateCountFilter } from 'booking.lib.booking-filter';\nimport type { BookingListFilter, BookingUIFilter } from 'booking.lib.booking-filter';\n\nimport { requestNextBookingDatesGenerator } from './lib';\nimport { CalendarGetBookingsDatesResponse, CalendarGetBookingsDatesCountResponse } from './types';\n\nexport class CalendarService\n{\n\t#filterMarksRequests: { [key: string]: Promise<CalendarGetBookingsDatesResponse> } = {};\n\t#filterBookingDatesCountRequests: { [key: string]: Promise<CalendarGetBookingsDatesCountResponse> } = {};\n\t#lastFilterMarksRequest: Promise<CalendarGetBookingsDatesResponse>;\n\t#freeMarksRequests: { [key: string]: Promise } = {};\n\t#lastFreeMarksRequest: Promise;\n\t#counterMarksRequests: { [key: string]: Promise } = {};\n\n\tclearCache(timestamp: number, resourceId: number): void\n\t{\n\t\tObject.keys(this.#filterMarksRequests).forEach((key) => {\n\t\t\tconst { dateTs, sortedResources } = JSON.parse(key);\n\t\t\tif (timestamp === dateTs)\n\t\t\t{\n\t\t\t\tdelete this.#filterMarksRequests[key];\n\t\t\t}\n\n\t\t\tfor (const ids of sortedResources)\n\t\t\t{\n\t\t\t\tif (ids.includes(resourceId))\n\t\t\t\t{\n\t\t\t\t\tdelete this.#filterMarksRequests[key];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tclearFilterCache(): void\n\t{\n\t\tthis.#filterMarksRequests = {};\n\t\tthis.clearDataCountCache();\n\t}\n\n\tclearDataCountCache(): void\n\t{\n\t\tthis.#filterBookingDatesCountRequests = {};\n\t}\n\n\tasync loadMarks(dateTs: number, resources: number[][]): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (!Type.isArrayFilled(resources))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sortedResources = resources\n\t\t\t\t.map((ids: number[]) => {\n\t\t\t\t\treturn ids.sort((a, b) => a - b);\n\t\t\t\t})\n\t\t\t\t.sort((a, b) => a[0] - b[0])\n\t\t\t;\n\n\t\t\tconst key = JSON.stringify({ dateTs, sortedResources });\n\t\t\tthis.#freeMarksRequests[key] ??= this.#requestLoadMarks(dateTs, resources);\n\t\t\tthis.#lastFreeMarksRequest = this.#freeMarksRequests[key];\n\n\t\t\tconst freeMarks = await this.#freeMarksRequests[key];\n\n\t\t\tif (this.#freeMarksRequests[key] !== this.#lastFreeMarksRequest)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Core.getStore().dispatch(`${Model.Interface}/setFreeMarks`, freeMarks);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: loadMarks error', error);\n\t\t}\n\t}\n\n\tasync loadFilterMarks(fields: BookingUIFilter, inFuture = false): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst filter = inFuture\n\t\t\t\t? bookingDateCountFilter.prepareFutureFilter(fields, true)\n\t\t\t\t: bookingFilter.prepareFilter(fields, true);\n\n\t\t\tconst key = JSON.stringify(filter);\n\t\t\tthis.#filterMarksRequests[key] ??= this.#requestFilterMarks(filter);\n\t\t\tthis.#lastFilterMarksRequest = this.#filterMarksRequests[key];\n\n\t\t\tconst { foundDates, foundDatesWithCounters } = await this.#filterMarksRequests[key];\n\n\t\t\tif (this.#filterMarksRequests[key] !== this.#lastFilterMarksRequest)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Promise.all([\n\t\t\t\tCore.getStore().dispatch(`${Model.Filter}/addFilterDates`, foundDates),\n\t\t\t\tCore.getStore().dispatch(`${Model.Filter}/setFilteredMarks`, foundDates),\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setCounterMarks`, foundDatesWithCounters),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: loadFilterMarks error', error);\n\t\t}\n\t}\n\n\tasync loadCounterMarks(dateTs: number, force = false): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst key = dateTs.toString();\n\n\t\t\tif (force)\n\t\t\t{\n\t\t\t\tthis.#counterMarksRequests[key] = this.#requestCounterMarks(dateTs);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.#counterMarksRequests[key] ??= this.#requestCounterMarks(dateTs);\n\t\t\t}\n\n\t\t\tconst counterMarks = await this.#counterMarksRequests[key];\n\n\t\t\tawait Core.getStore().dispatch(`${Model.Interface}/setCounterMarks`, counterMarks);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('CalendarService: loadCounterMarks error', error);\n\t\t}\n\t}\n\n\tasync loadBookingsDateCount(fields: BookingUIFilter, futureOnly = false): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst filter = futureOnly\n\t\t\t\t? bookingDateCountFilter.prepareFutureOnlyFilter(fields, true)\n\t\t\t\t: bookingDateCountFilter.prepareUndatedFilter(fields, true);\n\n\t\t\tconst key = JSON.stringify(filter);\n\t\t\tthis.#filterBookingDatesCountRequests[key] ??= this.#requestBookingsDateCount(filter);\n\n\t\t\tconst data = await this.#filterBookingDatesCountRequests[key];\n\n\t\t\tawait Core.getStore().dispatch(`${Model.Filter}/setDatesCount`, data);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('CalendarService: loadBookingDatesCount error', error);\n\t\t}\n\t}\n\n\tasync loadNextFilterMarks(fields: BookingUIFilter, startDateTs: number, limitDateTs: number): Promise<void>\n\t{\n\t\tconst $store = Core.getStore();\n\n\t\ttry\n\t\t{\n\t\t\tconst filter = bookingFilter.prepareFilter(fields, true);\n\n\t\t\t$store.dispatch(`${Model.Filter}/setFetchingNextDate`, true);\n\t\t\tconst { foundDates, foundDatesWithCounters } = await this.#requestNextBookingDates(\n\t\t\t\tfilter,\n\t\t\t\tstartDateTs,\n\t\t\t\tlimitDateTs,\n\t\t\t);\n\n\t\t\tawait Promise.all([\n\t\t\t\tCore.getStore().dispatch(`${Model.Filter}/addFilterDates`, foundDates),\n\t\t\t\tCore.getStore().dispatch(`${Model.Filter}/setFilteredMarks`, foundDates),\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setCounterMarks`, foundDatesWithCounters),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: loadNextFilterMarks error', error);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\t$store.dispatch(`${Model.Filter}/setFetchingNextDate`, false);\n\t\t}\n\t}\n\n\tasync #requestLoadMarks(dateTs: number, resources: number[][]): Promise<string[]>\n\t{\n\t\tconst now = new Date();\n\t\tconst today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\t\tconst minTs = today.getTime() + this.#offset;\n\n\t\tconst dateFromTs = Math.max(minTs, dateTs) / 1000;\n\t\tconst dateToTs = new Date(dateTs).setMonth(new Date(dateTs).getMonth() + 1) / 1000;\n\n\t\tif (dateToTs <= minTs / 1000)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { freeDates } = await new ApiClient().post('Calendar.getResourceOccupation', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tdateFromTs,\n\t\t\tdateToTs,\n\t\t\tresources,\n\t\t});\n\n\t\treturn freeDates;\n\t}\n\n\t#requestFilterMarks(filter: BookingListFilter): Promise<CalendarGetBookingsDatesResponse>\n\t{\n\t\treturn new ApiClient().post('Calendar.getBookingsDates', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tdateFromTs: filter.WITHIN.DATE_FROM,\n\t\t\tdateToTs: filter.WITHIN.DATE_TO,\n\t\t\tfilter,\n\t\t});\n\t}\n\n\tasync #requestNextBookingDates(\n\t\tfilter: BookingListFilter,\n\t\tstartTs: number,\n\t\tlimitDateTs: number,\n\t): Promise<CalendarGetBookingsDatesResponse>\n\t{\n\t\tconst getBookingDatesGenerator = requestNextBookingDatesGenerator(\n\t\t\tstartTs,\n\t\t\tlimitDateTs,\n\t\t\tfilter,\n\t\t\tthis.#requestFilterMarks.bind(this),\n\t\t);\n\n\t\tfor await (const data of getBookingDatesGenerator)\n\t\t{\n\t\t\tif (data.foundDates.length > 0)\n\t\t\t{\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\n\t\treturn { foundDates: [], foundDatesWithCounters: [] };\n\t}\n\n\tasync #requestCounterMarks(dateTs: number): Promise<string[]>\n\t{\n\t\tconst dateFromTs = dateTs / 1000;\n\t\tconst dateToTs = new Date(dateTs).setMonth(new Date(dateTs).getMonth() + 1) / 1000;\n\n\t\tconst { foundDatesWithCounters } = await new ApiClient().post('Calendar.getBookingsDates', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tdateFromTs,\n\t\t\tdateToTs,\n\t\t\tfilter: {\n\t\t\t\tHAS_COUNTERS_USER_ID: 1,\n\t\t\t},\n\t\t});\n\n\t\treturn foundDatesWithCounters;\n\t}\n\n\t#requestBookingsDateCount(filter: BookingListFilter): Promise<CalendarGetBookingsDatesCountResponse>\n\t{\n\t\treturn new ApiClient().post('Calendar.getBookingsDatesCount', {\n\t\t\ttimezone: this.#timezone,\n\t\t\tfilter,\n\t\t});\n\t}\n\n\tget #offset(): string\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/offset`];\n\t}\n\n\tget #timezone(): string\n\t{\n\t\treturn Core.getStore().getters[`${Model.Interface}/timezone`];\n\t}\n}\n\nexport const calendarService = new CalendarService();\n"],"names":["requestNextBookingDatesGenerator","startDateTs","limitDateTs","filter","request","direction","getWithin","getWithinBuilder","fromDate","toDate","Date","isLimit","toDateTs","getTime","data","WITHIN","DATE_FROM","DATE_TO","nextDates","foundDates","length","duration","intervalDuration","firstDate","secondDate","setMonth","getMonth","setDate","getDate","CalendarService","clearCache","timestamp","resourceId","Object","keys","forEach","key","dateTs","sortedResources","JSON","parse","ids","includes","clearFilterCache","clearDataCountCache","loadMarks","resources","Type","isArrayFilled","map","sort","a","b","stringify","freeMarks","Core","getStore","dispatch","Model","Interface","error","console","loadFilterMarks","fields","inFuture","bookingDateCountFilter","prepareFutureFilter","bookingFilter","prepareFilter","foundDatesWithCounters","Promise","all","Filter","loadCounterMarks","force","toString","counterMarks","loadBookingsDateCount","futureOnly","prepareFutureOnlyFilter","prepareUndatedFilter","loadNextFilterMarks","$store","now","today","getFullYear","minTs","dateFromTs","Math","max","dateToTs","freeDates","ApiClient","post","timezone","startTs","getBookingDatesGenerator","bind","HAS_COUNTERS_USER_ID","getters","calendarService"],"mappings":"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"}