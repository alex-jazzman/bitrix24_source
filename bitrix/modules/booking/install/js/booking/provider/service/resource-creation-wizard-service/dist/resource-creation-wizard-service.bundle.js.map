{"version":3,"file":"resource-creation-wizard-service.bundle.js","sources":["../src/data-extractor.js","../src/resource-creation-wizard-service.js"],"sourcesContent":["import type { SlotRange } from 'booking.model.resources';\nimport type { AdvertisingResourceType, NotificationsSettings } from './types';\n\nexport class ResourceCreationWizardDataExtractor\n{\n\t#data;\n\n\tconstructor(data)\n\t{\n\t\tthis.#data = data;\n\t}\n\n\tgetAdvertisingTypes(): AdvertisingResourceType[]\n\t{\n\t\treturn this.#data.advertisingResourceTypes ?? [];\n\t}\n\n\tgetNotifications(): NotificationsSettings\n\t{\n\t\treturn this.#data.notificationsSettings.notifications;\n\t}\n\n\tgetSenders(): NotificationsSettings\n\t{\n\t\treturn this.#data.notificationsSettings.senders;\n\t}\n\n\tgetCompanyScheduleSlots(): SlotRange[]\n\t{\n\t\treturn this.#data.companyScheduleSlots;\n\t}\n\n\tisCompanyScheduleAccess(): boolean\n\t{\n\t\treturn Boolean(this.#data.isCompanyScheduleAccess);\n\t}\n\n\tgetCompanyScheduleUrl(): string\n\t{\n\t\treturn this.#data.companyScheduleUrl;\n\t}\n\n\tgetWeekStart(): string\n\t{\n\t\treturn this.#data.weekStart;\n\t}\n\n\tisChannelChoiceAvailable(): boolean\n\t{\n\t\treturn this.#data.isChannelChoiceAvailable;\n\t}\n}\n","import type { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'booking.core';\nimport { Model, Option } from 'booking.const';\nimport { apiClient } from 'booking.lib.api-client';\nimport { optionService } from 'booking.provider.service.option-service';\n\nimport { ResourceCreationWizardDataExtractor } from './data-extractor';\n\nclass ResourceCreationWizardService\n{\n\tasync fetchData(): Promise<void>\n\t{\n\t\tawait this.loadData();\n\t}\n\n\tasync loadData(): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst data = await apiClient.post('ResourceWizard.get', {});\n\n\t\t\tconst extractor = new ResourceCreationWizardDataExtractor(data);\n\t\t\tconst wizardModel = Model.ResourceCreationWizard;\n\n\t\t\tawait Promise.all([\n\t\t\t\tthis.$store.dispatch(`${wizardModel}/setAdvertisingTypes`, extractor.getAdvertisingTypes()),\n\t\t\t\tthis.$store.dispatch(`${wizardModel}/setCompanyScheduleSlots`, extractor.getCompanyScheduleSlots()),\n\t\t\t\tthis.$store.dispatch(`${wizardModel}/setCompanyScheduleAccess`, extractor.isCompanyScheduleAccess()),\n\t\t\t\tthis.$store.dispatch(`${wizardModel}/setCompanyScheduleUrl`, extractor.getCompanyScheduleUrl()),\n\t\t\t\tthis.$store.dispatch(`${wizardModel}/setWeekStart`, extractor.getWeekStart()),\n\t\t\t\tthis.$store.dispatch(`${wizardModel}/setIsChannelChoiceAvailable`, extractor.isChannelChoiceAvailable()),\n\t\t\t\tthis.$store.dispatch(`${Model.Notifications}/upsertMany`, extractor.getNotifications()),\n\t\t\t\tthis.$store.dispatch(`${Model.Notifications}/upsertManySenders`, extractor.getSenders()),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('ResourceCreationWizardService loadData error', error);\n\t\t}\n\t}\n\n\tasync updateNotificationExpanded(type: string, isExpanded: boolean): Promise<void>\n\t{\n\t\tawait this.$store.dispatch(`${Model.Notifications}/setIsExpanded`, { type, isExpanded });\n\n\t\tconst notifications = Object.fromEntries(this.$store.getters[`${Model.Notifications}/get`]\n\t\t\t.map((notification) => [notification.type, notification.isExpanded]));\n\n\t\ttry\n\t\t{\n\t\t\tawait optionService.set(Option.NotificationsExpanded, JSON.stringify(notifications));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tawait this.$store.dispatch(`${Model.Notifications}/setIsExpanded`, { type, isExpanded: !isExpanded });\n\n\t\t\tconsole.error('ResourceCreationWizardService updateNotificationExpanded error', error);\n\t\t}\n\t}\n\n\tget $store(): Store\n\t{\n\t\treturn Core.getStore();\n\t}\n}\n\nexport const resourceCreationWizardService = new ResourceCreationWizardService();\n"],"names":["ResourceCreationWizardDataExtractor","constructor","data","getAdvertisingTypes","advertisingResourceTypes","getNotifications","notificationsSettings","notifications","getSenders","senders","getCompanyScheduleSlots","companyScheduleSlots","isCompanyScheduleAccess","Boolean","getCompanyScheduleUrl","companyScheduleUrl","getWeekStart","weekStart","isChannelChoiceAvailable","ResourceCreationWizardService","fetchData","loadData","apiClient","post","extractor","wizardModel","Model","ResourceCreationWizard","Promise","all","$store","dispatch","Notifications","error","console","updateNotificationExpanded","type","isExpanded","Object","fromEntries","getters","map","notification","optionService","set","Option","NotificationsExpanded","JSON","stringify","Core","getStore","resourceCreationWizardService"],"mappings":"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"}