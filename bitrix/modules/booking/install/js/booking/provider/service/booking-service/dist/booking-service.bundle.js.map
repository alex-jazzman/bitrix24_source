{"version":3,"file":"booking-service.bundle.js","sources":["../src/mappers.js","../src/booking-data-extractor.js","../src/booking-service.js","../src/index.js"],"sourcesContent":["import { Type } from 'main.core';\nimport type { BookingModel } from 'booking.model.bookings';\nimport type { BookingDto, BookingFromWaitListItemDto } from './types';\n\nexport function mapModelToDto(booking: BookingModel): BookingDto\n{\n\tconst mappings = {\n\t\tid: () => Number(booking.id) || 0,\n\t\tresources: () => booking.resourcesIds.map((id) => ({ id })),\n\t\tprimaryClient: () => booking.clients?.[0],\n\t\tclients: () => booking.clients,\n\t\tname: () => booking.name,\n\t\tdatePeriod: () => ({\n\t\t\tfrom: {\n\t\t\t\ttimestamp: booking.dateFromTs / 1000,\n\t\t\t\ttimezone: booking.timezoneFrom,\n\t\t\t},\n\t\t\tto: {\n\t\t\t\ttimestamp: booking.dateToTs / 1000,\n\t\t\t\ttimezone: booking.timezoneTo,\n\t\t\t},\n\t\t}),\n\t\tisConfirmed: () => booking.isConfirmed,\n\t\trrule: () => booking.rrule,\n\t\tnote: () => booking.note,\n\t\tvisitStatus: () => booking.visitStatus,\n\t\texternalData: () => booking.externalData,\n\t};\n\n\tconst dependentFields = new Map([\n\t\t['resources', ['resourcesIds']],\n\t\t['datePeriod', ['dateFromTs', 'dateToTs']],\n\t]);\n\n\treturn Object.keys(mappings).reduce((result, field) => {\n\t\tconst dependencies = dependentFields.get(field);\n\t\tconst hasDependencies = dependencies ? dependencies.every((dep) => dep in booking) : true;\n\n\t\tif (hasDependencies && (field in booking || dependencies))\n\t\t{\n\t\t\tconst value = mappings[field]();\n\t\t\tif (value !== undefined)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\tresult[field] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}, {});\n}\n\nexport function mapDtoToModel(bookingDto: BookingDto): BookingModel\n{\n\tconst clients = bookingDto.clients.filter((client) => Type.isArrayFilled(Object.values(client.data)));\n\tconst booking = {\n\t\tid: bookingDto.id,\n\t\tupdatedAt: bookingDto.updatedAt,\n\t\tresourcesIds: bookingDto.resources.map(({ id }) => id),\n\t\tprimaryClient: clients?.[0],\n\t\tclients,\n\t\tcounter: bookingDto.counter,\n\t\tcounters: bookingDto.counters,\n\t\tcreatedAt: bookingDto.createdAt,\n\t\tname: bookingDto.name,\n\t\tdateFromTs: bookingDto.datePeriod.from.timestamp * 1000,\n\t\ttimezoneFrom: bookingDto.datePeriod.from.timezone,\n\t\tdateToTs: bookingDto.datePeriod.to.timestamp * 1000,\n\t\ttimezoneTo: bookingDto.datePeriod.to.timezone,\n\t\tisConfirmed: bookingDto.isConfirmed,\n\t\trrule: bookingDto.rrule,\n\t\tnote: bookingDto.note,\n\t\tvisitStatus: bookingDto.visitStatus,\n\t\texternalData: bookingDto.externalData,\n\t\tmessages: bookingDto.messages?.length ? bookingDto.messages : undefined,\n\t};\n\n\treturn Object.fromEntries(Object.entries(booking).filter(([, value]) => !Type.isUndefined(value)));\n}\n\nexport function mapModelToCreateFromWaitListItemDto(waitListItemId: number, booking: BookingModel): BookingFromWaitListItemDto\n{\n\treturn {\n\t\twaitListItemId,\n\t\tresources: booking.resourcesIds.map((id) => ({ id })),\n\t\tdatePeriod: {\n\t\t\tfrom: {\n\t\t\t\ttimestamp: booking.dateFromTs / 1000,\n\t\t\t\ttimezone: booking.timezoneFrom,\n\t\t\t},\n\t\t\tto: {\n\t\t\t\ttimestamp: booking.dateToTs / 1000,\n\t\t\t\ttimezone: booking.timezoneTo,\n\t\t\t},\n\t\t},\n\t};\n}\n","import { ClientMappers } from 'booking.provider.service.client-service';\nimport { ResourceMappers } from 'booking.provider.service.resources-service';\nimport type { BookingModel } from 'booking.model.bookings';\nimport type { ClientModel } from 'booking.model.clients';\nimport type { ClientDto } from 'booking.provider.service.client-service';\nimport type { ResourceModel } from 'booking.model.resources';\nimport type { ResourceDto } from 'booking.provider.service.resources-service';\n\nimport { mapDtoToModel } from './mappers';\nimport type { BookingDto } from './types';\n\nexport class BookingDataExtractor\n{\n\t#response: BookingDto[];\n\n\tconstructor(response: BookingDto[])\n\t{\n\t\tthis.#response = response;\n\t}\n\n\tgetBookings(): BookingModel[]\n\t{\n\t\treturn this.#response.map((bookingDto: BookingDto): BookingModel => mapDtoToModel(bookingDto));\n\t}\n\n\tgetBookingsIds(): number[]\n\t{\n\t\treturn this.#response.map(({ id }) => id);\n\t}\n\n\tgetClients(): ClientModel[]\n\t{\n\t\treturn this.#response\n\t\t\t.flatMap(({ clients }) => clients)\n\t\t\t.map((clientDto: ClientDto): ClientModel => {\n\t\t\t\treturn ClientMappers.mapDtoToModel(clientDto);\n\t\t\t})\n\t\t;\n\t}\n\n\tgetResources(): ResourceModel[]\n\t{\n\t\treturn this.#response\n\t\t\t.flatMap(({ resources }) => resources)\n\t\t\t.map((resourceDto: ResourceDto): ResourceModel => {\n\t\t\t\treturn ResourceMappers.mapDtoToModel(resourceDto);\n\t\t\t})\n\t\t;\n\t}\n}\n","import { Core } from 'booking.core';\nimport { Model } from 'booking.const';\nimport { ApiClient } from 'booking.lib.api-client';\nimport { bookingFilter } from 'booking.lib.booking-filter';\nimport { mainPageService } from 'booking.provider.service.main-page-service';\nimport type { BookingModel } from 'booking.model.bookings';\nimport type { BookingUIFilter, BookingListFilter } from 'booking.lib.booking-filter';\n\nimport { BookingDataExtractor } from './booking-data-extractor';\nimport { mapModelToDto, mapDtoToModel, mapModelToCreateFromWaitListItemDto } from './mappers';\nimport type { BookingDto } from './types';\n\nclass BookingService\n{\n\t#filterRequests: { [key: string]: Promise } = {};\n\t#lastFilterRequest: Promise;\n\n\tasync add(booking: BookingModel): Promise<{ success: boolean, booking: ?BookingModel }>\n\t{\n\t\tconst id = booking.id;\n\t\tconst $store = Core.getStore();\n\n\t\ttry\n\t\t{\n\t\t\tawait $store.dispatch(`${Model.Interface}/addCreatedFromEmbedBooking`, id);\n\t\t\tawait $store.dispatch(`${Model.Interface}/addQuickFilterIgnoredBookingId`, id);\n\t\t\tawait $store.dispatch(`${Model.Bookings}/add`, booking);\n\n\t\t\tconst bookingDto = mapModelToDto(booking);\n\t\t\tconst data = await (new ApiClient()).post('Booking.add', { booking: bookingDto });\n\t\t\tconst createdBooking = mapDtoToModel(data);\n\n\t\t\tconst clients = new BookingDataExtractor([data]).getClients();\n\t\t\tvoid $store.dispatch(`${Model.Clients}/upsertMany`, clients);\n\n\t\t\tawait $store.dispatch(`${Model.Interface}/setAnimationPause`, true);\n\t\t\tawait $store.dispatch(`${Model.Interface}/addCreatedFromEmbedBooking`, createdBooking.id);\n\t\t\tawait $store.dispatch(`${Model.Interface}/addQuickFilterIgnoredBookingId`, createdBooking.id);\n\t\t\tawait $store.dispatch(`${Model.Bookings}/update`, {\n\t\t\t\tid,\n\t\t\t\tbooking: createdBooking,\n\t\t\t});\n\n\t\t\tvoid mainPageService.fetchCounters();\n\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tbooking: createdBooking,\n\t\t\t};\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tvoid $store.dispatch(`${Model.Bookings}/delete`, id);\n\n\t\t\tconsole.error('BookingService: add error', error);\n\n\t\t\treturn { success: false };\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tawait $store.dispatch(`${Model.Interface}/setAnimationPause`, false);\n\t\t}\n\t}\n\n\tasync addList(bookings: BookingModel[]): Promise<void>\n\t{\n\t\tconst $store = Core.getStore();\n\n\t\ttry\n\t\t{\n\t\t\tawait $store.dispatch(`${Model.Interface}/addCreatedFromEmbedBooking`, bookings.map(({ id }) => id));\n\t\t\tconst bookingList = bookings.map((booking) => mapModelToDto(booking));\n\n\t\t\tconst api = new ApiClient();\n\t\t\tconst data = await api.post('Booking.addList', { bookingList });\n\t\t\tconst createdBookings = data.map((d) => mapDtoToModel(d));\n\n\t\t\tawait Promise.all([\n\t\t\t\t$store.dispatch(`${Model.Interface}/addCreatedFromEmbedBooking`, createdBookings.map(({ id }) => id)),\n\t\t\t\t$store.dispatch(`${Model.Bookings}/upsertMany`, createdBookings),\n\t\t\t]);\n\n\t\t\tvoid mainPageService.fetchCounters();\n\n\t\t\treturn createdBookings;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: add list error', error);\n\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tasync update(booking: BookingModel): Promise<void>\n\t{\n\t\tconst id = booking.id;\n\t\tconst bookingBeforeUpdate = { ...Core.getStore().getters[`${Model.Bookings}/getById`](id) };\n\n\t\ttry\n\t\t{\n\t\t\tif (booking.clients)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\tbooking.primaryClient ??= booking.clients[0];\n\t\t\t}\n\n\t\t\tawait Core.getStore().dispatch(`${Model.Bookings}/update`, { id, booking });\n\n\t\t\tconst bookingDto = mapModelToDto(booking);\n\t\t\tconst data = await (new ApiClient()).post('Booking.update', { booking: bookingDto });\n\t\t\tconst updatedBooking = mapDtoToModel(data);\n\n\t\t\tvoid Core.getStore().dispatch(`${Model.Bookings}/update`, {\n\t\t\t\tid,\n\t\t\t\tbooking: updatedBooking,\n\t\t\t});\n\n\t\t\tconst clients = new BookingDataExtractor([data]).getClients();\n\n\t\t\tvoid Core.getStore().dispatch(`${Model.Clients}/upsertMany`, clients);\n\n\t\t\tvoid mainPageService.fetchCounters();\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tvoid Core.getStore().dispatch(`${Model.Bookings}/update`, {\n\t\t\t\tid,\n\t\t\t\tbooking: bookingBeforeUpdate,\n\t\t\t});\n\n\t\t\tconsole.error('BookingService: update error', error);\n\t\t}\n\t}\n\n\tasync delete(id: number): Promise<void>\n\t{\n\t\tconst bookingBeforeDelete = { ...Core.getStore().getters[`${Model.Bookings}/getById`](id) };\n\n\t\ttry\n\t\t{\n\t\t\tvoid Core.getStore().dispatch(`${Model.Bookings}/delete`, id);\n\n\t\t\tawait (new ApiClient()).post('Booking.delete', { id });\n\n\t\t\tawait this.#onAfterDelete(id);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tvoid Core.getStore().dispatch(`${Model.Bookings}/upsert`, bookingBeforeDelete);\n\n\t\t\tconsole.error('BookingService: delete error', error);\n\t\t}\n\t}\n\n\tasync deleteList(ids: number[]): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tvoid Core.getStore().dispatch(`${Model.Bookings}/deleteMany`, ids);\n\n\t\t\tawait (new ApiClient()).post('Booking.deleteList', { ids });\n\n\t\t\tawait Promise.all(ids.map((id: number) => this.#onAfterDelete(id)));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: delete list error', error);\n\t\t}\n\t}\n\n\tasync createFromWaitListItem(waitListItemId: number, booking: BookingModel): Promise<{ success: boolean, booking?: BookingModel }>\n\t{\n\t\tconst $store = Core.getStore();\n\t\tconst id = booking.id;\n\t\tconst waitListItem = { ...$store.getters[`${Model.WaitList}/getById`](waitListItemId) };\n\n\t\ttry\n\t\t{\n\t\t\tif ($store.getters[`${Model.Interface}/isWaitListItemCreatedFromEmbed`](waitListItemId))\n\t\t\t{\n\t\t\t\tawait $store.dispatch(`${Model.Interface}/addCreatedFromEmbedBooking`, id);\n\t\t\t}\n\n\t\t\tawait $store.dispatch(`${Model.WaitList}/delete`, waitListItemId);\n\t\t\tawait $store.dispatch(`${Model.Bookings}/add`, booking);\n\n\t\t\tconst createFromWaitListItemDto = mapModelToCreateFromWaitListItemDto(\n\t\t\t\twaitListItemId,\n\t\t\t\tbooking,\n\t\t\t);\n\t\t\tconst data = await (new ApiClient()).post('Booking.createFromWaitListItem', createFromWaitListItemDto);\n\t\t\tconst createdBooking = mapDtoToModel(data);\n\n\t\t\tawait $store.dispatch(`${Model.Interface}/setAnimationPause`, true);\n\t\t\tconst clients = new BookingDataExtractor([data]).getClients();\n\t\t\tawait Promise.all([\n\t\t\t\t$store.dispatch(`${Model.Clients}/upsertMany`, clients),\n\t\t\t\t$store.dispatch(`${Model.Interface}/addQuickFilterIgnoredBookingId`, createdBooking.id),\n\t\t\t\t$store.dispatch(`${Model.Bookings}/update`, {\n\t\t\t\t\tid,\n\t\t\t\t\tbooking: createdBooking,\n\t\t\t\t}),\n\t\t\t\t$store.dispatch(`${Model.Interface}/addCreatedFromEmbedBooking`, createdBooking.id),\n\t\t\t]);\n\n\t\t\tvoid mainPageService.fetchCounters();\n\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tbooking: createdBooking,\n\t\t\t};\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tawait $store.dispatch(`${Model.Bookings}/delete`, id);\n\t\t\tawait $store.dispatch(`${Model.WaitList}/upsert`, waitListItem);\n\n\t\t\tconsole.error('BookingService: add from wait list item error', error);\n\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tawait $store.dispatch(`${Model.Interface}/setAnimationPause`, false);\n\t\t}\n\t}\n\n\tasync #onAfterDelete(id: number): Promise<void>\n\t{\n\t\tconst editingBookingId = Core.getStore().getters[`${Model.Interface}/editingBookingId`];\n\t\tif (id === editingBookingId)\n\t\t{\n\t\t\tawait Core.getStore().dispatch(`${Model.Interface}/setEditingBookingId`, 0);\n\n\t\t\tconst selectedDateTs = Core.getStore().getters[`${Model.Interface}/selectedDateTs`];\n\n\t\t\tawait mainPageService.loadData(selectedDateTs / 1000);\n\n\t\t\tconst resourcesIds = Core.getStore().getters[`${Model.Interface}/resourcesIds`];\n\n\t\t\tmainPageService.clearCache(resourcesIds);\n\t\t}\n\n\t\tvoid Core.getStore().dispatch(`${Model.Interface}/addDeletingBooking`, id);\n\t}\n\n\tclearFilterCache(): void\n\t{\n\t\tthis.#filterRequests = {};\n\t}\n\n\tasync filter(fields: BookingUIFilter): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst filter = bookingFilter.prepareFilter(fields);\n\n\t\t\tconst key = JSON.stringify(filter);\n\t\t\tthis.#filterRequests[key] ??= this.#requestFilter(filter);\n\t\t\tthis.#lastFilterRequest = this.#filterRequests[key];\n\n\t\t\tconst data: BookingDto[] = await this.#filterRequests[key];\n\n\t\t\tvoid this.#extractFilterData({ data, key });\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: filter error', error);\n\t\t}\n\t}\n\n\tasync getById(id: number): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst data: BookingDto[] = await this.#requestFilter({ ID: [id] });\n\t\t\tconst extractor = new BookingDataExtractor(data);\n\t\t\tawait Promise.all([\n\t\t\t\tCore.getStore().dispatch(`${Model.Resources}/upsertMany`, extractor.getResources()),\n\t\t\t\tCore.getStore().dispatch(`${Model.Bookings}/upsertMany`, extractor.getBookings()),\n\t\t\t\tCore.getStore().dispatch(`${Model.Clients}/upsertMany`, extractor.getClients()),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingService: getById error', error);\n\t\t}\n\t}\n\n\tasync #extractFilterData({ data, key }: { data: BookingDto[], key: string, date: Date }): Promise<void>\n\t{\n\t\tconst extractor = new BookingDataExtractor(data);\n\n\t\tawait Promise.all([\n\t\t\tCore.getStore().dispatch(`${Model.Resources}/insertMany`, extractor.getResources()),\n\t\t\tCore.getStore().dispatch(`${Model.Bookings}/insertMany`, extractor.getBookings()),\n\t\t\tCore.getStore().dispatch(`${Model.Clients}/insertMany`, extractor.getClients()),\n\t\t]);\n\n\t\tif (this.#filterRequests[key] !== this.#lastFilterRequest)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid Core.getStore().dispatch(`${Model.Interface}/setFilteredBookingsIds`, extractor.getBookingsIds());\n\t}\n\n\tasync #requestFilter(filter: BookingListFilter): Promise<BookingDto[]>\n\t{\n\t\treturn new ApiClient().post('Booking.list', {\n\t\t\tfilter,\n\t\t\tselect: [\n\t\t\t\t'RESOURCES',\n\t\t\t\t'CLIENTS',\n\t\t\t\t'EXTERNAL_DATA',\n\t\t\t\t'NOTE',\n\t\t\t],\n\t\t\twithCounters: true,\n\t\t\twithClientData: true,\n\t\t\twithExternalData: true,\n\t\t});\n\t}\n}\n\nexport const bookingService = new BookingService();\n","import { mapModelToDto, mapDtoToModel } from './mappers';\n\nexport { bookingService } from './booking-service';\nexport const BookingMappers = { mapModelToDto, mapDtoToModel };\nexport type { BookingDto, DealDataDto } from './types';\n"],"names":["mapModelToDto","booking","mappings","id","Number","resources","resourcesIds","map","primaryClient","clients","name","datePeriod","from","timestamp","dateFromTs","timezone","timezoneFrom","to","dateToTs","timezoneTo","isConfirmed","rrule","note","visitStatus","externalData","dependentFields","Map","Object","keys","reduce","result","field","dependencies","get","hasDependencies","every","dep","value","undefined","mapDtoToModel","bookingDto","filter","client","Type","isArrayFilled","values","data","updatedAt","counter","counters","createdAt","messages","length","fromEntries","entries","isUndefined","mapModelToCreateFromWaitListItemDto","waitListItemId","BookingDataExtractor","constructor","response","getBookings","getBookingsIds","getClients","flatMap","clientDto","ClientMappers","getResources","resourceDto","ResourceMappers","BookingService","add","$store","Core","getStore","dispatch","Model","Interface","Bookings","ApiClient","post","createdBooking","Clients","mainPageService","fetchCounters","success","error","console","addList","bookings","bookingList","api","createdBookings","d","Promise","all","update","bookingBeforeUpdate","getters","updatedBooking","delete","bookingBeforeDelete","deleteList","ids","createFromWaitListItem","waitListItem","WaitList","createFromWaitListItemDto","clearFilterCache","fields","bookingFilter","prepareFilter","key","JSON","stringify","getById","ID","extractor","Resources","editingBookingId","selectedDateTs","loadData","clearCache","select","withCounters","withClientData","withExternalData","bookingService","BookingMappers"],"mappings":"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"}