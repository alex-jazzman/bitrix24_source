this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};this.BX.Booking.Provider=this.BX.Booking.Provider||{};(function(e,i,o,t){"use strict";function n(e){return{id:e.id,moduleId:e.moduleId,name:e.name,code:e.code,isInfoNotificationOn:e.isInfoNotificationOn,templateTypeInfo:e.templateTypeInfo,infoNotificationDelay:e.infoNotificationDelay,isConfirmationNotificationOn:e.isConfirmationNotificationOn,templateTypeConfirmation:e.templateTypeConfirmation,confirmationNotificationDelay:e.confirmationNotificationDelay,confirmationNotificationRepetitions:e.confirmationNotificationRepetitions,confirmationNotificationRepetitionsInterval:e.confirmationNotificationRepetitionsInterval,confirmationCounterDelay:e.confirmationCounterDelay,isReminderNotificationOn:e.isReminderNotificationOn,templateTypeReminder:e.templateTypeReminder,reminderNotificationDelay:e.reminderNotificationDelay,isDelayedNotificationOn:e.isDelayedNotificationOn,templateTypeDelayed:e.templateTypeDelayed,delayedNotificationDelay:e.delayedNotificationDelay,delayedCounterDelay:e.delayedCounterDelay,isFeedbackNotificationOn:e.isFeedbackNotificationOn,templateTypeFeedback:e.templateTypeFeedback}}function a(e){return{id:e.id,moduleId:e.moduleId,name:e.name,code:e.code,isInfoNotificationOn:e.isInfoNotificationOn,templateTypeInfo:e.templateTypeInfo,infoNotificationDelay:e.infoNotificationDelay,isConfirmationNotificationOn:e.isConfirmationNotificationOn,templateTypeConfirmation:e.templateTypeConfirmation,confirmationNotificationDelay:e.confirmationNotificationDelay,confirmationNotificationRepetitions:e.confirmationNotificationRepetitions,confirmationNotificationRepetitionsInterval:e.confirmationNotificationRepetitionsInterval,confirmationCounterDelay:e.confirmationCounterDelay,isReminderNotificationOn:e.isReminderNotificationOn,templateTypeReminder:e.templateTypeReminder,reminderNotificationDelay:e.reminderNotificationDelay,isDelayedNotificationOn:e.isDelayedNotificationOn,templateTypeDelayed:e.templateTypeDelayed,delayedNotificationDelay:e.delayedNotificationDelay,delayedCounterDelay:e.delayedCounterDelay,isFeedbackNotificationOn:e.isFeedbackNotificationOn,templateTypeFeedback:e.templateTypeFeedback}}class r{async add(e){let t=null;try{const r=a(e);const c=await(new o.ApiClient).post("ResourceType.add",{resourceType:r});t=n(c);void i.Core.getStore().dispatch("resourceTypes/upsert",t)}catch(e){console.error("ResourceTypeService: add error",e)}return t}async update(e){try{const t=a(e);const r=await(new o.ApiClient).post("ResourceType.update",{resourceType:t});void i.Core.getStore().dispatch("resourceTypes/upsert",n(r))}catch(e){console.error("ResourceTypeService: update error",e)}}async delete(e){return Promise.resolve()}}const c=new r;const f={mapModelToDto:a,mapDtoToModel:n};e.ResourceTypeMappers=f;e.resourceTypeService=c})(this.BX.Booking.Provider.Service=this.BX.Booking.Provider.Service||{},BX.Booking,BX.Booking.Lib,BX.Booking.Model);
//# sourceMappingURL=resources-type-service.bundle.map.js