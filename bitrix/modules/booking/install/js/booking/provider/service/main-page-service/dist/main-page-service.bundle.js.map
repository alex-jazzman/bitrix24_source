{"version":3,"file":"main-page-service.bundle.js","sources":["../src/main-page-data-extractor.js","../src/counters-extractor.js","../src/main-page-service.js"],"sourcesContent":["import { CrmEntity } from 'booking.const';\nimport { BookingMappers } from 'booking.provider.service.booking-service';\nimport { ClientMappers } from 'booking.provider.service.client-service';\nimport { ResourceMappers } from 'booking.provider.service.resources-service';\nimport { ResourceTypeMappers } from 'booking.provider.service.resources-type-service';\nimport { WaitListMappers } from 'booking.provider.service.wait-list-service';\n\nimport type { BookingModel } from 'booking.model.bookings';\nimport type { BookingDto } from 'booking.provider.service.booking-service';\nimport type { CountersModel } from 'booking.model.counters';\nimport type { ClientModel } from 'booking.model.clients';\nimport type { ClientDto } from 'booking.provider.service.client-service';\nimport type { ResourceModel } from 'booking.model.resources';\nimport type { ResourceDto } from 'booking.provider.service.resources-service';\nimport type { ResourceTypeModel } from 'booking.model.resource-types';\nimport type { ResourceTypeDto } from 'booking.provider.service.resources-type-service';\nimport type { WaitListItemModel } from 'booking.model.wait-list';\nimport type { WaitListItemDto } from 'booking.provider.service.wait-list-service';\n\nimport type { MainPageGetResponse } from './types';\n\nexport class MainPageDataExtractor\n{\n\t#response: MainPageGetResponse;\n\n\tconstructor(response: MainPageGetResponse)\n\t{\n\t\tthis.#response = response;\n\t}\n\n\tgetFavoriteIds(): number[]\n\t{\n\t\treturn this.#response.favorites.resources.map((resource: ResourceDto) => resource.id);\n\t}\n\n\tgetBookings(): BookingModel[]\n\t{\n\t\treturn this.#response.bookings.map((booking: BookingDto): BookingModel => {\n\t\t\treturn BookingMappers.mapDtoToModel(booking);\n\t\t});\n\t}\n\n\tgetClientsProviderModuleId(): string\n\t{\n\t\treturn this.#response.clients.providerModuleId;\n\t}\n\n\tgetClients(): ClientModel[]\n\t{\n\t\treturn [\n\t\t\t...this.#extractClients(CrmEntity.Contact),\n\t\t\t...this.#extractClients(CrmEntity.Company),\n\t\t\t...this.#extractClientsFromWaitListItems(),\n\t\t\t...this.#extractClientsFromBookings(),\n\t\t];\n\t}\n\n\t#extractClients(code: string): ClientModel[]\n\t{\n\t\tconst module = this.#response.clients.providerModuleId;\n\t\tif (!module)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Object.values(this.#response.clients.recent[code]).map((client): ClientModel => ({\n\t\t\t...client,\n\t\t\ttype: { module, code },\n\t\t}));\n\t}\n\n\t#extractClientsFromBookings(): ClientModel[]\n\t{\n\t\treturn MainPageDataExtractor.#extractClientsFromItem(this.#response.bookings);\n\t}\n\n\t#extractClientsFromWaitListItems(): ClientModel[]\n\t{\n\t\treturn MainPageDataExtractor.#extractClientsFromItem(this.#response.waitListItems);\n\t}\n\n\tstatic #extractClientsFromItem(items: { clients: ClientDto[] }[]): ClientModel[]\n\t{\n\t\treturn items.flatMap(({ clients }) => clients.map((client: ClientDto): ClientModel => {\n\t\t\treturn ClientMappers.mapDtoToModel(client);\n\t\t}));\n\t}\n\n\tgetCounters(): CountersModel\n\t{\n\t\treturn this.#response.counters;\n\t}\n\n\tgetResources(): ResourceModel[]\n\t{\n\t\tconst favoriteResources = this.#response.favorites?.resources ?? [];\n\t\tconst bookingResources = this.#response.bookings.flatMap(({ resources }) => resources);\n\n\t\tconst result = {};\n\t\t[...favoriteResources, ...bookingResources].forEach((resourceDto: ResourceDto) => {\n\t\t\tresult[resourceDto.id] ??= ResourceMappers.mapDtoToModel(resourceDto);\n\t\t});\n\n\t\treturn Object.values(result);\n\t}\n\n\tgetResourceTypes(): ResourceTypeModel[]\n\t{\n\t\treturn this.#response.resourceTypes.map((resourceTypeDto: ResourceTypeDto): ResourceTypeModel => {\n\t\t\treturn ResourceTypeMappers.mapDtoToModel(resourceTypeDto);\n\t\t});\n\t}\n\n\tgetWaitListItems(): WaitListItemModel[]\n\t{\n\t\treturn this.#response.waitListItems.map((waitListItemDto: WaitListItemDto): WaitListItemModel => {\n\t\t\treturn WaitListMappers.mapDtoToModel(waitListItemDto);\n\t\t});\n\t}\n\n\tgetIntersectionMode(): boolean\n\t{\n\t\treturn this.#response.isIntersectionForAll;\n\t}\n\n\tgetIsCurrentSenderAvailable(): boolean\n\t{\n\t\treturn this.#response.isCurrentSenderAvailable;\n\t}\n}\n","import type { CountersModel } from 'booking.model.counters';\nimport type { MainPageGetCountersResponse, MoneyStatisticsDto } from './types';\n\nexport class CountersExtractor\n{\n\t#response: MainPageGetCountersResponse;\n\n\tconstructor(response: MainPageGetCountersResponse)\n\t{\n\t\tthis.#response = response;\n\t}\n\n\tgetCounters(): CountersModel\n\t{\n\t\treturn this.#response.counters;\n\t}\n\n\tgetTotalClients(): number\n\t{\n\t\treturn this.#response.clientStatistics.total;\n\t}\n\n\tgetTotalNewClientsToday(): number\n\t{\n\t\treturn this.#response.clientStatistics.totalToday;\n\t}\n\n\tgetMoneyStatistics(): MoneyStatisticsDto\n\t{\n\t\treturn this.#response.moneyStatistics;\n\t}\n}\n","import { Core } from 'booking.core';\nimport { Model } from 'booking.const';\nimport { resourcesDateCache } from 'booking.lib.resources-date-cache';\nimport { ApiClient } from 'booking.lib.api-client';\nimport type { BookingModel } from 'booking.model.bookings';\n\nimport { MainPageDataExtractor } from './main-page-data-extractor';\nimport { CountersExtractor } from './counters-extractor';\n\nclass MainPageService\n{\n\t#dateCache: number[] = [];\n\n\tclearCache(ids: number[]): void\n\t{\n\t\tthis.#dateCache = this.#dateCache.filter((date: number) => resourcesDateCache.isDateLoaded(date, ids));\n\t}\n\n\tasync fetchData(dateTs: number): Promise<void>\n\t{\n\t\tif (this.#dateCache.includes(dateTs))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#dateCache.push(dateTs);\n\n\t\tawait this.loadData(dateTs);\n\t}\n\n\tasync loadData(dateTs: number): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (Core.getStore().getters[`${Model.Interface}/editingBookingId`] > 0)\n\t\t\t{\n\t\t\t\tawait this.#requestDataForBooking(dateTs);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tawait this.#requestData(dateTs);\n\t\t\t}\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingMainPageGetRequest: error', error);\n\t\t}\n\t}\n\n\tasync #requestData(dateTs: number): Promise<void>\n\t{\n\t\tconst data = await new ApiClient().get('MainPage.get', { dateTs });\n\t\tconst extractor = new MainPageDataExtractor(data);\n\n\t\tresourcesDateCache.upsertIds(dateTs, extractor.getFavoriteIds());\n\n\t\tawait Promise.all([\n\t\t\tCore.getStore().dispatch(`${Model.Favorites}/set`, extractor.getFavoriteIds()),\n\t\t\tCore.getStore().dispatch(`${Model.Interface}/setResourcesIds`, extractor.getFavoriteIds()),\n\t\t\tCore.getStore().dispatch(`${Model.Interface}/setIntersectionMode`, extractor.getIntersectionMode()),\n\t\t\tCore.getStore().dispatch(`${Model.Resources}/upsertMany`, extractor.getResources()),\n\t\t\tCore.getStore().dispatch(`${Model.ResourceTypes}/upsertMany`, extractor.getResourceTypes()),\n\t\t\tCore.getStore().dispatch(`${Model.Counters}/set`, extractor.getCounters()),\n\t\t\tCore.getStore().dispatch(`${Model.Bookings}/upsertMany`, extractor.getBookings()),\n\t\t\tCore.getStore().dispatch(`${Model.WaitList}/upsertMany`, extractor.getWaitListItems()),\n\t\t\tCore.getStore().dispatch(`${Model.Clients}/upsertMany`, extractor.getClients()),\n\t\t\tCore.getStore().dispatch(`${Model.Clients}/setProviderModuleId`, extractor.getClientsProviderModuleId()),\n\t\t\tCore.getStore().dispatch(`${Model.Interface}/setIsCurrentSenderAvailable`, extractor.getIsCurrentSenderAvailable()),\n\t\t]);\n\t}\n\n\tasync #requestDataForBooking(dateTs: number): Promise<void>\n\t{\n\t\tconst bookingId = Core.getParams().editingBookingId;\n\t\tconst timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\tconst resourcesIds = Core.getStore().getters[`${Model.Favorites}/get`];\n\n\t\tconst data = await new ApiClient().get('MainPage.getForBooking', { dateTs, bookingId, timezone, resourcesIds });\n\n\t\tconst extractor = new MainPageDataExtractor(data);\n\n\t\tconst promises = [\n\t\t\tCore.getStore().dispatch(`${Model.Interface}/setIntersectionMode`, extractor.getIntersectionMode()),\n\t\t\tCore.getStore().dispatch(`${Model.Resources}/upsertMany`, extractor.getResources()),\n\t\t\tCore.getStore().dispatch(`${Model.ResourceTypes}/upsertMany`, extractor.getResourceTypes()),\n\t\t\tCore.getStore().dispatch(`${Model.Counters}/set`, extractor.getCounters()),\n\t\t\tCore.getStore().dispatch(`${Model.Bookings}/upsertMany`, extractor.getBookings()),\n\t\t\tCore.getStore().dispatch(`${Model.Clients}/upsertMany`, extractor.getClients()),\n\t\t\tCore.getStore().dispatch(`${Model.Clients}/setProviderModuleId`, extractor.getClientsProviderModuleId()),\n\t\t\tCore.getStore().dispatch(`${Model.Interface}/setIsCurrentSenderAvailable`, extractor.getIsCurrentSenderAvailable()),\n\t\t];\n\n\t\tconst editingBooking = extractor.getBookings()\n\t\t\t.find((booking: BookingModel) => booking.id === bookingId)\n\t\t;\n\n\t\tif (!editingBooking && dateTs === 0)\n\t\t{\n\t\t\tpromises.push(\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setEditingBookingId`, 0),\n\t\t\t);\n\t\t}\n\n\t\tlet selectedDate = new Date(dateTs * 1000);\n\t\tif (editingBooking && dateTs === 0)\n\t\t{\n\t\t\tconst dateFrom = new Date(editingBooking.dateFromTs);\n\t\t\tselectedDate = new Date(dateFrom.getFullYear(), dateFrom.getMonth(), dateFrom.getDate());\n\n\t\t\tpromises.push(\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setSelectedDateTs`, selectedDate.getTime()),\n\t\t\t);\n\n\t\t\tthis.#dateCache.push(selectedDate.getTime() / 1000);\n\t\t}\n\n\t\tlet selectedResourcesIds = resourcesIds;\n\t\tif (editingBooking && resourcesIds.length === 0)\n\t\t{\n\t\t\tselectedResourcesIds = [editingBooking.resourcesIds[0]];\n\n\t\t\tpromises.push(\n\t\t\t\tCore.getStore().dispatch(`${Model.Favorites}/set`, [editingBooking.resourcesIds[0]]),\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setResourcesIds`, [editingBooking.resourcesIds[0]]),\n\t\t\t);\n\t\t}\n\n\t\tresourcesDateCache.upsertIds(selectedDate.getTime() / 1000, selectedResourcesIds);\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tasync fetchCounters(): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst data = await new ApiClient().get('MainPage.getCounters');\n\n\t\t\tconst extractor = new CountersExtractor(data);\n\n\t\t\tawait Promise.all([\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setTotalClients`, extractor.getTotalClients()),\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setTotalNewClientsToday`, extractor.getTotalNewClientsToday()),\n\t\t\t\tCore.getStore().dispatch(`${Model.Interface}/setMoneyStatistics`, extractor.getMoneyStatistics()),\n\t\t\t\tCore.getStore().dispatch(`${Model.Counters}/set`, extractor.getCounters()),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingMainPageGetCountersRequest: error', error);\n\t\t}\n\t}\n\n\tasync activateDemo(): Promise<boolean>\n\t{\n\t\ttry\n\t\t{\n\t\t\treturn await new ApiClient().get('MainPage.activateDemo');\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingMainPageActivateDemoRequest: error', error);\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport const mainPageService = new MainPageService();\n"],"names":["MainPageDataExtractor","constructor","response","getFavoriteIds","favorites","resources","map","resource","id","getBookings","bookings","booking","BookingMappers","mapDtoToModel","getClientsProviderModuleId","clients","providerModuleId","getClients","CrmEntity","Contact","Company","getCounters","counters","getResources","favoriteResources","bookingResources","flatMap","result","forEach","resourceDto","ResourceMappers","Object","values","getResourceTypes","resourceTypes","resourceTypeDto","ResourceTypeMappers","getWaitListItems","waitListItems","waitListItemDto","WaitListMappers","getIntersectionMode","isIntersectionForAll","getIsCurrentSenderAvailable","isCurrentSenderAvailable","code","module","recent","client","type","items","ClientMappers","CountersExtractor","getTotalClients","clientStatistics","total","getTotalNewClientsToday","totalToday","getMoneyStatistics","moneyStatistics","MainPageService","clearCache","ids","filter","date","resourcesDateCache","isDateLoaded","fetchData","dateTs","includes","push","loadData","Core","getStore","getters","Model","Interface","error","console","fetchCounters","data","ApiClient","get","extractor","Promise","all","dispatch","Counters","activateDemo","resolve","upsertIds","Favorites","Resources","ResourceTypes","Bookings","WaitList","Clients","bookingId","getParams","editingBookingId","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","resourcesIds","promises","editingBooking","find","selectedDate","Date","dateFrom","dateFromTs","getFullYear","getMonth","getDate","getTime","selectedResourcesIds","length","mainPageService"],"mappings":"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"}