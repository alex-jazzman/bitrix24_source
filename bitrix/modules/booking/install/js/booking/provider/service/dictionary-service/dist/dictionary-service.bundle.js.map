{"version":3,"file":"dictionary-service.bundle.js","sources":["../src/dictionary-data-extractor.js","../src/dictionary-service.js"],"sourcesContent":["import type { DictionaryResponse } from './types';\nimport type { DictionaryModel } from 'booking.model.dictionary';\n\nexport class DictionaryDataExtractor\n{\n\t#response: DictionaryResponse;\n\n\tconstructor(response: DictionaryResponse)\n\t{\n\t\tthis.#response = response;\n\t}\n\n\tgetCounters(): DictionaryModel\n\t{\n\t\treturn this.#response.counters;\n\t}\n\n\tgetNotifications(): DictionaryModel\n\t{\n\t\treturn this.#response.notifications;\n\t}\n\n\tgetNotificationTemplates(): DictionaryModel\n\t{\n\t\treturn this.#response.notificationTemplateTypes;\n\t}\n\n\tgetPushCommands(): DictionaryModel\n\t{\n\t\treturn this.#response.pushCommands;\n\t}\n\n\tgetBookings(): DictionaryModel\n\t{\n\t\treturn this.#response.bookings;\n\t}\n}\n","import { Extension } from 'main.core';\nimport type { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'booking.core';\nimport { Model } from 'booking.const';\nimport { DictionaryDataExtractor } from './dictionary-data-extractor';\n\nclass DictionaryService\n{\n\tasync fetchData(): Promise<void>\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst data = Extension.getSettings('booking.provider.service.dictionary-service');\n\t\t\tconst extractor = new DictionaryDataExtractor(data);\n\n\t\t\tawait Promise.all([\n\t\t\t\tthis.$store.dispatch(`${Model.Dictionary}/setCounters`, extractor.getCounters()),\n\t\t\t\tthis.$store.dispatch(`${Model.Dictionary}/setNotifications`, extractor.getNotifications()),\n\t\t\t\tthis.$store.dispatch(`${Model.Dictionary}/setNotificationTemplates`, extractor.getNotificationTemplates()),\n\t\t\t\tthis.$store.dispatch(`${Model.Dictionary}/setPushCommands`, extractor.getPushCommands()),\n\t\t\t\tthis.$store.dispatch(`${Model.Dictionary}/setBookings`, extractor.getBookings()),\n\t\t\t]);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('BookingDictionaryGetRequest: error', error);\n\t\t}\n\t}\n\n\tget $store(): Store\n\t{\n\t\treturn Core.getStore();\n\t}\n}\n\nexport const dictionaryService = new DictionaryService();\n"],"names":["DictionaryDataExtractor","constructor","response","getCounters","counters","getNotifications","notifications","getNotificationTemplates","notificationTemplateTypes","getPushCommands","pushCommands","getBookings","bookings","DictionaryService","fetchData","data","Extension","getSettings","extractor","Promise","all","$store","dispatch","Model","Dictionary","error","console","Core","getStore","dictionaryService"],"mappings":";;;;;;;;AAGA,CAAO,MAAMA,uBAAuB,CACpC;GAGCC,WAAW,CAACC,QAA4B,EACxC;KAAA;OAAA;OAAA;;KACC,4CAAI,0BAAaA,QAAQ;;GAG1BC,WAAW,GACX;KACC,OAAO,4CAAI,wBAAWC,QAAQ;;GAG/BC,gBAAgB,GAChB;KACC,OAAO,4CAAI,wBAAWC,aAAa;;GAGpCC,wBAAwB,GACxB;KACC,OAAO,4CAAI,wBAAWC,yBAAyB;;GAGhDC,eAAe,GACf;KACC,OAAO,4CAAI,wBAAWC,YAAY;;GAGnCC,WAAW,GACX;KACC,OAAO,4CAAI,wBAAWC,QAAQ;;CAEhC;;CC7BA,MAAMC,iBAAiB,CACvB;GACC,MAAMC,SAAS,GACf;KACC,IACA;OACC,MAAMC,IAAI,GAAGC,mBAAS,CAACC,WAAW,CAAC,6CAA6C,CAAC;OACjF,MAAMC,SAAS,GAAG,IAAIlB,uBAAuB,CAACe,IAAI,CAAC;OAEnD,MAAMI,OAAO,CAACC,GAAG,CAAC,CACjB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAE,GAAEC,mBAAK,CAACC,UAAW,cAAa,EAAEN,SAAS,CAACf,WAAW,EAAE,CAAC,EAChF,IAAI,CAACkB,MAAM,CAACC,QAAQ,CAAE,GAAEC,mBAAK,CAACC,UAAW,mBAAkB,EAAEN,SAAS,CAACb,gBAAgB,EAAE,CAAC,EAC1F,IAAI,CAACgB,MAAM,CAACC,QAAQ,CAAE,GAAEC,mBAAK,CAACC,UAAW,2BAA0B,EAAEN,SAAS,CAACX,wBAAwB,EAAE,CAAC,EAC1G,IAAI,CAACc,MAAM,CAACC,QAAQ,CAAE,GAAEC,mBAAK,CAACC,UAAW,kBAAiB,EAAEN,SAAS,CAACT,eAAe,EAAE,CAAC,EACxF,IAAI,CAACY,MAAM,CAACC,QAAQ,CAAE,GAAEC,mBAAK,CAACC,UAAW,cAAa,EAAEN,SAAS,CAACP,WAAW,EAAE,CAAC,CAChF,CAAC;MACF,CACD,OAAOc,KAAK,EACZ;OACCC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;;;GAI5D,IAAIJ,MAAM,GACV;KACC,OAAOM,iBAAI,CAACC,QAAQ,EAAE;;CAExB;AAEA,OAAaC,iBAAiB,GAAG,IAAIhB,iBAAiB,EAAE;;;;;;;;"}