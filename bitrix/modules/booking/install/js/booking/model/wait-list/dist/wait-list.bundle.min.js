this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(e,t,i){"use strict";class o extends t.BuilderModel{getName(){return i.Model.WaitList}getState(){return{collection:{}}}getElementState(){return{id:0,createdBy:0,createdAt:0,updatedAt:0,clients:[],note:"",externalData:[]}}getGetters(){return{get:(e,t,o,l)=>{const n=l[`${i.Model.Interface}/deletingWaitListItems`];return Object.values(e.collection).filter((({id:e})=>!n[e]))},getById:e=>t=>e.collection[t]}}getActions(){return{add:(e,t)=>{e.commit("add",t)},insertMany:(e,t)=>{t.forEach((t=>e.commit("insert",t)))},upsert:(e,t)=>{e.commit("upsert",t)},upsertMany:(e,t)=>{t.forEach((t=>e.commit("upsert",t)))},update:(e,t)=>{e.commit("update",t)},delete:(e,t)=>{e.commit("delete",t)},deleteMany:(e,t)=>{e.commit("deleteMany",t)}}}getMutations(){return{add:(e,t)=>{e.collection[t.id]=t},insert:(e,t)=>{var i,o,l;(l=(i=e.collection)[o=t.id])!=null?l:i[o]=t},upsert:(e,t)=>{var i,o,l;(l=(i=e.collection)[o=t.id])!=null?l:i[o]=t;Object.assign(e.collection[t.id],t)},update:(e,{id:t,waitListItem:i})=>{const o={...e.collection[t],...i};delete e.collection[t];e.collection[i.id]=o},delete:(e,t)=>{delete e.collection[t]},deleteMany:(e,t)=>{for(const i of t){delete e.collection[i]}}}}}e.WaitList=o})(this.BX.Booking.Model=this.BX.Booking.Model||{},BX.Vue3.Vuex,BX.Booking.Const);
//# sourceMappingURL=wait-list.bundle.map.js