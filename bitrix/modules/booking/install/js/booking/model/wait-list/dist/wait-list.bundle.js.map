{"version":3,"file":"wait-list.bundle.js","sources":["../src/wait-list.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { BuilderModel, Store } from 'ui.vue3.vuex';\nimport type { GetterTree, ActionTree, MutationTree } from 'ui.vue3.vuex';\n\nimport { Model } from 'booking.const';\nimport type { WaitListItemModel, WaitListState, UpdatePayload } from './types';\n\nexport class WaitList extends BuilderModel\n{\n\tgetName(): string\n\t{\n\t\treturn Model.WaitList;\n\t}\n\n\tgetState(): WaitListState\n\t{\n\t\treturn {\n\t\t\tcollection: {},\n\t\t};\n\t}\n\n\tgetElementState(): WaitListItemModel\n\t{\n\t\treturn {\n\t\t\tid: 0,\n\t\t\tcreatedBy: 0,\n\t\t\tcreatedAt: 0,\n\t\t\tupdatedAt: 0,\n\t\t\tclients: [],\n\t\t\tnote: '',\n\t\t\texternalData: [],\n\t\t};\n\t}\n\n\tgetGetters(): GetterTree<WaitListState>\n\t{\n\t\treturn {\n\t\t\t/** @function wait-list/get */\n\t\t\tget: (state: WaitListState, getters, rootState, rootGetters): WaitListItemModel[] => {\n\t\t\t\tconst deletingWaitListItems = rootGetters[`${Model.Interface}/deletingWaitListItems`];\n\n\t\t\t\treturn Object.values(state.collection).filter(({ id }) => !deletingWaitListItems[id]);\n\t\t\t},\n\t\t\tgetById: (state) => (id: number): WaitListItemModel => state.collection[id],\n\t\t};\n\t}\n\n\tgetActions(): ActionTree<WaitListState, any>\n\t{\n\t\treturn {\n\t\t\t/** @function wait-list/add */\n\t\t\tadd: (store: Store, waitListItem: WaitListItemModel): void => {\n\t\t\t\tstore.commit('add', waitListItem);\n\t\t\t},\n\t\t\t/** @function wait-list/insertMany */\n\t\t\tinsertMany: (store: Store, waitListItems: WaitListItemModel[]): void => {\n\t\t\t\twaitListItems.forEach((waitListItem: WaitListItemModel) => store.commit('insert', waitListItem));\n\t\t\t},\n\t\t\t/** @function wait-list/upsert */\n\t\t\tupsert: (store: Store, waitListItem: WaitListItemModel): void => {\n\t\t\t\tstore.commit('upsert', waitListItem);\n\t\t\t},\n\t\t\t/** @function wait-list/upsertMany */\n\t\t\tupsertMany: (store: Store, waitListItems: WaitListItemModel[]): void => {\n\t\t\t\twaitListItems.forEach((waitListItem: WaitListItemModel) => store.commit('upsert', waitListItem));\n\t\t\t},\n\t\t\t/** @function wait-list/update */\n\t\t\tupdate: (store: Store, payload: UpdatePayload): void => {\n\t\t\t\tstore.commit('update', payload);\n\t\t\t},\n\t\t\t/** @function wait-list/delete */\n\t\t\tdelete: (store: Store, waitListItemId: number | string): void => {\n\t\t\t\tstore.commit('delete', waitListItemId);\n\t\t\t},\n\t\t\t/** @function wait-list/deleteMany */\n\t\t\tdeleteMany: (store: Store, waitListItemIds: number[]): void => {\n\t\t\t\tstore.commit('deleteMany', waitListItemIds);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMutations(): MutationTree<WaitListState>\n\t{\n\t\treturn {\n\t\t\tadd: (state: WaitListState, waitListItem: WaitListItemModel): void => {\n\t\t\t\tstate.collection[waitListItem.id] = waitListItem;\n\t\t\t},\n\t\t\tinsert: (state: WaitListState, waitListItem: WaitListItemModel): void => {\n\t\t\t\tstate.collection[waitListItem.id] ??= waitListItem;\n\t\t\t},\n\t\t\tupsert: (state: WaitListState, waitListItem: WaitListItemModel): void => {\n\t\t\t\tstate.collection[waitListItem.id] ??= waitListItem;\n\t\t\t\tObject.assign(state.collection[waitListItem.id], waitListItem);\n\t\t\t},\n\t\t\tupdate: (state: WaitListState, { id, waitListItem }: UpdatePayload): void => {\n\t\t\t\tconst updatedWaitListItem = { ...state.collection[id], ...waitListItem };\n\t\t\t\tdelete state.collection[id];\n\t\t\t\tstate.collection[waitListItem.id] = updatedWaitListItem;\n\t\t\t},\n\t\t\tdelete: (state: WaitListState, waitListItemId: number | string): void => {\n\t\t\t\tdelete state.collection[waitListItemId];\n\t\t\t},\n\t\t\tdeleteMany: (state, waitListItemIds: number[]): void => {\n\t\t\t\tfor (const id of waitListItemIds)\n\t\t\t\t{\n\t\t\t\t\tdelete state.collection[id];\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":["WaitList","BuilderModel","getName","Model","getState","collection","getElementState","id","createdBy","createdAt","updatedAt","clients","note","externalData","getGetters","get","state","getters","rootState","rootGetters","deletingWaitListItems","Interface","Object","values","filter","getById","getActions","add","store","waitListItem","commit","insertMany","waitListItems","forEach","upsert","upsertMany","update","payload","delete","waitListItemId","deleteMany","waitListItemIds","getMutations","insert","assign","updatedWaitListItem"],"mappings":"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"}