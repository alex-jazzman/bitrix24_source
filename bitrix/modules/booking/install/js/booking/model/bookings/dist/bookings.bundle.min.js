this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(e,t,o){"use strict";function n(e){const t=e;const o=new Date(e).setDate(new Date(e).getDate()+1);return[t,o]}function s(e,t,o){return o.filter((o=>o.id!==e.id&&o.resourcesIds.includes(t)&&e.dateFromTs<o.dateToTs&&e.dateToTs>o.dateFromTs))}function i({booking:e,resourceId:t,intersections:o,shifted:n=false,overbookingMapItem:s=null}){const i={resourceId:t,shifted:n,intersections:o.map((e=>({id:e.id,dateFromTs:e.dateFromTs,dateToTs:e.dateToTs})))};if(s===null){return{id:e.id,booking:e,items:[i]}}s.items.push(i);return s}function r(e){let t=0;let o=0;const n=new Map;const r=Object.keys(e);for(const c of r){const r=Number(c);const d=e[r].sort(((e,t)=>e.dateFromTs-t.dateFromTs));t=0;o=0;for(const e of d){const c=e.id;const l=s(e,r,d);if(l.length===0){continue}const a=e.dateFromTs>=o;const u=e.dateFromTs>=t;if(u){t=e.dateToTs;n.set(c,i({booking:e,resourceId:r,intersections:l,shifted:false,overbookingMapItem:n.get(c)}))}else if(a){o=e.dateToTs;n.set(c,i({booking:e,resourceId:r,intersections:l,shifted:true,overbookingMapItem:n.get(c)}))}}}return n}class c extends t.BuilderModel{getName(){return o.Model.Bookings}getState(){return{collection:{}}}getElementState(){return{id:0,resourcesIds:[],clientId:0,counter:0,name:"",dateFromTs:0,dateToTs:0,timezoneFrom:Intl.DateTimeFormat().resolvedOptions().timeZone,timezoneTo:Intl.DateTimeFormat().resolvedOptions().timeZone,rrule:"",isConfirmed:false,visitStatus:"unknown",overbooking:false}}getGetters(){return{get:(e,t,n,s)=>{const i=s[`${o.Model.Interface}/deletingBookings`];return Object.values(e.collection).filter((({id:e})=>!i[e]))},getById:e=>t=>e.collection[t],getByIds:(e,t)=>e=>t.get.filter((t=>e.includes(t.id))),getByDateAndResources:(e,t)=>(e,o)=>t.getByDate(e).filter((e=>o.some((t=>e.resourcesIds.includes(t))))),getByDateAndIds:(e,t)=>(e,o)=>t.getByDate(e).filter((e=>o.includes(e.id))),getByDate:(e,t)=>e=>{const[o,s]=n(e);return t.getByInterval(o,s)},getByInterval:(e,t)=>(e,o)=>t.get.filter((({dateFromTs:t,dateToTs:n})=>n>e&&t<o)),getFutureByResourceId:(e,t)=>e=>{const o=Date.now();return t.get.filter((t=>t.resourcesIds.includes(e)&&t.dateFromTs>o))},overbookingMap:e=>{const t=Object.values(e.collection).reduce(((e,t)=>{t.resourcesIds.forEach((o=>{if(o in e){const n=e[o];n.push(t)}else{e[o]=[t]}}));return e}),{});return r(t)}}}getActions(){return{add:(e,t)=>{e.commit("add",t)},insertMany:(e,t)=>{t.forEach((t=>e.commit("insert",t)))},upsert:(e,t)=>{e.commit("upsert",t)},upsertMany:(e,t)=>{t.forEach((t=>e.commit("upsert",t)))},update:(e,t)=>{e.commit("update",t)},delete:(e,t)=>{e.commit("delete",t)},deleteMany:(e,t)=>{e.commit("deleteMany",t)}}}getMutations(){return{add:(e,t)=>{e.collection[t.id]=t},insert:(e,t)=>{var o,n,s;(s=(o=e.collection)[n=t.id])!=null?s:o[n]=t},upsert:(e,t)=>{var o,n,s;(s=(o=e.collection)[n=t.id])!=null?s:o[n]=t;Object.assign(e.collection[t.id],t)},update:(e,{id:t,booking:o})=>{const n={...e.collection[t],...o};delete e.collection[t];e.collection[o.id]=n},delete:(e,t)=>{delete e.collection[t]},deleteMany:(e,t)=>{for(const o of t){delete e.collection[o]}}}}}e.Bookings=c})(this.BX.Booking.Model=this.BX.Booking.Model||{},BX.Vue3.Vuex,BX.Booking.Const);
//# sourceMappingURL=bookings.bundle.map.js