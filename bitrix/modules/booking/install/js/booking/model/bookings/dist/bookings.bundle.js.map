{"version":3,"file":"bookings.bundle.js","sources":["../src/lib.js","../src/bookings.js"],"sourcesContent":["import type { BookingModel, OverbookingMapItem } from './types';\n\nexport function dateToTsRange(dateTs: number): [number, number]\n{\n\tconst dateFrom = dateTs;\n\tconst dateTo = new Date(dateTs).setDate(new Date(dateTs).getDate() + 1);\n\n\treturn [dateFrom, dateTo];\n}\n\nfunction getIntersectionBookings(booking: BookingModel, resourceId: number, bookings: BookingModel[]): BookingModel[]\n{\n\treturn bookings.filter((b) => {\n\t\treturn (\n\t\t\tb.id !== booking.id\n\t\t\t&& b.resourcesIds.includes(resourceId)\n\t\t\t&& booking.dateFromTs < b.dateToTs\n\t\t\t&& booking.dateToTs > b.dateFromTs\n\t\t);\n\t});\n}\n\ntype CreateOverbookingMapItemParams = {\n\tbooking: BookingModel,\n\tresourceId: number,\n\tintersections: BookingModel[],\n\tshifted?: boolean,\n\toverbookingMapItem?: OverbookingMapItem,\n}\n\nfunction createOverbookingMapItem({\n\tbooking,\n\tresourceId,\n\tintersections,\n\tshifted = false,\n\toverbookingMapItem = null,\n}: CreateOverbookingMapItemParams): OverbookingMapItem\n{\n\tconst item = {\n\t\tresourceId,\n\t\tshifted,\n\t\tintersections: intersections.map((intersection) => ({\n\t\t\tid: intersection.id,\n\t\t\tdateFromTs: intersection.dateFromTs,\n\t\t\tdateToTs: intersection.dateToTs,\n\t\t})),\n\t};\n\n\tif (overbookingMapItem === null)\n\t{\n\t\treturn {\n\t\t\tid: booking.id,\n\t\t\tbooking,\n\t\t\titems: [item],\n\t\t};\n\t}\n\n\toverbookingMapItem.items.push(item);\n\n\treturn overbookingMapItem;\n}\n\nexport function createOverbookingMap(resourceBookings: { [number]: BookingModel[] }): Map<number, OverbookingMapItem>\n{\n\tlet maxLeftBookingTs = 0;\n\tlet maxRightBookingTs = 0;\n\tconst overbookingMap: Map<number, OverbookingMapItem> = new Map();\n\tconst resourcesIds = Object.keys(resourceBookings);\n\n\tfor (const key of resourcesIds)\n\t{\n\t\tconst resourceId = Number(key);\n\t\tconst bookings = resourceBookings[resourceId]\n\t\t\t.sort((a, b) => a.dateFromTs - b.dateFromTs);\n\n\t\tmaxLeftBookingTs = 0;\n\t\tmaxRightBookingTs = 0;\n\n\t\tfor (const booking of bookings)\n\t\t{\n\t\t\tconst bookingId = booking.id;\n\t\t\tconst intersectionBookings = getIntersectionBookings(\n\t\t\t\tbooking,\n\t\t\t\tresourceId,\n\t\t\t\tbookings,\n\t\t\t);\n\n\t\t\tif (intersectionBookings.length === 0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst canBeRight = booking.dateFromTs >= maxRightBookingTs;\n\t\t\tconst canBeLeft = booking.dateFromTs >= maxLeftBookingTs;\n\t\t\tif (canBeLeft)\n\t\t\t{\n\t\t\t\tmaxLeftBookingTs = booking.dateToTs;\n\t\t\t\toverbookingMap.set(\n\t\t\t\t\tbookingId,\n\t\t\t\t\tcreateOverbookingMapItem({\n\t\t\t\t\t\tbooking,\n\t\t\t\t\t\tresourceId,\n\t\t\t\t\t\tintersections: intersectionBookings,\n\t\t\t\t\t\tshifted: false,\n\t\t\t\t\t\toverbookingMapItem: overbookingMap.get(bookingId),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (canBeRight)\n\t\t\t{\n\t\t\t\tmaxRightBookingTs = booking.dateToTs;\n\t\t\t\toverbookingMap.set(\n\t\t\t\t\tbookingId,\n\t\t\t\t\tcreateOverbookingMapItem({\n\t\t\t\t\t\tbooking,\n\t\t\t\t\t\tresourceId,\n\t\t\t\t\t\tintersections: intersectionBookings,\n\t\t\t\t\t\tshifted: true,\n\t\t\t\t\t\toverbookingMapItem: overbookingMap.get(bookingId),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn overbookingMap;\n}\n","import type { ActionTree, GetterTree, MutationTree } from 'ui.vue3.vuex';\nimport { BuilderModel, Store } from 'ui.vue3.vuex';\n\nimport { Model } from 'booking.const';\n\nimport { dateToTsRange, createOverbookingMap } from './lib';\nimport type { BookingModel, BookingsState } from './types';\n\nexport class Bookings extends BuilderModel\n{\n\tgetName(): string\n\t{\n\t\treturn Model.Bookings;\n\t}\n\n\tgetState(): BookingsState\n\t{\n\t\treturn {\n\t\t\tcollection: {},\n\t\t};\n\t}\n\n\tgetElementState(): BookingModel\n\t{\n\t\treturn {\n\t\t\tid: 0,\n\t\t\tresourcesIds: [],\n\t\t\tclientId: 0,\n\t\t\tcounter: 0,\n\t\t\tname: '',\n\t\t\tdateFromTs: 0,\n\t\t\tdateToTs: 0,\n\t\t\ttimezoneFrom: Intl.DateTimeFormat().resolvedOptions().timeZone,\n\t\t\ttimezoneTo: Intl.DateTimeFormat().resolvedOptions().timeZone,\n\t\t\trrule: '',\n\t\t\tisConfirmed: false,\n\t\t\tvisitStatus: 'unknown',\n\t\t\toverbooking: false,\n\t\t};\n\t}\n\n\tgetGetters(): GetterTree<BookingsState>\n\t{\n\t\treturn {\n\t\t\t/** @function bookings/get */\n\t\t\tget: (state: BookingsState, getters, rootState, rootGetters): BookingModel[] => {\n\t\t\t\tconst deletingBookings = rootGetters[`${Model.Interface}/deletingBookings`];\n\n\t\t\t\treturn Object.values(state.collection).filter(({ id }) => !deletingBookings[id]);\n\t\t\t},\n\t\t\t/** @function bookings/getById */\n\t\t\tgetById: (state: BookingsState) => (id: number | string): BookingModel => state.collection[id],\n\t\t\t/** @function bookings/getByIds */\n\t\t\tgetByIds: (state: BookingsState, getters) => (ids: number[]): BookingModel[] => {\n\t\t\t\treturn getters.get.filter((booking: BookingModel) => ids.includes(booking.id));\n\t\t\t},\n\t\t\t/** @function bookings/getByDateAndResources */\n\t\t\tgetByDateAndResources: (state: BookingsState, getters) => {\n\t\t\t\treturn (dateTs: number, resourcesIds: number[]): BookingModel[] => {\n\t\t\t\t\treturn getters.getByDate(dateTs)\n\t\t\t\t\t\t.filter((booking: BookingModel) => {\n\t\t\t\t\t\t\treturn resourcesIds\n\t\t\t\t\t\t\t\t.some((resourceId: number) => booking.resourcesIds.includes(resourceId));\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t},\n\t\t\t/** @function bookings/getByDateAndIds */\n\t\t\tgetByDateAndIds: (state: BookingsState, getters) => {\n\t\t\t\treturn (dateTs: number, ids: number[]): BookingModel[] => {\n\t\t\t\t\treturn getters.getByDate(dateTs)\n\t\t\t\t\t\t.filter((booking: BookingModel) => ids.includes(booking.id));\n\t\t\t\t};\n\t\t\t},\n\t\t\t/** @function bookings/getByDate */\n\t\t\tgetByDate: (state: BookingsState, getters) => (dateTs: number): BookingModel[] => {\n\t\t\t\tconst [dateFrom, dateTo] = dateToTsRange(dateTs);\n\n\t\t\t\treturn getters.getByInterval(dateFrom, dateTo);\n\t\t\t},\n\t\t\t/** @function booking/getByInterval */\n\t\t\tgetByInterval: (state: BookingsState, getters) => (fromTs: number, toTs: number): BookingModel[] => {\n\t\t\t\treturn getters.get.filter(({ dateFromTs, dateToTs }: BookingModel) => {\n\t\t\t\t\treturn dateToTs > fromTs && dateFromTs < toTs;\n\t\t\t\t});\n\t\t\t},\n\t\t\tgetFutureByResourceId: (state: BookingsState, getters) => (resourceId: number): BookingModel[] => {\n\t\t\t\tconst now = Date.now();\n\n\t\t\t\treturn getters.get\n\t\t\t\t\t.filter((booking) => booking.resourcesIds.includes(resourceId) && booking.dateFromTs > now)\n\t\t\t\t;\n\t\t\t},\n\t\t\toverbookingMap: (state) => {\n\t\t\t\tconst resourceBookings: { [number]: BookingModel[] } = Object.values(state.collection)\n\t\t\t\t\t.reduce((acc, booking) => {\n\t\t\t\t\t\tbooking.resourcesIds\n\t\t\t\t\t\t\t.forEach((resourceId: number) => {\n\t\t\t\t\t\t\t\tif (resourceId in acc)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst bookings = acc[resourceId];\n\t\t\t\t\t\t\t\t\tbookings.push(booking);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tacc[resourceId] = [booking];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {});\n\n\t\t\t\treturn createOverbookingMap(resourceBookings);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetActions(): ActionTree<BookingsState, any>\n\t{\n\t\treturn {\n\t\t\t/** @function bookings/add */\n\t\t\tadd: (store: Store, booking: BookingModel): void => {\n\t\t\t\tstore.commit('add', booking);\n\t\t\t},\n\t\t\t/** @function bookings/insertMany */\n\t\t\tinsertMany: (store: Store, bookings: BookingModel[]): void => {\n\t\t\t\tbookings.forEach((booking: BookingModel) => store.commit('insert', booking));\n\t\t\t},\n\t\t\t/** @function bookings/upsert */\n\t\t\tupsert: (store: Store, booking: BookingModel): void => {\n\t\t\t\tstore.commit('upsert', booking);\n\t\t\t},\n\t\t\t/** @function bookings/upsertMany */\n\t\t\tupsertMany: (store: Store, bookings: BookingModel[]): void => {\n\t\t\t\tbookings.forEach((booking: BookingModel) => store.commit('upsert', booking));\n\t\t\t},\n\t\t\t/** @function bookings/update */\n\t\t\tupdate: (store: Store, payload: { id: number | string, booking: BookingModel }): void => {\n\t\t\t\tstore.commit('update', payload);\n\t\t\t},\n\t\t\t/** @function bookings/delete */\n\t\t\tdelete: (store: Store, bookingId: number | string): void => {\n\t\t\t\tstore.commit('delete', bookingId);\n\t\t\t},\n\t\t\tdeleteMany: (store: Store, bookingIds: number[]): void => {\n\t\t\t\tstore.commit('deleteMany', bookingIds);\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMutations(): MutationTree<BookingsState>\n\t{\n\t\treturn {\n\t\t\tadd: (state: BookingsState, booking: BookingModel): void => {\n\t\t\t\tstate.collection[booking.id] = booking;\n\t\t\t},\n\t\t\tinsert: (state: BookingsState, booking: BookingModel): void => {\n\t\t\t\tstate.collection[booking.id] ??= booking;\n\t\t\t},\n\t\t\tupsert: (state: BookingsState, booking: BookingModel): void => {\n\t\t\t\tstate.collection[booking.id] ??= booking;\n\t\t\t\tObject.assign(state.collection[booking.id], booking);\n\t\t\t},\n\t\t\tupdate: (state: BookingsState, { id, booking }: { id: number | string, booking: BookingModel }): void => {\n\t\t\t\tconst updatedBooking = { ...state.collection[id], ...booking };\n\t\t\t\tdelete state.collection[id];\n\t\t\t\tstate.collection[booking.id] = updatedBooking;\n\t\t\t},\n\t\t\tdelete: (state: BookingsState, bookingId: number | string): void => {\n\t\t\t\tdelete state.collection[bookingId];\n\t\t\t},\n\t\t\tdeleteMany: (state, bookingIds: number[]): void => {\n\t\t\t\tfor (const id of bookingIds)\n\t\t\t\t{\n\t\t\t\t\tdelete state.collection[id];\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":["dateToTsRange","dateTs","dateFrom","dateTo","Date","setDate","getDate","getIntersectionBookings","booking","resourceId","bookings","filter","b","id","resourcesIds","includes","dateFromTs","dateToTs","createOverbookingMapItem","intersections","shifted","overbookingMapItem","item","map","intersection","items","push","createOverbookingMap","resourceBookings","maxLeftBookingTs","maxRightBookingTs","overbookingMap","Map","Object","keys","key","Number","sort","a","bookingId","intersectionBookings","length","canBeRight","canBeLeft","set","get","Bookings","BuilderModel","getName","Model","getState","collection","getElementState","clientId","counter","name","timezoneFrom","Intl","DateTimeFormat","resolvedOptions","timeZone","timezoneTo","rrule","isConfirmed","visitStatus","overbooking","getGetters","state","getters","rootState","rootGetters","deletingBookings","Interface","values","getById","getByIds","ids","getByDateAndResources","getByDate","some","getByDateAndIds","getByInterval","fromTs","toTs","getFutureByResourceId","now","reduce","acc","forEach","getActions","add","store","commit","insertMany","upsert","upsertMany","update","payload","delete","deleteMany","bookingIds","getMutations","insert","assign","updatedBooking"],"mappings":"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"}