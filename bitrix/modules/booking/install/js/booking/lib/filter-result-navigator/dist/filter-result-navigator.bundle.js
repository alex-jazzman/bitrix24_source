this.BX=this.BX||{},this.BX.Booking=this.BX.Booking||{},function(e,t,s,r,o,i){"use strict";var a=babelHelpers.classPrivateFieldLooseKey("getTodayTs"),l=babelHelpers.classPrivateFieldLooseKey("getDateTs"),n=babelHelpers.classPrivateFieldLooseKey("loadNextFilterDates"),c=babelHelpers.classPrivateFieldLooseKey("findPreviousDate"),d=babelHelpers.classPrivateFieldLooseKey("findNextDate");function u(){const e=new Date;return 1e3*Math.trunc(e.getTime()/1e3)}function g(e){const t=new Date(e);return t.setHours(0,0,0,0),t.getTime()}async function v(e,t){const o=s.Core.getStore().getters[r.Model.Filter+"/fields"];await i.calendarService.loadNextFilterMarks(o,e,t)}function b(e){return s.Core.getStore().state[r.Model.Filter].filterDates.findLast(t=>t<e)}function B(e,t=!1){const o=[...s.Core.getStore().state[r.Model.Filter].filterDates].sort();return t?o.find(t=>t>=e):o.find(t=>t>e)}const f=new class{constructor(){Object.defineProperty(this,d,{value:B}),Object.defineProperty(this,c,{value:b}),Object.defineProperty(this,n,{value:v}),Object.defineProperty(this,l,{value:g}),Object.defineProperty(this,a,{value:u})}getOptimalFilterDateTs(e=!1){var t,o,i,n;const c=s.Core.getStore(),d=null!=(t=null==(o=c.getters[r.Model.Filter+"/datesCount"])?void 0:o.count)?t:0,u=null==(i=c.getters[r.Model.Filter+"/datesCount"])?void 0:i.maxDate,g=null==(n=c.getters[r.Model.Filter+"/datesCount"])?void 0:n.minDate,v=c.getters[r.Model.Interface+"/selectedDateTs"];return 0===d?v:null!==u&&(babelHelpers.classPrivateFieldLooseBase(this,l)[l](u)>v||e)?this.getNextFilterDateTs((e?babelHelpers.classPrivateFieldLooseBase(this,a)[a]():v)-864e5,e):null!==g&&babelHelpers.classPrivateFieldLooseBase(this,l)[l](g)<v?this.getPreviousFilterDateTs(v+864e5):v}async getPreviousFilterDateTs(e){var t,o;const i=s.Core.getStore(),a=null==(t=i.getters[r.Model.Filter+"/datesCount"])?void 0:t.minDate;if(null===a)return null;const d=babelHelpers.classPrivateFieldLooseBase(this,l)[l](a),u=e||i.getters[r.Model.Interface+"/selectedDateTs"];if(u<=d)return d;const g=babelHelpers.classPrivateFieldLooseBase(this,l)[l](null==(o=i.getters[r.Model.Filter+"/datesCount"])?void 0:o.maxDate);if(u>g)return g;const v=babelHelpers.classPrivateFieldLooseBase(this,c)[c](u);if(v)return v;const b=new Date(u-864e5);return await babelHelpers.classPrivateFieldLooseBase(this,n)[n](b.getTime(),d),babelHelpers.classPrivateFieldLooseBase(this,c)[c](u)}async getNextFilterDateTs(e,t=!1){var o,i;const a=s.Core.getStore(),c=null==(o=a.getters[r.Model.Filter+"/datesCount"])?void 0:o.maxDate;if(null===c)return null;const u=e||a.getters[r.Model.Interface+"/selectedDateTs"],g=babelHelpers.classPrivateFieldLooseBase(this,l)[l](c);if(u>=g)return g;const v=babelHelpers.classPrivateFieldLooseBase(this,l)[l](null==(i=a.getters[r.Model.Filter+"/datesCount"])?void 0:i.minDate);if(u<v)return v;const b=babelHelpers.classPrivateFieldLooseBase(this,d)[d](u,t);if(b)return b;const B=new Date(u+864e5);return await babelHelpers.classPrivateFieldLooseBase(this,n)[n](B.getTime(),g),babelHelpers.classPrivateFieldLooseBase(this,d)[d](u)}};function F(e){var t;const o=e||s.Core.getStore().getters[r.Model.Interface+"/selectedDateTs"],i=null==(t=s.Core.getStore().getters[r.Model.Filter+"/deletingResource"])?void 0:t.id;return s.Core.getStore().getters[r.Model.Bookings+"/getByDateAndResources"](o,[i])}async function h(){const e=s.Core.getStore().getters[r.Model.Filter+"/fields"];i.calendarService.clearDataCountCache(),await i.calendarService.loadBookingsDateCount(e,!0)}async function C(){const e=s.Core.getStore(),t=e.getters[r.Model.Filter+"/fields"];await e.dispatch(r.Model.Filter+"/setFilteredMarks",[]),i.calendarService.clearFilterCache(),await i.calendarService.loadFilterMarks(t)}async function D(e){var t;(null==(t=s.Core.getStore().getters[r.Model.Filter+"/datesCount"])?void 0:t.count)>0||await new o.RemoveResource(e).runAfterMoveBookings()}const k=new class{subscribe(){t.Event.EventEmitter.subscribe(r.EventName.CreateBookings,this.afterCreateBooking),t.Event.EventEmitter.subscribe(r.EventName.DeleteBooking,this.afterDeleteBooking),t.Event.EventEmitter.subscribe(r.EventName.UpdateBooking,this.afterUpdateBooking)}unsubscribe(){t.Event.EventEmitter.unsubscribe(r.EventName.CreateBookings,this.afterCreateBooking),t.Event.EventEmitter.unsubscribe(r.EventName.DeleteBooking,this.afterDeleteBooking),t.Event.EventEmitter.unsubscribe(r.EventName.UpdateBooking,this.afterUpdateBooking)}afterCreateBooking({data:e}){var o;const i=null==(o=s.Core.getStore().getters[r.Model.Filter+"/deletingResource"])?void 0:o.id,a=e.bookings||[];if(!t.Type.isArray(a)||a.every(({resourcesIds:e})=>!e.includes(i)))return;h();const l=s.Core.getStore().getters[r.Model.Interface+"/selectedDateTs"];1===s.Core.getStore().getters[r.Model.Bookings+"/getByDateAndResources"](l,[i]).length&&C()}async afterDeleteBooking({data:e}){var t;const o=null==(t=s.Core.getStore().getters[r.Model.Filter+"/deletingResource"])?void 0:t.id;(e.booking.resourcesIds||[]).includes(o)&&(await h(),0===F(new Date(e.booking.dateFromTs)).length&&C(),D(o))}async afterUpdateBooking({data:e}){var t;const o=e.oldBooking.resourcesIds,i=e.newBooking.resourcesIds,a=null==(t=s.Core.getStore().getters[r.Model.Filter+"/deletingResource"])?void 0:t.id;o.includes(a)&&i.includes(a)||!o.includes(a)&&!i.includes(a)||(await h(),F().length<2&&C(),D(a))}};e.filterResultNavigator=f,e.deletingResourceFilterResultCountActualizer=k}(this.BX.Booking.Lib=this.BX.Booking.Lib||{},BX,BX.Booking,BX.Booking.Const,BX.Booking.Lib,BX.Booking.Provider.Service);
//# sourceMappingURL=filter-result-navigator.bundle.js.map
