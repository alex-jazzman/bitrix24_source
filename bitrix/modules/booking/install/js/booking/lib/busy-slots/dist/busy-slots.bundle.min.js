this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(e,s,t,o,r,a){"use strict";function i({busyRanges:e,resourceId:s,selectedDateTs:t,intersectingBookings:o,intersectingResourcesIds:r,overbookingMap:i}){const n=[];for(const c of e){let e=new Date(t).setMinutes(c.from);const d=new Date(t).setMinutes(c.to);const b=o.find((e=>e.id===c.id));const u=b?b.resourcesIds.find((e=>r.includes(e))):0;const f=l(s,c.id,i);const g=f.map((t=>{const o=e>=t.dateFromTs?e:t.dateFromTs;const r=d<=t.dateToTs?d:t.dateToTs;if(o===r){return null}return{id:`${s}-${o}-${r}`,fromTs:o,toTs:r,resourceId:s,intersectingResourceId:u,type:a.BusySlot.IntersectionOverbooking}})).filter((e=>e!==null));g.forEach((t=>{if(e<=t.fromTs){n.push({id:`${s}-${e}-${t.fromTs}`,fromTs:e,toTs:t.fromTs,resourceId:s,intersectingResourceId:u,type:a.BusySlot.Intersection});e=t.toTs}}));n.push(...g);if(e!==d){n.push({id:`${s}-${e}-${d}`,fromTs:e,toTs:d,resourceId:s,intersectingResourceId:u,type:a.BusySlot.Intersection})}}return n}function l(e,s,t){const o=t.get(s);if(!o){return[]}return o.items.filter((s=>s.resourceId!==e)).flatMap((e=>e.intersections))}const n=15*60*1e3;var c=babelHelpers.classPrivateFieldLooseKey("busySlots");var d=babelHelpers.classPrivateFieldLooseKey("getBookings");var b=babelHelpers.classPrivateFieldLooseKey("getIntersectingBookings");var u=babelHelpers.classPrivateFieldLooseKey("selectedWeekDay");var f=babelHelpers.classPrivateFieldLooseKey("selectedDateTs");var g=babelHelpers.classPrivateFieldLooseKey("offset");var p=babelHelpers.classPrivateFieldLooseKey("timezone");var v=babelHelpers.classPrivateFieldLooseKey("resourcesIds");var h=babelHelpers.classPrivateFieldLooseKey("intersections");var B=babelHelpers.classPrivateFieldLooseKey("draggedBooking");var P=babelHelpers.classPrivateFieldLooseKey("draggedBookingId");var y=babelHelpers.classPrivateFieldLooseKey("draggedBookingResourceId");var F=babelHelpers.classPrivateFieldLooseKey("loadIntersections");var H=babelHelpers.classPrivateFieldLooseKey("calculateOffHoursBusySlots");var L=babelHelpers.classPrivateFieldLooseKey("calculateIntersectionBusySlots");var m=babelHelpers.classPrivateFieldLooseKey("calculateMinutesRange");var I=babelHelpers.classPrivateFieldLooseKey("subtractRanges");var M=babelHelpers.classPrivateFieldLooseKey("rangesOverlap");var S=babelHelpers.classPrivateFieldLooseKey("getResource");var k=babelHelpers.classPrivateFieldLooseKey("getOverbookingMap");class T{constructor(){Object.defineProperty(this,k,{value:Q});Object.defineProperty(this,S,{value:J});Object.defineProperty(this,M,{value:G});Object.defineProperty(this,I,{value:q});Object.defineProperty(this,m,{value:N});Object.defineProperty(this,L,{value:W});Object.defineProperty(this,H,{value:E});Object.defineProperty(this,F,{value:A});Object.defineProperty(this,y,{get:x,set:void 0});Object.defineProperty(this,P,{get:z,set:void 0});Object.defineProperty(this,B,{get:X,set:void 0});Object.defineProperty(this,h,{get:w,set:void 0});Object.defineProperty(this,v,{get:C,set:void 0});Object.defineProperty(this,p,{get:K,set:void 0});Object.defineProperty(this,g,{get:R,set:void 0});Object.defineProperty(this,f,{get:j,set:void 0});Object.defineProperty(this,u,{get:D,set:void 0});Object.defineProperty(this,b,{value:O});Object.defineProperty(this,d,{value:$});Object.defineProperty(this,c,{writable:true,value:[]})}async loadBusySlots(){await babelHelpers.classPrivateFieldLooseBase(this,F)[F]();void s.Core.getStore().dispatch(`${a.Model.Interface}/clearDisabledBusySlots`);void s.Core.getStore().dispatch(`${a.Model.Interface}/clearBusySlots`);const e=Object.keys(babelHelpers.classPrivateFieldLooseBase(this,h)[h]).flatMap((e=>{const s=Number(e);if(s>0){return s}return babelHelpers.classPrivateFieldLooseBase(this,v)[v]}));babelHelpers.classPrivateFieldLooseBase(this,c)[c]=[...babelHelpers.classPrivateFieldLooseBase(this,v)[v].flatMap((e=>babelHelpers.classPrivateFieldLooseBase(this,H)[H](e))),...e.flatMap((e=>babelHelpers.classPrivateFieldLooseBase(this,L)[L](e)))];return s.Core.getStore().dispatch(`${a.Model.Interface}/upsertBusySlotMany`,babelHelpers.classPrivateFieldLooseBase(this,c)[c])}filterSlotRanges(e){return e.map((({from:e,to:s})=>({from:e,to:s}))).sort(((e,s)=>e.from-s.from)).reduce(((e,{from:s,to:t})=>{const o=e.length-1;if(e[o]&&e[o].to>=s){if(e[o].to<=t){e[o].to=t}}else{e.push({from:s,to:t})}return e}),[]).filter((({from:e,to:s})=>s-e>0))}}function $(){return s.Core.getStore().getters[`${a.Model.Bookings}/getByDateAndResources`](babelHelpers.classPrivateFieldLooseBase(this,f)[f],babelHelpers.classPrivateFieldLooseBase(this,v)[v])}function O(e){return s.Core.getStore().getters[`${a.Model.Bookings}/getByDateAndResources`](babelHelpers.classPrivateFieldLooseBase(this,f)[f],e)}function D(){return a.DateFormat.WeekDays[new Date(babelHelpers.classPrivateFieldLooseBase(this,f)[f]+babelHelpers.classPrivateFieldLooseBase(this,g)[g]).getDay()]}function j(){return s.Core.getStore().getters[`${a.Model.Interface}/selectedDateTs`]}function R(){return s.Core.getStore().getters[`${a.Model.Interface}/offset`]}function K(){return s.Core.getStore().getters[`${a.Model.Interface}/timezone`]}function C(){return s.Core.getStore().getters[`${a.Model.Interface}/resourcesIds`]}function w(){if(babelHelpers.classPrivateFieldLooseBase(this,B)[B]){const e=[...babelHelpers.classPrivateFieldLooseBase(this,B)[B].resourcesIds];const s=e.filter((e=>e!==babelHelpers.classPrivateFieldLooseBase(this,y)[y]));return{...[...babelHelpers.classPrivateFieldLooseBase(this,v)[v]].reduce(((e,t)=>({...e,[t]:s})),{}),...s.reduce(((s,t)=>({...s,[t]:e})),{})}}return s.Core.getStore().getters[`${a.Model.Interface}/intersections`]}function X(){var e;return(e=s.Core.getStore().getters[`${a.Model.Bookings}/getById`](babelHelpers.classPrivateFieldLooseBase(this,P)[P]))!=null?e:null}function z(){return s.Core.getStore().getters[`${a.Model.Interface}/draggedBookingId`]||s.Core.getStore().getters[`${a.Model.Interface}/resizedBookingId`]}function x(){return s.Core.getStore().getters[`${a.Model.Interface}/draggedBookingResourceId`]}async function A(){const e=[...new Set(Object.values(babelHelpers.classPrivateFieldLooseBase(this,h)[h]).flat())];const s=babelHelpers.classPrivateFieldLooseBase(this,f)[f]/1e3;const t=new Set(r.resourcesDateCache.getIdsByDateTs(s));const a=e.filter((e=>!t.has(e)));await o.resourceDialogService.loadByIds(a,s)}function E(e){const s=babelHelpers.classPrivateFieldLooseBase(this,S)[S](e);if(s.slotRanges.length===0){return[]}const o=babelHelpers.classPrivateFieldLooseBase(this,d)[d]().filter((s=>s.resourcesIds.includes(e))).map((e=>babelHelpers.classPrivateFieldLooseBase(this,m)[m](e)));const r=t.SlotRanges.applyTimezone(s.slotRanges,babelHelpers.classPrivateFieldLooseBase(this,f)[f],babelHelpers.classPrivateFieldLooseBase(this,p)[p]).filter((e=>e.weekDays.includes(babelHelpers.classPrivateFieldLooseBase(this,u)[u])));const i=this.filterSlotRanges([...r,...o]);const l=[0,...i.flatMap((({from:e,to:s})=>[e,s])),24*60].reduce(((e,s,t)=>{var o;const r=Math.floor(t/2);(o=e[r])!=null?o:e[r]=[];e[r].push(s);return e}),[]);return l.filter((([e,s])=>s-e>0)).map((([s,t])=>{const o=new Date(babelHelpers.classPrivateFieldLooseBase(this,f)[f]).setMinutes(s);const r=new Date(babelHelpers.classPrivateFieldLooseBase(this,f)[f]).setMinutes(t);const i=`${e}-${o}-${r}`;const l=a.BusySlot.OffHours;return{id:i,fromTs:o,toTs:r,resourceId:e,type:l}}))}function W(e){var s,t;const o=babelHelpers.classPrivateFieldLooseBase(this,S)[S](e);if(o.slotRanges.length===0){return[]}const r=[...(s=babelHelpers.classPrivateFieldLooseBase(this,h)[h][0])!=null?s:[],...(t=babelHelpers.classPrivateFieldLooseBase(this,h)[h][e])!=null?t:[]];const a=babelHelpers.classPrivateFieldLooseBase(this,d)[d]().filter((s=>s.resourcesIds.includes(e))).map((e=>babelHelpers.classPrivateFieldLooseBase(this,m)[m](e)));const l=babelHelpers.classPrivateFieldLooseBase(this,b)[b](r).filter((s=>{const t=!s.resourcesIds.includes(e);const o=s.id!==babelHelpers.classPrivateFieldLooseBase(this,P)[P];return t&&o}));const n=l.map((e=>babelHelpers.classPrivateFieldLooseBase(this,m)[m](e))).filter((e=>a.filter((s=>s.from<=e.from&&e.to<=s.to)).length<2));if(n.length===0){return[]}const c=n.flatMap((e=>babelHelpers.classPrivateFieldLooseBase(this,I)[I](e,a)));return i({resourceId:e,busyRanges:c,overbookingMap:babelHelpers.classPrivateFieldLooseBase(this,k)[k](),selectedDateTs:babelHelpers.classPrivateFieldLooseBase(this,f)[f],intersectingBookings:l,intersectingResourcesIds:r})}function N(e){const s=new Date(babelHelpers.classPrivateFieldLooseBase(this,f)[f]);const t=Math.max(s.getTime(),e.dateFromTs)+babelHelpers.classPrivateFieldLooseBase(this,g)[g];const o=Math.max(e.dateToTs,e.dateFromTs+n);const r=Math.min(s.setDate(s.getDate()+1),o)+babelHelpers.classPrivateFieldLooseBase(this,g)[g];const a=new Date(t);const i=new Date(r);const l=i.getHours()*60+i.getMinutes();return{from:a.getHours()*60+a.getMinutes(),to:l===0?60*24:l,id:e.id}}function q(e,s){let t=[{...e}];s.forEach((e=>{t=t.flatMap((s=>{if(babelHelpers.classPrivateFieldLooseBase(this,M)[M](s,e)){const t=[];if(s.from<e.from){t.push({from:s.from,to:e.from,id:s.id})}if(s.to>e.to){t.push({from:e.to,to:s.to,id:s.id})}if(t.length>0){return t}}return[s]}))}));return t}function G(e,s){return e.from<s.to&&s.from<e.to}function J(e){return s.Core.getStore().getters[`${a.Model.Resources}/getById`](e)}function Q(){return s.Core.getStore().getters[`${a.Model.Bookings}/overbookingMap`]}const U=new T;e.busySlots=U})(this.BX.Booking.Lib=this.BX.Booking.Lib||{},BX.Booking,BX.Booking.Lib,BX.Booking.Provider.Service,BX.Booking.Lib,BX.Booking.Const);
//# sourceMappingURL=busy-slots.bundle.map.js