this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(e,s,t,o,r,a){"use strict";const i=15*60*1e3;var l=babelHelpers.classPrivateFieldLooseKey("busySlots");var n=babelHelpers.classPrivateFieldLooseKey("getBookings");var c=babelHelpers.classPrivateFieldLooseKey("getIntersectingBookings");var d=babelHelpers.classPrivateFieldLooseKey("selectedWeekDay");var b=babelHelpers.classPrivateFieldLooseKey("selectedDateTs");var u=babelHelpers.classPrivateFieldLooseKey("offset");var f=babelHelpers.classPrivateFieldLooseKey("timezoneOffset");var v=babelHelpers.classPrivateFieldLooseKey("resourcesIds");var p=babelHelpers.classPrivateFieldLooseKey("intersections");var g=babelHelpers.classPrivateFieldLooseKey("draggedBooking");var h=babelHelpers.classPrivateFieldLooseKey("draggedBookingId");var P=babelHelpers.classPrivateFieldLooseKey("draggedBookingResourceId");var B=babelHelpers.classPrivateFieldLooseKey("loadIntersections");var y=babelHelpers.classPrivateFieldLooseKey("calculateOffHoursBusySlots");var F=babelHelpers.classPrivateFieldLooseKey("calculateIntersectionBusySlots");var L=babelHelpers.classPrivateFieldLooseKey("calculateMinutesRange");var m=babelHelpers.classPrivateFieldLooseKey("subtractRanges");var H=babelHelpers.classPrivateFieldLooseKey("rangesOverlap");var D=babelHelpers.classPrivateFieldLooseKey("sliceOverbookingFromBookingRange");var k=babelHelpers.classPrivateFieldLooseKey("getResource");var M=babelHelpers.classPrivateFieldLooseKey("getNextDay");var I=babelHelpers.classPrivateFieldLooseKey("getPreviousDay");var S=babelHelpers.classPrivateFieldLooseKey("getOverbookingMap");class O{constructor(){Object.defineProperty(this,S,{value:Y});Object.defineProperty(this,I,{value:V});Object.defineProperty(this,M,{value:Q});Object.defineProperty(this,k,{value:J});Object.defineProperty(this,D,{value:G});Object.defineProperty(this,H,{value:q});Object.defineProperty(this,m,{value:Z});Object.defineProperty(this,L,{value:N});Object.defineProperty(this,F,{value:E});Object.defineProperty(this,y,{value:A});Object.defineProperty(this,B,{value:z});Object.defineProperty(this,P,{get:U,set:void 0});Object.defineProperty(this,h,{get:W,set:void 0});Object.defineProperty(this,g,{get:x,set:void 0});Object.defineProperty(this,p,{get:X,set:void 0});Object.defineProperty(this,v,{get:T,set:void 0});Object.defineProperty(this,f,{get:R,set:void 0});Object.defineProperty(this,u,{get:C,set:void 0});Object.defineProperty(this,b,{get:$,set:void 0});Object.defineProperty(this,d,{get:K,set:void 0});Object.defineProperty(this,c,{value:j});Object.defineProperty(this,n,{value:w});Object.defineProperty(this,l,{writable:true,value:[]})}async loadBusySlots(){await babelHelpers.classPrivateFieldLooseBase(this,B)[B]();void s.Core.getStore().dispatch(`${t.Model.Interface}/clearDisabledBusySlots`);void s.Core.getStore().dispatch(`${t.Model.Interface}/clearBusySlots`);const e=Object.keys(babelHelpers.classPrivateFieldLooseBase(this,p)[p]).flatMap((e=>{const s=Number(e);if(s>0){return s}return babelHelpers.classPrivateFieldLooseBase(this,v)[v]}));babelHelpers.classPrivateFieldLooseBase(this,l)[l]=[...babelHelpers.classPrivateFieldLooseBase(this,v)[v].flatMap((e=>babelHelpers.classPrivateFieldLooseBase(this,y)[y](e))),...e.flatMap((e=>babelHelpers.classPrivateFieldLooseBase(this,F)[F](e)))];return s.Core.getStore().dispatch(`${t.Model.Interface}/upsertBusySlotMany`,babelHelpers.classPrivateFieldLooseBase(this,l)[l])}filterSlotRanges(e){return e.map((({from:e,to:s})=>({from:e,to:s}))).sort(((e,s)=>e.from-s.from)).reduce(((e,{from:s,to:t})=>{const o=e.length-1;if(e[o]&&e[o].to>=s){if(e[o].to<=t){e[o].to=t}}else{e.push({from:s,to:t})}return e}),[]).filter((({from:e,to:s})=>s-e>0))}}function w(){return s.Core.getStore().getters[`${t.Model.Bookings}/getByDateAndResources`](babelHelpers.classPrivateFieldLooseBase(this,b)[b],babelHelpers.classPrivateFieldLooseBase(this,v)[v])}function j(e){return s.Core.getStore().getters[`${t.Model.Bookings}/getByDateAndResources`](babelHelpers.classPrivateFieldLooseBase(this,b)[b],e)}function K(){return t.DateFormat.WeekDays[new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]+babelHelpers.classPrivateFieldLooseBase(this,u)[u]).getDay()]}function $(){return s.Core.getStore().getters[`${t.Model.Interface}/selectedDateTs`]}function C(){return s.Core.getStore().getters[`${t.Model.Interface}/offset`]}function R(){return s.Core.getStore().getters[`${t.Model.Interface}/timezoneOffset`]}function T(){return s.Core.getStore().getters[`${t.Model.Interface}/resourcesIds`]}function X(){if(babelHelpers.classPrivateFieldLooseBase(this,g)[g]){const e=[...babelHelpers.classPrivateFieldLooseBase(this,g)[g].resourcesIds];const s=e.filter((e=>e!==babelHelpers.classPrivateFieldLooseBase(this,P)[P]));return{...[...babelHelpers.classPrivateFieldLooseBase(this,v)[v]].reduce(((e,t)=>({...e,[t]:s})),{}),...s.reduce(((s,t)=>({...s,[t]:e})),{})}}return s.Core.getStore().getters[`${t.Model.Interface}/intersections`]}function x(){var e;return(e=s.Core.getStore().getters[`${t.Model.Bookings}/getById`](babelHelpers.classPrivateFieldLooseBase(this,h)[h]))!=null?e:null}function W(){return s.Core.getStore().getters[`${t.Model.Interface}/draggedBookingId`]||s.Core.getStore().getters[`${t.Model.Interface}/resizedBookingId`]}function U(){return s.Core.getStore().getters[`${t.Model.Interface}/draggedBookingResourceId`]}async function z(){const e=[...new Set(Object.values(babelHelpers.classPrivateFieldLooseBase(this,p)[p]).flat())];const s=babelHelpers.classPrivateFieldLooseBase(this,b)[b]/1e3;const t=new Set(a.resourcesDateCache.getIdsByDateTs(s));const o=e.filter((e=>!t.has(e)));await r.resourceDialogService.loadByIds(o,s)}function A(e){const s=babelHelpers.classPrivateFieldLooseBase(this,k)[k](e);if(s.slotRanges.length===0){return[]}const r=babelHelpers.classPrivateFieldLooseBase(this,n)[n]().filter((s=>s.resourcesIds.includes(e))).map((e=>babelHelpers.classPrivateFieldLooseBase(this,L)[L](e)));const a=o.Duration.getUnitDurations().d/o.Duration.getUnitDurations().i;const i=s.slotRanges.map((e=>{const s=e.timezone;const t=new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]);const o=new Date(t.toLocaleString("en-US",{timeZone:s}));const r=new Date(t.toLocaleString("en-US",{timeZone:"UTC"}));const a=(o.getTime()-r.getTime())/1e3;const i=(babelHelpers.classPrivateFieldLooseBase(this,f)[f]-a)/60;return{...e,from:e.from+i,to:e.to+i}})).map((e=>{if(e.from>a){return{...e,from:e.from-a,to:e.to-a,weekDays:e.weekDays.map((e=>babelHelpers.classPrivateFieldLooseBase(this,M)[M](e)))}}if(e.to<0){return{...e,from:e.from+a,to:e.to+a,weekDays:e.weekDays.map((e=>babelHelpers.classPrivateFieldLooseBase(this,I)[I](e)))}}return e})).flatMap((e=>{if(e.from<0){return[{...e,from:0},...e.weekDays.map((s=>({...e,from:a+e.from,to:a,weekDays:[babelHelpers.classPrivateFieldLooseBase(this,I)[I](s)]})))]}if(e.to>a){return[{...e,to:a},...e.weekDays.map((s=>({...e,from:0,to:e.to-a,weekDays:[babelHelpers.classPrivateFieldLooseBase(this,M)[M](s)]})))]}return e})).filter((e=>e.weekDays.includes(babelHelpers.classPrivateFieldLooseBase(this,d)[d])));const l=this.filterSlotRanges([...i,...r]);const c=[0,...l.flatMap((({from:e,to:s})=>[e,s])),24*60].reduce(((e,s,t)=>{var o;const r=Math.floor(t/2);(o=e[r])!=null?o:e[r]=[];e[r].push(s);return e}),[]);return c.filter((([e,s])=>s-e>0)).map((([s,o])=>{const r=new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]).setMinutes(s);const a=new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]).setMinutes(o);const i=`${e}-${r}-${a}`;const l=t.BusySlot.OffHours;return{id:i,fromTs:r,toTs:a,resourceId:e,type:l}}))}function E(e){var s,o;const r=babelHelpers.classPrivateFieldLooseBase(this,k)[k](e);if(r.slotRanges.length===0){return[]}const a=[...(s=babelHelpers.classPrivateFieldLooseBase(this,p)[p][0])!=null?s:[],...(o=babelHelpers.classPrivateFieldLooseBase(this,p)[p][e])!=null?o:[]];const i=babelHelpers.classPrivateFieldLooseBase(this,n)[n]().filter((s=>s.resourcesIds.includes(e))).map((e=>babelHelpers.classPrivateFieldLooseBase(this,L)[L](e)));const l=babelHelpers.classPrivateFieldLooseBase(this,S)[S]();const d=[];i.forEach((s=>{const t=l.get(s.id);if(!t){return}const o=t.items.filter((s=>s.resourceId!==e)).flatMap((e=>e.intersections.map((({id:s})=>({id:s,resourceId:e.resourceId})))));d.push(...o)}));const u=babelHelpers.classPrivateFieldLooseBase(this,c)[c](a).filter((s=>{const t=!s.resourcesIds.includes(e);const o=s.id!==babelHelpers.classPrivateFieldLooseBase(this,h)[h];const r=l.has(s.id);const a=d.some((({id:e})=>e===s.id));return t&&o&&(r||a)}));const f=u.map((e=>babelHelpers.classPrivateFieldLooseBase(this,L)[L](e))).filter((e=>i.filter((s=>s.from<=e.from&&e.to<=s.to)).length<2));if(f.length===0){return[]}const v=f.flatMap((e=>babelHelpers.classPrivateFieldLooseBase(this,m)[m](e,i)));return v.map((({from:s,to:o,id:r})=>{const i=new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]).setMinutes(s);const l=new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]).setMinutes(o);const n=t.BusySlot.Intersection;const c=u.find((e=>e.id===r));const d=c?c.resourcesIds.find((e=>a.includes(e))):0;return{id:`${e}-${i}-${l}`,fromTs:i,toTs:l,resourceId:e,intersectingResourceId:d,type:n}}))}function N(e){const s=new Date(babelHelpers.classPrivateFieldLooseBase(this,b)[b]);const t=Math.max(s.getTime(),e.dateFromTs)+babelHelpers.classPrivateFieldLooseBase(this,u)[u];const o=Math.max(e.dateToTs,e.dateFromTs+i);const r=Math.min(s.setDate(s.getDate()+1),o)+babelHelpers.classPrivateFieldLooseBase(this,u)[u];const a=new Date(t);const l=new Date(r);const n=l.getHours()*60+l.getMinutes();return{from:a.getHours()*60+a.getMinutes(),to:n===0?60*24:n,id:e.id}}function Z(e,s){let t=[{...e}];s.forEach((e=>{const o=babelHelpers.classPrivateFieldLooseBase(this,D)[D](e,s);t=t.flatMap((e=>{if(babelHelpers.classPrivateFieldLooseBase(this,H)[H](e,o)){const s=[];if(e.from<o.from){s.push({from:e.from,to:o.from,id:e.id})}if(e.to>o.to){s.push({from:o.to,to:e.to,id:e.id})}if(s.length>0){return s}}return[e]}))}));return t}function q(e,s){return e.from<s.to&&s.from<e.to}function G(e,s){const t=s.find((({from:s,to:t,id:o})=>e.from<t&&e.to>s&&e.id!==o));if(!t){return e}return{from:Math.max(e.from,t.from),to:Math.min(e.to,t.to),id:e.id}}function J(e){return s.Core.getStore().getters[`${t.Model.Resources}/getById`](e)}function Q(e){return t.DateFormat.WeekDays[(t.DateFormat.WeekDays.indexOf(e)+1)%7]}function V(e){return t.DateFormat.WeekDays[(t.DateFormat.WeekDays.indexOf(e)+7-1)%7]}function Y(){return s.Core.getStore().getters[`${t.Model.Bookings}/overbookingMap`]}const _=new O;e.busySlots=_})(this.BX.Booking.Lib=this.BX.Booking.Lib||{},BX.Booking,BX.Booking.Const,BX.Booking.Lib,BX.Booking.Provider.Service,BX.Booking.Lib);
//# sourceMappingURL=busy-slots.bundle.map.js