{"version":3,"file":"in-interval.bundle.js","sources":["../src/in-interval.js"],"sourcesContent":["opaque type Interval = [number, number];\nexport opaque type IncludeBoundariesValue = 'all' | 'left' | 'right' | 'none';\n\nexport opaque type InIntervalOptions = {\n\tinclude: IncludeBoundariesValue,\n};\n\nconst defaultOptions: InIntervalOptions = {\n\tinclude: 'none',\n};\n\nexport const IncludeBoundaries = Object.freeze({\n\tall: 'all',\n\tleft: 'left',\n\tright: 'right',\n\tnone: 'none',\n});\n\nexport function inInterval(value: number, interval: Interval, options?: InIntervalOptions): boolean\n{\n\tif (!Array.isArray(interval) && interval.length < 2)\n\t{\n\t\tthrow new TypeError('\"interval\" must be an numeric array');\n\t}\n\n\tconst { include } = { ...defaultOptions, ...options };\n\tif (include === IncludeBoundaries.all)\n\t{\n\t\treturn interval[0] <= value && value <= interval[1];\n\t}\n\n\tif (include === IncludeBoundaries.left)\n\t{\n\t\treturn interval[0] <= value && value < interval[1];\n\t}\n\n\tif (include === IncludeBoundaries.right)\n\t{\n\t\treturn interval[0] < value && value <= interval[1];\n\t}\n\n\treturn interval[0] < value && value < interval[1];\n}\n"],"names":["defaultOptions","include","IncludeBoundaries","Object","freeze","all","left","right","none","value","interval","options","Array","isArray","length","TypeError"],"mappings":"iFAOA,MAAMA,EAAoC,CACzCC,QAAS,QAGGC,EAAoBC,OAAOC,OAAO,CAC9CC,IAAK,MACLC,KAAM,OACNC,MAAO,QACPC,KAAM,4CAGA,SAAoBC,EAAeC,EAAoBC,GAE7D,IAAKC,MAAMC,QAAQH,IAAaA,EAASI,OAAS,EAEjD,MAAM,IAAIC,UAAU,uCAGrB,MAAMd,QAAEA,GAAY,IAAKD,KAAmBW,GAC5C,OAAIV,IAAYC,EAAkBG,IAE1BK,EAAS,IAAMD,GAASA,GAASC,EAAS,GAG9CT,IAAYC,EAAkBI,KAE1BI,EAAS,IAAMD,GAASA,EAAQC,EAAS,GAG7CT,IAAYC,EAAkBK,MAE1BG,EAAS,GAAKD,GAASA,GAASC,EAAS,GAG1CA,EAAS,GAAKD,GAASA,EAAQC,EAAS"}