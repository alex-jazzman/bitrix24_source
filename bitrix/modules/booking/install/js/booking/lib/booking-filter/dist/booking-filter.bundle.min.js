this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(e,t,r,i){"use strict";const n=Object.freeze({BookingDelayed:"booking_delayed",BookingUnconfirmed:"booking_unconfirmed"});class o{prepareFilter(e,o=false){const s=i.Core.getStore().getters[`${r.Model.Interface}/${o?"viewDateTs":"selectedDateTs"}`];const a=new Date(s);const T={WITHIN:{DATE_FROM:a.getTime()/1e3,DATE_TO:o?a.setMonth(a.getMonth()+1)/1e3:a.setDate(a.getDate()+1)/1e3}};if(t.Type.isArrayFilled(e.CREATED_BY)){T.CREATED_BY=e.CREATED_BY.map((e=>Number(e)))}if(t.Type.isArrayFilled(e.CONTACT)){T.CRM_CONTACT_ID=e.CONTACT.map((e=>Number(e)))}if(t.Type.isArrayFilled(e.COMPANY)){T.CRM_COMPANY_ID=e.COMPANY.map((e=>Number(e)))}if(t.Type.isArrayFilled(e.RESOURCE)){T.RESOURCE_ID=e.RESOURCE.map((e=>Number(e)))}if(e.CONFIRMED){T.IS_CONFIRMED={Y:1,N:0}[e.CONFIRMED]}if(e.REQUIRE_ATTENTION){T.HAS_COUNTER_OF_TYPE={D:n.BookingDelayed,AC:n.BookingUnconfirmed}[e.REQUIRE_ATTENTION]}return T}}const s=new o;class a extends o{prepareUndatedFilter(e,t=false){const r=super.prepareFilter(e,t);delete r.WITHIN;return r}prepareFutureOnlyFilter(e,t=false){const r=super.prepareFilter(e,t);r.WITHIN={DATE_FROM:Math.trunc(Date.now()/1e3)};return r}prepareFutureFilter(e,t=false){const r=super.prepareFilter(e,t);const i=r.WITHIN.DATE_FROM;const n=Math.trunc(Date.now()/1e3);if(i<n){r.WITHIN.DATE_FROM=n}return r}}const T=new a;e.bookingFilter=s;e.bookingDateCountFilter=T})(this.BX.Booking.Lib=this.BX.Booking.Lib||{},BX,BX.Booking.Const,BX.Booking);
//# sourceMappingURL=booking-filter.bundle.map.js