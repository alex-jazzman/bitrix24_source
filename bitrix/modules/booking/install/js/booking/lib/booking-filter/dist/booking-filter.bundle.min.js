this.BX=this.BX||{};this.BX.Booking=this.BX.Booking||{};(function(e,i,o,t){"use strict";const n=Object.freeze({BookingDelayed:"booking_delayed",BookingUnconfirmed:"booking_unconfirmed"});class T{prepareFilter(e,T=false){const r=t.Core.getStore().getters[`${o.Model.Interface}/${T?"viewDateTs":"selectedDateTs"}`];const s=new Date(r);const E={WITHIN:{DATE_FROM:s.getTime()/1e3,DATE_TO:T?s.setMonth(s.getMonth()+1)/1e3:s.setDate(s.getDate()+1)/1e3}};if(i.Type.isArrayFilled(e.CREATED_BY)){E.CREATED_BY=e.CREATED_BY.map((e=>Number(e)))}if(i.Type.isArrayFilled(e.CONTACT)){E.CRM_CONTACT_ID=e.CONTACT.map((e=>Number(e)))}if(i.Type.isArrayFilled(e.COMPANY)){E.CRM_COMPANY_ID=e.COMPANY.map((e=>Number(e)))}if(i.Type.isArrayFilled(e.RESOURCE)){E.RESOURCE_ID=e.RESOURCE.map((e=>Number(e)))}if(e.CONFIRMED){E.IS_CONFIRMED={Y:1,N:0}[e.CONFIRMED]}if(e.REQUIRE_ATTENTION){E.HAS_COUNTER_OF_TYPE={D:n.BookingDelayed,AC:n.BookingUnconfirmed}[e.REQUIRE_ATTENTION]}return E}}const r=new T;e.bookingFilter=r})(this.BX.Booking.Lib=this.BX.Booking.Lib||{},BX,BX.Booking.Const,BX.Booking);
//# sourceMappingURL=booking-filter.bundle.map.js