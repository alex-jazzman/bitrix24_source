this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};this.BX.UI.System=this.BX.UI.System||{};(function(t,e){"use strict";const n=Object.freeze({Lg:"l",Md:"m",Sm:"s"});const i=Object.freeze({Primary:"primary",Grey:"grey",LightGrey:"light-grey",Disabled:"disabled",Naked:"naked"});const l={name:"BInput",components:{BIcon:e.BIcon},expose:["blur"],props:{modelValue:{type:String,default:""},label:{type:String,default:""},labelInline:{type:Boolean,default:false},placeholder:{type:String,default:""},error:{type:String,default:""},size:{type:String,default:n.Lg},design:{type:String,default:i.Grey},icon:{type:String,default:""},center:{type:Boolean,default:false},withClear:{type:Boolean,default:false},dropdown:{type:Boolean,default:false},active:{type:Boolean,default:false}},emits:["update:modelValue","click","focus","blur","input","clear"],setup(){return{Outline:e.Outline}},computed:{value:{get(){return this.modelValue},set(t){this.$emit("update:modelValue",t)}},disabled(){return this.design===i.Disabled}},template:`\n\t\t<div\n\t\t\tclass="ui-system-input"\n\t\t\t:class="[\n\t\t\t\t'--' + design,\n\t\t\t\t'--' + size,\n\t\t\t\t{\n\t\t\t\t\t'--center': center,\n\t\t\t\t\t'--with-icon': icon,\n\t\t\t\t\t'--with-clear': withClear,\n\t\t\t\t\t'--with-dropdown': dropdown,\n\t\t\t\t\t'--active': active,\n\t\t\t\t\t'--error': error && !disabled,\n\t\t\t\t},\n\t\t\t]">\n\t\t\t<div v-if="label" class="ui-system-input-label" :class="{ '--inline': labelInline }">{{ label }}</div>\n\t\t\t<div class="ui-system-input-container">\n\t\t\t\t<input\n\t\t\t\t\tv-model="value"\n\t\t\t\t\tclass="ui-system-input-value"\n\t\t\t\t\t:placeholder="placeholder"\n\t\t\t\t\t:disabled="disabled"\n\t\t\t\t\tref="input"\n\t\t\t\t\t@click="$emit('click', $event)"\n\t\t\t\t\t@focus="$emit('focus', $event)"\n\t\t\t\t\t@blur="$emit('blur', $event)"\n\t\t\t\t\t@input="$emit('input', $event)"\n\t\t\t\t>\n\t\t\t\t<BIcon v-if="icon" class="ui-system-input-icon" :name="icon"/>\n\t\t\t\t<BIcon v-if="withClear" class="ui-system-input-cross" :name="Outline.CROSS_L" @click="$emit('clear')"/>\n\t\t\t\t<BIcon v-if="dropdown" class="ui-system-input-dropdown" :name="Outline.CHEVRON_DOWN_L"/>\n\t\t\t</div>\n\t\t\t<div v-if="error?.trim() && !disabled" class="ui-system-input-label --inline --error">{{ error }}</div>\n\t\t</div>\n\t`};var s=Object.freeze({InputSize:n,InputDesign:i,BInput:l});t.Vue=s;t.InputSize=n;t.InputDesign=i})(this.BX.UI.System.Input=this.BX.UI.System.Input||{},BX.UI.IconSet);
//# sourceMappingURL=input.bundle.map.js