this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,a,t,r,i,l,o,d,c,n,b,h,v,p,u,g,L,P,F,H,m){"use strict";var C=babelHelpers.classPrivateFieldLooseKey("store");var B=babelHelpers.classPrivateFieldLooseKey("updateModels");class y{constructor(){Object.defineProperty(this,B,{value:f});Object.defineProperty(this,C,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,C)[C]=L.Core.getStore()}async deleteChat(e){P.Logger.warn(`ChatService: deleteChat, dialogId: ${e}`);const s=await H.runAction(F.RestMethod.imV2ChatDelete,{data:{dialogId:e}}).catch((([e])=>{console.error("ChatService: deleteChat error:",e);p.Notifier.chat.onDeleteError()}));await babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);return s}async deleteCollab(e){P.Logger.warn(`ChatService: deleteCollab, dialogId: ${e}`);try{await H.runAction(F.RestMethod.socialnetworkCollabDelete,{data:{dialogId:e}});await babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);return Promise.resolve()}catch(e){const[s]=e;console.error("ChatService: deleteCollab error:",s);p.Notifier.collab.handleDeleteError(s);return Promise.resolve()}}}function f(e){void babelHelpers.classPrivateFieldLooseBase(this,C)[C].dispatch("chats/update",{dialogId:e,fields:{inited:false}});void babelHelpers.classPrivateFieldLooseBase(this,C)[C].dispatch("recent/delete",{id:e});const s=babelHelpers.classPrivateFieldLooseBase(this,C)[C].getters["chats/get"](e,true);void babelHelpers.classPrivateFieldLooseBase(this,C)[C].dispatch("messages/clearChatCollection",{chatId:s.chatId})}var M=babelHelpers.classPrivateFieldLooseKey("restResult");class I{constructor(e){Object.defineProperty(this,M,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,M)[M]=e}getChatId(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.id}getDialogId(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.dialogId}isOpenlinesChat(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.type===F.ChatType.lines}isCopilotChat(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.type===F.ChatType.copilot}isCollabChat(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.type===F.ChatType.collab}getChats(){const e={...babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat,hasPrevPage:babelHelpers.classPrivateFieldLooseBase(this,M)[M].hasPrevPage,hasNextPage:babelHelpers.classPrivateFieldLooseBase(this,M)[M].hasNextPage,tariffRestrictions:babelHelpers.classPrivateFieldLooseBase(this,M)[M].tariffRestrictions};const s={[babelHelpers.classPrivateFieldLooseBase(this,M)[M].chat.dialogId]:e};babelHelpers.classPrivateFieldLooseBase(this,M)[M].users.forEach((e=>{if(s[e.id]){s[e.id]={...s[e.id],...l.UserManager.getDialogForUser(e)}}else{s[e.id]=l.UserManager.getDialogForUser(e)}}));return Object.values(s)}getFiles(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].files)!=null?e:[]}getUsers(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].users)!=null?e:[]}getAdditionalUsers(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].usersShort)!=null?e:[]}getMessages(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].messages)!=null?e:[]}getCommentInfo(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].commentInfo)!=null?e:[]}getCollabInfo(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].collabInfo)!=null?e:null}getMessagesToStore(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].additionalMessages)!=null?e:[]}getPinnedMessageIds(){var e;const s=[];const a=(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].pins)!=null?e:[];a.forEach((e=>{s.push(e.messageId)}));return s}getReactions(){var e;return(e=babelHelpers.classPrivateFieldLooseBase(this,M)[M].reactions)!=null?e:[]}getCopilot(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].copilot}getSession(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].session}getAutoDeleteConfig(){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].messagesAutoDeleteConfigs}}var w=babelHelpers.classPrivateFieldLooseKey("store");var S=babelHelpers.classPrivateFieldLooseKey("requestChat");var U=babelHelpers.classPrivateFieldLooseKey("markDialogAsLoading");var R=babelHelpers.classPrivateFieldLooseKey("markDialogAsLoaded");var D=babelHelpers.classPrivateFieldLooseKey("markDialogAsNotLoaded");var O=babelHelpers.classPrivateFieldLooseKey("isDialogLoadedMarkNeeded");var j=babelHelpers.classPrivateFieldLooseKey("updateModels");var A=babelHelpers.classPrivateFieldLooseKey("needLayoutRedirect");var K=babelHelpers.classPrivateFieldLooseKey("redirectToLayout");var T=babelHelpers.classPrivateFieldLooseKey("needRedirectToOpenLinesLayout");var k=babelHelpers.classPrivateFieldLooseKey("checkFeatureDisabled");var E=babelHelpers.classPrivateFieldLooseKey("checkCollabFeatureDisabled");var V=babelHelpers.classPrivateFieldLooseKey("openFeatureSlider");class X{constructor(){Object.defineProperty(this,V,{value:Z});Object.defineProperty(this,E,{value:G});Object.defineProperty(this,k,{value:J});Object.defineProperty(this,T,{value:Q});Object.defineProperty(this,K,{value:z});Object.defineProperty(this,A,{value:_});Object.defineProperty(this,j,{value:W});Object.defineProperty(this,O,{value:Y});Object.defineProperty(this,D,{value:q});Object.defineProperty(this,R,{value:$});Object.defineProperty(this,U,{value:x});Object.defineProperty(this,S,{value:N});Object.defineProperty(this,w,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,w)[w]=L.Core.getStore()}loadChat(e){const s={dialogId:e};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatShallowLoad,s)}loadChatByChatId(e){const s={chatId:e,messageLimit:r.MessageService.getMessageRequestLimit()};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoad,s)}loadChatWithMessages(e){const s={dialogId:e,messageLimit:r.MessageService.getMessageRequestLimit()};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoad,s)}loadChatWithContext(e,s){const a={dialogId:e,messageId:s,messageLimit:r.MessageService.getMessageRequestLimit()};return babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoadInContext,a)}prepareDialogId(e){if(!v.Utils.dialog.isExternalId(e)){return Promise.resolve(e)}return H.runAction(F.RestMethod.imV2ChatGetDialogId,{data:{externalId:e}}).then((e=>e.dialogId)).catch((e=>{console.error("ChatService: Load: error preparing external id",e)}))}async loadComments(e){const s={postId:e,messageLimit:r.MessageService.getMessageRequestLimit(),autoJoin:true,createIfNotExists:true};const{chatId:a}=await babelHelpers.classPrivateFieldLooseBase(this,S)[S](F.RestMethod.imV2ChatLoad,s);return babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/comments/set",{messageId:e,chatId:a})}async loadCommentInfo(e){const s=babelHelpers.classPrivateFieldLooseBase(this,w)[w].getters["chats/get"](e,true);const a=babelHelpers.classPrivateFieldLooseBase(this,w)[w].getters["messages/getByChatId"](s.chatId);const t=a.map((e=>e.id));const{commentInfo:r,usersShort:i}=await H.runAction(F.RestMethod.imV2ChatMessageCommentInfoList,{data:{messageIds:t}}).catch((e=>{console.error("ChatService: Load: error loading comment info",e)}));const o=new l.UserManager;void babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/comments/set",r);void o.addUsersToModel(i)}resetChat(e){const s=babelHelpers.classPrivateFieldLooseBase(this,w)[w].getters["chats/get"](e,true);babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/clearChatCollection",{chatId:s.chatId});babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{inited:false}})}}async function N(e,s){const{dialogId:r,messageId:i}=s;babelHelpers.classPrivateFieldLooseBase(this,U)[U](r);const l=await H.runAction(e,{data:s}).catch((([e])=>{console.error("ChatService: Load: error loading chat",e);p.Notifier.chat.handleLoadError(e);babelHelpers.classPrivateFieldLooseBase(this,D)[D](r);throw e}));if(babelHelpers.classPrivateFieldLooseBase(this,k)[k](l)){await babelHelpers.classPrivateFieldLooseBase(this,D)[D](r);await t.Messenger.openChat();return babelHelpers.classPrivateFieldLooseBase(this,V)[V](l)}if(babelHelpers.classPrivateFieldLooseBase(this,A)[A](l)){return babelHelpers.classPrivateFieldLooseBase(this,K)[K](l,i)}const{dialogId:o,chatId:d}=await babelHelpers.classPrivateFieldLooseBase(this,j)[j](l);const{callInfo:c}=l;a.CallTokenManager.setToken(c.chatId,c.token);if(babelHelpers.classPrivateFieldLooseBase(this,O)[O](e)){await babelHelpers.classPrivateFieldLooseBase(this,R)[R](o)}return{dialogId:o,chatId:d}}function x(e){void babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{loading:true}})}function $(e){return babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{inited:true,loading:false}})}function q(e){return babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/update",{dialogId:e,fields:{loading:false}})}function Y(e){return e!==F.RestMethod.imV2ChatShallowLoad}async function W(e){const a=new I(e);const t=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/set",a.getChats());const r=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("files/set",a.getFiles());const o=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/autoDelete/set",a.getAutoDeleteConfig());const d=new l.UserManager;const c=Promise.all([babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("users/set",a.getUsers()),d.addUsersToModel(a.getAdditionalUsers())]);const n=Promise.all([babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/setChatCollection",{messages:a.getMessages(),clearCollection:true}),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/store",a.getMessagesToStore()),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/pin/setPinned",{chatId:a.getChatId(),pinnedMessages:a.getPinnedMessageIds()}),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/reactions/set",a.getReactions()),babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("messages/comments/set",a.getCommentInfo())]);const b=new i.CopilotManager;const h=b.handleChatLoadResponse(a.getCopilot());let v=Promise.resolve();if(s.OpenLinesManager){v=s.OpenLinesManager.handleChatLoadResponse(a.getSession())}const p=babelHelpers.classPrivateFieldLooseBase(this,w)[w].dispatch("chats/collabs/set",{chatId:a.getChatId(),collabInfo:a.getCollabInfo()});await Promise.all([t,r,c,n,h,v,p,o]);return{dialogId:a.getDialogId(),chatId:a.getChatId()}}function _(e){return babelHelpers.classPrivateFieldLooseBase(this,T)[T](e)}function z(e){const s=new I(e);u.LayoutManager.getInstance().setLastOpenedElement(F.Layout.chat,"");if(babelHelpers.classPrivateFieldLooseBase(this,T)[T](e)){return t.Messenger.openLines(s.getDialogId())}return Promise.resolve()}function Q(e){const s=m.FeatureManager.isFeatureAvailable(m.Feature.openLinesV2);if(s){return false}const a=new I(e);return a.isOpenlinesChat()&&g.Type.isStringFilled(a.getDialogId())}function J(e){return babelHelpers.classPrivateFieldLooseBase(this,E)[E](e)}function G(e){const s=new I(e);return s.isCollabChat()&&!m.FeatureManager.collab.isAvailable()}function Z(e){if(babelHelpers.classPrivateFieldLooseBase(this,E)[E](e)){m.FeatureManager.collab.openFeatureSlider()}}const ee="CHAT";const se="OPEN";var ae=babelHelpers.classPrivateFieldLooseKey("restClient");var te=babelHelpers.classPrivateFieldLooseKey("store");var re=babelHelpers.classPrivateFieldLooseKey("prepareFields");var ie=babelHelpers.classPrivateFieldLooseKey("addCollabToModel");var le=babelHelpers.classPrivateFieldLooseKey("addChatToModel");var oe=babelHelpers.classPrivateFieldLooseKey("sendAnalytics");var de=babelHelpers.classPrivateFieldLooseKey("prepareType");class ce{constructor(){Object.defineProperty(this,de,{value:pe});Object.defineProperty(this,oe,{value:ve});Object.defineProperty(this,le,{value:he});Object.defineProperty(this,ie,{value:be});Object.defineProperty(this,re,{value:ne});Object.defineProperty(this,ae,{writable:true,value:void 0});Object.defineProperty(this,te,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]=L.Core.getRestClient();babelHelpers.classPrivateFieldLooseBase(this,te)[te]=L.Core.getStore()}async createChat(e){P.Logger.warn("ChatService: createChat",e);const s=await babelHelpers.classPrivateFieldLooseBase(this,re)[re](e);const a=await babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].callMethod(F.RestMethod.imV2ChatAdd,{fields:s}).catch((e=>{console.error("ChatService: createChat error:",e);p.Notifier.chat.onCreateError();throw e}));const{chatId:t}=a.data();P.Logger.warn("ChatService: createChat result",t);const r=`chat${t}`;babelHelpers.classPrivateFieldLooseBase(this,le)[le](r,s);babelHelpers.classPrivateFieldLooseBase(this,oe)[oe](r);return{newDialogId:r,newChatId:t}}async createCollab(e){P.Logger.warn("ChatService: createCollab",e);const s=await babelHelpers.classPrivateFieldLooseBase(this,re)[re](e);const a={ownerId:s.ownerId,name:s.title,description:s.description,avatarId:s.avatar,moderatorMembers:v.Utils.user.prepareSelectorIds(e.moderatorMembers),permissions:e.permissions,options:{...e.options,messagesAutoDeleteDelay:s.messagesAutoDeleteDelay}};const t=await H.runAction(F.RestMethod.socialnetworkCollabCreate,{data:a}).catch((([e])=>{console.error("ChatService: createCollab error:",e);p.Notifier.collab.handleCreateError(e);throw e}));const{chatId:r}=t;P.Logger.warn("ChatService: createCollab result",r);const i=`chat${r}`;babelHelpers.classPrivateFieldLooseBase(this,ie)[ie](i,s);babelHelpers.classPrivateFieldLooseBase(this,oe)[oe](i);return{newDialogId:i,newChatId:r}}}async function ne(e){var s,a,t,r;const i={...e};if(i.type){i.type=babelHelpers.classPrivateFieldLooseBase(this,de)[de](i.type)}if(i.entityType){i.entityType=babelHelpers.classPrivateFieldLooseBase(this,de)[de](i.entityType)}if(i.avatar){i.avatar=await v.Utils.file.getBase64(e.avatar)}i.managers=(s=i.managers)!=null?s:[];i.members=(a=i.members)!=null?a:[];const l=[...i.members,...i.managers];if(i.ownerId){l.push(i.ownerId)}i.members=[...new Set(l)];const o={type:(t=i.type)==null?void 0:t.toUpperCase(),entityType:(r=i.entityType)==null?void 0:r.toUpperCase(),title:i.title,avatar:i.avatar,description:i.description,users:i.members,memberEntities:i.memberEntities,managers:i.managers,ownerId:i.ownerId,searchable:i.isAvailableInSearch?"Y":"N",manageUsersAdd:i.manageUsersAdd,manageUsersDelete:i.manageUsersDelete,manageUi:i.manageUi,manageSettings:i.manageSettings,manageMessages:i.manageMessages,conferencePassword:i.conferencePassword,copilotMainRole:i.copilotMainRole,messagesAutoDeleteDelay:i.autoDeleteDelay};Object.entries(o).forEach((([e,s])=>{if(g.Type.isUndefined(s)){delete o[e]}}));return o}function be(e,s){babelHelpers.classPrivateFieldLooseBase(this,te)[te].dispatch("chats/set",{dialogId:e,type:F.ChatType.collab,name:s.title})}function he(e,s){let a=s.searchable==="Y"?se:ee;if(g.Type.isStringFilled(s.entityType)){a=s.entityType.toLowerCase()}if(g.Type.isStringFilled(s.type)){a=s.type.toLowerCase()}babelHelpers.classPrivateFieldLooseBase(this,te)[te].dispatch("chats/set",{dialogId:e,type:a.toLowerCase(),name:s.title,userCounter:s.users.length,role:F.UserRole.owner,permissions:{manageUi:s.manageUi,manageSettings:s.manageSettings,manageUsersAdd:s.manageUsersAdd,manageUsersDelete:s.manageUsersDelete,manageMessages:s.manageMessages}})}function ve(e){o.Analytics.getInstance().ignoreNextChatOpen(e)}function pe(e){return v.Utils.text.convertCamelToSnakeCase(e).toUpperCase()}var ue=babelHelpers.classPrivateFieldLooseKey("store");var ge=babelHelpers.classPrivateFieldLooseKey("prepareFields");var Le=babelHelpers.classPrivateFieldLooseKey("updateChatInModel");class Pe{constructor(){Object.defineProperty(this,Le,{value:He});Object.defineProperty(this,ge,{value:Fe});Object.defineProperty(this,ue,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ue)[ue]=L.Core.getStore()}async prepareAvatar(e){if(!d.isResizableImage(e)){return Promise.reject(new Error("UpdateService: prepareAvatar: incorrect image"))}const s=180;const{preview:a}=await d.resizeImage(e,{width:s,height:s});return a}async changeAvatar(e,s){P.Logger.warn("ChatService: changeAvatar",e,s);const a=await v.Utils.file.getBase64(s);return H.runAction(F.RestMethod.imV2ChatUpdateAvatar,{data:{id:e,avatar:a}}).catch((([e])=>{console.error("ChatService: changeAvatar error:",e)}))}async updateChat(e,s){P.Logger.warn(`ChatService: updateChat, chatId: ${e}`,s);const a=await babelHelpers.classPrivateFieldLooseBase(this,ge)[ge](s);const t=await H.runAction(F.RestMethod.imV2ChatUpdate,{data:{id:e,fields:a},id:e}).catch((([e])=>{console.error("ChatService: updateChat error:",e);p.Notifier.chat.onUpdateError();throw e}));P.Logger.warn("ChatService: updateChat result",t);const r=`chat${e}`;await babelHelpers.classPrivateFieldLooseBase(this,Le)[Le](r,s);return t}async updateCollab(e,s){P.Logger.warn(`ChatService: updateCollab, dialogId: ${e}`,s);const a=await babelHelpers.classPrivateFieldLooseBase(this,ge)[ge](s);let t={dialogId:e,name:a.title,description:a.description,avatarId:a.avatar};if(s.groupSettings){const e=s.groupSettings;t={...t,ownerId:e.ownerId,addModeratorMembers:v.Utils.user.prepareSelectorIds(e.addModeratorMembers),deleteModeratorMembers:v.Utils.user.prepareSelectorIds(e.deleteModeratorMembers),permissions:e.permissions,options:e.options}}const r=await H.runAction(F.RestMethod.socialnetworkCollabUpdate,{data:t}).catch((([e])=>{console.error("ChatService: updateCollab error:",e);p.Notifier.collab.handleUpdateError(e);throw e}));P.Logger.warn("ChatService: updateCollab result",r);return r}async getMemberEntities(e){return H.runAction(F.RestMethod.imV2ChatMemberEntitiesList,{data:{chatId:e}}).catch((([e])=>{console.error("ChatService: getMemberEntities error:",e)}))}}async function Fe(e){const s={title:e.title,description:e.description,ownerId:e.ownerId,searchable:e.isAvailableInSearch?"Y":"N",manageUi:e.manageUi,manageUsersAdd:e.manageUsersAdd,manageUsersDelete:e.manageUsersDelete,manageMessages:e.manageMessages,addedMemberEntities:e.addedMemberEntities,deletedMemberEntities:e.deletedMemberEntities,addedManagers:e.addedManagers,deletedManagers:e.deletedManagers};if(e.avatar){s.avatar=await v.Utils.file.getBase64(e.avatar)}Object.entries(s).forEach((([e,a])=>{if(g.Type.isUndefined(a)){delete s[e]}}));return s}function He(e,s){return babelHelpers.classPrivateFieldLooseBase(this,ue)[ue].dispatch("chats/update",{dialogId:e,fields:{name:s.title,description:s.description,ownerId:s.ownerId,managerList:s.managers,type:s.type,role:c.getChatRoleForUser(s),permissions:{manageUi:s.manageUi,manageUsersAdd:s.manageUsersAdd,manageUsersDelete:s.manageUsersDelete,manageMessages:s.manageMessages}}})}var me=babelHelpers.classPrivateFieldLooseKey("store");var Ce=babelHelpers.classPrivateFieldLooseKey("restClient");var Be=babelHelpers.classPrivateFieldLooseKey("updateChatTitleInModel");class ye{constructor(){Object.defineProperty(this,Be,{value:fe});Object.defineProperty(this,me,{writable:true,value:void 0});Object.defineProperty(this,Ce,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,me)[me]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce]=L.Core.getRestClient()}renameChat(e,s){P.Logger.warn("ChatService: renameChat",e,s);if(s===""){return Promise.resolve()}const a=babelHelpers.classPrivateFieldLooseBase(this,me)[me].getters["chats/get"](e);const t=a.name;babelHelpers.classPrivateFieldLooseBase(this,Be)[Be](e,s);return babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce].callMethod(F.RestMethod.imChatUpdateTitle,{dialog_id:e,title:s}).catch((s=>{babelHelpers.classPrivateFieldLooseBase(this,Be)[Be](e,t);console.error("ChatService: renameChat error",s.error());p.Notifier.chat.onRenameError()}))}}function fe(e,s){babelHelpers.classPrivateFieldLooseBase(this,me)[me].dispatch("chats/update",{dialogId:e,fields:{name:s}})}var Me=babelHelpers.classPrivateFieldLooseKey("store");var Ie=babelHelpers.classPrivateFieldLooseKey("restClient");var we=babelHelpers.classPrivateFieldLooseKey("sendMuteRequestDebounced");var Se=babelHelpers.classPrivateFieldLooseKey("sendMuteRequest");class Ue{constructor(){Object.defineProperty(this,Se,{value:Re});Object.defineProperty(this,Me,{writable:true,value:void 0});Object.defineProperty(this,Ie,{writable:true,value:void 0});Object.defineProperty(this,we,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie]=L.Core.getRestClient();const e=500;babelHelpers.classPrivateFieldLooseBase(this,we)[we]=g.Runtime.debounce(babelHelpers.classPrivateFieldLooseBase(this,Se)[Se],e)}muteChat(e){P.Logger.warn("ChatService: muteChat",e);void babelHelpers.classPrivateFieldLooseBase(this,Me)[Me].dispatch("chats/mute",{dialogId:e});const s={dialog_id:e,action:"Y"};babelHelpers.classPrivateFieldLooseBase(this,we)[we](s)}unmuteChat(e){P.Logger.warn("ChatService: unmuteChat",e);void babelHelpers.classPrivateFieldLooseBase(this,Me)[Me].dispatch("chats/unmute",{dialogId:e});const s={dialog_id:e,action:"N"};babelHelpers.classPrivateFieldLooseBase(this,we)[we](s)}}function Re(e){const{dialog_id:s,action:a}=e;return babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie].callMethod(F.RestMethod.imChatMute,e).catch((e=>{const t=a==="Y"?"muting":"unmuting";console.error(`Im.RecentList: error ${t} chat`,e.error());const r=a==="Y"?"chats/unmute":"chats/mute";void babelHelpers.classPrivateFieldLooseBase(this,Me)[Me].dispatch(r,{dialogId:s})}))}var De=babelHelpers.classPrivateFieldLooseKey("store");class Oe{constructor(){Object.defineProperty(this,De,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,De)[De]=L.Core.getStore()}pinChat(e){P.Logger.warn("PinService: pinChat",e);void babelHelpers.classPrivateFieldLooseBase(this,De)[De].dispatch("recent/pin",{id:e,action:true});H.runAction(F.RestMethod.imV2RecentPin,{data:{dialogId:e}}).catch((([s])=>{console.error("PinService: error pinning chat",s);p.Notifier.recent.handlePinError(s);void babelHelpers.classPrivateFieldLooseBase(this,De)[De].dispatch("recent/pin",{id:e,action:false})}))}unpinChat(e){P.Logger.warn("PinService: unpinChat",e);void babelHelpers.classPrivateFieldLooseBase(this,De)[De].dispatch("recent/pin",{id:e,action:false});H.runAction(F.RestMethod.imV2RecentUnpin,{data:{dialogId:e}}).catch((([s])=>{console.error("PinService: error unpinning chat",s);p.Notifier.recent.onUnpinError();void babelHelpers.classPrivateFieldLooseBase(this,De)[De].dispatch("recent/pin",{id:e,action:true})}))}}const je=300;var Ae=babelHelpers.classPrivateFieldLooseKey("store");var Ke=babelHelpers.classPrivateFieldLooseKey("restClient");var Te=babelHelpers.classPrivateFieldLooseKey("messagesToRead");var ke=babelHelpers.classPrivateFieldLooseKey("readMessagesForChat");var Ee=babelHelpers.classPrivateFieldLooseKey("readMessageOnClient");var Ve=babelHelpers.classPrivateFieldLooseKey("decreaseCommentCounter");var Xe=babelHelpers.classPrivateFieldLooseKey("decreaseChatCounter");var Ne=babelHelpers.classPrivateFieldLooseKey("readMessageOnServer");var xe=babelHelpers.classPrivateFieldLooseKey("checkChatCounter");var $e=babelHelpers.classPrivateFieldLooseKey("getDialogIdByChatId");var qe=babelHelpers.classPrivateFieldLooseKey("getDialogByChatId");class Ye{constructor(){Object.defineProperty(this,qe,{value:es});Object.defineProperty(this,$e,{value:Ze});Object.defineProperty(this,xe,{value:Ge});Object.defineProperty(this,Ne,{value:Je});Object.defineProperty(this,Xe,{value:Qe});Object.defineProperty(this,Ve,{value:ze});Object.defineProperty(this,Ee,{value:_e});Object.defineProperty(this,ke,{value:We});Object.defineProperty(this,Ae,{writable:true,value:void 0});Object.defineProperty(this,Ke,{writable:true,value:void 0});Object.defineProperty(this,Te,{writable:true,value:{}});babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke]=L.Core.getRestClient()}readAll(){P.Logger.warn("ReadService: readAll");void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("chats/clearCounters");void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("recent/clearUnread");return babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke].callMethod(F.RestMethod.imV2ChatReadAll).catch((e=>{console.error("ReadService: readAll error",e.error())}))}readDialog(e){P.Logger.warn("ReadService: readDialog",e);void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("recent/unread",{id:e,action:false});void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("chats/update",{dialogId:e,fields:{counter:0}});babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke].callMethod(F.RestMethod.imV2ChatRead,{dialogId:e}).catch((e=>{console.error("ReadService: error reading chat",e.error())}))}unreadDialog(e){P.Logger.warn("ReadService: unreadDialog",e);void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("recent/unread",{id:e,action:true});babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke].callMethod(F.RestMethod.imV2ChatUnread,{dialogId:e}).catch((s=>{console.error("ReadService: error setting chat as unread",s.error());void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("recent/unread",{id:e,action:false})}))}readMessage(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,Te)[Te][e]){babelHelpers.classPrivateFieldLooseBase(this,Te)[Te][e]=new Set}babelHelpers.classPrivateFieldLooseBase(this,Te)[Te][e].add(s);clearTimeout(this.readTimeout);this.readTimeout=setTimeout((()=>{Object.entries(babelHelpers.classPrivateFieldLooseBase(this,Te)[Te]).forEach((([e,s])=>{void babelHelpers.classPrivateFieldLooseBase(this,ke)[ke](e,s)}))}),je)}async readChatQueuedMessages(e){if(!babelHelpers.classPrivateFieldLooseBase(this,Te)[Te][e]){return}clearTimeout(this.readTimeout);void babelHelpers.classPrivateFieldLooseBase(this,ke)[ke](e,babelHelpers.classPrivateFieldLooseBase(this,Te)[Te][e])}clearDialogMark(e){P.Logger.warn("ReadService: clear dialog mark",e);const s=babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].getters["chats/get"](e);const a=babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].getters["recent/get"](e);if(s.markedId===0&&!(a!=null&&a.unread)){return}void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("recent/unread",{id:e,action:false});void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("chats/update",{dialogId:e,fields:{markedId:0}});babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke].callMethod(F.RestMethod.imV2ChatRead,{dialogId:e,onlyRecent:"Y"}).catch((e=>{console.error("ReadService: error clearing dialog mark",e.error())}))}}async function We(e,s){const a=Number.parseInt(e,10);P.Logger.warn("ReadService: readMessages",s);if(s.size===0){return true}const t=[...s];delete babelHelpers.classPrivateFieldLooseBase(this,Te)[Te][a];const r=await babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee](a,t);P.Logger.warn("ReadService: readMessage, need to reduce counter by",r);await babelHelpers.classPrivateFieldLooseBase(this,Xe)[Xe](a,r);const i=await babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne](a,t).catch((([e])=>{console.error("ReadService: error reading message",e)}));babelHelpers.classPrivateFieldLooseBase(this,xe)[xe](i);return true}function _e(e,s){const a=Math.max(...s);const t=babelHelpers.classPrivateFieldLooseBase(this,qe)[qe](e);if(a>t.lastReadId){void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,$e)[$e](e),fields:{lastId:a}})}return babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("messages/readMessages",{chatId:e,messageIds:s})}function ze(e,s){const a=babelHelpers.classPrivateFieldLooseBase(this,qe)[qe](e);let t=a.counter-s;if(t<0){t=0}const r={[a.parentChatId]:{[e]:t}};return L.Core.getStore().dispatch("counters/setCommentCounters",r)}function Qe(e,s){const a=babelHelpers.classPrivateFieldLooseBase(this,qe)[qe](e);if(a.type===F.ChatType.comment){return babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve](e,s)}let t=a.counter-s;if(t<0){t=0}return babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("chats/update",{dialogId:babelHelpers.classPrivateFieldLooseBase(this,$e)[$e](e),fields:{counter:t}})}function Je(e,s){P.Logger.warn("ReadService: readMessages on server",s);return H.runAction(F.RestMethod.imV2ChatMessageRead,{data:{chatId:e,ids:s,actionUuid:n.UuidManager.getInstance().getActionUuid()}})}function Ge(e){if(!e){return}const{chatId:s,counter:a}=e;const t=babelHelpers.classPrivateFieldLooseBase(this,qe)[qe](s);if(t.counter>a){P.Logger.warn("ReadService: counter from server is lower than local one",t.counter,a);void babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].dispatch("chats/update",{dialogId:t.dialogId,fields:{counter:a}})}}function Ze(e){const s=babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].getters["chats/getByChatId"](e);if(!s){return 0}return s.dialogId}function es(e){return babelHelpers.classPrivateFieldLooseBase(this,Ae)[Ae].getters["chats/getByChatId"](e)}var ss=babelHelpers.classPrivateFieldLooseKey("store");var as=babelHelpers.classPrivateFieldLooseKey("restClient");var ts=babelHelpers.classPrivateFieldLooseKey("onChatLeave");class rs{constructor(){Object.defineProperty(this,ts,{value:is});Object.defineProperty(this,ss,{writable:true,value:void 0});Object.defineProperty(this,as,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ss)[ss]=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,as)[as]=L.Core.getRestClient()}async leaveChat(e){const s={dialogId:e,userId:L.Core.getUserId()};try{await babelHelpers.classPrivateFieldLooseBase(this,as)[as].callMethod(F.RestMethod.imV2ChatDeleteUser,s);babelHelpers.classPrivateFieldLooseBase(this,ts)[ts](e)}catch(e){console.error("UserService: leave chat error",e.error());p.Notifier.chat.handleLeaveError(e.error())}}async leaveCollab(e){const s={data:{dialogId:e}};try{await H.runAction(F.RestMethod.socialnetworkMemberLeave,s);babelHelpers.classPrivateFieldLooseBase(this,ts)[ts](e)}catch(e){console.error("UserService: leave collab error",e[0]);p.Notifier.collab.onLeaveError()}}async kickUserFromChat(e,s){const a={dialogId:e,userId:s};await babelHelpers.classPrivateFieldLooseBase(this,as)[as].callMethod(F.RestMethod.imV2ChatDeleteUser,a).catch((e=>{console.error("UserService: error kicking from chat",e.error());p.Notifier.chat.handleUserKickError(e.error())}))}async kickUserFromCollab(e,s){const a=v.Utils.user.prepareSelectorIds(s);const t={data:{dialogId:e,members:a}};await H.runAction(F.RestMethod.socialnetworkMemberDelete,t).catch((([e])=>{console.error("UserService: error kicking from collab",e);p.Notifier.collab.onKickUserError()}))}addToChat(e){const s={chat_id:e.chatId,users:e.members,hide_history:!e.showHistory};return babelHelpers.classPrivateFieldLooseBase(this,as)[as].callMethod(F.RestMethod.imChatUserAdd,s).catch((e=>{console.error("UserService: error adding to chat",e.error());throw e.error()}))}joinChat(e){P.Logger.warn(`UserService: join chat ${e}`);void babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].dispatch("chats/update",{dialogId:e,fields:{role:F.UserRole.member}});babelHelpers.classPrivateFieldLooseBase(this,as)[as].callMethod(F.RestMethod.imV2ChatJoin,{dialogId:e}).catch((e=>{console.error("UserService: error joining chat",e.error())}))}addManager(e,s){P.Logger.warn(`UserService: add manager ${s} to ${e}`);const{managerList:a}=babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].getters["chats/get"](e);if(a.includes(s)){return}const t=[...a,s];void babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].dispatch("chats/update",{dialogId:e,fields:{managerList:t}});const r={data:{dialogId:e,userIds:[s]}};H.runAction(F.RestMethod.imV2ChatAddManagers,r).catch((([e])=>{console.error("UserService: add manager error",e)}))}removeManager(e,s){P.Logger.warn(`UserService: remove manager ${s} from ${e}`);const{managerList:a}=babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].getters["chats/get"](e);if(!a.includes(s)){return}const t=a.filter((e=>e!==s));void babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].dispatch("chats/update",{dialogId:e,fields:{managerList:t}});const r={data:{dialogId:e,userIds:[s]}};H.runAction(F.RestMethod.imV2ChatDeleteManagers,r).catch((([e])=>{console.error("UserService: remove manager error",e)}))}}function is(e){void babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].dispatch("chats/update",{dialogId:e,fields:{inited:false}});void babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].dispatch("recent/delete",{id:e});const s=babelHelpers.classPrivateFieldLooseBase(this,ss)[ss].getters["application/isChatOpen"](e);if(s){u.LayoutManager.getInstance().clearCurrentLayoutEntityId();void u.LayoutManager.getInstance().deleteLastOpenedElementById(e)}}var ls=babelHelpers.classPrivateFieldLooseKey("store");var os=babelHelpers.classPrivateFieldLooseKey("sendRequestDebounced");var ds=babelHelpers.classPrivateFieldLooseKey("sendRequest");var cs=babelHelpers.classPrivateFieldLooseKey("handleResponse");var ns=babelHelpers.classPrivateFieldLooseKey("getChatId");class bs{constructor(){Object.defineProperty(this,ns,{value:ps});Object.defineProperty(this,cs,{value:vs});Object.defineProperty(this,ds,{value:hs});Object.defineProperty(this,ls,{writable:true,value:void 0});Object.defineProperty(this,os,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ls)[ls]=L.Core.getStore();const e=500;babelHelpers.classPrivateFieldLooseBase(this,os)[os]=g.Runtime.debounce(babelHelpers.classPrivateFieldLooseBase(this,ds)[ds],e)}setDelay(e,s){P.Logger.warn("MessagesAutoDeleteService: setDelay",e,s);const a=babelHelpers.classPrivateFieldLooseBase(this,ns)[ns](e);const t=babelHelpers.classPrivateFieldLooseBase(this,ls)[ls].getters["chats/autoDelete/getDelay"](a);if(t===s){return}void babelHelpers.classPrivateFieldLooseBase(this,ls)[ls].dispatch("chats/autoDelete/set",{chatId:a,delay:s});babelHelpers.classPrivateFieldLooseBase(this,os)[os]({dialogId:e,delay:s,previousDelay:t})}}async function hs(e){const{dialogId:s,delay:a,previousDelay:t}=e;try{const e=await H.runAction(F.RestMethod.imV2ChatSetMessagesAutoDeleteDelay,{data:{dialogId:s,hours:a}});babelHelpers.classPrivateFieldLooseBase(this,cs)[cs](a,e)}catch(e){console.error("MessagesAutoDeleteService: Error setting auto delete delay",e);void babelHelpers.classPrivateFieldLooseBase(this,ls)[ls].dispatch("chats/autoDelete/set",{chatId:babelHelpers.classPrivateFieldLooseBase(this,ns)[ns](s),delay:t})}}function vs(e,s){const[a]=s.messagesAutoDeleteConfigs;if(e!==a.delay&&a.delay===F.AutoDeleteDelay.Off){m.FeatureManager.messagesAutoDelete.openFeatureSlider()}void babelHelpers.classPrivateFieldLooseBase(this,ls)[ls].dispatch("chats/autoDelete/set",{chatId:a.chatId,delay:a.delay})}function ps(e){return babelHelpers.classPrivateFieldLooseBase(this,ls)[ls].getters["chats/get"](e).chatId}var us=babelHelpers.classPrivateFieldLooseKey("loadService");var gs=babelHelpers.classPrivateFieldLooseKey("createService");var Ls=babelHelpers.classPrivateFieldLooseKey("updateService");var Ps=babelHelpers.classPrivateFieldLooseKey("renameService");var Fs=babelHelpers.classPrivateFieldLooseKey("muteService");var Hs=babelHelpers.classPrivateFieldLooseKey("pinService");var ms=babelHelpers.classPrivateFieldLooseKey("readService");var Cs=babelHelpers.classPrivateFieldLooseKey("userService");var Bs=babelHelpers.classPrivateFieldLooseKey("deleteService");var ys=babelHelpers.classPrivateFieldLooseKey("messagesAutoDeleteService");var fs=babelHelpers.classPrivateFieldLooseKey("initServices");class Ms{constructor(){Object.defineProperty(this,fs,{value:Is});Object.defineProperty(this,us,{writable:true,value:void 0});Object.defineProperty(this,gs,{writable:true,value:void 0});Object.defineProperty(this,Ls,{writable:true,value:void 0});Object.defineProperty(this,Ps,{writable:true,value:void 0});Object.defineProperty(this,Fs,{writable:true,value:void 0});Object.defineProperty(this,Hs,{writable:true,value:void 0});Object.defineProperty(this,ms,{writable:true,value:void 0});Object.defineProperty(this,Cs,{writable:true,value:void 0});Object.defineProperty(this,Bs,{writable:true,value:void 0});Object.defineProperty(this,ys,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,fs)[fs]()}loadChat(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].loadChat(e)}loadChatByChatId(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].loadChatByChatId(e)}loadChatWithMessages(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].loadChatWithMessages(e)}loadChatWithContext(e,s){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].loadChatWithContext(e,s)}loadComments(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].loadComments(e)}loadCommentInfo(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].loadCommentInfo(e)}prepareDialogId(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].prepareDialogId(e)}resetChat(e){return babelHelpers.classPrivateFieldLooseBase(this,us)[us].resetChat(e)}createChat(e){return babelHelpers.classPrivateFieldLooseBase(this,gs)[gs].createChat(e)}createCollab(e){return babelHelpers.classPrivateFieldLooseBase(this,gs)[gs].createCollab(e)}prepareAvatar(e){return babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].prepareAvatar(e)}changeAvatar(e,s){return babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].changeAvatar(e,s)}updateChat(e,s){return babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].updateChat(e,s)}updateCollab(e,s){return babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].updateCollab(e,s)}getMemberEntities(e){return babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls].getMemberEntities(e)}deleteChat(e){return babelHelpers.classPrivateFieldLooseBase(this,Bs)[Bs].deleteChat(e)}deleteCollab(e){return babelHelpers.classPrivateFieldLooseBase(this,Bs)[Bs].deleteCollab(e)}renameChat(e,s){return babelHelpers.classPrivateFieldLooseBase(this,Ps)[Ps].renameChat(e,s)}muteChat(e){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].muteChat(e)}unmuteChat(e){babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs].unmuteChat(e)}pinChat(e){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].pinChat(e)}unpinChat(e){babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs].unpinChat(e)}readAll(){babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].readAll()}readDialog(e){babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].readDialog(e)}unreadDialog(e){babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].unreadDialog(e)}readMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].readMessage(e,s)}readChatQueuedMessages(e){babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].readChatQueuedMessages(e)}clearDialogMark(e){babelHelpers.classPrivateFieldLooseBase(this,ms)[ms].clearDialogMark(e)}leaveChat(e){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].leaveChat(e)}leaveCollab(e){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].leaveCollab(e)}kickUserFromChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].kickUserFromChat(e,s)}kickUserFromCollab(e,s){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].kickUserFromCollab(e,s)}addToChat(e){return babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].addToChat(e)}joinChat(e){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].joinChat(e)}addManager(e,s){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].addManager(e,s)}removeManager(e,s){babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs].removeManager(e,s)}setMessagesAutoDeleteDelay(e,s){babelHelpers.classPrivateFieldLooseBase(this,ys)[ys].setDelay(e,s)}}function Is(){babelHelpers.classPrivateFieldLooseBase(this,us)[us]=new X;babelHelpers.classPrivateFieldLooseBase(this,gs)[gs]=new ce;babelHelpers.classPrivateFieldLooseBase(this,Ls)[Ls]=new Pe;babelHelpers.classPrivateFieldLooseBase(this,Ps)[Ps]=new ye;babelHelpers.classPrivateFieldLooseBase(this,Fs)[Fs]=new Ue;babelHelpers.classPrivateFieldLooseBase(this,Hs)[Hs]=new Oe;babelHelpers.classPrivateFieldLooseBase(this,ms)[ms]=new Ye;babelHelpers.classPrivateFieldLooseBase(this,Cs)[Cs]=new rs;babelHelpers.classPrivateFieldLooseBase(this,Bs)[Bs]=new y;babelHelpers.classPrivateFieldLooseBase(this,ys)[ys]=new bs}e.ChatService=Ms})(this.BX.Messenger.v2.Service=this.BX.Messenger.v2.Service||{},BX?.OpenLines?.v2?.Lib??{},BX?.Call?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Service??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.UI?.Uploader??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Vue3?.Vuex??{},BX??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{},BX??{},BX?.Messenger?.v2?.Application??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Const??{},BX?.Messenger?.v2?.Lib??{},BX?.Messenger?.v2?.Lib??{});
//# sourceMappingURL=chat.bundle.map.js