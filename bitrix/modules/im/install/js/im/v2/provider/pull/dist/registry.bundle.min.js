this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Provider=this.BX.Messenger.v2.Provider||{};(function(e,s,a,t,i,l,r,d,o,n,h,c,g,u,p,b,v,I,f,P,L,C,m){"use strict";var H=babelHelpers.classPrivateFieldLooseKey("store");var F=babelHelpers.classPrivateFieldLooseKey("messageViews");var M=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var B=babelHelpers.classPrivateFieldLooseKey("setUsers");var y=babelHelpers.classPrivateFieldLooseKey("setFiles");var U=babelHelpers.classPrivateFieldLooseKey("setAdditionalEntities");var w=babelHelpers.classPrivateFieldLooseKey("setCommentInfo");var S=babelHelpers.classPrivateFieldLooseKey("handleAddingMessageToModel");var O=babelHelpers.classPrivateFieldLooseKey("addMessageToModel");var R=babelHelpers.classPrivateFieldLooseKey("updateDialog");var k=babelHelpers.classPrivateFieldLooseKey("updateMessageViewedByOthers");var D=babelHelpers.classPrivateFieldLooseKey("updateChatLastMessageViews");var T=babelHelpers.classPrivateFieldLooseKey("checkMessageViewsRegistry");var A=babelHelpers.classPrivateFieldLooseKey("updateMessageViewsRegistry");var j=babelHelpers.classPrivateFieldLooseKey("sendScrollEvent");var N=babelHelpers.classPrivateFieldLooseKey("getDialog");var K=babelHelpers.classPrivateFieldLooseKey("setCopilotRole");class X{constructor(){Object.defineProperty(this,K,{value:se});Object.defineProperty(this,N,{value:ee});Object.defineProperty(this,j,{value:$});Object.defineProperty(this,A,{value:Z});Object.defineProperty(this,T,{value:Q});Object.defineProperty(this,D,{value:J});Object.defineProperty(this,k,{value:G});Object.defineProperty(this,R,{value:z});Object.defineProperty(this,O,{value:q});Object.defineProperty(this,S,{value:Y});Object.defineProperty(this,w,{value:x});Object.defineProperty(this,U,{value:V});Object.defineProperty(this,y,{value:_});Object.defineProperty(this,B,{value:W});Object.defineProperty(this,M,{value:E});Object.defineProperty(this,H,{writable:true,value:void 0});Object.defineProperty(this,F,{writable:true,value:{}});babelHelpers.classPrivateFieldLooseBase(this,H)[H]=m.Core.getStore()}handleMessageAdd(e){L.Logger.warn("MessagePullHandler: handleMessageAdd",e);babelHelpers.classPrivateFieldLooseBase(this,M)[M](e);babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);babelHelpers.classPrivateFieldLooseBase(this,y)[y](e);babelHelpers.classPrivateFieldLooseBase(this,U)[U](e);babelHelpers.classPrivateFieldLooseBase(this,w)[w](e);babelHelpers.classPrivateFieldLooseBase(this,K)[K](e);const s=babelHelpers.classPrivateFieldLooseBase(this,H)[H].getters["messages/isInChatCollection"]({messageId:e.message.templateId});const a=babelHelpers.classPrivateFieldLooseBase(this,H)[H].getters["messages/isInChatCollection"]({messageId:e.message.id});if(a){L.Logger.warn("New message pull handler: we already have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/update",{id:e.message.id,fields:{...e.message,error:false}});babelHelpers.classPrivateFieldLooseBase(this,j)[j](e.chatId)}else if(!a&&s){L.Logger.warn("New message pull handler: we already have the TEMPORARY message",e.message);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/updateWithId",{id:e.message.templateId,fields:{...e.message,error:false}})}else if(!a&&!s){L.Logger.warn("New message pull handler: we dont have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,S)[S](e)}r.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.message.senderId});babelHelpers.classPrivateFieldLooseBase(this,R)[R](e)}handleMessageUpdate(e){L.Logger.warn("MessagePullHandler: handleMessageUpdate",e);r.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/update",{id:e.id,fields:{text:e.text,params:e.params}});babelHelpers.classPrivateFieldLooseBase(this,j)[j](e.chatId)}handleMessageDelete(e){L.Logger.warn("MessagePullHandler: handleMessageDelete",e);r.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/update",{id:e.id,fields:{text:"",isDeleted:true,files:[],attach:[],replyId:0}})}handleMessageDeleteComplete(e){L.Logger.warn("MessagePullHandler: handleMessageDeleteComplete",e);r.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/delete",{id:e.id});const s={counter:e.counter};const a=Boolean(e.newLastMessage);if(a){s.lastMessageId=e.newLastMessage.id;s.lastMessageViews=e.lastMessageViews;babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/store",e.newLastMessage)}babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/update",{dialogId:e.dialogId,fields:s})}handleAddReaction(e){L.Logger.warn("MessagePullHandler: handleAddReaction",e);const{actualReactions:{reaction:s,usersShort:a},userId:t,reaction:i}=e;if(m.Core.getUserId()===t){s.ownReactions=[i]}const l=new c.UserManager;l.addUsersToModel(a);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/reactions/set",[s])}handleDeleteReaction(e){L.Logger.warn("MessagePullHandler: handleDeleteReaction",e);const{actualReactions:{reaction:s}}=e;babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/reactions/set",[s])}handleMessageParamsUpdate(e){L.Logger.warn("MessagePullHandler: handleMessageParamsUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/update",{id:e.id,chatId:e.chatId,fields:{params:e.params}})}handleReadMessage(e,s){L.Logger.warn("MessagePullHandler: handleReadMessage",e);const t=a.UuidManager.getInstance();if(t.hasActionUuid(s.action_uuid)){L.Logger.warn("MessagePullHandler: handleReadMessage: we have this uuid, skip");t.removeActionUuid(s.action_uuid);return}babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/readMessages",{chatId:e.chatId,messageIds:e.viewedMessages}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/update",{dialogId:e.dialogId,fields:{counter:e.counter,lastId:e.lastId}})})).catch((e=>{console.error("MessagePullHandler: error handling readMessage",e)}))}handleReadMessageOpponent(e){if(e.userId===m.Core.getUserId()){return}L.Logger.warn("MessagePullHandler: handleReadMessageOpponent",e);babelHelpers.classPrivateFieldLooseBase(this,k)[k](e);babelHelpers.classPrivateFieldLooseBase(this,D)[D](e)}handlePinAdd(e){L.Logger.warn("MessagePullHandler: handlePinAdd",e);babelHelpers.classPrivateFieldLooseBase(this,y)[y](e);babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/store",e.additionalMessages);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/pin/add",{chatId:e.pin.chatId,messageId:e.pin.messageId});if(m.Core.getUserId()!==e.pin.authorId);}handlePinDelete(e){L.Logger.warn("MessagePullHandler: handlePinDelete",e);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/pin/delete",{chatId:e.chatId,messageId:e.messageId})}}function E(e){var s,a,t;const i=(s=e.chat)==null?void 0:s[e.chatId];if(!i){return}const l={...e.chat[e.chatId],dialogId:e.dialogId};const r=Boolean(babelHelpers.classPrivateFieldLooseBase(this,N)[N](e.dialogId));const d=!e.notify||((a=e.message)==null?void 0:(t=a.params)==null?void 0:t.NOTIFY)==="N";if(!r&&!d&&!l.role){l.role=p.UserRole.member}babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/set",l)}function W(e){if(!e.users){return}const s=new c.UserManager;s.setUsersToModel(Object.values(e.users))}function _(e){if(!e.files){return}const s=Object.values(e.files);s.forEach((e=>{void babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("files/set",e)}))}function V(e){if(!e.message.additionalEntities){return}const{additionalMessages:s,messages:a,files:t,users:i}=e.message.additionalEntities;const l=[...a,...s];babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/store",l);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("files/set",t);babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("users/set",i)}function x(e){var s;const a=(s=e.chat)==null?void 0:s[e.chatId];if(!a||a.type!==p.ChatType.comment){return}babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/comments/set",{messageId:a.parent_message_id,chatId:e.chatId,messageCount:a.message_count});babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/comments/setLastUser",{messageId:a.parent_message_id,newUserId:e.message.senderId})}function Y(e){const s=babelHelpers.classPrivateFieldLooseBase(this,N)[N](e.dialogId,true);if(s.inited&&s.hasNextPage){babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/store",e.message);return}const a=babelHelpers.classPrivateFieldLooseBase(this,H)[H].getters["application/isChatOpen"](e.dialogId);const i=babelHelpers.classPrivateFieldLooseBase(this,H)[H].getters["messages/getChatUnreadMessages"](e.chatId);if(!a&&i.length>t.MessageService.getMessageRequestLimit()){babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/store",e.message);const s=new t.MessageService({chatId:e.chatId});s.reloadMessageList();return}babelHelpers.classPrivateFieldLooseBase(this,O)[O](e.message);babelHelpers.classPrivateFieldLooseBase(this,j)[j](e.chatId)}function q(e){const s={...e};if(e.senderId===m.Core.getUserId()){s.unread=false}else{s.unread=true;s.viewed=false}babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/setChatCollection",{messages:[s]})}function z(e){const s=babelHelpers.classPrivateFieldLooseBase(this,N)[N](e.dialogId,true);const a={};if(e.message.id>s.lastMessageId){a.lastMessageId=e.message.id}if(e.message.senderId===m.Core.getUserId()&&e.message.id>s.lastReadId){a.lastId=e.message.id}a.counter=e.counter;babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/update",{dialogId:e.dialogId,fields:a});babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/clearLastMessageViews",{dialogId:e.dialogId})}function G(e){babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("messages/setViewedByOthers",{ids:e.viewedMessages})}function J(e){const s=babelHelpers.classPrivateFieldLooseBase(this,N)[N](e.dialogId);if(!s){return}const a=e.viewedMessages.includes(s.lastMessageId);if(!a){return}if(babelHelpers.classPrivateFieldLooseBase(this,T)[T](e.userId,s.lastMessageId)){return}const t=Boolean(s.lastMessageViews.firstViewer);if(t){babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/incrementLastMessageViews",{dialogId:e.dialogId});babelHelpers.classPrivateFieldLooseBase(this,A)[A](e.userId,s.lastMessageId);return}babelHelpers.classPrivateFieldLooseBase(this,H)[H].dispatch("chats/setLastMessageViews",{dialogId:e.dialogId,fields:{userId:e.userId,userName:e.userName,date:e.date,messageId:s.lastMessageId}});babelHelpers.classPrivateFieldLooseBase(this,A)[A](e.userId,s.lastMessageId)}function Q(e,s){var a;return Boolean((a=babelHelpers.classPrivateFieldLooseBase(this,F)[F][s])==null?void 0:a.has(e))}function Z(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,F)[F][s]){babelHelpers.classPrivateFieldLooseBase(this,F)[F][s]=new Set}babelHelpers.classPrivateFieldLooseBase(this,F)[F][s].add(e)}function $(e){s.EventEmitter.emit(p.EventType.dialog.scrollToBottom,{chatId:e,threshold:p.DialogScrollThreshold.nearTheBottom})}function ee(e,s=false){return babelHelpers.classPrivateFieldLooseBase(this,H)[H].getters["chats/get"](e,s)}function se(e){if(!e.copilot){return}const s=new l.CopilotManager;void s.handleMessageAdd(e.copilot)}var ae=babelHelpers.classPrivateFieldLooseKey("store");var te=babelHelpers.classPrivateFieldLooseKey("updateChatUsers");class ie{constructor(){Object.defineProperty(this,te,{value:le});Object.defineProperty(this,ae,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]=m.Core.getStore()}handleChatOwner(e){L.Logger.warn("ChatPullHandler: handleChatOwner",e);babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{ownerId:e.userId}})}handleChatManagers(e){L.Logger.warn("ChatPullHandler: handleChatManagers",e);babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{managerList:e.list}});const s=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].getters["chats/get"](e.dialogId);if(!s){return}const a=e.list.includes(m.Core.getUserId());if(s.role===p.UserRole.member&&a){babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{role:p.UserRole.manager}})}if(s.role===p.UserRole.manager&&!a){babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{role:p.UserRole.member}})}}handleChatUserAdd(e){L.Logger.warn("ChatPullHandler: handleChatUserAdd",e);const s=m.Core.getUserId();if(e.newUsers.includes(s)){babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{role:p.UserRole.member}})}babelHelpers.classPrivateFieldLooseBase(this,te)[te](e)}handleChatUserLeave(e){L.Logger.warn("ChatPullHandler: handleChatUserLeave",e);const s=e.userId===m.Core.getUserId();if(s){babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{inited:false}});babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("messages/clearChatCollection",{chatId:e.chatId})}const a=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].getters["application/isChatOpen"](e.dialogId);if(s&&a){i.Messenger.openChat()}const t=I.CallManager.getInstance().getCurrentCallDialogId()===e.dialogId;if(s&&t){I.CallManager.getInstance().leaveCurrentCall()}babelHelpers.classPrivateFieldLooseBase(this,te)[te](e)}handleStartWriting(e){if(e.userId===m.Core.getUserId()){return}L.Logger.warn("ChatPullHandler: handleStartWriting",e);const{dialogId:s,userId:a,userName:t}=e;r.WritingManager.getInstance().startWriting({dialogId:s,userId:a,userName:t});babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("users/update",{id:a,fields:{lastActivityDate:new Date}})}handleChatUnread(e){L.Logger.warn("ChatPullHandler: handleChatUnread",e);let s=0;if(e.active===true){s=e.markedId}babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{markedId:s}})}handleChatMuteNotify(e){if(e.muted){babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/mute",{dialogId:e.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/unmute",{dialogId:e.dialogId})}handleChatRename(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].getters["chats/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:s.dialogId,fields:{name:e.name}})}handleChatAvatar(e){const s=babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].getters["chats/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:s.dialogId,fields:{avatar:e.avatar}})}handleReadAllChats(){L.Logger.warn("ChatPullHandler: handleReadAllChats");babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/clearCounters");babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("recent/clearUnread")}handleChatConvert(e){L.Logger.warn("ChatPullHandler: handleChatConvert",e);const{dialogId:s,newType:a,newPermissions:t}=e;babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:s,fields:{type:a,permissions:t}})}handleChatCopilotRoleUpdate(e){if(!e.copilotRole){return}const s=new l.CopilotManager;void s.handleRoleUpdate(e.copilotRole)}}function le(e){if(e.users){const s=new c.UserManager;s.setUsersToModel(Object.values(e.users))}babelHelpers.classPrivateFieldLooseBase(this,ae)[ae].dispatch("chats/update",{dialogId:e.dialogId,fields:{userCounter:e.userCount}})}var re=babelHelpers.classPrivateFieldLooseKey("store");class de{constructor(){Object.defineProperty(this,re,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,re)[re]=m.Core.getStore()}handleUserInvite(e){if(e.invited){const s=new c.UserManager;s.setUsersToModel([e.user]);return}babelHelpers.classPrivateFieldLooseBase(this,re)[re].dispatch("users/update",{id:e.userId,fields:e.user})}}class oe{handleDesktopOnline(e){L.Logger.warn("DesktopPullHandler: handleDesktopOnline",e);const s=v.DesktopManager.getInstance();s.setDesktopActive(true);o.CounterManager.getInstance().removeBrowserTitleCounter()}handleDesktopOffline(){L.Logger.warn("DesktopPullHandler: handleDesktopOffline");v.DesktopManager.getInstance().setDesktopActive(false)}}class ne{handleSettingsUpdate(e){L.Logger.warn("SettingsPullHandler: handleSettingsUpdate",e);Object.entries(e).forEach((([e,s])=>{m.Core.getStore().dispatch("application/settings/set",{[e]:s})}))}}class he{handleCommentSubscribe(e){const{messageId:s,subscribe:a}=e;L.Logger.warn("CommentsPullHandler: handleCommentSubscribe",e);if(a){m.Core.getStore().dispatch("messages/comments/subscribe",s);return}m.Core.getStore().dispatch("messages/comments/unsubscribe",s)}handleReadAllChannelComments(e){m.Core.getStore().dispatch("counters/readAllChannelComments",e.chatId)}}var ce=babelHelpers.classPrivateFieldLooseKey("messageHandler");var ge=babelHelpers.classPrivateFieldLooseKey("chatHandler");var ue=babelHelpers.classPrivateFieldLooseKey("userHandler");var pe=babelHelpers.classPrivateFieldLooseKey("desktopHandler");var be=babelHelpers.classPrivateFieldLooseKey("settingsHandler");var ve=babelHelpers.classPrivateFieldLooseKey("commentsHandler");class Ie{constructor(){Object.defineProperty(this,ce,{writable:true,value:void 0});Object.defineProperty(this,ge,{writable:true,value:void 0});Object.defineProperty(this,ue,{writable:true,value:void 0});Object.defineProperty(this,pe,{writable:true,value:void 0});Object.defineProperty(this,be,{writable:true,value:void 0});Object.defineProperty(this,ve,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ce)[ce]=new X;babelHelpers.classPrivateFieldLooseBase(this,ge)[ge]=new ie;babelHelpers.classPrivateFieldLooseBase(this,ue)[ue]=new de;babelHelpers.classPrivateFieldLooseBase(this,pe)[pe]=new oe;babelHelpers.classPrivateFieldLooseBase(this,be)[be]=new ne;babelHelpers.classPrivateFieldLooseBase(this,ve)[ve]=new he}getModuleId(){return"im"}handleMessage(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleMessageAdd(e)}handleMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleMessageAdd(e)}handleMessageUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleMessageUpdate(e)}handleMessageDelete(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleMessageDelete(e)}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleMessageDeleteComplete(e)}handleAddReaction(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleAddReaction(e)}handleDeleteReaction(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleDeleteReaction(e)}handleMessageParamsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleMessageParamsUpdate(e)}handleReadMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleReadMessage(e,s)}handleReadMessageChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleReadMessage(e,s)}handleReadMessageOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleReadMessageOpponent(e)}handleReadMessageChatOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handleReadMessageOpponent(e)}handlePinAdd(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handlePinAdd(e)}handlePinDelete(e){babelHelpers.classPrivateFieldLooseBase(this,ce)[ce].handlePinDelete(e)}handleChatOwner(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatOwner(e)}handleChatManagers(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatManagers(e)}handleChatUserAdd(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatUserAdd(e)}handleChatUserLeave(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatUserLeave(e)}handleStartWriting(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleStartWriting(e)}handleChatUnread(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatUnread(e)}handleReadAllChats(){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleReadAllChats()}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatMuteNotify(e)}handleChatRename(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatRename(e)}handleChatAvatar(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatAvatar(e)}handleChatConvert(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatConvert(e)}handleChatCopilotRoleUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,ge)[ge].handleChatCopilotRoleUpdate(e)}handleUserInvite(e){babelHelpers.classPrivateFieldLooseBase(this,ue)[ue].handleUserInvite(e)}handleDesktopOnline(e){babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].handleDesktopOnline(e)}handleDesktopOffline(){babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].handleDesktopOffline()}handleSettingsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,be)[be].handleSettingsUpdate(e)}handleCommentSubscribe(e){babelHelpers.classPrivateFieldLooseBase(this,ve)[ve].handleCommentSubscribe(e)}handleReadAllChannelComments(e){babelHelpers.classPrivateFieldLooseBase(this,ve)[ve].handleReadAllChannelComments(e)}}const fe={[p.ChatType.copilot]:"recent/setCopilot",[p.ChatType.channel]:"recent/setChannel",[p.ChatType.openChannel]:"recent/setChannel",default:"recent/setRecent"};var Pe=babelHelpers.classPrivateFieldLooseKey("params");var Le=babelHelpers.classPrivateFieldLooseKey("extra");class Ce{constructor(e,s={}){Object.defineProperty(this,Pe,{writable:true,value:void 0});Object.defineProperty(this,Le,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Pe)[Pe]=e;babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]=s}getChatId(){return babelHelpers.classPrivateFieldLooseBase(this,Pe)[Pe].chatId}getParentChatId(){var e;return((e=this.getChat())==null?void 0:e.parent_chat_id)||0}getChat(){var e;const s=this.getChatId();return(e=babelHelpers.classPrivateFieldLooseBase(this,Pe)[Pe].chat)==null?void 0:e[s]}getChatType(){var e;const s=this.getChat();return(e=s==null?void 0:s.type)!=null?e:""}isLinesChat(){return Boolean(babelHelpers.classPrivateFieldLooseBase(this,Pe)[Pe].lines)}isCommentChat(){return this.getChatType()===p.ChatType.comment}isChannelChat(){return[p.ChatType.channel,p.ChatType.openChannel].includes(this.getChatType())}isUserInChat(){const e=babelHelpers.classPrivateFieldLooseBase(this,Pe)[Pe].userInChat[this.getChatId()];if(!e||this.isChannelListEvent()){return true}return e.includes(m.Core.getUserId())}isChannelListEvent(){return this.isChannelChat()&&babelHelpers.classPrivateFieldLooseBase(this,Le)[Le].is_shared_event}needToSkipMessageEvent(){return this.isLinesChat()||this.isCommentChat()||!this.isUserInChat()}getActionName(){var e;if(this.isChannelChat()&&!this.isChannelListEvent()){return fe.default}const s=this.getChatType();return(e=fe[s])!=null?e:fe.default}}var me=babelHelpers.classPrivateFieldLooseKey("params");var He=babelHelpers.classPrivateFieldLooseKey("setUsers");var Fe=babelHelpers.classPrivateFieldLooseKey("setFiles");var Me=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var Be=babelHelpers.classPrivateFieldLooseKey("setMessage");class ye{constructor(e){Object.defineProperty(this,Be,{value:Oe});Object.defineProperty(this,Me,{value:Se});Object.defineProperty(this,Fe,{value:we});Object.defineProperty(this,He,{value:Ue});Object.defineProperty(this,me,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,me)[me]=e}setLastMessageInfo(){babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]();babelHelpers.classPrivateFieldLooseBase(this,He)[He]();babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe]();babelHelpers.classPrivateFieldLooseBase(this,Be)[Be]()}getDialogId(){return babelHelpers.classPrivateFieldLooseBase(this,me)[me].chat.dialogId}getLastMessageId(){const[e]=babelHelpers.classPrivateFieldLooseBase(this,me)[me].messages;return e.id}}function Ue(){const e=new c.UserManager;e.setUsersToModel(babelHelpers.classPrivateFieldLooseBase(this,me)[me].users)}function we(){m.Core.getStore().dispatch("files/set",babelHelpers.classPrivateFieldLooseBase(this,me)[me].files)}function Se(){const e={...babelHelpers.classPrivateFieldLooseBase(this,me)[me].chat,counter:babelHelpers.classPrivateFieldLooseBase(this,me)[me].counter,dialogId:this.getDialogId()};m.Core.getStore().dispatch("chats/set",e)}function Oe(){const[e]=babelHelpers.classPrivateFieldLooseBase(this,me)[me].messages;m.Core.getStore().dispatch("messages/store",e)}var Re=babelHelpers.classPrivateFieldLooseKey("updateUnloadedChatCounter");var ke=babelHelpers.classPrivateFieldLooseKey("updateCommentCounter");class De{constructor(){Object.defineProperty(this,ke,{value:Ae});Object.defineProperty(this,Re,{value:Te})}getModuleId(){return"im"}handleMessage(e,s){this.handleMessageAdd(e,s)}handleMessageChat(e,s){this.handleMessageAdd(e,s)}handleMessageAdd(e,s){const a=new Ce(e,s);if(a.isCommentChat()){babelHelpers.classPrivateFieldLooseBase(this,ke)[ke]({channelChatId:a.getParentChatId(),commentChatId:a.getChatId(),commentCounter:e.counter})}if(a.needToSkipMessageEvent(e)){return}L.Logger.warn("RecentPullHandler: handleMessageAdd",e);const t={id:e.dialogId,messageId:e.message.id};const i=m.Core.getStore().getters["recent/get"](e.dialogId);if(i){t.isFakeElement=false;t.isBirthdayPlaceholder=false;t.liked=false}const l=a.getActionName();m.Core.getStore().dispatch(l,t)}handleMessageDeleteComplete(e){const s=Boolean(e.newLastMessage);if(s){this.updateRecentForMessageDelete(e.dialogId,e.newLastMessage.id)}babelHelpers.classPrivateFieldLooseBase(this,Re)[Re](e)}handleReadMessage(e){babelHelpers.classPrivateFieldLooseBase(this,Re)[Re](e)}handleReadMessageChat(e){if(e.type===p.ChatType.comment){babelHelpers.classPrivateFieldLooseBase(this,ke)[ke]({channelChatId:e.parentChatId,commentChatId:e.chatId,commentCounter:e.counter});return}babelHelpers.classPrivateFieldLooseBase(this,Re)[Re](e)}handleUnreadMessage(e){babelHelpers.classPrivateFieldLooseBase(this,Re)[Re](e)}handleUnreadMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,Re)[Re](e)}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,Re)[Re](e)}handleChatUnread(e){L.Logger.warn("RecentPullHandler: handleChatUnread",e);babelHelpers.classPrivateFieldLooseBase(this,Re)[Re]({dialogId:e.dialogId,chatId:e.chatId,counter:e.counter,muted:e.muted,unread:e.active});m.Core.getStore().dispatch("recent/unread",{id:e.dialogId,action:e.active})}handleAddReaction(e){L.Logger.warn("RecentPullHandler: handleAddReaction",e);const s=m.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}const a=m.Core.getStore().getters["application/isChatOpen"](e.dialogId);if(a){return}const t=m.Core.getStore().getters["recent/getMessage"](e.dialogId);const i=m.Core.getUserId()===e.userId;const l=m.Core.getUserId()===t.authorId;if(i||!l){return}m.Core.getStore().dispatch("recent/like",{id:e.dialogId,messageId:e.actualReactions.reaction.messageId,liked:true})}handleChatPin(e){L.Logger.warn("RecentPullHandler: handleChatPin",e);const s=m.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}m.Core.getStore().dispatch("recent/pin",{id:e.dialogId,action:e.active})}handleChatHide(e){L.Logger.warn("RecentPullHandler: handleChatHide",e);const s=m.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}m.Core.getStore().dispatch("recent/delete",{id:e.dialogId})}handleChatUserLeave(e){L.Logger.warn("RecentPullHandler: handleChatUserLeave",e);const s=m.Core.getStore().getters["recent/get"](e.dialogId);if(!s||e.userId!==m.Core.getUserId()){return}m.Core.getStore().dispatch("recent/delete",{id:e.dialogId})}handleUserInvite(e){var s;L.Logger.warn("RecentPullHandler: handleUserInvite",e);const a=n.Utils.text.getUuidV4();m.Core.getStore().dispatch("messages/store",{id:a,date:e.date});m.Core.getStore().dispatch("recent/setRecent",{id:e.user.id,invited:(s=e.invited)!=null?s:false,isFakeElement:true,messageId:a})}handleRecentUpdate(e){L.Logger.warn("RecentPullHandler: handleRecentUpdate",e);const s=new ye(e);s.setLastMessageInfo();const a={id:s.getDialogId(),messageId:s.getLastMessageId(),lastActivityDate:e.lastActivityDate};m.Core.getStore().dispatch("recent/setRecent",a)}updateRecentForMessageDelete(e,s){if(!s){m.Core.getStore().dispatch("recent/delete",{id:e});return}m.Core.getStore().dispatch("recent/update",{id:e,fields:{messageId:s}})}}function Te(e){const{dialogId:s,chatId:a,counter:t,muted:i,unread:l,lines:r=false}=e;if(r){return}const d=m.Core.getStore().getters["recent/get"](s);if(d){return}L.Logger.warn("RecentPullHandler: updateUnloadedChatCounter:",{dialogId:s,chatId:a,counter:t,muted:i,unread:l});let o=0;if(i){o=0}else if(l&&t===0){o=1}else if(l&&t>0){o=t}else if(!l){o=t}m.Core.getStore().dispatch("counters/setUnloadedChatCounters",{[a]:o})}function Ae(e){const{channelChatId:s,commentChatId:a,commentCounter:t}=e;if(C.Type.isUndefined(t)){return}const i={[s]:{[a]:t}};m.Core.getStore().dispatch("counters/setCommentCounters",i)}class je{constructor(){this.store=m.Core.getStore();this.userManager=new c.UserManager;this.updateCounterDebounced=C.Runtime.debounce(this.updateCounter,1500,this)}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleNotifyAdd(e){if(e.onlyFlash===true){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("notifications/set",e);this.updateCounterDebounced(e.counter)}handleNotifyConfirm(e){this.store.dispatch("notifications/delete",{id:e.id});this.updateCounterDebounced(e.counter)}handleNotifyRead(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:true})}));this.updateCounterDebounced(e.counter)}handleNotifyUnread(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:false})}));this.updateCounterDebounced(e.counter)}handleNotifyDelete(e){const s=Object.keys(e.id).map((e=>Number.parseInt(e,10)));s.forEach((e=>{this.store.dispatch("notifications/delete",{id:e})}));this.updateCounterDebounced(e.counter)}updateCounter(e){this.store.dispatch("notifications/setCounter",e)}}class Ne{constructor(){this.store=m.Core.getStore();this.userManager=new c.UserManager}getModuleId(){return"im"}handleChatUserAdd(e){if(this.getMembersCountFromStore(e.chatId)===0){return}void this.userManager.setUsersToModel(Object.values(e.users));void this.store.dispatch("sidebar/members/set",{chatId:e.chatId,users:e.newUsers})}handleChatUserLeave(e){if(this.getMembersCountFromStore(e.chatId)===0){return}void this.store.dispatch("sidebar/members/delete",{chatId:e.chatId,userId:e.userId})}handleTaskAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/tasks/set",{chatId:e.link.chatId,tasks:[e.link]})}handleTaskUpdate(e,s){this.handleTaskAdd(e,s)}handleTaskDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/tasks/delete",{chatId:e.chatId,id:e.linkId})}handleCalendarAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/meetings/set",{chatId:e.link.chatId,meetings:[e.link]})}handleCalendarUpdate(e,s){this.handleCalendarAdd(e,s)}handleCalendarDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/meetings/delete",{chatId:e.chatId,id:e.linkId})}handleUrlAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/links/set",{chatId:e.link.chatId,links:[e.link]});const s=this.store.getters["sidebar/links/getCounter"](e.link.chatId);void this.store.dispatch("sidebar/links/setCounter",{chatId:e.link.chatId,counter:s+1})}handleUrlDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/links/delete",{chatId:e.chatId,id:e.linkId})}handleMessageFavoriteAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("files/set",e.files);void this.store.dispatch("messages/store",[e.link.message]);void this.store.dispatch("sidebar/favorites/set",{chatId:e.link.chatId,favorites:[e.link]});const s=this.store.getters["sidebar/favorites/getCounter"](e.link.chatId);void this.store.dispatch("sidebar/favorites/setCounter",{chatId:e.link.chatId,counter:s+1})}handleMessageFavoriteDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/favorites/delete",{chatId:e.chatId,id:e.linkId})}handleFileAdd(e){var s;if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("files/set",e.files);const a=(s=e.link.subType)!=null?s:p.SidebarDetailBlock.fileUnsorted;void this.store.dispatch("sidebar/files/set",{chatId:e.link.chatId,files:[e.link],subType:a})}handleFileDelete(e){var s;const a=C.Type.isNumber(e.chatId)?e.chatId:Number.parseInt(e.chatId,10);if(!this.isSidebarInited(a)){return}const t=(s=e.linkId)!=null?s:e.fileId;void this.store.dispatch("sidebar/files/delete",{chatId:a,id:t})}handleChangeMultidialogSessionsLimit(e){void this.store.dispatch("sidebar/multidialog/setOpenSessionsLimit",e.limit)}handleAddMultidialog(e){const{multidialog:s,count:a}=e;const t=s.isSupport;if(!t){return}void this.store.dispatch("sidebar/multidialog/setChatsCount",a);void this.store.dispatch("sidebar/multidialog/addMultidialogs",[s])}handleReadMessageChat(e){this.deleteUnreadSupportChats(e)}handleReadMessage(e){this.deleteUnreadSupportChats(e)}handleChangeMultidialogStatus(e){const{bot:s,chat:a,multidialog:t}=e;const i=t.isSupport;if(!i){return}if(a){void this.store.dispatch("chats/set",a)}if(s){void this.userManager.setUsersToModel(s)}void this.store.dispatch("sidebar/multidialog/addMultidialogs",[t])}handleMessage(e){this.setUnreadSupportTickets(e.multidialog)}handleChatUnread(e){const{chatId:s,dialogId:a}=e;const t=this.store.getters["sidebar/multidialog/isSupport"](a);const i=this.store.getters["sidebar/multidialog/isInited"];if(t&&i){void this.store.dispatch("sidebar/multidialog/setUnreadChats",[s])}}handleMessageChat(e){this.setFiles(e);this.setUnreadSupportTickets(e.multidialog)}deleteUnreadSupportChats(e){const s=e.counter===0;if(s){void this.store.dispatch("sidebar/multidialog/deleteUnreadChats",e.chatId)}}setUnreadSupportTickets(e){if(!e){return}const s=this.store.getters["sidebar/multidialog/get"](e.chatId);const a=(s==null?void 0:s.status)||e.status;void this.store.dispatch("sidebar/multidialog/addMultidialogs",[{...e,status:a}]);void this.store.dispatch("sidebar/multidialog/setUnreadChats",[e.chatId])}setFiles(e){const{chatId:s,users:a,files:t}=e;if(!this.isSidebarInited(s)||this.areFilesMigrated()){return}void this.userManager.setUsersToModel(Object.values(a));void this.store.dispatch("files/set",Object.values(t));Object.values(t).forEach((e=>{void this.store.dispatch("sidebar/files/set",{chatId:e.chatId,files:[e],subType:p.SidebarDetailBlock.fileUnsorted})}))}isSidebarInited(e){return this.store.getters["sidebar/isInited"](e)}areFilesMigrated(){return this.store.state.sidebar.isFilesMigrated}getMembersCountFromStore(e){return this.store.getters["sidebar/members/getSize"](e)}}var Ke=babelHelpers.classPrivateFieldLooseKey("shouldShowNotification");var Xe=babelHelpers.classPrivateFieldLooseKey("shouldShowLinesNotification");var Ee=babelHelpers.classPrivateFieldLooseKey("isChatOpened");var We=babelHelpers.classPrivateFieldLooseKey("isLinesChatOpened");var _e=babelHelpers.classPrivateFieldLooseKey("isImportantMessage");var Ve=babelHelpers.classPrivateFieldLooseKey("shouldShowToUser");var xe=babelHelpers.classPrivateFieldLooseKey("isUserDnd");var Ye=babelHelpers.classPrivateFieldLooseKey("desktopWillShowNotification");var qe=babelHelpers.classPrivateFieldLooseKey("flashDesktopIcon");var ze=babelHelpers.classPrivateFieldLooseKey("playOpenedChatMessageSound");var Ge=babelHelpers.classPrivateFieldLooseKey("playMessageSound");var Je=babelHelpers.classPrivateFieldLooseKey("restoreLastNotificationId");var Qe=babelHelpers.classPrivateFieldLooseKey("updateLastNotificationId");var Ze=babelHelpers.classPrivateFieldLooseKey("setCurrentUserStatus");class $e{constructor(){Object.defineProperty(this,Ze,{value:us});Object.defineProperty(this,Qe,{value:gs});Object.defineProperty(this,Je,{value:cs});Object.defineProperty(this,Ge,{value:hs});Object.defineProperty(this,ze,{value:ns});Object.defineProperty(this,qe,{value:os});Object.defineProperty(this,Ye,{value:ds});Object.defineProperty(this,xe,{value:rs});Object.defineProperty(this,Ve,{value:ls});Object.defineProperty(this,_e,{value:is});Object.defineProperty(this,We,{value:ts});Object.defineProperty(this,Ee,{value:as});Object.defineProperty(this,Xe,{value:ss});Object.defineProperty(this,Ke,{value:es});this.lastNotificationId=0;this.store=m.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze]();babelHelpers.classPrivateFieldLooseBase(this,Je)[Je]()}getModuleId(){return"im"}handleMessage(e,s){this.handleMessageAdd(e,s)}handleMessageChat(e,s){this.handleMessageAdd(e,s)}handleMessageAdd(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,Ke)[Ke](e,s)){return}if(babelHelpers.classPrivateFieldLooseBase(this,Ee)[Ee](e.dialogId)){babelHelpers.classPrivateFieldLooseBase(this,ze)[ze](e);return}babelHelpers.classPrivateFieldLooseBase(this,Ge)[Ge](e);babelHelpers.classPrivateFieldLooseBase(this,qe)[qe]();const a=this.store.getters["messages/getById"](e.message.id);const t=this.store.getters["chats/get"](e.dialogId,true);const i=this.store.getters["users/get"](a.authorId);b.NotifierManager.getInstance().showMessage({message:a,dialog:t,user:i,lines:Boolean(e.lines)});babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe](e.message.id)}handleNotifyAdd(e,s){if(s.server_time_ago>10){L.Logger.warn("NotifierPullHandler: notification arrived to the user 30 seconds after it was actually sent, ignore notification");return}if(e.id<=this.lastNotificationId){L.Logger.warn("NotifierPullHandler: new notification id is smaller than lastNotificationId");return}if(e.onlyFlash===true||babelHelpers.classPrivateFieldLooseBase(this,xe)[xe]()||babelHelpers.classPrivateFieldLooseBase(this,Ye)[Ye]()||I.CallManager.getInstance().hasCurrentCall()){return}if(document.hasFocus()){const e=this.store.getters["application/areNotificationsOpen"];if(e){return}}const a=this.store.getters["notifications/getById"](e.id);const t=this.store.getters["users/get"](e.userId);if(e.silent!=="Y"){P.SoundNotificationManager.getInstance().playOnce(p.SoundType.reminder)}babelHelpers.classPrivateFieldLooseBase(this,qe)[qe]();b.NotifierManager.getInstance().showNotification(a,t);babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe](e.id)}}function es(e,s){var a,t;if(s.server_time_ago>10){L.Logger.warn("NotifierPullHandler: message arrived to the user 30 seconds after it was actually sent, ignore message");return false}if(e.message.id<=this.lastNotificationId){L.Logger.warn("NotifierPullHandler: new message id is smaller than lastNotificationId");return false}if(m.Core.getUserId()===e.message.senderId){return false}if(e.lines&&!babelHelpers.classPrivateFieldLooseBase(this,Xe)[Xe](e)){return false}const i=!e.notify||((a=e.message)==null?void 0:(t=a.params)==null?void 0:t.NOTIFY)==="N";if(i||!babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve](e)||babelHelpers.classPrivateFieldLooseBase(this,Ye)[Ye]()){return false}const l=I.CallManager.getInstance().hasCurrentCall();if(l&&I.CallManager.getInstance().getCurrentCallDialogId()!==e.dialogId.toString()){return false}const r=I.CallManager.getInstance().hasCurrentScreenSharing();if(r){return false}return true}function ss(e){if(babelHelpers.classPrivateFieldLooseBase(this,We)[We](e.dialogId)){return false}const s=e.message.senderId;if(s>0&&e.users[s].extranet===false){return true}const a=this.store.getters["counters/getSpecificLinesCounter"](e.chatId);return a===0}function as(e){const s=this.store.getters["application/isChatOpen"](e);return Boolean(document.hasFocus()&&s)}function ts(e){const s=this.store.getters["application/isLinesChatOpen"](e);return Boolean(document.hasFocus()&&s)}function is(e){const{message:s}=e;return s.isImportant||s.importantFor.includes(m.Core.getUserId())}function ls(e){if(babelHelpers.classPrivateFieldLooseBase(this,_e)[_e](e)){return true}const s=this.store.getters["chats/get"](e.dialogId,true);const a=s.muteList.includes(m.Core.getUserId());return!babelHelpers.classPrivateFieldLooseBase(this,xe)[xe]()&&!a}function rs(){const e=this.store.getters["application/settings/get"](p.Settings.user.status);return e===p.UserStatus.dnd}function ds(){const e=v.DesktopManager.isChatWindow();return!e&&v.DesktopManager.getInstance().isDesktopActive()}function os(){if(!v.DesktopManager.isDesktop()){return}u.DesktopApi.flashIcon()}function ns(e){if(babelHelpers.classPrivateFieldLooseBase(this,_e)[_e](e)){P.SoundNotificationManager.getInstance().forcePlayOnce(p.SoundType.newMessage2);return}P.SoundNotificationManager.getInstance().playOnce(p.SoundType.newMessage2)}function hs(e){if(babelHelpers.classPrivateFieldLooseBase(this,_e)[_e](e)){P.SoundNotificationManager.getInstance().forcePlayOnce(p.SoundType.newMessage1);return}P.SoundNotificationManager.getInstance().playOnce(p.SoundType.newMessage1)}function cs(){const e=f.LocalStorageManager.getInstance().get(p.LocalStorageKey.lastNotificationId,0);this.lastNotificationId=Number.parseInt(e,10)}function gs(e){const s=2e3;this.lastNotificationId=e;clearTimeout(this.writeToStorageTimeout);this.writeToStorageTimeout=setTimeout((()=>{f.LocalStorageManager.getInstance().set(p.LocalStorageKey.lastNotificationId,e)}),s)}function us(){var e;const s=m.Core.getApplicationData();if(!((e=s.settings)!=null&&e.status)){return}m.Core.getStore().dispatch("application/settings/set",{[p.Settings.user.status]:s.settings.status})}class ps{constructor(){this.store=m.Core.getStore()}getModuleId(){return"im"}handleMessageChat(e){this.updateUnloadedLinesCounter(e)}handleReadMessageChat(e){this.updateUnloadedLinesCounter(e)}handleUnreadMessageChat(e){this.updateUnloadedLinesCounter(e)}handleChatHide(e){this.updateUnloadedLinesCounter({dialogId:e.dialogId,chatId:e.chatId,lines:e.lines,counter:0})}updateUnloadedLinesCounter(e){const{dialogId:s,chatId:a,counter:t,lines:i}=e;if(!i||C.Type.isUndefined(t)){return}L.Logger.warn("LinesPullHandler: updateUnloadedLinesCounter:",{dialogId:s,chatId:a,counter:t});this.store.dispatch("counters/setUnloadedLinesCounters",{[a]:t})}}class bs{constructor(){this.store=m.Core.getStore()}getModuleId(){return"online"}getSubscriptionType(){return"online"}handleUserStatus(e){const s=m.Core.getUserId();if(C.Type.isPlainObject(e.users[s])){const{status:a}=e.users[s];this.store.dispatch("application/settings/set",{status:a})}Object.values(e.users).forEach((e=>{this.store.dispatch("users/update",{id:e.id,fields:{lastActivityDate:e.last_activity_date}})}))}}e.BasePullHandler=Ie;e.RecentPullHandler=De;e.NotificationPullHandler=je;e.SidebarPullHandler=Ne;e.NotifierPullHandler=$e;e.LinesPullHandler=ps;e.OnlinePullHandler=bs})(this.BX.Messenger.v2.Provider.Pull=this.BX.Messenger.v2.Provider.Pull||{},BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Model,BX.Messenger.v2.Lib,BX.Ui,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Application);
//# sourceMappingURL=registry.bundle.map.js