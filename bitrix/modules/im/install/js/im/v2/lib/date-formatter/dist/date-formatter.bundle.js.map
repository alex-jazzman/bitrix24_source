{"version":3,"file":"date-formatter.bundle.js","sources":["../src/const/const.js","../src/date-formatter.js"],"sourcesContent":["import { DateTimeFormat } from 'main.date';\n\nimport type { DateTemplateType } from '../types/date-template-type';\n\nconst Interval = {\n\ttomorrow: 'tomorrow',\n\ttoday: 'today',\n\tyesterday: 'yesterday',\n\tweek: 'week',\n\tyear: 'year',\n\tolderThanYear: 'olderThanYear',\n};\n\n// camelCase versions of main formats\n// main/install/js/main/date/config.php\nconst DateFormat = {\n\tshortTimeFormat: 'SHORT_TIME_FORMAT',\n\tlongTimeFormat: 'LONG_TIME_FORMAT',\n\tshortDateFormat: 'SHORT_DATE_FORMAT',\n\tdayMonthFormat: 'DAY_MONTH_FORMAT',\n\tlongDateFormat: 'LONG_DATE_FORMAT',\n\tdayOfWeekMonthFormat: 'DAY_OF_WEEK_MONTH_FORMAT',\n\tshortDayOfWeekMonthFormat: 'SHORT_DAY_OF_WEEK_MONTH_FORMAT',\n\tshortDayOfWeekShortMonthFormat: 'SHORT_DAY_OF_WEEK_SHORT_MONTH_FORMAT',\n\tfullDateFormat: 'FULL_DATE_FORMAT',\n\tdayShortMonthFormat: 'DAY_SHORT_MONTH_FORMAT',\n\tmediumDateFormat: 'MEDIUM_DATE_FORMAT',\n\tformatDatetime: 'FORMAT_DATETIME',\n\tformatDate: 'FORMAT_DATE',\n};\n\ntype DateFormatKey = $Keys<typeof DateFormat>;\n\n// string codes for provided format\n// shortTimeFormat: 'H:i'\nconst DateCode: {\n\t[format: DateFormatKey]: string,\n} = {};\n\nObject.keys(DateFormat).forEach((format) => {\n\tDateCode[format] = DateTimeFormat.getFormat(DateFormat[format]);\n});\n\nconst DateTemplate: {\n\t[templateName: string]: DateTemplateType\n} = {\n\tnotification: {\n\t\t[Interval.today]: `today, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.yesterday]: `yesterday, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.year]: `${DateCode.dayMonthFormat}, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.olderThanYear]: `${DateCode.longDateFormat}, ${DateCode.shortTimeFormat}`,\n\t},\n\tdateGroup: {\n\t\t[Interval.today]: 'today',\n\t\t[Interval.yesterday]: 'yesterday',\n\t\t[Interval.year]: DateCode.dayOfWeekMonthFormat,\n\t\t[Interval.olderThanYear]: DateCode.fullDateFormat,\n\t},\n\tmeeting: {\n\t\t[Interval.tomorrow]: `tomorrow, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.today]: `today, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.yesterday]: `yesterday, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.year]: `${DateCode.dayShortMonthFormat}, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.olderThanYear]: `${DateCode.mediumDateFormat}, ${DateCode.shortTimeFormat}`,\n\t},\n\trecent: {\n\t\t[Interval.today]: DateCode.shortTimeFormat,\n\t\t[Interval.week]: 'D',\n\t\t[Interval.year]: DateCode.dayShortMonthFormat,\n\t\t[Interval.olderThanYear]: DateCode.mediumDateFormat,\n\t},\n\tmessageReadStatus: {\n\t\t[Interval.today]: `today, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.yesterday]: `yesterday, ${DateCode.shortTimeFormat}`,\n\t\t[Interval.year]: `${DateCode.dayMonthFormat},  ${DateCode.shortTimeFormat}`,\n\t\t[Interval.olderThanYear]: `${DateCode.dayMonthFormat} Y, ${DateCode.shortTimeFormat}`,\n\t},\n};\n\nexport { Interval, DateFormat, DateCode, DateTemplate };\n","import { DateTimeFormat } from 'main.date';\n\nimport { Interval } from './const/const';\n\nimport type { DateTemplateType } from './types/date-template-type';\n\nexport { DateFormat, DateCode, DateTemplate } from './const/const';\n\nexport class DateFormatter\n{\n\t#date: Date;\n\t#matchingFunctions: {[key: $Values<typeof Interval>]: Function};\n\n\tstatic formatByCode(date: Date, formatCode: string): string\n\t{\n\t\treturn new DateFormatter(date).formatByCode(formatCode);\n\t}\n\n\tstatic formatByTemplate(date: Date, template: DateTemplateType = {}): string\n\t{\n\t\treturn new DateFormatter(date).formatByTemplate(template);\n\t}\n\n\tformatByCode(formatCode: string): string\n\t{\n\t\treturn DateTimeFormat.format(formatCode, this.#date);\n\t}\n\n\tformatByTemplate(template: DateTemplateType = {}): string\n\t{\n\t\tconst intervals = Object.keys(Interval);\n\n\t\tconst matchingInterval = intervals.find((interval) => {\n\t\t\tconst templateHasInterval = Boolean(template[interval]);\n\t\t\tif (!templateHasInterval)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst matchingFunction = this.#matchingFunctions[interval];\n\t\t\tconst intervalIsMatching = matchingFunction();\n\n\t\t\tif (!intervalIsMatching)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// it's a matching code from provided template\n\t\t\treturn true;\n\t\t});\n\n\t\tif (!matchingInterval)\n\t\t{\n\t\t\tconsole.error('DateFormatter: no matching intervals were found for', template);\n\n\t\t\treturn '';\n\t\t}\n\n\t\tconst matchingCode = template[matchingInterval];\n\n\t\treturn this.formatByCode(matchingCode);\n\t}\n\n\tconstructor(date: Date)\n\t{\n\t\tthis.#date = date;\n\t\tthis.#matchingFunctions = {\n\t\t\t[Interval.tomorrow]: () => this.#isTomorrow(),\n\t\t\t[Interval.today]: () => this.#isToday(),\n\t\t\t[Interval.yesterday]: () => this.#isYesterday(),\n\t\t\t[Interval.week]: () => this.#isCurrentWeek(),\n\t\t\t[Interval.year]: () => this.#isCurrentYear(),\n\t\t\t[Interval.olderThanYear]: () => !this.#isCurrentYear(),\n\t\t};\n\t}\n\n\t#isYesterday(): boolean\n\t{\n\t\tconst yesterday = this.#shiftDate(-1);\n\n\t\treturn this.#isSame(yesterday);\n\t}\n\n\t#isToday(): boolean\n\t{\n\t\treturn this.#isSame(new Date());\n\t}\n\n\t#isTomorrow(): boolean\n\t{\n\t\tconst tomorrow = this.#shiftDate(1);\n\n\t\treturn this.#isSame(tomorrow);\n\t}\n\n\t#isCurrentWeek(): boolean\n\t{\n\t\tconst date = new Date();\n\t\tconst currentWeekNumber = Number(DateTimeFormat.format('W', date));\n\t\tconst setWeekNumber = Number(DateTimeFormat.format('W', this.#date));\n\t\tconst sameYear = this.#isCurrentYear();\n\n\t\treturn currentWeekNumber === setWeekNumber && sameYear;\n\t}\n\n\t#isCurrentYear(): boolean\n\t{\n\t\tconst date = new Date();\n\t\tconst currentYear = date.getFullYear();\n\t\tconst setYear = this.#date.getFullYear();\n\n\t\treturn currentYear === setYear;\n\t}\n\n\t#isSame(date): boolean\n\t{\n\t\tconst dateLocale = date.toLocaleDateString();\n\t\tconst setDateLocale = this.#date.toLocaleDateString();\n\n\t\treturn dateLocale === setDateLocale;\n\t}\n\n\t#shiftDate(shift): Date\n\t{\n\t\tconst date = new Date();\n\t\tdate.setDate(date.getDate() + shift);\n\n\t\treturn date;\n\t}\n}\n"],"names":["Interval","tomorrow","today","yesterday","week","year","olderThanYear","DateFormat","shortTimeFormat","longTimeFormat","shortDateFormat","dayMonthFormat","longDateFormat","dayOfWeekMonthFormat","shortDayOfWeekMonthFormat","shortDayOfWeekShortMonthFormat","fullDateFormat","dayShortMonthFormat","mediumDateFormat","formatDatetime","formatDate","DateCode","Object","keys","forEach","format","DateTimeFormat","getFormat","DateTemplate","notification","dateGroup","meeting","recent","messageReadStatus","DateFormatter","formatByCode","date","formatCode","formatByTemplate","template","intervals","matchingInterval","find","interval","templateHasInterval","Boolean","matchingFunction","intervalIsMatching","console","error","matchingCode","constructor","Date","currentWeekNumber","Number","setWeekNumber","sameYear","currentYear","getFullYear","setYear","dateLocale","toLocaleDateString","setDateLocale","shift","setDate","getDate"],"mappings":"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"}