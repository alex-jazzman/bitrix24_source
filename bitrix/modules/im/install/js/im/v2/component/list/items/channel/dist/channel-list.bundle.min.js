this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,s,a,n,i,r,l,o,c,d,h,g,m,u){"use strict";const v={name:"MessageText",components:{MessageAvatar:n.MessageAvatar},props:{item:{type:Object,required:true}},computed:{AvatarSize:()=>n.AvatarSize,recentItem(){return this.item},dialog(){return this.$store.getters["chats/get"](this.recentItem.dialogId,true)},message(){return this.$store.getters["recent/getMessage"](this.recentItem.dialogId)},formattedDate(){return this.formatDate(this.message.date)},isLastMessageAuthor(){return this.message.authorId===c.Core.getUserId()},lastMessageAuthorAvatar(){const t=this.$store.getters["users/get"](this.message.authorId);if(!t){return""}return t.avatar},lastMessageAuthorAvatarStyle(){return{backgroundImage:`url('${this.lastMessageAuthorAvatar}')`}},messageText(){if(this.message.isDeleted){return this.loc("IM_LIST_RECENT_DELETED_MESSAGE")}const t=r.Parser.purifyRecent(this.recentItem);if(!t){return this.loc("IM_LIST_RECENT_CHAT_TYPE_GROUP_V2")}return t},formattedMessageText(){const t=27;return i.Utils.text.insertUnseenWhitespace(this.messageText,t)}},methods:{formatDate(t){return l.DateFormatter.formatByTemplate(t,l.DateTemplate.recent)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-list-channel-item__message_container">\n\t\t\t<span class="bx-im-list-channel-item__message_text">\n\t\t\t\t<span v-if="isLastMessageAuthor" class="bx-im-list-channel-item__message_author-icon --self"></span>\n\t\t\t\t<MessageAvatar\n\t\t\t\t\tv-else-if="message.authorId"\n\t\t\t\t\t:messageId="message.id"\n\t\t\t\t\t:authorId="message.authorId"\n\t\t\t\t\t:size="AvatarSize.XXS"\n\t\t\t\t\tclass="bx-im-list-channel-item__message_author-avatar"\n\t\t\t\t/>\n\t\t\t\t<span class="bx-im-list-channel-item__message_text_content">{{ formattedMessageText }}</span>\n\t\t\t</span>\n\t\t</div>\n\t`};const p={name:"ChannelItem",components:{ChatAvatar:n.ChatAvatar,ChatTitle:a.ChatTitle,MessageText:v},props:{item:{type:Object,required:true}},data(){return{}},computed:{AvatarSize:()=>n.AvatarSize,recentItem(){return this.item},formattedDate(){if(this.needsBirthdayPlaceholder){return this.loc("IM_LIST_RECENT_BIRTHDAY_DATE")}return this.formatDate(this.message.date)},formattedCounter(){return this.dialog.counter>99?"99+":this.dialog.counter.toString()},dialog(){return this.$store.getters["chats/get"](this.recentItem.dialogId,true)},layout(){return this.$store.getters["application/getLayout"]},message(){return this.$store.getters["recent/getMessage"](this.recentItem.dialogId)},isUser(){return this.dialog.type===g.ChatType.user},isChat(){return!this.isUser},isChatSelected(){if(this.layout.name!==g.Layout.channel){return false}return this.layout.entityId===this.recentItem.dialogId},isChatMuted(){if(this.isUser){return false}const t=this.dialog.muteList.find((t=>t===c.Core.getUserId()));return Boolean(t)},needsBirthdayPlaceholder(){return this.$store.getters["recent/needsBirthdayPlaceholder"](this.recentItem.dialogId)},showLastMessage(){return this.$store.getters["application/settings/get"](g.Settings.recent.showLastMessage)},invitation(){return this.recentItem.invitation},wrapClasses(){return{"--selected":this.isChatSelected}}},methods:{formatDate(t){return l.DateFormatter.formatByTemplate(t,l.DateTemplate.recent)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div :data-id="recentItem.dialogId" :class="wrapClasses" class="bx-im-list-channel-item__wrap">\n\t\t\t<div class="bx-im-list-channel-item__container">\n\t\t\t\t<div class="bx-im-list-channel-item__avatar_container">\n\t\t\t\t\t<div class="bx-im-list-channel-item__avatar_content">\n\t\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t\t:avatarDialogId="recentItem.dialogId" \n\t\t\t\t\t\t\t:contextDialogId="recentItem.dialogId"\n\t\t\t\t\t\t\t:size="AvatarSize.XL" \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-list-channel-item__content_container">\n\t\t\t\t\t<div class="bx-im-list-channel-item__content_header">\n\t\t\t\t\t\t<ChatTitle :dialogId="recentItem.dialogId" />\n\t\t\t\t\t\t<div class="bx-im-list-channel-item__date">\n\t\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-list-channel-item__content_bottom">\n\t\t\t\t\t\t<MessageText :item="recentItem" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const M={name:"EmptyState",data(){return{}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-list-channel__empty">\n\t\t\t<div class="bx-im-list-channel__empty_icon"></div>\n\t\t\t<div class="bx-im-list-channel__empty_text">{{ loc('IM_LIST_CHANNEL_EMPTY') }}</div>\n\t\t</div>\n\t`};var I=babelHelpers.classPrivateFieldLooseKey("lastMessageId");var _=babelHelpers.classPrivateFieldLooseKey("getMinMessageId");class b extends o.BaseRecentService{constructor(...t){super(...t);Object.defineProperty(this,_,{value:L});Object.defineProperty(this,I,{writable:true,value:0})}getRestMethodName(){return g.RestMethod.imV2RecentChannelTail}getRecentSaveActionName(){return"recent/setChannel"}getRequestFilter(t=false){return{lastMessageId:t?null:babelHelpers.classPrivateFieldLooseBase(this,I)[I]}}onAfterRequest(t){if(!t){return}void c.Core.getStore().dispatch("recent/clearChannelCollection")}handlePaginationField(t){const{messages:e}=t;babelHelpers.classPrivateFieldLooseBase(this,I)[I]=babelHelpers.classPrivateFieldLooseBase(this,_)[_](e)}}function L(t){if(t.length===0){return 0}const e=t[0].id;return t.reduce(((t,e)=>Math.min(t,e.id)),e)}const C="IM_SHARED_CHANNEL_LIST";var f=babelHelpers.classPrivateFieldLooseKey("pullClient");var x=babelHelpers.classPrivateFieldLooseKey("requestWatchStart");class B{constructor(){Object.defineProperty(this,x,{value:y});Object.defineProperty(this,f,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,f)[f]=c.Core.getPullClient()}subscribe(){babelHelpers.classPrivateFieldLooseBase(this,f)[f].extendWatch(C);babelHelpers.classPrivateFieldLooseBase(this,x)[x]()}unsubscribe(){babelHelpers.classPrivateFieldLooseBase(this,f)[f].clearWatch(C)}}function y(){void d.runAction(g.RestMethod.imV2RecentChannelExtendPullWatch)}class S extends u.RecentMenu{getMenuItems(){return[this.getOpenItem()]}getOpenItem(){return{title:h.Loc.getMessage("IM_LIB_MENU_OPEN"),onClick:()=>{void m.LayoutManager.getInstance().setLayout({name:g.Layout.channel,entityId:this.context.dialogId});this.menuInstance.close()}}}}const P={name:"ChannelList",components:{EmptyState:M,LoadingState:e.ListLoadingState,ChannelItem:p},emits:["chatClick"],data(){return{isLoading:false,isLoadingNextPage:false,firstPageLoaded:false}},computed:{collection(){return this.$store.getters["recent/getChannelCollection"]},preparedItems(){return[...this.collection].sort(((t,e)=>{const s=this.$store.getters["messages/getById"](t.messageId);const a=this.$store.getters["messages/getById"](e.messageId);return a.date-s.date}))},isEmptyCollection(){return this.collection.length===0}},created(){this.contextMenuManager=new S},beforeUnmount(){this.contextMenuManager.destroy()},async activated(){this.isLoading=true;await this.getRecentService().loadFirstPage();this.firstPageLoaded=true;this.isLoading=false;this.getPullWatchManager().subscribe()},deactivated(){this.getPullWatchManager().unsubscribe()},methods:{async onScroll(t){this.contextMenuManager.close();if(!i.Utils.dom.isOneScreenRemaining(t.target)||!this.getRecentService().hasMoreItemsToLoad()){return}this.isLoadingNextPage=true;await this.getRecentService().loadNextPage();this.isLoadingNextPage=false},onClick(t){this.$emit("chatClick",t.dialogId)},onRightClick(t,e){e.preventDefault();const s={dialogId:t.dialogId,recentItem:t};this.contextMenuManager.openMenu(s,e.currentTarget)},getRecentService(){if(!this.service){this.service=new b}return this.service},getPullWatchManager(){if(!this.pullWatchManager){this.pullWatchManager=new B}return this.pullWatchManager},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-list-channel__container">\n\t\t\t<LoadingState v-if="isLoading && !firstPageLoaded" />\n\t\t\t<div v-else @scroll="onScroll" class="bx-im-list-channel__scroll-container">\n\t\t\t\t<EmptyState v-if="isEmptyCollection" />\n\t\t\t\t<div class="bx-im-list-channel__general_container">\n\t\t\t\t\t<ChannelItem\n\t\t\t\t\t\tv-for="item in preparedItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<LoadingState v-if="isLoadingNextPage" />\n\t\t\t</div>\n\t\t</div>\n\t`};t.ChannelList=P})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Messenger.v2.Component.Elements,BX.Main,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=channel-list.bundle.map.js