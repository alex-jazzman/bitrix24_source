{"version":3,"file":"chat-content.bundle.js","sources":["../src/components/content/channel/components/comments-button.js","../src/components/content/channel/components/dialog.js","../src/components/content/channel/components/join-panel.js","../src/components/content/channel/components/textarea.js","../src/components/content/channel/channel.js","../src/components/content/collab/components/collab-title.js","../src/components/content/collab/classes/tooltip-content/icon-key.js","../src/components/content/collab/classes/tooltip-content/tooltip-content.js","../src/components/content/collab/components/entities-panel/components/entity-counter.js","../src/components/content/collab/components/entities-panel/components/entity-link.js","../src/components/content/collab/components/entities-panel/entities-panel.js","../src/components/content/collab/components/add-to-chat-button.js","../src/components/content/collab/components/pulse-animation/pulse-animation.js","../src/components/content/collab/components/header.js","../src/components/content/collab/collab.js","../src/components/content/multidialog/components/title.js","../src/components/content/multidialog/components/header.js","../src/components/content/multidialog/multidialog.js","../src/components/content/notes/notes-content.js","../src/components/content/copilot/components/add-to-chat/add-to-chat-hint.js","../src/components/content/copilot/components/add-to-chat/add-to-chat-button.js","../src/components/content/copilot/components/header.js","../src/components/content/copilot/components/textarea.js","../src/components/content/copilot/copilot.js","../src/components/content/ai-assistant/ai-assistant.js","../src/components/openers/chat/components/empty-state/base.js","../src/components/openers/chat/components/empty-state/channel.js","../src/components/openers/chat/components/empty-state/chat/embedded-promo.js","../src/components/openers/chat/components/empty-state/chat/embedded.js","../src/components/openers/chat/components/empty-state/collab/components/feature-block.js","../src/components/openers/chat/components/empty-state/collab/collab.js","../src/components/openers/chat/components/empty-state/copilot/copilot.js","../src/components/openers/chat/components/empty-state/ai-assistant/ai-assistant.js","../src/components/openers/chat/classes/user-service.js","../src/components/openers/chat/chat.js","../src/components/content/comments/components/subscribe-toggle.js","../src/components/content/comments/components/header.js","../src/components/content/comments/components/dialog-loader.js","../src/components/content/comments/components/message-list.js","../src/components/content/comments/components/dialog.js","../src/components/content/comments/components/textarea.js","../src/components/content/comments/components/join-panel.js","../src/components/content/comments/comments.js","../src/components/openers/comments/comments.js","../src/chat-content.js"],"sourcesContent":["import { FloatButton, FloatButtonIcon, FloatButtonColor } from 'im.v2.component.dialog.chat';\n\n// @vue/component\nexport const CommentsButton = {\n\tname: 'CommentsButton',\n\tcomponents: {\n\t\tFloatButton,\n\t},\n\tprops:\n\t{\n\t\tcounter: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tfloatButtonProps(): { icon: string, color: string, counter: number }\n\t\t{\n\t\t\treturn {\n\t\t\t\ticon: FloatButtonIcon.comment,\n\t\t\t\tcolor: FloatButtonColor.success,\n\t\t\t\tcounter: this.counter,\n\t\t\t};\n\t\t},\n\t},\n\ttemplate: `\n\t\t<FloatButton v-bind=\"floatButtonProps\" />\n\t`,\n};\n","import { ChatDialog, ScrollManager } from 'im.v2.component.dialog.chat';\nimport { Layout, UserRole } from 'im.v2.const';\nimport { CommentsService } from 'im.v2.provider.service.comments';\n\nimport { CommentsButton } from './comments-button';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChannelDialog = {\n\tname: 'ChannelDialog',\n\tcomponents: { ChatDialog, CommentsButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tlastScrolledChatId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tisGuest(): boolean\n\t\t{\n\t\t\treturn this.dialog.role === UserRole.guest;\n\t\t},\n\t\tisChatLayout(): boolean\n\t\t{\n\t\t\treturn this.layout.name === Layout.chat;\n\t\t},\n\t\tchannelComments(): number[]\n\t\t{\n\t\t\treturn this.$store.getters['counters/getChannelComments'](this.dialog.chatId);\n\t\t},\n\t\ttotalChannelCommentsCounter(): number\n\t\t{\n\t\t\tlet counter = 0;\n\t\t\tObject.values(this.channelComments).forEach((commentCounter) => {\n\t\t\t\tcounter += commentCounter;\n\t\t\t});\n\n\t\t\treturn counter;\n\t\t},\n\t\tshowCommentsButton(): boolean\n\t\t{\n\t\t\treturn this.isChatLayout && this.totalChannelCommentsCounter > 0;\n\t\t},\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.readAllChannelComments();\n\t},\n\tmethods:\n\t{\n\t\tasync onCommentsButtonClick()\n\t\t{\n\t\t\tconst chatIdToJump = this.getNextChatIdToJump();\n\t\t\tthis.lastScrolledChatId = chatIdToJump;\n\n\t\t\tconst messageIdToJump: ?number = this.$store.getters['messages/comments/getMessageIdByChatId'](chatIdToJump);\n\n\t\t\tif (messageIdToJump)\n\t\t\t{\n\t\t\t\tthis.$refs.dialog.goToMessageContext(messageIdToJump, {\n\t\t\t\t\tposition: ScrollManager.scrollPosition.messageBottom,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.goToMessageContextByCommentsChatId(chatIdToJump);\n\t\t},\n\t\tasync goToMessageContextByCommentsChatId(chatId: string)\n\t\t{\n\t\t\tthis.$refs.dialog.showLoadingBar();\n\t\t\tconst messageId = await this.$refs.dialog.getMessageService().loadContextByChatId(chatId);\n\t\t\tthis.$refs.dialog.hideLoadingBar();\n\n\t\t\tif (!messageId)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChannelDialog: no messageId after loading context');\n\t\t\t}\n\n\t\t\tawait this.$nextTick();\n\t\t\tthis.$refs.dialog.getScrollManager().scrollToMessage(messageId, {\n\t\t\t\tposition: ScrollManager.scrollPosition.messageBottom,\n\t\t\t});\n\t\t\tawait this.$nextTick();\n\t\t\tthis.$refs.dialog.highlightMessage(messageId);\n\t\t},\n\t\tgetNextChatIdToJump(): number\n\t\t{\n\t\t\tconst commentChatIds = this.getCommentsChatIds();\n\t\t\tcommentChatIds.sort((a, z) => a - z);\n\t\t\tif (this.lastScrolledChatId === 0)\n\t\t\t{\n\t\t\t\treturn commentChatIds[0];\n\t\t\t}\n\n\t\t\tconst filteredChatIds = commentChatIds.filter((chatId) => chatId > this.lastScrolledChatId);\n\t\t\tif (filteredChatIds.length === 0)\n\t\t\t{\n\t\t\t\treturn commentChatIds[0];\n\t\t\t}\n\n\t\t\treturn filteredChatIds[0];\n\t\t},\n\t\tgetCommentsChatIds(): number[]\n\t\t{\n\t\t\treturn Object.keys(this.channelComments).map((chatId) => {\n\t\t\t\treturn Number(chatId);\n\t\t\t});\n\t\t},\n\t\treadAllChannelComments()\n\t\t{\n\t\t\tvoid CommentsService.readAllChannelComments(this.dialogId);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog ref=\"dialog\" :dialogId=\"dialogId\" :resetOnExit=\"isGuest\">\n\t\t\t<template #additional-float-button>\n\t\t\t\t<CommentsButton\n\t\t\t\t\tv-if=\"showCommentsButton\"\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t:counter=\"totalChannelCommentsCounter\"\n\t\t\t\t\t@click=\"onCommentsButtonClick\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ChatDialog>\n\t`,\n};\n","import { ChatButton, ButtonColor, ButtonSize } from 'im.v2.component.elements.button';\nimport { ChatService } from 'im.v2.provider.service.chat';\n\n// @vue/component\nexport const JoinPanel = {\n\tcomponents: { ChatButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick()\n\t\t{\n\t\t\tthis.getChatService().joinChat(this.dialogId);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat__textarea_placeholder\">\n\t\t\t<ChatButton\n\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t:text=\"loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHANNEL_V2')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onButtonClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const ChannelTextarea = {\n\tname: 'ChannelTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:placeholder=\"this.loc('IM_CONTENT_CHANNEL_TEXTAREA_PLACEHOLDER')\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withAudioInput=\"false\"\n\t\t\tclass=\"bx-im-channel-send-panel__container\"\n\t\t/>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { ChannelDialog } from './components/dialog';\nimport { JoinPanel } from './components/join-panel';\nimport { ChannelTextarea } from './components/textarea';\n\nexport const ChannelContent = {\n\tname: 'ChannelContent',\n\tcomponents: { BaseChatContent, ChannelDialog, ChannelTextarea, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #dialog>\n\t\t\t\t<ChannelDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanel :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<ChannelTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType, SidebarDetailBlock } from 'im.v2.const';\nimport { LineLoader } from 'im.v2.component.elements.loader';\nimport { ChatTitle } from 'im.v2.component.elements.chat-title';\nimport { FadeAnimation } from 'im.v2.component.animation';\n\nimport '../css/collab-title.css';\n\nimport type { ImModelChat, ImModelCollabInfo } from 'im.v2.model';\n\n// @vue/component\nexport const CollabTitle = {\n\tname: 'CollabTitle',\n\tcomponents: { ChatTitle, LineLoader, FadeAnimation },\n\tinject: ['currentSidebarPanel'],\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tcollabInfo(): ImModelCollabInfo\n\t\t{\n\t\t\treturn this.$store.getters['chats/collabs/getByChatId'](this.dialog.chatId);\n\t\t},\n\t\tguestCounter(): number\n\t\t{\n\t\t\treturn this.collabInfo.guestCount;\n\t\t},\n\t\tuserCounterText(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_CHAT_HEADER_USER_COUNT', this.dialog.userCounter, {\n\t\t\t\t'#COUNT#': this.dialog.userCounter,\n\t\t\t});\n\t\t},\n\t\tguestCounterText(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_COLLAB_HEADER_GUEST_COUNT', this.guestCounter, {\n\t\t\t\t'#COUNT#': this.guestCounter,\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonMembersClick()\n\t\t{\n\t\t\tif (this.currentSidebarPanel === SidebarDetailBlock.members)\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.sidebar.close, { panel: SidebarDetailBlock.members });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventEmitter.emit(EventType.sidebar.open, {\n\t\t\t\tpanel: SidebarDetailBlock.members,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-collab-header-title__container\">\n\t\t\t<div class=\"bx-im-collab-header-title__title-container --ellipsis\">\n\t\t\t\t<ChatTitle :dialogId=\"dialogId\" :withAutoDelete=\"true\" />\n\t\t\t</div>\n\t\t\t<LineLoader v-if=\"!dialog.inited\" :width=\"50\" :height=\"16\" />\n\t\t\t<FadeAnimation :duration=\"100\">\n\t\t\t\t<div v-if=\"dialog.inited\" class=\"bx-im-collab-header-title__subtitle_container\">\n\t\t\t\t\t<div @click=\"onMembersClick\" class=\"bx-im-collab-header-title__subtitle_content --ellipsis\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t:title=\"loc('IM_CONTENT_CHAT_HEADER_OPEN_MEMBERS')\"\n\t\t\t\t\t\t\tclass=\"bx-im-collab-header-title__user-counter\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ userCounterText }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span v-if=\"guestCounter > 0\" class=\"bx-im-collab-header-title__guest-counter\">\n\t\t\t\t\t\t\t{{ guestCounterText }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</FadeAnimation>\n\t\t</div>\n\t`,\n};\n","export const IconKey = Object.freeze({\n\taddToChat: 'add-to-chat',\n\tcollabEntities: 'collab-entities',\n});\n","import { Tag } from 'main.core';\n\nimport { IconKey } from './icon-key';\n\nimport './css/tooltip-content.css';\n\ntype CollabTooltipParams = {\n\ttitle: string,\n\ttext: string,\n\ticonKey: $Values<typeof IconKey>,\n}\n\nexport class CollabTooltipContent\n{\n\t#title: string;\n\t#text: string;\n\t#iconKey: $Values<typeof IconKey>;\n\n\tconstructor(params: CollabTooltipParams)\n\t{\n\t\tthis.#title = params.title;\n\t\tthis.#text = params.text;\n\t\tthis.#iconKey = params.iconKey;\n\t}\n\n\trender(): HTMLElement\n\t{\n\t\treturn Tag.render`\n\t\t\t<div class=\"bx-im-collab-tooltip__scope bx-im-collab-tooltip__container\">\n\t\t\t\t<div class=\"bx-im-collab-tooltip__icon --${this.#iconKey}\"></div>\n\t\t\t\t<div class=\"bx-im-collab-tooltip__title-container\">\n\t\t\t\t\t<div class=\"bx-im-collab-tooltip__title\">\n\t\t\t\t\t\t${this.#title}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-im-collab-tooltip__text\">\n\t\t\t\t\t\t${this.#text}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n}\n","// @vue/component\nexport const EntityCounter = {\n\tname: 'EntityCounter',\n\tprops:\n\t{\n\t\tcounter: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tpreparedCounter(): string\n\t\t{\n\t\t\treturn this.counter > 99 ? '99+' : this.counter.toString();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<span class=\"bx-im-collab-header__link-counter\">\n\t\t\t{{ preparedCounter }}\n\t\t</span>\n\t`,\n};\n","import { Type } from 'main.core';\n\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { EntityCounter } from './entity-counter';\n\nexport const EntityType = {\n\ttasks: 'tasks',\n\tfiles: 'files',\n\tcalendar: 'calendar',\n};\n\n// @vue/component\nexport const EntityLink = {\n\tname: 'EntityLink',\n\tcomponents: { EntityCounter },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tcompactMode: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\turl: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tcounter: {\n\t\t\ttype: [Number, null],\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tshowCounter(): boolean\n\t\t{\n\t\t\treturn !Type.isNull(this.counter) && this.counter > 0;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonLinkClick()\n\t\t{\n\t\t\tAnalytics.getInstance().collabEntities.onClick(this.dialogId, this.type);\n\n\t\t\tBX.SidePanel.Instance.open(this.url, {\n\t\t\t\tcacheable: false,\n\t\t\t\tcustomLeftBoundary: 0,\n\t\t\t});\n\t\t},\n\t},\n\ttemplate: `\n\t\t<a :href=\"url\" @click.prevent=\"onLinkClick\" class=\"bx-im-collab-header__link\" :class=\"'--' + type\">\n\t\t\t<span v-if=\"compactMode\" class=\"bx-im-collab-header__link-icon\"></span>\n\t\t\t<span v-else class=\"bx-im-collab-header__link-text\">{{ title }}</span>\n\t\t\t<EntityCounter v-if=\"showCounter\" :counter=\"counter\" />\n\t\t</a>\n\t`,\n};\n","import { CloseIconSize } from 'main.popup';\nimport { Tooltip } from 'ui.dialogs.tooltip';\nimport { CollabEntityType, PromoId } from 'im.v2.const';\nimport { PromoManager } from 'im.v2.lib.promo';\n\nimport { CollabTooltipContent } from '../../classes/tooltip-content/tooltip-content';\nimport { IconKey } from '../../classes/tooltip-content/icon-key';\nimport { EntityLink } from './components/entity-link';\n\nimport './css/entities-panel.css';\n\nimport type { ImModelChat, ImModelCollabInfo } from 'im.v2.model';\nimport type { PromoParams } from 'im.v2.provider.pull';\n\n// @vue/component\nexport const EntitiesPanel = {\n\tname: 'EntitiesPanel',\n\tcomponents: { EntityLink },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tcompactMode: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): Object\n\t{\n\t\treturn {\n\t\t\thighlightMode: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tCollabEntityType: () => CollabEntityType,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tcollabInfo(): ImModelCollabInfo\n\t\t{\n\t\t\treturn this.$store.getters['chats/collabs/getByChatId'](this.dialog.chatId);\n\t\t},\n\t\ttasksInfo(): { url: string, counter: number }\n\t\t{\n\t\t\treturn this.collabInfo.entities.tasks;\n\t\t},\n\t\ttasksUrl(): string\n\t\t{\n\t\t\treturn this.tasksInfo.url;\n\t\t},\n\t\ttasksCounter(): number\n\t\t{\n\t\t\treturn this.tasksInfo.counter;\n\t\t},\n\t\tfilesInfo(): { url: string, counter: number }\n\t\t{\n\t\t\treturn this.collabInfo.entities.files;\n\t\t},\n\t\tfilesUrl(): string\n\t\t{\n\t\t\treturn this.filesInfo.url;\n\t\t},\n\t\tcalendarInfo(): { url: string, counter: number }\n\t\t{\n\t\t\treturn this.collabInfo.entities.calendar;\n\t\t},\n\t\tcalendarUrl(): string\n\t\t{\n\t\t\treturn this.calendarInfo.url;\n\t\t},\n\t\tcalendarCounter(): number\n\t\t{\n\t\t\treturn this.calendarInfo.counter;\n\t\t},\n\t},\n\tmounted()\n\t{\n\t\tthis.initPromo();\n\t},\n\tmethods:\n\t{\n\t\tinitPromo(): void\n\t\t{\n\t\t\tconst promoManager = PromoManager.getInstance();\n\n\t\t\tconst promoId = PromoId.collabEntities;\n\t\t\tconst promoParams = { chatId: this.dialog.chatId };\n\n\t\t\tif (promoManager.needToShow(promoId, promoParams))\n\t\t\t{\n\t\t\t\tvoid this.showCollabEntitiesPromo(promoId, promoParams);\n\t\t\t}\n\t\t},\n\t\tasync showCollabEntitiesPromo(promoId: $Values<typeof PromoId>, promoParams: PromoParams): Promise<void>\n\t\t{\n\t\t\tconst tooltip = new Tooltip({\n\t\t\t\tbindElement: this.$refs['collab-entities'],\n\t\t\t\tcontent: this.renderTooltipContent(),\n\t\t\t\tminWidth: 410,\n\t\t\t\tpopupOptions: {\n\t\t\t\t\toffsetTop: 11,\n\t\t\t\t\toffsetLeft: 38,\n\t\t\t\t\tautoHide: true,\n\t\t\t\t\tcloseIcon: true,\n\t\t\t\t\tcloseIconSize: CloseIconSize.LARGE,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonPopupShow: () => {\n\t\t\t\t\t\t\tthis.highlightMode = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonPopupClose: () => {\n\t\t\t\t\t\t\tthis.highlightMode = false;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\ttooltip.show();\n\t\t\tvoid PromoManager.getInstance().markAsWatched(promoId, promoParams);\n\t\t},\n\t\trenderTooltipContent(): HTMLElement\n\t\t{\n\t\t\tconst tooltipContent = new CollabTooltipContent({\n\t\t\t\ttitle: this.loc('IM_CONTENT_COLLAB_ONBOARDING_ENTITIES_TITLE'),\n\t\t\t\ttext: this.loc('IM_CONTENT_COLLAB_ONBOARDING_ENTITIES_TEXT'),\n\t\t\t\ticonKey: IconKey.collabEntities,\n\t\t\t});\n\n\t\t\treturn tooltipContent.render();\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\tclass=\"bx-im-collab-header__links-container\"\n\t\t\t:class=\"{'--compact': compactMode, '--highlight': highlightMode}\"\n\t\t\tref=\"collab-entities\"\n\t\t>\n\t\t\t<EntityLink\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:compactMode=\"compactMode\"\n\t\t\t\t:url=\"tasksUrl\"\n\t\t\t\t:type=\"CollabEntityType.tasks\"\n\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_HEADER_LINK_TASKS')\"\n\t\t\t\t:counter=\"tasksCounter\"\n\t\t\t/>\n\t\t\t<EntityLink\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:compactMode=\"compactMode\"\n\t\t\t\t:url=\"filesUrl\"\n\t\t\t\t:type=\"CollabEntityType.files\"\n\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_HEADER_LINK_FILES')\"\n\t\t\t/>\n\t\t\t<EntityLink\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:compactMode=\"compactMode\"\n\t\t\t\t:url=\"calendarUrl\"\n\t\t\t\t:type=\"CollabEntityType.calendar\"\n\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_HEADER_LINK_CALENDAR')\"\n\t\t\t\t:counter=\"calendarCounter\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { CloseIconSize } from 'main.popup';\nimport { Tooltip } from 'ui.dialogs.tooltip';\nimport { AddToCollab } from 'im.v2.component.entity-selector';\nimport { PromoId } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { PromoManager } from 'im.v2.lib.promo';\n\nimport { CollabTooltipContent } from '../classes/tooltip-content/tooltip-content';\nimport { IconKey } from '../classes/tooltip-content/icon-key';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { PromoParams } from 'im.v2.provider.pull';\nimport type { JsonObject } from 'main.core';\n\nconst PromoMessages = {\n\t[PromoId.membersNotInvitedOneDayToCollab]: {\n\t\ttitle: 'IM_CONTENT_COLLAB_ONBOARDING_INVITE_MEMBERS_ONE_DAY_TITLE',\n\t\ttext: 'IM_CONTENT_COLLAB_ONBOARDING_INVITE_MEMBERS_ONE_DAY_TEXT',\n\t},\n\t[PromoId.membersNotInvitedFourDayToCollab]: {\n\t\ttitle: 'IM_CONTENT_COLLAB_ONBOARDING_INVITE_MEMBERS_FOUR_DAYS_TITLE',\n\t\ttext: 'IM_CONTENT_COLLAB_ONBOARDING_INVITE_MEMBERS_FOUR_DAYS_TEXT',\n\t},\n};\n\n// @vue/component\nexport const AddToChatButton = {\n\tname: 'AddToChatButton',\n\tcomponents: { AddToCollab },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\twithAnimation: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowAddToChatPopup: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t},\n\tmounted(): void\n\t{\n\t\tthis.initPromo();\n\t},\n\tmethods:\n\t{\n\t\topenAddToChatPopup()\n\t\t{\n\t\t\tAnalytics.getInstance().userAdd.onChatHeaderClick(this.dialogId);\n\t\t\tthis.showAddToChatPopup = true;\n\t\t},\n\t\tcloseAddToChatPopup()\n\t\t{\n\t\t\tthis.$emit('close');\n\t\t\tthis.showAddToChatPopup = false;\n\t\t},\n\t\tinitPromo(): void\n\t\t{\n\t\t\tconst promoManager = PromoManager.getInstance();\n\n\t\t\tObject.keys(PromoMessages).forEach((promoId: $Values<typeof PromoId>): void => {\n\t\t\t\tconst promoParams = { chatId: this.dialog.chatId };\n\n\t\t\t\tif (promoManager.needToShow(promoId, promoParams))\n\t\t\t\t{\n\t\t\t\t\tvoid this.showMembersNotInvitedPromo(promoId, promoParams);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tshowMembersNotInvitedPromo(promoId: $Values<typeof PromoId>, promoParams: PromoParams): Promise<void>\n\t\t{\n\t\t\tconst tooltip = new Tooltip({\n\t\t\t\tbindElement: this.$refs['add-members'],\n\t\t\t\tcontent: this.renderTooltipContent(promoId),\n\t\t\t\tminWidth: 410,\n\t\t\t\tpopupOptions: {\n\t\t\t\t\toffsetTop: 8,\n\t\t\t\t\toffsetLeft: 9,\n\t\t\t\t\tautoHide: true,\n\t\t\t\t\tcloseIcon: true,\n\t\t\t\t\tcloseIconSize: CloseIconSize.LARGE,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\ttooltip.show();\n\t\t\tvoid PromoManager.getInstance().markAsWatched(promoId, promoParams);\n\t\t},\n\t\trenderTooltipContent(promoId: $Values<typeof PromoId>): HTMLElement\n\t\t{\n\t\t\tconst tooltipContent = new CollabTooltipContent({\n\t\t\t\ttitle: this.loc(PromoMessages[promoId].title),\n\t\t\t\ttext: this.loc(PromoMessages[promoId].text),\n\t\t\t\ticonKey: IconKey.addToChat,\n\t\t\t});\n\n\t\t\treturn tooltipContent.render();\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t:title=\"loc('IM_CONTENT_CHAT_HEADER_OPEN_INVITE_POPUP_TITLE')\"\n\t\t\t:class=\"{'--active': showAddToChatPopup}\"\n\t\t\tclass=\"bx-im-collab-header__add-people-icon\"\n\t\t\t@click=\"openAddToChatPopup\"\n\t\t\tref=\"add-members\"\n\t\t></div>\n\t\t<AddToCollab\n\t\t\tv-if=\"showAddToChatPopup\"\n\t\t\t:bindElement=\"$refs['add-members'] ?? {}\"\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:popupConfig=\"{ offsetTop: 25, offsetLeft: -300 }\"\n\t\t\t@close=\"closeAddToChatPopup\"\n\t\t/>\n\t`,\n};\n","import './pulse-animation.css';\n\nconst RING_COUNT = 3;\n\n// @vue/component\nexport const PulseAnimation = {\n\tname: 'PulseAnimation',\n\tprops:\n\t{\n\t\tshowPulse: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trings(): number[]\n\t\t{\n\t\t\tif (!this.showPulse)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn Array.from({ length: RING_COUNT });\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-pulse-animation__container\">\n\t\t\t<slot />\n\t\t\t<div v-for=\"ring in rings\" class=\"bx-im-pulse-animation__ring\"></div>\n\t\t</div>\n\t`,\n};\n","import { EventEmitter } from 'main.core.events';\n\nimport { ChatHeader } from 'im.v2.component.content.elements';\nimport { EventType } from 'im.v2.const';\nimport { AddToChat as AddToChatPopup } from 'im.v2.component.entity-selector';\n\nimport { CollabTitle } from './collab-title';\nimport { EntitiesPanel } from './entities-panel/entities-panel';\nimport { AddToChatButton } from './add-to-chat-button';\nimport { PulseAnimation } from './pulse-animation/pulse-animation';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CollabHeader = {\n\tname: 'CollabHeader',\n\tcomponents: { ChatHeader, CollabTitle, EntitiesPanel, AddToChatButton, AddToChatPopup, PulseAnimation },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tcompactMode: false,\n\t\t\tshowAddToChatPopupDelayed: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tasync isInited(isInited: boolean)\n\t\t{\n\t\t\tif (isInited && this.showAddToChatPopupDelayed)\n\t\t\t{\n\t\t\t\tawait this.$nextTick();\n\t\t\t\tthis.openAddToChatPopup();\n\t\t\t}\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tEventEmitter.subscribe(EventType.header.openAddToChatPopup, this.onOpenAddToChatPopup);\n\t},\n\tbeforeUnmount()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.header.openAddToChatPopup, this.onOpenAddToChatPopup);\n\t},\n\tmethods:\n\t{\n\t\tonOpenAddToChatPopup()\n\t\t{\n\t\t\tif (!this.isInited)\n\t\t\t{\n\t\t\t\tthis.showAddToChatPopupDelayed = true;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.openAddToChatPopup();\n\t\t},\n\t\topenAddToChatPopup()\n\t\t{\n\t\t\tthis.$refs['add-to-chat-button'].openAddToChatPopup();\n\t\t},\n\t\tonCompactModeChange(compactMode: boolean)\n\t\t{\n\t\t\tthis.compactMode = compactMode;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader :dialogId=\"dialogId\" @compactModeChange=\"onCompactModeChange\" class=\"bx-im-collab-header__container\">\n\t\t\t<template #title>\n\t\t\t\t<CollabTitle :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #before-actions>\n\t\t\t\t<EntitiesPanel :dialogId=\"dialogId\" :compactMode=\"compactMode\" />\n\t\t\t</template>\n\t\t\t<template #add-to-chat-button>\n\t\t\t\t<PulseAnimation :showPulse=\"showAddToChatPopupDelayed\">\n\t\t\t\t\t<AddToChatButton \n\t\t\t\t\t\t:withAnimation=\"showAddToChatPopupDelayed\" \n\t\t\t\t\t\t:dialogId=\"dialogId\" \n\t\t\t\t\t\tref=\"add-to-chat-button\" \n\t\t\t\t\t\t@close=\"showAddToChatPopupDelayed = false\"\n\t\t\t\t\t/>\n\t\t\t\t</PulseAnimation>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\nimport { PromoId } from 'im.v2.const';\nimport { Notifier } from 'im.v2.lib.notifier';\nimport { PromoManager } from 'im.v2.lib.promo';\n\nimport { CollabHeader } from './components/header';\n\nimport './css/collab.css';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { PromoParams } from 'im.v2.provider.pull';\n\nexport const CollabContent = {\n\tname: 'CollabContent',\n\tcomponents: { BaseChatContent, CollabHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tdialogInited(newValue: boolean, oldValue: boolean): void\n\t\t{\n\t\t\tif (!newValue || oldValue)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.initPromo();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tinitPromo(): void\n\t\t{\n\t\t\tconst promoManager = PromoManager.getInstance();\n\n\t\t\tconst promoId = PromoId.collaberNotAcceptInvitationOneDay;\n\t\t\tconst promoParams = { chatId: this.dialog.chatId };\n\n\t\t\tif (promoManager.needToShow(promoId, promoParams))\n\t\t\t{\n\t\t\t\tthis.showNotAcceptInvitationPromo(promoId, promoParams);\n\t\t\t}\n\t\t},\n\t\tshowNotAcceptInvitationPromo(promoId: $Values<typeof PromoId>, promoParams: PromoParams): void\n\t\t{\n\t\t\tNotifier.collab.onCollaberNotAcceptInvitation();\n\n\t\t\tvoid PromoManager.getInstance().markAsWatched(promoId, promoParams);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CollabHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { ChatTitle, EditableChatTitle } from 'im.v2.component.elements.chat-title';\n\n// @vue/component\nexport const MultidialogChatTitle = {\n\tname: 'MultidialogChatTitle',\n\tcomponents: { EditableChatTitle, ChatTitle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['newTitle'],\n\tcomputed:\n\t{\n\t\tisSupportBot(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['users/bots/isSupport'](this.dialogId);\n\t\t},\n\t\tsubtitle(): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage('IM_CONTENT_CHAT_HEADER_SUPPORT_SUBTITLE');\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-chat-header__info\">\n\t\t\t<ChatTitle v-if=\"isSupportBot\" :dialogId=\"dialogId\" />\n\t\t\t<EditableChatTitle v-else :dialogId=\"dialogId\" @newTitleSubmit=\"$emit('newTitle', $event)\" />\n\t\t\t<div class=\"bx-im-chat-header__subtitle_container\">\n\t\t\t\t<div class=\"bx-im-chat-header__subtitle_content\">{{ subtitle }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { ChatHeader } from 'im.v2.component.content.elements';\n\nimport { MultidialogChatTitle } from './title';\n\n// @vue/component\nexport const MultidialogHeader = {\n\tname: 'MultidialogHeader',\n\tcomponents: { ChatHeader, MultidialogChatTitle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader :dialogId=\"dialogId\">\n\t\t\t<template #title=\"{ onNewTitleHandler }\">\n\t\t\t\t<MultidialogChatTitle\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t@newTitle=\"onNewTitleHandler\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { MultidialogHeader } from './components/header';\n\nexport const MultidialogContent = {\n\tname: 'MultidialogContent',\n\tcomponents: { BaseChatContent, MultidialogHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<MultidialogHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { BaseChatContent, ChatHeader } from 'im.v2.component.content.elements';\nimport { ChatTitle, ChatTitleType } from 'im.v2.component.elements.chat-title';\n\n// @vue/component\nexport const NotesContent = {\n\tname: 'NotesContent',\n\tcomponents: { BaseChatContent, ChatHeader, ChatTitle },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed: {\n\t\ttitleType(): string\n\t\t{\n\t\t\treturn Number.parseInt(this.dialogId, 10) === Core.getUserId() ? ChatTitleType.notes : '';\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<ChatHeader :dialogId=\"dialogId\" :withCallButton=\"false\" :withAddToChatButton=\"false\">\n\t\t\t\t\t<template #title>\n\t\t\t\t\t\t<ChatTitle :dialogId=\"dialogId\" :customType=\"titleType\" :showItsYou=\"false\"/>\n\t\t\t\t\t</template>\n\t\t\t\t</ChatHeader>\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { PopupOptions } from 'main.popup';\n\nimport { MessengerPopup } from 'im.v2.component.elements.popup';\n\nimport '../../css/add-to-chat-hint.css';\n\nconst POPUP_ID = 'im-add-to-chat-hint-popup';\n\n// @vue/component\nexport const AddToChatHint = {\n\tname: 'AddToChatHint',\n\tcomponents: { MessengerPopup },\n\tprops: {\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close', 'hide'],\n\tcomputed: {\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig(): PopupOptions\n\t\t{\n\t\t\treturn {\n\t\t\t\tdarkMode: true,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\tangle: true,\n\t\t\t\twidth: 346,\n\t\t\t\tcloseIcon: true,\n\t\t\t\toffsetLeft: 8,\n\t\t\t\tclassName: 'bx-im-copilot-add-to-chat-hint__scope',\n\t\t\t\tcontentBorderRadius: 0,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\t:config=\"config\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t\t@close=\"$emit('close')\"\n\t\t>\n\t\t\t<div class=\"bx-im-copilot-add-to-chat-hint__title\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_TITLE') }}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<div class=\"bx-im-copilot-add-to-chat-hint__description\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_DESCRIPTION') }}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<button class=\"bx-im-copilot-add-to-chat-hint__hide\" @click=\"$emit('hide')\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_HIDE') }}\n\t\t\t</button>\n\t\t</MessengerPopup>\n\t`,\n};\n","import { AddToChat } from 'im.v2.component.entity-selector';\nimport { PromoId } from 'im.v2.const';\nimport { PromoManager } from 'im.v2.lib.promo';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { AddToChatHint } from './add-to-chat-hint';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const AddToChatButton = {\n\tname: 'AddToChatButton',\n\tcomponents: { AddToChat, AddToChatHint },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowInviteButton: false,\n\t\t\tshowAddToChatPopup: false,\n\t\t\tshowAddToChatHint: false,\n\t\t};\n\t},\n\tmounted()\n\t{\n\t\tconst needCopilotInRecentTabHint = PromoManager.getInstance().needToShow(PromoId.copilotInRecentTab);\n\t\tconst needAddUsersToChatHint = PromoManager.getInstance().needToShow(PromoId.addUsersToCopilotChat);\n\n\t\tthis.showAddToChatHint = !needCopilotInRecentTabHint && needAddUsersToChatHint;\n\t},\n\tmethods:\n\t{\n\t\topenAddToChatPopup(): void\n\t\t{\n\t\t\tAnalytics.getInstance().userAdd.onChatHeaderClick(this.dialogId);\n\t\t\tthis.showAddToChatPopup = true;\n\t\t},\n\t\tcloseAddToChatPopup(): void\n\t\t{\n\t\t\tthis.showAddToChatPopup = false;\n\t\t},\n\t\tshowHint()\n\t\t{\n\t\t\tthis.showAddToChatHint = true;\n\t\t},\n\t\tcloseHint()\n\t\t{\n\t\t\tthis.showAddToChatHint = false;\n\t\t},\n\t\tonHintHide()\n\t\t{\n\t\t\tvoid PromoManager.getInstance().markAsWatched(PromoId.addUsersToCopilotChat);\n\t\t\tthis.closeHint();\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t:title=\"loc('IM_CONTENT_CHAT_HEADER_OPEN_INVITE_POPUP_TITLE')\"\n\t\t\t:class=\"{'--active': showAddToChatPopup}\"\n\t\t\tclass=\"bx-im-chat-header__icon --add-people\"\n\t\t\t@click=\"openAddToChatPopup\"\n\t\t\tref=\"add-members\"\n\t\t>\n\t\t\t<slot name=\"invite-hint\" :inviteButtonRef=\"$refs['add-members']\"></slot>\n\t\t</div>\n\t\t<AddToChat\n\t\t\tv-if=\"showAddToChatPopup\"\n\t\t\t:bindElement=\"$refs['add-members'] ?? {}\"\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:popupConfig=\"{ offsetTop: 15, offsetLeft: -300 }\"\n\t\t\t@close=\"closeAddToChatPopup\"\n\t\t/>\n\t\t<AddToChatHint\n\t\t\tv-if=\"showAddToChatHint\"\n\t\t\t:bindElement=\"$refs['add-members'] ?? {}\"\n\t\t\t@close=\"closeHint\"\n\t\t\t@hide=\"onHintHide\"\n\t\t/>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { ChatService } from 'im.v2.provider.service.chat';\nimport { EditableChatTitle } from 'im.v2.component.elements.chat-title';\nimport { AvatarSize, ChatAvatar } from 'im.v2.component.elements.avatar';\nimport { ChatHeader } from 'im.v2.component.content.elements';\nimport { EventType, SidebarDetailBlock } from 'im.v2.const';\n\nimport { AddToChatButton } from './add-to-chat/add-to-chat-button';\n\nimport '../css/chat-header.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CopilotChatHeader = {\n\tname: 'CopilotChatHeader',\n\tcomponents: { ChatHeader, EditableChatTitle, ChatAvatar, AddToChatButton },\n\tinject: ['currentSidebarPanel'],\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tbuttonPanelReady: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\tAvatarSize: () => AvatarSize,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tisGroupCopilotChat(): boolean\n\t\t{\n\t\t\treturn this.dialog.userCounter > 2;\n\t\t},\n\t\tcopilotRole(): string\n\t\t{\n\t\t\tconst role = this.$store.getters['copilot/chats/getRole'](this.dialogId);\n\n\t\t\treturn role?.name ?? '';\n\t\t},\n\t\tformattedUserCounter(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_COPILOT_HEADER_USER_COUNT', this.dialog.userCounter, {\n\t\t\t\t'#COUNT#': this.dialog.userCounter,\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonNewTitleSubmit(newTitle: string)\n\t\t{\n\t\t\tvoid this.getChatService().renameChat(this.dialogId, newTitle);\n\t\t},\n\t\tonMembersClick()\n\t\t{\n\t\t\tif (!this.isInited)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentSidebarPanel === SidebarDetailBlock.members)\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.sidebar.close, { panel: SidebarDetailBlock.members });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventEmitter.emit(EventType.sidebar.open, {\n\t\t\t\tpanel: SidebarDetailBlock.members,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tonButtonPanelReady()\n\t\t{\n\t\t\tthis.buttonPanelReady = true;\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withSearchButton=\"false\"\n\t\t\tclass=\"bx-im-copilot-header__container\"\n\t\t\t@buttonPanelReady=\"onButtonPanelReady\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div class=\"bx-im-copilot-header__avatar\">\n\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t:avatarDialogId=\"dialogId\"\n\t\t\t\t\t\t:contextDialogId=\"dialogId\"\n\t\t\t\t\t\t:withSpecialTypes=\"false\"\n\t\t\t\t\t\t:size=\"AvatarSize.L\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-copilot-header__info\">\n\t\t\t\t\t<EditableChatTitle :dialogId=\"dialogId\" @newTitleSubmit=\"onNewTitleSubmit\" />\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"isGroupCopilotChat\"\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COPILOT_HEADER_OPEN_MEMBERS_TITLE')\"\n\t\t\t\t\t\t@click=\"onMembersClick\"\n\t\t\t\t\t\tclass=\"bx-im-copilot-header__subtitle --click\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ formattedUserCounter }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class=\"bx-im-copilot-header__subtitle\">\n\t\t\t\t\t\t{{ copilotRole }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if=\"buttonPanelReady\" #add-to-chat-button>\n\t\t\t\t<AddToChatButton :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const CopilotTextarea = {\n\tname: 'CopilotTextarea',\n\tcomponents: { ChatTextarea },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tmethods: {\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:placeholder=\"loc('IM_CONTENT_COPILOT_TEXTAREA_PLACEHOLDER')\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withEdit=\"false\"\n\t\t\t:withUploadMenu=\"false\"\n\t\t\t:withSmileSelector=\"false\"\n\t\t/>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CopilotChatHeader } from './components/header';\nimport { CopilotTextarea } from './components/textarea';\n\n// @vue/component\nexport const CopilotContent = {\n\tname: 'CopilotContent',\n\tcomponents: { BaseChatContent, CopilotChatHeader, CopilotTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CopilotChatHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<CopilotTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\nimport { ChatTextarea } from 'im.v2.component.textarea';\n\nexport const AiAssistantContent = {\n\tname: 'AiAssistantContent',\n\tcomponents: { BaseChatContent, ChatTextarea },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tmethods: {\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<ChatTextarea\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t:key=\"dialogId\"\n\t\t\t\t\t:placeholder=\"loc('IM_CONTENT_AIASSISTANT_TEXTAREA_PLACEHOLDER')\"\n\t\t\t\t\t:withMarket=\"false\"\n\t\t\t\t\t:withEdit=\"false\"\n\t\t\t\t\t:withUploadMenu=\"false\"\n\t\t\t\t\t:withSmileSelector=\"false\"\n\t\t\t\t\t@mounted=\"onTextareaMount\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};","import { Type } from 'main.core';\n\nimport { ThemeManager } from 'im.v2.lib.theme';\nimport { LegacyRecentService } from 'im.v2.provider.service.recent';\n\nimport './css/empty-state.css';\n\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\n// @vue/component\nexport const BaseEmptyState = {\n\tprops:\n\t{\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tsubtext: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tbackgroundId: {\n\t\t\ttype: [String, Number],\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\ticonClass(): string\n\t\t{\n\t\t\treturn this.isEmptyRecent ? '--empty' : '--default';\n\t\t},\n\t\tpreparedText(): string\n\t\t{\n\t\t\tif (this.text)\n\t\t\t{\n\t\t\t\treturn this.text;\n\t\t\t}\n\n\t\t\tif (this.isEmptyRecent)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_CONTENT_CHAT_NO_CHATS_START_MESSAGE');\n\t\t\t}\n\n\t\t\treturn this.loc('IM_CONTENT_CHAT_START_MESSAGE_V2');\n\t\t},\n\t\tpreparedSubtext(): string\n\t\t{\n\t\t\tif (this.subtext)\n\t\t\t{\n\t\t\t\treturn this.subtext;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tisEmptyRecent(): boolean\n\t\t{\n\t\t\treturn LegacyRecentService.getInstance().getCollection().length === 0;\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\tif (Type.isStringFilled(this.backgroundId) || Type.isNumber(this.backgroundId))\n\t\t\t{\n\t\t\t\treturn ThemeManager.getBackgroundStyleById(this.backgroundId);\n\t\t\t}\n\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat-start__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-chat-start__content\">\n\t\t\t\t<div class=\"bx-im-content-chat-start__icon\" :class=\"iconClass\"></div>\n\t\t\t\t<div class=\"bx-im-content-chat-start__title\">\n\t\t\t\t\t{{ preparedText }}\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"preparedSubtext\" class=\"bx-im-content-chat-start__subtitle\">\n\t\t\t\t\t{{ preparedSubtext }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { BaseEmptyState } from './base';\n\n// @vue/component\nexport const ChannelEmptyState = {\n\tname: 'ChannelEmptyState',\n\tcomponents: { BaseEmptyState },\n\tcomputed:\n\t{\n\t\ttext(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_CHANNEL_START_MESSAGE_V3');\n\t\t},\n\t\tsubtext(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_CHANNEL_START_MESSAGE_SUBTITLE');\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseEmptyState :text=\"text\" :subtext=\"subtext\" />\n\t`,\n};\n","import { Loc } from 'main.core';\n\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { PromoId } from 'im.v2.const';\nimport { PromoManager } from 'im.v2.lib.promo';\n\nimport 'im.v2.lib.invite';\n\nimport './css/embedded-promo.css';\n\nconst SHOWCASE_TOOLS_PHRASES = [\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_CHATS'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_CALLS'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_CHANNELS'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_DOCS'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_TASKS'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_CALENDAR'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_FILES'),\n\tLoc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TOOL_BOARDS'),\n];\n\n// @vue/component\nexport const EmbeddedChatPromoEmptyState = {\n\tname: 'EmbeddedChatPromoEmptyState',\n\tcomputed: {\n\t\tSHOWCASE_TOOLS_PHRASES: () => SHOWCASE_TOOLS_PHRASES,\n\t\tcanInviteUsers(): boolean\n\t\t{\n\t\t\treturn FeatureManager.isFeatureAvailable(Feature.intranetInviteAvailable);\n\t\t},\n\t\tpreparedTitle(): string\n\t\t{\n\t\t\treturn Loc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_TITLE', {\n\t\t\t\t'[color]': '<span class=\"bx-im-embedded-promo-start__title-highlight\">',\n\t\t\t\t'[/color]': '</span>',\n\t\t\t});\n\t\t},\n\t\tpreparedInviteText(): string\n\t\t{\n\t\t\tconst openInviteSliderHandler = 'BX.Messenger.v2.Lib.InviteManager.openInviteSlider()';\n\n\t\t\treturn Loc.getMessage('IM_CONTENT_EMBEDDED_CHAT_START_FEATURE_INVITE_MSGVER_2', {\n\t\t\t\t'[action]': `<span class=\"bx-im-embedded-promo-start__invite-action\" onclick=\"${openInviteSliderHandler}\">`,\n\t\t\t\t'[/action]': '</span>',\n\t\t\t});\n\t\t},\n\t},\n\tmounted(): void\n\t{\n\t\tvoid PromoManager.getInstance().markAsWatched(PromoId.embeddedChatEmptyState);\n\t},\n\tmethods: {\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-embedded-promo-start__container\">\n\t\t\t<div class=\"bx-im-embedded-promo-start__title\" v-html=\"preparedTitle\"></div>\n\t\t\t<div class=\"bx-im-embedded-promo-start__tools\">\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"tool in SHOWCASE_TOOLS_PHRASES\"\n\t\t\t\t\t:key=\"tool\"\n\t\t\t\t\tclass=\"bx-im-embedded-promo-start__tools_item\"\n\t\t\t\t>{{ tool }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-embedded-promo-start__content\">\n\t\t\t\t<div class=\"bx-im-embedded-promo-start__features\">\n\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__features_content\">\n\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_item\">\n\t\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_icon --people\"></div>\n\t\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_text\">{{ loc('IM_CONTENT_EMBEDDED_CHAT_START_FEATURE_EASE') }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_item\">\n\t\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_icon --shield\"></div>\n\t\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_text\">{{ loc('IM_CONTENT_EMBEDDED_CHAT_START_FEATURE_SAFETY') }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_item\">\n\t\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_icon --ai\"></div>\n\t\t\t\t\t\t\t<div class=\"bx-im-embedded-promo-start__feature_text\">{{ loc('IM_CONTENT_EMBEDDED_CHAT_START_FEATURE_AI') }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if=\"canInviteUsers\" v-html=\"preparedInviteText\" class=\"bx-im-embedded-promo-start__invite_item\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-embedded-promo-start__image\"></div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Analytics } from 'im.v2.lib.analytics';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { InviteManager } from 'im.v2.lib.invite';\n\nimport './css/embedded.css';\n\n// @vue/component\nexport const EmbeddedChatEmptyState = {\n\tname: 'EmbeddedChatEmptyState',\n\tcomputed: {\n\t\tcanInviteUsers(): boolean\n\t\t{\n\t\t\treturn FeatureManager.isFeatureAvailable(Feature.intranetInviteAvailable);\n\t\t},\n\t},\n\tmethods: {\n\t\tonInviteActionClick(): void\n\t\t{\n\t\t\tconst analyticsContext = Analytics.getInstance().sliderInvite.getEmptyStateContext();\n\t\t\tInviteManager.openInviteSlider(analyticsContext);\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-embedded-chat-start__container\">\n\t\t\t<div class=\"bx-im-embedded-chat-start__image\"></div>\n\t\t\t<div class=\"bx-im-embedded-chat-start__title\">\n\t\t\t\t{{ loc('IM_CONTENT_EMBEDDED_CHAT_START_FEATURE_SUBTITLE') }}\n\t\t\t</div>\n\t\t\t<template v-if=\"canInviteUsers\">\n\t\t\t\t<div class=\"bx-im-embedded-chat-start__separator_text\">\n\t\t\t\t\t{{ loc('IM_CONTENT_EMBEDDED_CHAT_START_SEPARATOR_TEXT') }}\n\t\t\t\t</div>\n\t\t\t\t<div @click=\"onInviteActionClick\" class=\"bx-im-embedded-chat-start__invite\">\n\t\t\t\t\t{{ loc('IM_CONTENT_EMBEDDED_CHAT_START_INVITE_ACTION') }}\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</div>\n\t`,\n};\n","// @vue/component\nexport const FeatureBlock = {\n\tname: 'FeatureBlock',\n\tprops:\n\t{\n\t\tname: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tsubtitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-collab-start__block\">\n\t\t\t<div class=\"bx-im-content-collab-start__block_icon\" :class=\"'--' + name\"></div>\n\t\t\t<div class=\"bx-im-content-collab-start__block_content\">\n\t\t\t\t<div class=\"bx-im-content-collab-start__block_title\">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-content-collab-start__block_subtitle\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\n\nimport { Messenger } from 'im.public';\nimport { Color, ActionByUserType, UserType } from 'im.v2.const';\nimport { ChatButton, ButtonSize, type CustomColorScheme } from 'im.v2.component.elements.button';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { CreatableChat } from 'im.v2.component.content.chat-forms.forms';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { ThemeManager, SpecialBackground } from 'im.v2.lib.theme';\n\nimport { FeatureBlock } from './components/feature-block';\n\nimport './css/collab.css';\n\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\n// @vue/component\nexport const CollabEmptyState = {\n\tname: 'CollabEmptyState',\n\tcomponents: { FeatureBlock, ChatButton },\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tcanCreateCollab(): boolean\n\t\t{\n\t\t\tconst isAvailable = FeatureManager.isFeatureAvailable(Feature.collabCreationAvailable);\n\t\t\tconst canCreate = PermissionManager.getInstance().canPerformActionByUserType(ActionByUserType.createCollab);\n\n\t\t\treturn isAvailable && canCreate;\n\t\t},\n\t\tcreateButtonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tborderColor: Color.transparent,\n\t\t\t\tbackgroundColor: Color.white,\n\t\t\t\ticonColor: Color.gray90,\n\t\t\t\ttextColor: Color.gray90,\n\t\t\t\thoverColor: Color.white,\n\t\t\t\ttextHoverColor: Color.collab70,\n\t\t\t};\n\t\t},\n\t\tisCurrentUserCollaber(): boolean\n\t\t{\n\t\t\tconst currentUser = this.$store.getters['users/get'](Core.getUserId(), true);\n\n\t\t\treturn currentUser.type === UserType.collaber;\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(SpecialBackground.collab);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonCreateClick()\n\t\t{\n\t\t\tAnalytics.getInstance().chatCreate.onCollabEmptyStateCreateClick();\n\t\t\tMessenger.openChatCreation(CreatableChat.collab);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-collab-start__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-collab-start__content\">\n\t\t\t\t<div class=\"bx-im-content-collab-start__image\"></div>\n\t\t\t\t<div class=\"bx-im-content-collab-start__title\">\n\t\t\t\t\t{{ loc('IM_CONTENT_COLLAB_START_TITLE_V2') }}\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"isCurrentUserCollaber\" class=\"bx-im-content-collab-start__blocks\">\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_COLLABER_TITLE_1')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_1')\"\n\t\t\t\t\t\tname=\"collaboration\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_COLLABER_TITLE_2')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_COLLABER_SUBTITLE_2')\"\n\t\t\t\t\t\tname=\"business\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_3')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_3')\"\n\t\t\t\t\t\tname=\"result\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-else class=\"bx-im-content-collab-start__blocks\">\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_1')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_1')\"\n\t\t\t\t\t\tname=\"collaboration\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_2')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_2')\"\n\t\t\t\t\t\tname=\"business\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_3')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_3')\"\n\t\t\t\t\t\tname=\"result\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ChatButton\n\t\t\t\t\tv-if=\"canCreateCollab\"\n\t\t\t\t\t:size=\"ButtonSize.XXL\"\n\t\t\t\t\t:customColorScheme=\"createButtonColorScheme\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_COLLAB_START_CREATE_BUTTON')\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t@click=\"onCreateClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Messenger } from 'im.public';\nimport { CopilotRolesDialog } from 'im.v2.component.elements.copilot-roles-dialog';\nimport { ChatButton, ButtonSize, type CustomColorScheme } from 'im.v2.component.elements.button';\nimport { Color } from 'im.v2.const';\nimport { SpecialBackground, ThemeManager } from 'im.v2.lib.theme';\nimport { CopilotService } from 'im.v2.provider.service.copilot';\n\nimport './css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\nconst BUTTON_BACKGROUND_COLOR = '#fff';\nconst BUTTON_HOVER_COLOR = '#eee';\nconst BUTTON_TEXT_COLOR = 'rgba(82, 92, 105, 0.9)';\n\n// @vue/component\nexport const CopilotEmptyState = {\n\tname: 'CopilotEmptyState',\n\tcomponents: { ChatButton, CopilotRolesDialog },\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisCreatingChat: false,\n\t\t\tshowRolesDialog: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(SpecialBackground.copilot);\n\t\t},\n\t\tpreparedText(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_COPILOT_EMPTY_STATE_MESSAGE_MSGVER_1', {\n\t\t\t\t'#BR#': '\\n',\n\t\t\t});\n\t\t},\n\t\tbuttonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tborderColor: Color.transparent,\n\t\t\t\tbackgroundColor: BUTTON_BACKGROUND_COLOR,\n\t\t\t\ticonColor: BUTTON_TEXT_COLOR,\n\t\t\t\ttextColor: BUTTON_TEXT_COLOR,\n\t\t\t\thoverColor: BUTTON_HOVER_COLOR,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonCreateChatClick()\n\t\t{\n\t\t\tthis.showRolesDialog = true;\n\t\t},\n\t\tasync createChat(role): Promise<void>\n\t\t{\n\t\t\tconst roleCode = role.code;\n\t\t\tthis.isCreatingChat = true;\n\t\t\tthis.showRolesDialog = false;\n\n\t\t\tconst newDialogId = await this.getCopilotService().createChat({ roleCode })\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.isCreatingChat = false;\n\t\t\t\t});\n\n\t\t\tthis.isCreatingChat = false;\n\t\t\tvoid Messenger.openCopilot(newDialogId);\n\t\t},\n\t\tgetCopilotService(): CopilotService\n\t\t{\n\t\t\tif (!this.copilotService)\n\t\t\t{\n\t\t\t\tthis.copilotService = new CopilotService();\n\t\t\t}\n\n\t\t\treturn this.copilotService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-copilot-empty-state__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-copilot-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-content-copilot-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-content-copilot-empty-state__text\">{{ preparedText }}</div>\n\t\t\t\t<ChatButton\n\t\t\t\t\tclass=\"--black-loader\"\n\t\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t\t:customColorScheme=\"buttonColorScheme\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_COPILOT_EMPTY_STATE_ASK_QUESTION')\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:isLoading=\"isCreatingChat\"\n\t\t\t\t\t@click=\"onCreateChatClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<CopilotRolesDialog \n\t\t\t\tv-if=\"showRolesDialog\"\n\t\t\t\t@selectRole=\"createChat\"\n\t\t\t\t@close=\"showRolesDialog = false\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Messenger } from 'im.public';\nimport { ChatButton, ButtonSize, type CustomColorScheme } from 'im.v2.component.elements.button';\nimport { Color } from 'im.v2.const';\nimport { SpecialBackground, ThemeManager } from 'im.v2.lib.theme';\nimport { AiAssistantService } from 'im.v2.provider.service.ai-assistant';\n\nimport './css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\nconst BUTTON_BACKGROUND_COLOR = '#fff';\nconst BUTTON_HOVER_COLOR = '#eee';\nconst BUTTON_TEXT_COLOR = 'rgba(82, 92, 105, 0.9)';\n\n// @vue/component\nexport const AiAssistantEmptyState = {\n\tname: 'AiAssistantEmptyState',\n\tcomponents: { ChatButton },\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisCreatingChat: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\tButtonSize: () => ButtonSize,\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(SpecialBackground.copilot);\n\t\t},\n\t\tpreparedText(): string\n\t\t{\n\t\t\treturn 'Marta AI empty state';\n\n\t\t\t// return this.loc('IM_CONTENT_COPILOT_EMPTY_STATE_MESSAGE_MSGVER_1', {\n\t\t\t// \t'#BR#': '\\n',\n\t\t\t// });\n\t\t},\n\t\tbuttonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tborderColor: Color.transparent,\n\t\t\t\tbackgroundColor: BUTTON_BACKGROUND_COLOR,\n\t\t\t\ticonColor: BUTTON_TEXT_COLOR,\n\t\t\t\ttextColor: BUTTON_TEXT_COLOR,\n\t\t\t\thoverColor: BUTTON_HOVER_COLOR,\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onCreateChatClick(): Promise<void>\n\t\t{\n\t\t\tthis.isCreatingChat = true;\n\n\t\t\tconst newDialogId = await this.getAiAssistantService().createChat()\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.isCreatingChat = false;\n\t\t\t\t});\n\n\t\t\tthis.isCreatingChat = false;\n\t\t\tvoid Messenger.openCopilot(newDialogId);\n\t\t},\n\t\tgetAiAssistantService(): AiAssistantService\n\t\t{\n\t\t\tif (!this.aiAssistantService)\n\t\t\t{\n\t\t\t\tthis.aiAssistantService = new AiAssistantService();\n\t\t\t}\n\n\t\t\treturn this.aiAssistantService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-ai-assistant-empty-state__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-ai-assistant-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-content-ai-assistant-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-content-ai-assistant-empty-state__text\">\n\t\t\t\t\t{{ preparedText }}\n\t\t\t\t</div>\n\t\t\t\t<ChatButton\n\t\t\t\t\tclass=\"--black-loader\"\n\t\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t\t:customColorScheme=\"buttonColorScheme\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_COPILOT_EMPTY_STATE_ASK_QUESTION')\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:isLoading=\"isCreatingChat\"\n\t\t\t\t\t@click=\"onCreateChatClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Type, type JsonObject } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\ntype RawUser = {\n\tid: number,\n\t[key: string]: any,\n};\ntype PullUserActivityResult = {\n\t[userId: string]: number,\n};\n\nexport class UserService\n{\n\tasync updateLastActivityDate(userId: number): void\n\t{\n\t\tif (this.#isPullServerWithUserStatusSupport())\n\t\t{\n\t\t\tconst lastActivityDate = await this.#getUserActivityFromPull(userId);\n\t\t\tif (!lastActivityDate)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#updateUserModel(userId, { lastActivityDate });\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst userData = await this.#requestUserData(userId);\n\n\t\tthis.#updateUserModel(userId, userData);\n\t}\n\n\tasync #getUserActivityFromPull(userId: number): Promise<null | Date>\n\t{\n\t\tconst result: PullUserActivityResult = await Core.getPullClient().getUsersLastSeen([userId])\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('UserService: error getting user activity from P&P', error);\n\t\t\t\tthrow error;\n\t\t\t});\n\n\t\tif (!Type.isNumber(result[userId]))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activityDateAgo = result[userId] * 1000;\n\n\t\treturn new Date(Date.now() - activityDateAgo);\n\t}\n\n\tasync #requestUserData(userId: number): Promise<RawUser>\n\t{\n\t\tLogger.warn(`UserService: get actual user data for - ${userId}`);\n\t\tconst answer = await Core.getRestClient().callMethod(RestMethod.imUserGet, { ID: userId })\n\t\t\t.catch((result: RestResult) => {\n\t\t\t\tconsole.error('UserService: error getting user data', result.error());\n\t\t\t});\n\n\t\treturn answer.data();\n\t}\n\n\tasync #updateUserModel(userId: number, userFields: JsonObject): void\n\t{\n\t\tLogger.warn('UserService: update user data', userFields);\n\n\t\tvoid Core.getStore().dispatch('users/update', {\n\t\t\tid: userId,\n\t\t\tfields: userFields,\n\t\t});\n\t}\n\n\t#isPullServerWithUserStatusSupport(): boolean\n\t{\n\t\treturn Core.getPullClient().isJsonRpc();\n\t}\n}\n","import 'ui.notification';\n\nimport { Messenger } from 'im.public';\nimport { ChatType, Layout, UserRole, ErrorCode, PromoId } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { PromoManager } from 'im.v2.lib.promo';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { ChatService } from 'im.v2.provider.service.chat';\nimport { BaseChatContent } from 'im.v2.component.content.elements';\nimport { Core } from 'im.v2.application.core';\n\nimport { ChannelContent } from '../../content/channel/channel';\nimport { CollabContent } from '../../content/collab/collab';\nimport { MultidialogContent } from '../../content/multidialog/multidialog';\nimport { NotesContent } from '../../content/notes/notes-content';\nimport { CopilotContent } from '../../content/copilot/copilot';\nimport { AiAssistantContent } from '../../content/ai-assistant/ai-assistant';\nimport { BaseEmptyState as EmptyState } from './components/empty-state/base';\nimport { ChannelEmptyState } from './components/empty-state/channel';\nimport { EmbeddedChatPromoEmptyState } from './components/empty-state/chat/embedded-promo';\nimport { EmbeddedChatEmptyState } from './components/empty-state/chat/embedded';\nimport { CollabEmptyState } from './components/empty-state/collab/collab';\nimport { CopilotEmptyState } from './components/empty-state/copilot/copilot';\nimport { AiAssistantEmptyState } from './components/empty-state/ai-assistant/ai-assistant';\nimport { UserService } from './classes/user-service';\n\nimport './css/default-chat-content.css';\n\nimport type { BitrixVueComponentProps } from 'ui.vue3';\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\n\ntype ContentComponentConfigItem = {\n\tcondition: boolean,\n\tcomponent: BitrixVueComponentProps\n};\n\n// @vue/component\nexport const ChatOpener = {\n\tname: 'ChatOpener',\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tisChannel(): boolean\n\t\t{\n\t\t\treturn ChannelManager.isChannel(this.dialogId);\n\t\t},\n\t\tisCollab(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.collab;\n\t\t},\n\t\tisMultidialog(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['sidebar/multidialog/isSupport'](this.dialogId);\n\t\t},\n\t\tisNotes(): boolean\n\t\t{\n\t\t\treturn Number.parseInt(this.dialogId, 10) === Core.getUserId();\n\t\t},\n\t\tisCopilot(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.copilot;\n\t\t},\n\t\tisAiAssistant(): boolean\n\t\t{\n\t\t\tconst isAiAssistantBot = this.$store.getters['users/bots/isAiAssistant'](this.dialogId);\n\t\t\tconst isAiAssistantChat = [ChatType.aiAssistant, ChatType.aiAssistantEntity].includes(this.dialog.type);\n\n\t\t\treturn isAiAssistantBot || isAiAssistantChat;\n\t\t},\n\t\tisGuest(): boolean\n\t\t{\n\t\t\treturn this.dialog.role === UserRole.guest;\n\t\t},\n\t\tcontentComponentConfig(): ContentComponentConfigItem[]\n\t\t{\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tcondition: this.isChannel,\n\t\t\t\t\tcomponent: ChannelContent,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcondition: this.isCollab,\n\t\t\t\t\tcomponent: CollabContent,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcondition: this.isMultidialog,\n\t\t\t\t\tcomponent: MultidialogContent,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcondition: this.isNotes,\n\t\t\t\t\tcomponent: NotesContent,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcondition: this.isCopilot,\n\t\t\t\t\tcomponent: CopilotContent,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcondition: this.isAiAssistant,\n\t\t\t\t\tcomponent: AiAssistantContent,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tcontentComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\tconst matchingItem: ContentComponentConfigItem = this.contentComponentConfig.find((item) => {\n\t\t\t\treturn item.condition === true;\n\t\t\t});\n\n\t\t\treturn matchingItem ? matchingItem.component : BaseChatContent;\n\t\t},\n\t\temptyStateComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\tconst EmptyStateComponentByLayout = {\n\t\t\t\t[Layout.channel]: ChannelEmptyState,\n\t\t\t\t[Layout.collab]: CollabEmptyState,\n\t\t\t\t[Layout.aiAssistant]: this.aiEmptyStateComponent,\n\t\t\t\t[Layout.chat]: this.chatEmptyStateComponent,\n\t\t\t\tdefault: EmptyState,\n\t\t\t};\n\n\t\t\treturn EmptyStateComponentByLayout[this.layout.name] ?? EmptyStateComponentByLayout.default;\n\t\t},\n\t\tchatEmptyStateComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\tconst isEmbeddedMode = LayoutManager.getInstance().isEmbeddedMode();\n\t\t\tconst needToShowPromoEmptyState = PromoManager.getInstance().needToShow(PromoId.embeddedChatEmptyState);\n\n\t\t\tif (!isEmbeddedMode)\n\t\t\t{\n\t\t\t\treturn EmptyState;\n\t\t\t}\n\n\t\t\treturn needToShowPromoEmptyState ? EmbeddedChatPromoEmptyState : EmbeddedChatEmptyState;\n\t\t},\n\t\taiEmptyStateComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\tif (!FeatureManager.isFeatureAvailable(Feature.aiAssistantChatAvailable))\n\t\t\t{\n\t\t\t\treturn CopilotEmptyState;\n\t\t\t}\n\n\t\t\treturn AiAssistantEmptyState;\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tdialogId(newValue, oldValue)\n\t\t{\n\t\t\tLogger.warn(`ChatContent: switching from ${oldValue || 'empty'} to ${newValue}`);\n\t\t\tthis.onChatChange();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tif (!this.dialogId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChatChange();\n\t},\n\tmethods:\n\t{\n\t\tasync onChatChange(): void\n\t\t{\n\t\t\tif (this.dialogId === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.dialog.isExternalId(this.dialogId))\n\t\t\t{\n\t\t\t\tconst realDialogId = await this.getChatService().prepareDialogId(this.dialogId);\n\n\t\t\t\tvoid LayoutManager.getInstance().setLayout({\n\t\t\t\t\tname: Layout.chat,\n\t\t\t\t\tentityId: realDialogId,\n\t\t\t\t\tcontextId: this.layout.contextId,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.inited)\n\t\t\t{\n\t\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is already loaded`);\n\t\t\t\tif (this.isUser)\n\t\t\t\t{\n\t\t\t\t\tconst userId = parseInt(this.dialog.dialogId, 10);\n\t\t\t\t\tthis.getUserService().updateLastActivityDate(userId);\n\t\t\t\t}\n\t\t\t\telse if (this.isChannel && !this.isGuest)\n\t\t\t\t{\n\t\t\t\t\tLogger.warn(`ChatContent: channel ${this.dialogId} is loaded, loading comments metadata`);\n\t\t\t\t\tvoid this.getChatService().loadCommentInfo(this.dialogId);\n\t\t\t\t}\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.loading)\n\t\t\t{\n\t\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loading`);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.layout.contextId)\n\t\t\t{\n\t\t\t\tawait this.loadChatWithContext();\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChatWithContext(): Promise\n\t\t{\n\t\t\tLogger.warn(`ChatContent: loading chat ${this.dialogId} with context - ${this.layout.contextId}`);\n\n\t\t\tawait this.getChatService().loadChatWithContext(this.dialogId, this.layout.contextId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.sendAnalytics(error);\n\t\t\t\t\tMessenger.openChat();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loaded with context of ${this.layout.contextId}`);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`ChatContent: loading chat ${this.dialogId}`);\n\n\t\t\tawait this.getChatService().loadChatWithMessages(this.dialogId)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tMessenger.openChat();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loaded`);\n\t\t},\n\t\tsendAnalytics(error: Error)\n\t\t{\n\t\t\tif (error.code !== ErrorCode.message.notFound)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAnalytics.getInstance().messageDelete.onNotFoundNotification({ dialogId: this.dialogId });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tgetUserService(): UserService\n\t\t{\n\t\t\tif (!this.userService)\n\t\t\t{\n\t\t\t\tthis.userService = new UserService();\n\t\t\t}\n\n\t\t\treturn this.userService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-default-chat__container\">\n\t\t\t<component :is=\"emptyStateComponent\" v-if=\"!dialogId\" />\n\t\t\t<component :is=\"contentComponent\" v-else :dialogId=\"dialogId\" />\n\t\t</div>\n\t`,\n};\n","import { Toggle, ToggleSize } from 'im.v2.component.elements.toggle';\nimport { CommentsService } from 'im.v2.provider.service.comments';\n\nimport '../css/follow-toggle.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const SubscribeToggle = {\n\tname: 'SubscribeToggle',\n\tcomponents: { Toggle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tToggleSize: () => ToggleSize,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tpostMessageId(): ?number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tisSubscribed(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/isUserSubscribed'](this.postMessageId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonToggleClick(): void\n\t\t{\n\t\t\tif (this.isSubscribed)\n\t\t\t{\n\t\t\t\tCommentsService.unsubscribe(this.postMessageId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tCommentsService.subscribe(this.postMessageId);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div @click=\"onToggleClick\" class=\"bx-im-comments-header-follow__container\">\n\t\t\t<div class=\"bx-im-comments-header-follow__text\">{{ loc('IM_CONTENT_COMMENTS_FOLLOW_TOGGLE_TEXT') }}</div>\n\t\t\t<Toggle :size=\"ToggleSize.M\" :isEnabled=\"isSubscribed\" />\n\t\t</div>\n\t`,\n};\n","import { EventEmitter } from 'main.core.events';\n\nimport { EventType, ActionByRole } from 'im.v2.const';\nimport { AvatarSize, ChatAvatar } from 'im.v2.component.elements.avatar';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { ChatHeader } from 'im.v2.component.content.elements';\n\nimport { SubscribeToggle } from './subscribe-toggle';\n\nimport '../css/header.css';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsHeader = {\n\tname: 'CommentsHeader',\n\tcomponents: { ChatHeader, ChatAvatar, SubscribeToggle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tchannel(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.channelId, true);\n\t\t},\n\t\tshowSubscribeToggle(): boolean\n\t\t{\n\t\t\treturn PermissionManager.getInstance().canPerformActionByRole(ActionByRole.subscribeToComments, this.dialogId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonBackClick()\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\tclass=\"bx-im-comment-header__container\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div @click=\"onBackClick\" class=\"bx-im-comment-header__back\"></div>\n\t\t\t\t<div class=\"bx-im-comment-header__info\">\n\t\t\t\t\t<div class=\"bx-im-comment-header__title\">{{ loc('IM_CONTENT_COMMENTS_HEADER_TITLE') }}</div>\n\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle\">\n\t\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle_avatar\">\n\t\t\t\t\t\t\t<ChatAvatar :avatarDialogId=\"channelId\" :contextDialogId=\"channelId\" :size=\"AvatarSize.XS\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle_text\">{{ channel.name }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if=\"showSubscribeToggle\" #before-actions>\n\t\t\t\t<SubscribeToggle :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\nimport '../css/dialog-loader.css';\n\n// @vue/component\nexport const CommentsDialogLoader = {\n\tname: 'CommentsDialogLoader',\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-comments-dialog-loader__container\">\n\t\t\t<div class=\"bx-im-comments-dialog-loader__spinner\"></div>\n\t\t</div>\n\t`,\n};\n","import {\n\tMessageList,\n\tAuthorGroup,\n\tMessageComponents,\n\tCollectionManager,\n} from 'im.v2.component.message-list';\nimport { MessageComponentManager } from 'im.v2.lib.message-component';\nimport { MessageComponent } from 'im.v2.const';\n\nimport { CommentsDialogLoader } from './dialog-loader';\n\nimport '../css/message-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsMessageList = {\n\tname: 'CommentsMessageList',\n\tcomponents: { MessageList, CommentsDialogLoader, AuthorGroup, ...MessageComponents },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tshowPostMessage(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited && !this.dialog.hasPrevPage;\n\t\t},\n\t\tpostMessageId(): number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tpostMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.postMessageId);\n\t\t},\n\t\tpostAuthorGroup(): JsonObject | null\n\t\t{\n\t\t\tif (!this.dialog.inited)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst collectionManager = new CollectionManager(this.dialogId);\n\n\t\t\treturn collectionManager.formatAuthorGroup(this.postMessage);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonPostMessageMouseUp(message: ImModelMessage, event: MouseEvent)\n\t\t{\n\t\t\tthis.$refs.messageList.onMessageMouseUp(message, event);\n\t\t},\n\t\tgetMessageComponentName(message: ImModelMessage): $Values<typeof MessageComponent>\n\t\t{\n\t\t\treturn (new MessageComponentManager(message)).getName();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessageList\n\t\t\t:dialogId=\"dialogId\"\n\t\t\tref=\"messageList\"\n\t\t>\n\t\t\t<template #loader>\n\t\t\t\t<CommentsDialogLoader />\n\t\t\t</template>\n\t\t\t<template v-if=\"showPostMessage\" #before-messages>\n\t\t\t\t<div class=\"bx-im-comments-message-list__channel-post\">\n\t\t\t\t\t<AuthorGroup :item=\"postAuthorGroup\" :contextDialogId=\"dialogId\" :withAvatarMenu=\"false\">\n\t\t\t\t\t\t<template #message>\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t:is=\"getMessageComponentName(postMessage)\"\n\t\t\t\t\t\t\t\t:item=\"postMessage\"\n\t\t\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t\t\t:key=\"postMessage.id\"\n\t\t\t\t\t\t\t\t@mouseup=\"onPostMessageMouseUp(postMessage, $event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</AuthorGroup>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</MessageList>\n\t`,\n};\n","import { Logger } from 'im.v2.lib.logger';\nimport { ImModelMessage } from 'im.v2.model';\n\nimport { ChatDialog, PinnedMessages } from 'im.v2.component.dialog.chat';\n\nimport { CommentsMessageList } from './message-list';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsDialog = {\n\tname: 'CommentsDialog',\n\tcomponents: { ChatDialog, CommentsMessageList, PinnedMessages },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tpostMessageId(): number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tpostMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.postMessageId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tasync goToPostMessageContext()\n\t\t{\n\t\t\tconst dialog = this.$refs.dialog;\n\n\t\t\tconst postMessageIsShown = this.dialogInited && !this.dialog.hasPrevPage;\n\t\t\tif (postMessageIsShown)\n\t\t\t{\n\t\t\t\tawait dialog.getScrollManager().animatedScrollToMessage(this.postMessageId);\n\t\t\t\tdialog.highlightMessage(this.postMessageId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdialog.showLoadingBar();\n\t\t\tawait dialog.getMessageService().loadFirstPage();\n\t\t\tawait this.$nextTick();\n\t\t\tdialog.hideLoadingBar();\n\t\t\tdialog.getScrollManager().scrollToMessage(this.postMessageId);\n\t\t\tawait this.$nextTick();\n\t\t\tdialog.highlightMessage(this.postMessageId);\n\t\t},\n\t\tonPinnedPostMessageClick()\n\t\t{\n\t\t\tthis.goToPostMessageContext();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog ref=\"dialog\" :dialogId=\"dialogId\" :saveScrollOnExit=\"false\" :resetOnExit=\"true\">\n\t\t\t<template v-if=\"dialogInited\" #pinned-panel>\n\t\t\t\t<PinnedMessages\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t:messages=\"[postMessage]\"\n\t\t\t\t\t@messageClick=\"onPinnedPostMessageClick\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<template #message-list>\n\t\t\t\t<CommentsMessageList :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatDialog>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const CommentsTextarea = {\n\tname: 'CommentsTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withAudioInput=\"false\"\n\t\t\tclass=\"bx-im-comments-send-panel__container\"\n\t\t/>\n\t`,\n};\n","import { ChatButton, ButtonColor, ButtonSize } from 'im.v2.component.elements.button';\nimport { ChatService } from 'im.v2.provider.service.chat';\n\n// @vue/component\nexport const JoinPanel = {\n\tcomponents: { ChatButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick()\n\t\t{\n\t\t\tthis.getChatService().joinChat(this.dialogId);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat__textarea_placeholder\">\n\t\t\t<ChatButton\n\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t:text=\"loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHANNEL_V2')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onButtonClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CommentsHeader } from './components/header';\nimport { CommentsDialog } from './components/dialog';\nimport { CommentsTextarea } from './components/textarea';\nimport { JoinPanel } from './components/join-panel';\n\nimport './css/comments-content.css';\n\nexport const CommentsContent = {\n\tname: 'CommentsContent',\n\tcomponents: { BaseChatContent, CommentsHeader, CommentsDialog, CommentsTextarea, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CommentsHeader :dialogId=\"dialogId\" :channelId=\"channelId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #dialog>\n\t\t\t\t<CommentsDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanel :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<CommentsTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Analytics } from 'im.v2.lib.analytics';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatService } from 'im.v2.provider.service.chat';\n\nimport { CommentsContent } from '../../content/comments/comments';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelCommentInfo } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsOpener = {\n\tname: 'CommentsOpener',\n\tcomponents: { CommentsContent },\n\tprops:\n\t{\n\t\tpostId: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ?ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/getByChatId'](this.commentsChatId);\n\t\t},\n\t\tcommentInfo(): ImModelCommentInfo\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getByMessageId'](this.postId);\n\t\t},\n\t\tcommentsChatId(): number\n\t\t{\n\t\t\treturn this.commentInfo.chatId;\n\t\t},\n\t\tcommentsDialogId(): string\n\t\t{\n\t\t\tif (!this.dialog)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn this.dialog.dialogId;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.onCreated();\n\t},\n\tmethods:\n\t{\n\t\tasync onCreated()\n\t\t{\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`CommentsContent: loading comments for post ${this.postId}`);\n\n\t\t\tawait this.getChatService().loadComments(this.postId)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$emit('close');\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CommentsContent: comments for post ${this.postId} are loaded`);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-comments__container\">\n\t\t\t<CommentsContent :dialogId=\"commentsDialogId\" :channelId=\"channelId\" />\n\t\t</div>\n\t`,\n};\n","import { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nimport { ChatOpener } from './components/openers/chat/chat';\nimport { CommentsOpener } from './components/openers/comments/comments';\n\nimport './css/chat-content.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChatContent = {\n\tname: 'ChatContent',\n\tcomponents: { ChatOpener, CommentsOpener },\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tcommentsPostId: 0,\n\t\t\tcommentsAnimationFlag: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tshowComments(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/areOpened'];\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tlayout()\n\t\t{\n\t\t\tthis.closeComments();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tEventEmitter.subscribe(EventType.dialog.openComments, this.onOpenComments);\n\t\tEventEmitter.subscribe(EventType.dialog.closeComments, this.onCloseComments);\n\t},\n\tbeforeUnmount()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.dialog.openComments, this.onOpenComments);\n\t\tEventEmitter.unsubscribe(EventType.dialog.closeComments, this.onCloseComments);\n\t},\n\tmethods:\n\t{\n\t\tonOpenComments(event: BaseEvent<{ messageId: number }>)\n\t\t{\n\t\t\tconst { messageId } = event.getData();\n\t\t\tthis.commentsPostId = messageId;\n\t\t\tthis.commentsAnimationFlag = true;\n\t\t\tthis.$store.dispatch('messages/comments/setOpened', {\n\t\t\t\tchannelDialogId: this.entityId,\n\t\t\t\tcommentsPostId: this.commentsPostId,\n\t\t\t});\n\t\t},\n\t\tonCloseComments()\n\t\t{\n\t\t\tthis.closeComments();\n\t\t},\n\t\tcloseComments()\n\t\t{\n\t\t\tthis.commentsPostId = 0;\n\t\t\tthis.$store.dispatch('messages/comments/setClosed');\n\t\t},\n\t\tonCommentsAnimationEnd()\n\t\t{\n\t\t\tthis.commentsAnimationFlag = false;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatOpener :dialogId=\"entityId\" :class=\"{'--comments-show-animation': commentsAnimationFlag}\" />\n\t\t<Transition name=\"comments-content\" @after-enter=\"onCommentsAnimationEnd\">\n\t\t\t<CommentsOpener\n\t\t\t\tv-if=\"showComments\"\n\t\t\t\t:postId=\"commentsPostId\"\n\t\t\t\t:channelId=\"entityId\"\n\t\t\t/>\n\t\t</Transition>\n\t`,\n};\n"],"names":["CommentsButton","name","components","FloatButton","props","counter","type","Number","required","computed","floatButtonProps","icon","FloatButtonIcon","comment","color","FloatButtonColor","success","template","ChannelDialog","ChatDialog","dialogId","String","data","lastScrolledChatId","dialog","$store","getters","layout","isGuest","role","UserRole","guest","isChatLayout","Layout","chat","channelComments","chatId","totalChannelCommentsCounter","Object","values","forEach","commentCounter","showCommentsButton","beforeUnmount","readAllChannelComments","methods","onCommentsButtonClick","chatIdToJump","getNextChatIdToJump","messageIdToJump","$refs","goToMessageContext","position","ScrollManager","scrollPosition","messageBottom","goToMessageContextByCommentsChatId","showLoadingBar","messageId","getMessageService","loadContextByChatId","hideLoadingBar","console","error","$nextTick","getScrollManager","scrollToMessage","highlightMessage","commentChatIds","getCommentsChatIds","sort","a","z","filteredChatIds","filter","length","keys","map","CommentsService","JoinPanel","ChatButton","ButtonSize","ButtonColor","onButtonClick","getChatService","joinChat","chatService","ChatService","loc","phraseCode","$Bitrix","Loc","getMessage","ChannelTextarea","ChatTextarea","default","ChannelContent","BaseChatContent","CollabTitle","ChatTitle","LineLoader","FadeAnimation","inject","collabInfo","guestCounter","guestCount","userCounterText","getMessagePlural","userCounter","guestCounterText","onMembersClick","currentSidebarPanel","SidebarDetailBlock","members","EventEmitter","emit","EventType","sidebar","close","panel","open","IconKey","freeze","addToChat","collabEntities","CollabTooltipContent","constructor","params","title","text","iconKey","render","Tag","EntityCounter","preparedCounter","toString","EntityLink","compactMode","Boolean","url","showCounter","Type","isNull","onLinkClick","Analytics","getInstance","onClick","BX","SidePanel","Instance","cacheable","customLeftBoundary","EntitiesPanel","highlightMode","CollabEntityType","tasksInfo","entities","tasks","tasksUrl","tasksCounter","filesInfo","files","filesUrl","calendarInfo","calendar","calendarUrl","calendarCounter","mounted","initPromo","promoManager","PromoManager","promoId","PromoId","promoParams","needToShow","showCollabEntitiesPromo","tooltip","Tooltip","bindElement","content","renderTooltipContent","minWidth","popupOptions","offsetTop","offsetLeft","autoHide","closeIcon","closeIconSize","CloseIconSize","LARGE","events","onPopupShow","onPopupClose","show","markAsWatched","tooltipContent","PromoMessages","membersNotInvitedOneDayToCollab","membersNotInvitedFourDayToCollab","AddToChatButton","AddToCollab","withAnimation","emits","showAddToChatPopup","openAddToChatPopup","userAdd","onChatHeaderClick","closeAddToChatPopup","$emit","showMembersNotInvitedPromo","RING_COUNT","PulseAnimation","showPulse","rings","Array","from","CollabHeader","ChatHeader","AddToChatPopup","showAddToChatPopupDelayed","isInited","inited","watch","created","subscribe","header","onOpenAddToChatPopup","unsubscribe","onCompactModeChange","CollabContent","dialogInited","newValue","oldValue","collaberNotAcceptInvitationOneDay","showNotAcceptInvitationPromo","Notifier","collab","onCollaberNotAcceptInvitation","MultidialogChatTitle","EditableChatTitle","isSupportBot","subtitle","MultidialogHeader","MultidialogContent","NotesContent","titleType","parseInt","Core","getUserId","ChatTitleType","notes","POPUP_ID","AddToChatHint","MessengerPopup","config","darkMode","angle","width","className","contentBorderRadius","AddToChat","showInviteButton","showAddToChatHint","needCopilotInRecentTabHint","copilotInRecentTab","needAddUsersToChatHint","addUsersToCopilotChat","showHint","closeHint","onHintHide","CopilotChatHeader","ChatAvatar","buttonPanelReady","AvatarSize","isGroupCopilotChat","copilotRole","formattedUserCounter","onNewTitleSubmit","newTitle","renameChat","onButtonPanelReady","replacements","CopilotTextarea","CopilotContent","AiAssistantContent","BaseEmptyState","subtext","backgroundId","iconClass","isEmptyRecent","preparedText","preparedSubtext","LegacyRecentService","getCollection","backgroundStyle","isStringFilled","isNumber","ThemeManager","getBackgroundStyleById","getCurrentBackgroundStyle","ChannelEmptyState","SHOWCASE_TOOLS_PHRASES","EmbeddedChatPromoEmptyState","canInviteUsers","FeatureManager","isFeatureAvailable","Feature","intranetInviteAvailable","preparedTitle","preparedInviteText","openInviteSliderHandler","embeddedChatEmptyState","EmbeddedChatEmptyState","onInviteActionClick","analyticsContext","sliderInvite","getEmptyStateContext","InviteManager","openInviteSlider","FeatureBlock","CollabEmptyState","canCreateCollab","isAvailable","collabCreationAvailable","canCreate","PermissionManager","canPerformActionByUserType","ActionByUserType","createCollab","createButtonColorScheme","borderColor","Color","transparent","backgroundColor","white","iconColor","gray90","textColor","hoverColor","textHoverColor","collab70","isCurrentUserCollaber","currentUser","UserType","collaber","SpecialBackground","onCreateClick","chatCreate","onCollabEmptyStateCreateClick","Messenger","openChatCreation","CreatableChat","BUTTON_BACKGROUND_COLOR","BUTTON_HOVER_COLOR","BUTTON_TEXT_COLOR","CopilotEmptyState","CopilotRolesDialog","isCreatingChat","showRolesDialog","copilot","buttonColorScheme","onCreateChatClick","createChat","roleCode","code","newDialogId","getCopilotService","catch","openCopilot","copilotService","CopilotService","AiAssistantEmptyState","getAiAssistantService","aiAssistantService","AiAssistantService","UserService","updateLastActivityDate","userId","lastActivityDate","userData","result","getPullClient","getUsersLastSeen","activityDateAgo","Date","now","Logger","warn","answer","getRestClient","callMethod","RestMethod","imUserGet","ID","userFields","getStore","dispatch","id","fields","isJsonRpc","ChatOpener","isUser","ChatType","user","isChannel","ChannelManager","isCollab","isMultidialog","isNotes","isCopilot","isAiAssistant","isAiAssistantBot","isAiAssistantChat","aiAssistant","aiAssistantEntity","includes","contentComponentConfig","condition","component","contentComponent","matchingItem","find","item","emptyStateComponent","EmptyStateComponentByLayout","channel","aiEmptyStateComponent","chatEmptyStateComponent","EmptyState","isEmbeddedMode","LayoutManager","needToShowPromoEmptyState","aiAssistantChatAvailable","onChatChange","Utils","isExternalId","realDialogId","prepareDialogId","setLayout","entityId","contextId","getUserService","loadCommentInfo","onOpenChat","loading","loadChatWithContext","loadChat","sendAnalytics","openChat","loadChatWithMessages","ErrorCode","message","notFound","messageDelete","onNotFoundNotification","userService","SubscribeToggle","Toggle","ToggleSize","postMessageId","isSubscribed","onToggleClick","CommentsHeader","channelId","showSubscribeToggle","canPerformActionByRole","ActionByRole","subscribeToComments","onBackClick","closeComments","CommentsDialogLoader","CommentsMessageList","MessageList","AuthorGroup","MessageComponents","showPostMessage","hasPrevPage","postMessage","postAuthorGroup","collectionManager","CollectionManager","formatAuthorGroup","onPostMessageMouseUp","event","messageList","onMessageMouseUp","getMessageComponentName","MessageComponentManager","getName","CommentsDialog","PinnedMessages","goToPostMessageContext","postMessageIsShown","animatedScrollToMessage","loadFirstPage","onPinnedPostMessageClick","CommentsTextarea","CommentsContent","CommentsOpener","postId","commentsChatId","commentInfo","commentsDialogId","onCreated","loadComments","ChatContent","commentsPostId","commentsAnimationFlag","showComments","openComments","onOpenComments","onCloseComments","getData","channelDialogId","onCommentsAnimationEnd"],"mappings":";;;;;;;;CAEA;AACA,CAAO,MAAMA,cAAc,GAAG;GAC7BC,IAAI,EAAE,gBAAgB;GACtBC,UAAU,EAAE;kBACXC;IACA;GACDC,KAAK,EACL;KACCC,OAAO,EAAE;OACRC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCC,gBAAgB,GAChB;OACC,OAAO;SACNC,IAAI,EAAEC,2CAAe,CAACC,OAAO;SAC7BC,KAAK,EAAEC,4CAAgB,CAACC,OAAO;SAC/BX,OAAO,EAAE,IAAI,CAACA;QACd;;IAEF;GACDY,QAAQ,EAAG;;;CAGZ,CAAC;;CCpBD;AACA,CAAO,MAAMC,aAAa,GAAG;GAC5BjB,IAAI,EAAE,eAAe;GACrBC,UAAU,EAAE;iBAAEiB,sCAAU;KAAEnB;IAAgB;GAC1CI,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDc,IAAI,GACJ;KACC,OAAO;OACNC,kBAAkB,EAAE;MACpB;IACD;GACDd,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDO,MAAM,GACN;OACC,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC;MACnD;KACDE,OAAO,GACP;OACC,OAAO,IAAI,CAACJ,MAAM,CAACK,IAAI,KAAKC,oBAAQ,CAACC,KAAK;MAC1C;KACDC,YAAY,GACZ;OACC,OAAO,IAAI,CAACL,MAAM,CAAC1B,IAAI,KAAKgC,kBAAM,CAACC,IAAI;MACvC;KACDC,eAAe,GACf;OACC,OAAO,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC,6BAA6B,CAAC,CAAC,IAAI,CAACF,MAAM,CAACY,MAAM,CAAC;MAC7E;KACDC,2BAA2B,GAC3B;OACC,IAAIhC,OAAO,GAAG,CAAC;OACfiC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACJ,eAAe,CAAC,CAACK,OAAO,CAAEC,cAAc,IAAK;SAC/DpC,OAAO,IAAIoC,cAAc;QACzB,CAAC;OAEF,OAAOpC,OAAO;MACd;KACDqC,kBAAkB,GAClB;OACC,OAAO,IAAI,CAACV,YAAY,IAAI,IAAI,CAACK,2BAA2B,GAAG,CAAC;;IAEjE;GACDM,aAAa,GACb;KACC,IAAI,CAACC,sBAAsB,EAAE;IAC7B;GACDC,OAAO,EACP;KACC,MAAMC,qBAAqB,GAC3B;OACC,MAAMC,YAAY,GAAG,IAAI,CAACC,mBAAmB,EAAE;OAC/C,IAAI,CAACzB,kBAAkB,GAAGwB,YAAY;OAEtC,MAAME,eAAwB,GAAG,IAAI,CAACxB,MAAM,CAACC,OAAO,CAAC,wCAAwC,CAAC,CAACqB,YAAY,CAAC;OAE5G,IAAIE,eAAe,EACnB;SACC,IAAI,CAACC,KAAK,CAAC1B,MAAM,CAAC2B,kBAAkB,CAACF,eAAe,EAAE;WACrDG,QAAQ,EAAEC,yCAAa,CAACC,cAAc,CAACC;UACvC,CAAC;SAEF;;OAGD,MAAM,IAAI,CAACC,kCAAkC,CAACT,YAAY,CAAC;MAC3D;KACD,MAAMS,kCAAkC,CAACpB,MAAc,EACvD;OACC,IAAI,CAACc,KAAK,CAAC1B,MAAM,CAACiC,cAAc,EAAE;OAClC,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACR,KAAK,CAAC1B,MAAM,CAACmC,iBAAiB,EAAE,CAACC,mBAAmB,CAACxB,MAAM,CAAC;OACzF,IAAI,CAACc,KAAK,CAAC1B,MAAM,CAACqC,cAAc,EAAE;OAElC,IAAI,CAACH,SAAS,EACd;;SAECI,OAAO,CAACC,KAAK,CAAC,mDAAmD,CAAC;;OAGnE,MAAM,IAAI,CAACC,SAAS,EAAE;OACtB,IAAI,CAACd,KAAK,CAAC1B,MAAM,CAACyC,gBAAgB,EAAE,CAACC,eAAe,CAACR,SAAS,EAAE;SAC/DN,QAAQ,EAAEC,yCAAa,CAACC,cAAc,CAACC;QACvC,CAAC;OACF,MAAM,IAAI,CAACS,SAAS,EAAE;OACtB,IAAI,CAACd,KAAK,CAAC1B,MAAM,CAAC2C,gBAAgB,CAACT,SAAS,CAAC;MAC7C;KACDV,mBAAmB,GACnB;OACC,MAAMoB,cAAc,GAAG,IAAI,CAACC,kBAAkB,EAAE;OAChDD,cAAc,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;OACpC,IAAI,IAAI,CAACjD,kBAAkB,KAAK,CAAC,EACjC;SACC,OAAO6C,cAAc,CAAC,CAAC,CAAC;;OAGzB,MAAMK,eAAe,GAAGL,cAAc,CAACM,MAAM,CAAEtC,MAAM,IAAKA,MAAM,GAAG,IAAI,CAACb,kBAAkB,CAAC;OAC3F,IAAIkD,eAAe,CAACE,MAAM,KAAK,CAAC,EAChC;SACC,OAAOP,cAAc,CAAC,CAAC,CAAC;;OAGzB,OAAOK,eAAe,CAAC,CAAC,CAAC;MACzB;KACDJ,kBAAkB,GAClB;OACC,OAAO/B,MAAM,CAACsC,IAAI,CAAC,IAAI,CAACzC,eAAe,CAAC,CAAC0C,GAAG,CAAEzC,MAAM,IAAK;SACxD,OAAO7B,MAAM,CAAC6B,MAAM,CAAC;QACrB,CAAC;MACF;KACDQ,sBAAsB,GACtB;OACC,KAAKkC,+CAAe,CAAClC,sBAAsB,CAAC,IAAI,CAACxB,QAAQ,CAAC;;IAE3D;GACDH,QAAQ,EAAG;;;;;;;;;;;;CAYZ,CAAC;;CC9ID;AACA,CAAO,MAAM8D,SAAS,GAAG;GACxB7E,UAAU,EAAE;iBAAE8E;IAAY;GAC1B5E,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCwE,UAAU,EAAE,MAAMA,0CAAU;KAC5BC,WAAW,EAAE,MAAMA;IACnB;GACDrC,OAAO,EACP;KACCsC,aAAa,GACb;OACC,IAAI,CAACC,cAAc,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACjE,QAAQ,CAAC;MAC7C;KACDgE,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACE,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAIC,uCAAW,EAAE;;OAGrC,OAAO,IAAI,CAACD,WAAW;MACvB;KACDE,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;CAWZ,CAAC;;CC/CD;AACA,CAAO,MAAM4E,eAAe,GAAG;GAC9B5F,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;mBAAE4F;IAAc;GAC5B1F,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACDlD,OAAO,EACP;KACC2C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;CASZ,CAAC;;CCvBM,MAAM+E,cAAc,GAAG;GAC7B/F,IAAI,EAAE,gBAAgB;GACtBC,UAAU,EAAE;sBAAE+F,gDAAe;KAAE/E,aAAa;KAAE2E,eAAe;KAAEd;IAAW;GAC1E3E,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDS,QAAQ,EAAG;;;;;;;;;;;;;CAaZ,CAAC;;CCjBD;AACA,CAAO,MAAMiF,WAAW,GAAG;GAC1BjG,IAAI,EAAE,aAAa;GACnBC,UAAU,EAAE;gBAAEiG,4CAAS;iBAAEC,0CAAU;oBAAEC;IAAe;GACpDC,MAAM,EAAE,CAAC,qBAAqB,CAAC;GAC/BlG,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDmF,UAAU,GACV;OACC,OAAO,IAAI,CAAC9E,MAAM,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAACF,MAAM,CAACY,MAAM,CAAC;MAC3E;KACDoE,YAAY,GACZ;OACC,OAAO,IAAI,CAACD,UAAU,CAACE,UAAU;MACjC;KACDC,eAAe,GACf;OACC,OAAOf,aAAG,CAACgB,gBAAgB,CAAC,mCAAmC,EAAE,IAAI,CAACnF,MAAM,CAACoF,WAAW,EAAE;SACzF,SAAS,EAAE,IAAI,CAACpF,MAAM,CAACoF;QACvB,CAAC;MACF;KACDC,gBAAgB,GAChB;OACC,OAAOlB,aAAG,CAACgB,gBAAgB,CAAC,sCAAsC,EAAE,IAAI,CAACH,YAAY,EAAE;SACtF,SAAS,EAAE,IAAI,CAACA;QAChB,CAAC;;IAEH;GACD3D,OAAO,EACP;KACCiE,cAAc,GACd;OACC,IAAI,IAAI,CAACC,mBAAmB,KAAKC,8BAAkB,CAACC,OAAO,EAC3D;SACCC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,OAAO,CAACC,KAAK,EAAE;WAAEC,KAAK,EAAEP,8BAAkB,CAACC;UAAS,CAAC;SAEjF;;OAGDC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,OAAO,CAACG,IAAI,EAAE;SACzCD,KAAK,EAAEP,8BAAkB,CAACC,OAAO;SACjC7F,QAAQ,EAAE,IAAI,CAACA;QACf,CAAC;MACF;KACDoE,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;CAuBZ,CAAC;;CC/FM,MAAMwG,OAAO,GAAGnF,MAAM,CAACoF,MAAM,CAAC;GACpCC,SAAS,EAAE,aAAa;GACxBC,cAAc,EAAE;CACjB,CAAC,CAAC;;;;ACHF,CAImC;CAAA;CAAA;AAQnC,CAAO,MAAMC,oBAAoB,CACjC;GAKCC,WAAW,CAACC,MAA2B,EACvC;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,oBAAUA,MAAM,CAACC,KAAK;KAC1B,4CAAI,kBAASD,MAAM,CAACE,IAAI;KACxB,4CAAI,wBAAYF,MAAM,CAACG,OAAO;;GAG/BC,MAAM,GACN;KACC,OAAOC,aAAG,CAACD,MAAM,cAAC;;+CAEyB,CAAgB;;;QAGvD,CAAc;;;QAGd,CAAa;;;;GAIjB,2CAV6C,IAAI,+DAG3C,IAAI,2DAGJ,IAAI;;CAMZ;;CCzCA;AACA,CAAO,MAAME,aAAa,GAAG;GAC5BpI,IAAI,EAAE,eAAe;GACrBG,KAAK,EACL;KACCC,OAAO,EAAE;OACRC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACC6H,eAAe,GACf;OACC,OAAO,IAAI,CAACjI,OAAO,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,CAACA,OAAO,CAACkI,QAAQ,EAAE;;IAE3D;GACDtH,QAAQ,EAAG;;;;;CAKZ,CAAC;;CCVD;AACA,CAAO,MAAMuH,UAAU,GAAG;GACzBvI,IAAI,EAAE,YAAY;GAClBC,UAAU,EAAE;KAAEmI;IAAe;GAC7BjI,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDiI,WAAW,EAAE;OACZnI,IAAI,EAAEoI,OAAO;OACblI,QAAQ,EAAE;MACV;KACDF,IAAI,EAAE;OACLA,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDwH,KAAK,EAAE;OACN1H,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDmI,GAAG,EAAE;OACJrI,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDH,OAAO,EAAE;OACRC,IAAI,EAAE,CAACC,MAAM,EAAE,IAAI,CAAC;OACpBwF,OAAO,EAAE;;IAEV;GACDtF,QAAQ,EACR;KACCmI,WAAW,GACX;OACC,OAAO,CAACC,cAAI,CAACC,MAAM,CAAC,IAAI,CAACzI,OAAO,CAAC,IAAI,IAAI,CAACA,OAAO,GAAG,CAAC;;IAEtD;GACDwC,OAAO,EACP;KACCkG,WAAW,GACX;OACCC,6BAAS,CAACC,WAAW,EAAE,CAACrB,cAAc,CAACsB,OAAO,CAAC,IAAI,CAAC9H,QAAQ,EAAE,IAAI,CAACd,IAAI,CAAC;OAExE6I,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC7B,IAAI,CAAC,IAAI,CAACmB,GAAG,EAAE;SACpCW,SAAS,EAAE,KAAK;SAChBC,kBAAkB,EAAE;QACpB,CAAC;;IAEH;GACDtI,QAAQ,EAAG;;;;;;;CAOZ,CAAC;;CCvDD;AACA,CAAO,MAAMuI,aAAa,GAAG;GAC5BvJ,IAAI,EAAE,eAAe;GACrBC,UAAU,EAAE;KAAEsI;IAAY;GAC1BpI,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;MACT;KACD0C,WAAW,EAAE;OACZnI,IAAI,EAAEoI,OAAO;OACblI,QAAQ,EAAE;;IAEX;GACDc,IAAI,GACJ;KACC,OAAO;OACNmI,aAAa,EAAE;MACf;IACD;GACDhJ,QAAQ,EACR;KACCiJ,gBAAgB,EAAE,MAAMA,4BAAgB;KACxClI,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDmF,UAAU,GACV;OACC,OAAO,IAAI,CAAC9E,MAAM,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAACF,MAAM,CAACY,MAAM,CAAC;MAC3E;KACDuH,SAAS,GACT;OACC,OAAO,IAAI,CAACpD,UAAU,CAACqD,QAAQ,CAACC,KAAK;MACrC;KACDC,QAAQ,GACR;OACC,OAAO,IAAI,CAACH,SAAS,CAAChB,GAAG;MACzB;KACDoB,YAAY,GACZ;OACC,OAAO,IAAI,CAACJ,SAAS,CAACtJ,OAAO;MAC7B;KACD2J,SAAS,GACT;OACC,OAAO,IAAI,CAACzD,UAAU,CAACqD,QAAQ,CAACK,KAAK;MACrC;KACDC,QAAQ,GACR;OACC,OAAO,IAAI,CAACF,SAAS,CAACrB,GAAG;MACzB;KACDwB,YAAY,GACZ;OACC,OAAO,IAAI,CAAC5D,UAAU,CAACqD,QAAQ,CAACQ,QAAQ;MACxC;KACDC,WAAW,GACX;OACC,OAAO,IAAI,CAACF,YAAY,CAACxB,GAAG;MAC5B;KACD2B,eAAe,GACf;OACC,OAAO,IAAI,CAACH,YAAY,CAAC9J,OAAO;;IAEjC;GACDkK,OAAO,GACP;KACC,IAAI,CAACC,SAAS,EAAE;IAChB;GACD3H,OAAO,EACP;KACC2H,SAAS,GACT;OACC,MAAMC,YAAY,GAAGC,4BAAY,CAACzB,WAAW,EAAE;OAE/C,MAAM0B,OAAO,GAAGC,mBAAO,CAAChD,cAAc;OACtC,MAAMiD,WAAW,GAAG;SAAEzI,MAAM,EAAE,IAAI,CAACZ,MAAM,CAACY;QAAQ;OAElD,IAAIqI,YAAY,CAACK,UAAU,CAACH,OAAO,EAAEE,WAAW,CAAC,EACjD;SACC,KAAK,IAAI,CAACE,uBAAuB,CAACJ,OAAO,EAAEE,WAAW,CAAC;;MAExD;KACD,MAAME,uBAAuB,CAACJ,OAAgC,EAAEE,WAAwB,EACxF;OACC,MAAMG,OAAO,GAAG,IAAIC,0BAAO,CAAC;SAC3BC,WAAW,EAAE,IAAI,CAAChI,KAAK,CAAC,iBAAiB,CAAC;SAC1CiI,OAAO,EAAE,IAAI,CAACC,oBAAoB,EAAE;SACpCC,QAAQ,EAAE,GAAG;SACbC,YAAY,EAAE;WACbC,SAAS,EAAE,EAAE;WACbC,UAAU,EAAE,EAAE;WACdC,QAAQ,EAAE,IAAI;WACdC,SAAS,EAAE,IAAI;WACfC,aAAa,EAAEC,wBAAa,CAACC,KAAK;WAClCC,MAAM,EAAE;aACPC,WAAW,EAAE,MAAM;eAClB,IAAI,CAACtC,aAAa,GAAG,IAAI;cACzB;aACDuC,YAAY,EAAE,MAAM;eACnB,IAAI,CAACvC,aAAa,GAAG,KAAK;;;;QAI7B,CAAC;OAEFuB,OAAO,CAACiB,IAAI,EAAE;OACd,KAAKvB,4BAAY,CAACzB,WAAW,EAAE,CAACiD,aAAa,CAACvB,OAAO,EAAEE,WAAW,CAAC;MACnE;KACDO,oBAAoB,GACpB;OACC,MAAMe,cAAc,GAAG,IAAItE,oBAAoB,CAAC;SAC/CG,KAAK,EAAE,IAAI,CAACxC,GAAG,CAAC,6CAA6C,CAAC;SAC9DyC,IAAI,EAAE,IAAI,CAACzC,GAAG,CAAC,4CAA4C,CAAC;SAC5D0C,OAAO,EAAET,OAAO,CAACG;QACjB,CAAC;OAEF,OAAOuE,cAAc,CAAChE,MAAM,EAAE;MAC9B;KACD3C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+BZ,CAAC;;CC3JD,MAAMmL,aAAa,GAAG;GACrB,CAACxB,mBAAO,CAACyB,+BAA+B,GAAG;KAC1CrE,KAAK,EAAE,2DAA2D;KAClEC,IAAI,EAAE;IACN;GACD,CAAC2C,mBAAO,CAAC0B,gCAAgC,GAAG;KAC3CtE,KAAK,EAAE,6DAA6D;KACpEC,IAAI,EAAE;;CAER,CAAC;;CAED;AACA,CAAO,MAAMsE,eAAe,GAAG;GAC9BtM,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;kBAAEsM;IAAa;GAC3BpM,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;MACT;KACD0G,aAAa,EAAE;OACdnM,IAAI,EAAEoI,OAAO;OACb3C,OAAO,EAAE;;IAEV;GACD2G,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBpL,IAAI,GACJ;KACC,OAAO;OACNqL,kBAAkB,EAAE;MACpB;IACD;GACDlM,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;;IAE7D;GACDmJ,OAAO,GACP;KACC,IAAI,CAACC,SAAS,EAAE;IAChB;GACD3H,OAAO,EACP;KACC+J,kBAAkB,GAClB;OACC5D,6BAAS,CAACC,WAAW,EAAE,CAAC4D,OAAO,CAACC,iBAAiB,CAAC,IAAI,CAAC1L,QAAQ,CAAC;OAChE,IAAI,CAACuL,kBAAkB,GAAG,IAAI;MAC9B;KACDI,mBAAmB,GACnB;OACC,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;OACnB,IAAI,CAACL,kBAAkB,GAAG,KAAK;MAC/B;KACDnC,SAAS,GACT;OACC,MAAMC,YAAY,GAAGC,4BAAY,CAACzB,WAAW,EAAE;OAE/C3G,MAAM,CAACsC,IAAI,CAACwH,aAAa,CAAC,CAAC5J,OAAO,CAAEmI,OAAgC,IAAW;SAC9E,MAAME,WAAW,GAAG;WAAEzI,MAAM,EAAE,IAAI,CAACZ,MAAM,CAACY;UAAQ;SAElD,IAAIqI,YAAY,CAACK,UAAU,CAACH,OAAO,EAAEE,WAAW,CAAC,EACjD;WACC,KAAK,IAAI,CAACoC,0BAA0B,CAACtC,OAAO,EAAEE,WAAW,CAAC;;QAE3D,CAAC;MACF;KACDoC,0BAA0B,CAACtC,OAAgC,EAAEE,WAAwB,EACrF;OACC,MAAMG,OAAO,GAAG,IAAIC,0BAAO,CAAC;SAC3BC,WAAW,EAAE,IAAI,CAAChI,KAAK,CAAC,aAAa,CAAC;SACtCiI,OAAO,EAAE,IAAI,CAACC,oBAAoB,CAACT,OAAO,CAAC;SAC3CU,QAAQ,EAAE,GAAG;SACbC,YAAY,EAAE;WACbC,SAAS,EAAE,CAAC;WACZC,UAAU,EAAE,CAAC;WACbC,QAAQ,EAAE,IAAI;WACdC,SAAS,EAAE,IAAI;WACfC,aAAa,EAAEC,wBAAa,CAACC;;QAE9B,CAAC;OAEFb,OAAO,CAACiB,IAAI,EAAE;OACd,KAAKvB,4BAAY,CAACzB,WAAW,EAAE,CAACiD,aAAa,CAACvB,OAAO,EAAEE,WAAW,CAAC;MACnE;KACDO,oBAAoB,CAACT,OAAgC,EACrD;OACC,MAAMwB,cAAc,GAAG,IAAItE,oBAAoB,CAAC;SAC/CG,KAAK,EAAE,IAAI,CAACxC,GAAG,CAAC4G,aAAa,CAACzB,OAAO,CAAC,CAAC3C,KAAK,CAAC;SAC7CC,IAAI,EAAE,IAAI,CAACzC,GAAG,CAAC4G,aAAa,CAACzB,OAAO,CAAC,CAAC1C,IAAI,CAAC;SAC3CC,OAAO,EAAET,OAAO,CAACE;QACjB,CAAC;OAEF,OAAOwE,cAAc,CAAChE,MAAM,EAAE;MAC9B;KACD3C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;CAgBZ,CAAC;;CClID,MAAMiM,UAAU,GAAG,CAAC;;CAEpB;AACA,CAAO,MAAMC,cAAc,GAAG;GAC7BlN,IAAI,EAAE,gBAAgB;GACtBG,KAAK,EACL;KACCgN,SAAS,EAAE;OACV9M,IAAI,EAAEoI,OAAO;OACb3C,OAAO,EAAE;;IAEV;GACDtF,QAAQ,EACR;KACC4M,KAAK,GACL;OACC,IAAI,CAAC,IAAI,CAACD,SAAS,EACnB;SACC,OAAO,EAAE;;OAGV,OAAOE,KAAK,CAACC,IAAI,CAAC;SAAE5I,MAAM,EAAEuI;QAAY,CAAC;;IAE1C;GACDjM,QAAQ,EAAG;;;;;;CAMZ,CAAC;;CClBD;AACA,CAAO,MAAMuM,YAAY,GAAG;GAC3BvN,IAAI,EAAE,cAAc;GACpBC,UAAU,EAAE;iBAAEuN,2CAAU;KAAEvH,WAAW;KAAEsD,aAAa;KAAE+C,eAAe;qBAAEmB,wCAAc;KAAEP;IAAgB;GACvG/M,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACDzE,IAAI,GACJ;KACC,OAAO;OACNmH,WAAW,EAAE,KAAK;OAClBkF,yBAAyB,EAAE;MAC3B;IACD;GACDlN,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDwM,QAAQ,GACR;OACC,OAAO,IAAI,CAACpM,MAAM,CAACqM,MAAM;;IAE1B;GACDC,KAAK,EACL;KACC,MAAMF,QAAQ,CAACA,QAAiB,EAChC;OACC,IAAIA,QAAQ,IAAI,IAAI,CAACD,yBAAyB,EAC9C;SACC,MAAM,IAAI,CAAC3J,SAAS,EAAE;SACtB,IAAI,CAAC4I,kBAAkB,EAAE;;;IAG3B;GACDmB,OAAO,GACP;KACC7G,6BAAY,CAAC8G,SAAS,CAAC5G,qBAAS,CAAC6G,MAAM,CAACrB,kBAAkB,EAAE,IAAI,CAACsB,oBAAoB,CAAC;IACtF;GACDvL,aAAa,GACb;KACCuE,6BAAY,CAACiH,WAAW,CAAC/G,qBAAS,CAAC6G,MAAM,CAACrB,kBAAkB,EAAE,IAAI,CAACsB,oBAAoB,CAAC;IACxF;GACDrL,OAAO,EACP;KACCqL,oBAAoB,GACpB;OACC,IAAI,CAAC,IAAI,CAACN,QAAQ,EAClB;SACC,IAAI,CAACD,yBAAyB,GAAG,IAAI;SAErC;;OAGD,IAAI,CAACf,kBAAkB,EAAE;MACzB;KACDA,kBAAkB,GAClB;OACC,IAAI,CAAC1J,KAAK,CAAC,oBAAoB,CAAC,CAAC0J,kBAAkB,EAAE;MACrD;KACDwB,mBAAmB,CAAC3F,WAAoB,EACxC;OACC,IAAI,CAACA,WAAW,GAAGA,WAAW;;IAE/B;GACDxH,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;CAoBZ,CAAC;;CC5FM,MAAMoN,aAAa,GAAG;GAC5BpO,IAAI,EAAE,eAAe;GACrBC,UAAU,EAAE;sBAAE+F,gDAAe;KAAEuH;IAAc;GAC7CpN,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDkN,YAAY,GACZ;OACC,OAAO,IAAI,CAAC9M,MAAM,CAACqM,MAAM;;IAE1B;GACDC,KAAK,EACL;KACCQ,YAAY,CAACC,QAAiB,EAAEC,QAAiB,EACjD;OACC,IAAI,CAACD,QAAQ,IAAIC,QAAQ,EACzB;SACC;;OAGD,IAAI,CAAChE,SAAS,EAAE;;IAEjB;GACD3H,OAAO,EACP;KACC2H,SAAS,GACT;OACC,MAAMC,YAAY,GAAGC,4BAAY,CAACzB,WAAW,EAAE;OAE/C,MAAM0B,OAAO,GAAGC,mBAAO,CAAC6D,iCAAiC;OACzD,MAAM5D,WAAW,GAAG;SAAEzI,MAAM,EAAE,IAAI,CAACZ,MAAM,CAACY;QAAQ;OAElD,IAAIqI,YAAY,CAACK,UAAU,CAACH,OAAO,EAAEE,WAAW,CAAC,EACjD;SACC,IAAI,CAAC6D,4BAA4B,CAAC/D,OAAO,EAAEE,WAAW,CAAC;;MAExD;KACD6D,4BAA4B,CAAC/D,OAAgC,EAAEE,WAAwB,EACvF;OACC8D,2BAAQ,CAACC,MAAM,CAACC,6BAA6B,EAAE;OAE/C,KAAKnE,4BAAY,CAACzB,WAAW,EAAE,CAACiD,aAAa,CAACvB,OAAO,EAAEE,WAAW,CAAC;;IAEpE;GACD5J,QAAQ,EAAG;;;;;;;CAOZ,CAAC;;CCvED;AACA,CAAO,MAAM6N,oBAAoB,GAAG;GACnC7O,IAAI,EAAE,sBAAsB;GAC5BC,UAAU,EAAE;wBAAE6O,oDAAiB;gBAAE5I;IAAW;GAC5C/F,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDkM,KAAK,EAAE,CAAC,UAAU,CAAC;GACnBjM,QAAQ,EACR;KACCuO,YAAY,GACZ;OACC,OAAO,IAAI,CAACvN,MAAM,CAACC,OAAO,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAACN,QAAQ,CAAC;MACjE;KACD6N,QAAQ,GACR;OACC,OAAO,IAAI,CAACvJ,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC,yCAAyC,CAAC;;IAE9E;GACD3E,QAAQ,EAAG;;;;;;;;;CASZ,CAAC;;CC9BD;AACA,CAAO,MAAMiO,iBAAiB,GAAG;GAChCjP,IAAI,EAAE,mBAAmB;GACzBC,UAAU,EAAE;iBAAEuN,2CAAU;KAAEqB;IAAsB;GAChD1O,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACD9E,QAAQ,EAAG;;;;;;;;;;CAUZ,CAAC;;CCrBM,MAAMkO,kBAAkB,GAAG;GACjClP,IAAI,EAAE,oBAAoB;GAC1BC,UAAU,EAAE;sBAAE+F,gDAAe;KAAEiJ;IAAmB;GAClD9O,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDS,QAAQ,EAAG;;;;;;;CAOZ,CAAC;;CCjBD;AACA,CAAO,MAAMmO,YAAY,GAAG;GAC3BnP,IAAI,EAAE,cAAc;GACpBC,UAAU,EAAE;sBAAE+F,gDAAe;iBAAEwH,2CAAU;gBAAEtH;IAAW;GACtD/F,KAAK,EAAE;KACNgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EAAE;KACT4O,SAAS,GACT;OACC,OAAO9O,MAAM,CAAC+O,QAAQ,CAAC,IAAI,CAAClO,QAAQ,EAAE,EAAE,CAAC,KAAKmO,2BAAI,CAACC,SAAS,EAAE,GAAGC,gDAAa,CAACC,KAAK,GAAG,EAAE;;IAE1F;GACDzO,QAAQ,EAAG;;;;;;;;;;;CAWZ,CAAC;;CCzBD,MAAM0O,QAAQ,GAAG,2BAA2B;;CAE5C;AACA,CAAO,MAAMC,aAAa,GAAG;GAC5B3P,IAAI,EAAE,eAAe;GACrBC,UAAU,EAAE;qBAAE2P;IAAgB;GAC9BzP,KAAK,EAAE;KACN8K,WAAW,EAAE;OACZ5K,IAAI,EAAEgC,MAAM;OACZ9B,QAAQ,EAAE;;IAEX;GACDkM,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;GACxBjM,QAAQ,EAAE;KACTkP,QAAQ,EAAE,MAAMA,QAAQ;KACxBG,MAAM,GACN;OACC,OAAO;SACNC,QAAQ,EAAE,IAAI;SACd7E,WAAW,EAAE,IAAI,CAACA,WAAW;SAC7B8E,KAAK,EAAE,IAAI;SACXC,KAAK,EAAE,GAAG;SACVvE,SAAS,EAAE,IAAI;SACfF,UAAU,EAAE,CAAC;SACb0E,SAAS,EAAE,uCAAuC;SAClDC,mBAAmB,EAAE;QACrB;;IAEF;GACDtN,OAAO,EACP;KACC2C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;CAmBZ,CAAC;;CCpDD;AACA,CAAO,MAAMsL,iBAAe,GAAG;GAC9BtM,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;gBAAEkQ,wCAAS;KAAER;IAAe;GACxCxP,KAAK,EAAE;KACNgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACDzE,IAAI,GACJ;KACC,OAAO;OACN+O,gBAAgB,EAAE,KAAK;OACvB1D,kBAAkB,EAAE,KAAK;OACzB2D,iBAAiB,EAAE;MACnB;IACD;GACD/F,OAAO,GACP;KACC,MAAMgG,0BAA0B,GAAG7F,4BAAY,CAACzB,WAAW,EAAE,CAAC6B,UAAU,CAACF,mBAAO,CAAC4F,kBAAkB,CAAC;KACpG,MAAMC,sBAAsB,GAAG/F,4BAAY,CAACzB,WAAW,EAAE,CAAC6B,UAAU,CAACF,mBAAO,CAAC8F,qBAAqB,CAAC;KAEnG,IAAI,CAACJ,iBAAiB,GAAG,CAACC,0BAA0B,IAAIE,sBAAsB;IAC9E;GACD5N,OAAO,EACP;KACC+J,kBAAkB,GAClB;OACC5D,6BAAS,CAACC,WAAW,EAAE,CAAC4D,OAAO,CAACC,iBAAiB,CAAC,IAAI,CAAC1L,QAAQ,CAAC;OAChE,IAAI,CAACuL,kBAAkB,GAAG,IAAI;MAC9B;KACDI,mBAAmB,GACnB;OACC,IAAI,CAACJ,kBAAkB,GAAG,KAAK;MAC/B;KACDgE,QAAQ,GACR;OACC,IAAI,CAACL,iBAAiB,GAAG,IAAI;MAC7B;KACDM,SAAS,GACT;OACC,IAAI,CAACN,iBAAiB,GAAG,KAAK;MAC9B;KACDO,UAAU,GACV;OACC,KAAKnG,4BAAY,CAACzB,WAAW,EAAE,CAACiD,aAAa,CAACtB,mBAAO,CAAC8F,qBAAqB,CAAC;OAC5E,IAAI,CAACE,SAAS,EAAE;MAChB;KACDpL,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;CAwBZ,CAAC;;CCvED;AACA,CAAO,MAAM6P,iBAAiB,GAAG;GAChC7Q,IAAI,EAAE,mBAAmB;GACzBC,UAAU,EAAE;iBAAEuN,2CAAU;wBAAEsB,oDAAiB;iBAAEgC,0CAAU;sBAAExE;IAAiB;GAC1EjG,MAAM,EAAE,CAAC,qBAAqB,CAAC;GAC/BlG,KAAK,EAAE;KACNgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACDzE,IAAI,GACJ;KACC,OAAO;OACN0P,gBAAgB,EAAE;MAClB;IACD;GACDvQ,QAAQ,EAAE;KACTwQ,UAAU,EAAE,MAAMA,0CAAU;KAC5BzP,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDwM,QAAQ,GACR;OACC,OAAO,IAAI,CAACpM,MAAM,CAACqM,MAAM;MACzB;KACDqD,kBAAkB,GAClB;OACC,OAAO,IAAI,CAAC1P,MAAM,CAACoF,WAAW,GAAG,CAAC;MAClC;KACDuK,WAAW,GACX;OAAA;OACC,MAAMtP,IAAI,GAAG,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAACN,QAAQ,CAAC;OAExE,qBAAOS,IAAI,oBAAJA,IAAI,CAAE5B,IAAI,yBAAI,EAAE;MACvB;KACDmR,oBAAoB,GACpB;OACC,OAAOzL,aAAG,CAACgB,gBAAgB,CAAC,sCAAsC,EAAE,IAAI,CAACnF,MAAM,CAACoF,WAAW,EAAE;SAC5F,SAAS,EAAE,IAAI,CAACpF,MAAM,CAACoF;QACvB,CAAC;;IAEH;GACD/D,OAAO,EACP;KACCwO,gBAAgB,CAACC,QAAgB,EACjC;OACC,KAAK,IAAI,CAAClM,cAAc,EAAE,CAACmM,UAAU,CAAC,IAAI,CAACnQ,QAAQ,EAAEkQ,QAAQ,CAAC;MAC9D;KACDxK,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAAC8G,QAAQ,EAClB;SACC;;OAGD,IAAI,IAAI,CAAC7G,mBAAmB,KAAKC,8BAAkB,CAACC,OAAO,EAC3D;SACCC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,OAAO,CAACC,KAAK,EAAE;WAAEC,KAAK,EAAEP,8BAAkB,CAACC;UAAS,CAAC;SAEjF;;OAGDC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,OAAO,CAACG,IAAI,EAAE;SACzCD,KAAK,EAAEP,8BAAkB,CAACC,OAAO;SACjC7F,QAAQ,EAAE,IAAI,CAACA;QACf,CAAC;MACF;KACDoQ,kBAAkB,GAClB;OACC,IAAI,CAACR,gBAAgB,GAAG,IAAI;MAC5B;KACD5L,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACE,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAIC,uCAAW,EAAE;;OAGrC,OAAO,IAAI,CAACD,WAAW;MACvB;KACDE,GAAG,CAACC,UAAkB,EAAEgM,YAAgC,GAAG,EAAE,EAC7D;OACC,OAAO,IAAI,CAAC/L,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEgM,YAAY,CAAC;;IAE7D;GACDxQ,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCZ,CAAC;;CCzID;AACA,CAAO,MAAMyQ,eAAe,GAAG;GAC9BzR,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;mBAAE4F;IAAc;GAC5B1F,KAAK,EAAE;KACNgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACDlD,OAAO,EAAE;KACR2C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;CAUZ,CAAC;;CCvBD;AACA,CAAO,MAAM0Q,cAAc,GAAG;GAC7B1R,IAAI,EAAE,gBAAgB;GACtBC,UAAU,EAAE;sBAAE+F,gDAAe;KAAE6K,iBAAiB;KAAEY;IAAiB;GACnEtR,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACD9E,QAAQ,EAAG;;;;;;;;;;CAUZ,CAAC;;CCvBM,MAAM2Q,kBAAkB,GAAG;GACjC3R,IAAI,EAAE,oBAAoB;GAC1BC,UAAU,EAAE;sBAAE+F,gDAAe;mBAAEH;IAAc;GAC7C1F,KAAK,EAAE;KACNgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDqC,OAAO,EAAE;KACR2C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;CAgBZ,CAAC;;CCzBD;AACA,CAAO,MAAM4Q,cAAc,GAAG;GAC7BzR,KAAK,EACL;KACC6H,IAAI,EAAE;OACL3H,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;MACT;KACD+L,OAAO,EAAE;OACRxR,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;MACT;KACDgM,YAAY,EAAE;OACbzR,IAAI,EAAE,CAACe,MAAM,EAAEd,MAAM,CAAC;OACtBwF,OAAO,EAAE;;IAEV;GACDtF,QAAQ,EACR;KACCuR,SAAS,GACT;OACC,OAAO,IAAI,CAACC,aAAa,GAAG,SAAS,GAAG,WAAW;MACnD;KACDC,YAAY,GACZ;OACC,IAAI,IAAI,CAACjK,IAAI,EACb;SACC,OAAO,IAAI,CAACA,IAAI;;OAGjB,IAAI,IAAI,CAACgK,aAAa,EACtB;SACC,OAAO,IAAI,CAACzM,GAAG,CAAC,wCAAwC,CAAC;;OAG1D,OAAO,IAAI,CAACA,GAAG,CAAC,kCAAkC,CAAC;MACnD;KACD2M,eAAe,GACf;OACC,IAAI,IAAI,CAACL,OAAO,EAChB;SACC,OAAO,IAAI,CAACA,OAAO;;OAGpB,OAAO,EAAE;MACT;KACDG,aAAa,GACb;OACC,OAAOG,iDAAmB,CAACnJ,WAAW,EAAE,CAACoJ,aAAa,EAAE,CAAC1N,MAAM,KAAK,CAAC;MACrE;KACD2N,eAAe,GACf;OACC,IAAIzJ,cAAI,CAAC0J,cAAc,CAAC,IAAI,CAACR,YAAY,CAAC,IAAIlJ,cAAI,CAAC2J,QAAQ,CAAC,IAAI,CAACT,YAAY,CAAC,EAC9E;SACC,OAAOU,4BAAY,CAACC,sBAAsB,CAAC,IAAI,CAACX,YAAY,CAAC;;OAG9D,OAAOU,4BAAY,CAACE,yBAAyB,EAAE;;IAEhD;GACD9P,OAAO,EACP;KACC2C,GAAG,CAACC,UAAkB,EAAEgM,YAAmC,GAAG,EAAE,EAChE;OACC,OAAO,IAAI,CAAC/L,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEgM,YAAY,CAAC;;IAE7D;GACDxQ,QAAQ,EAAG;;;;;;;;;;;;;CAaZ,CAAC;;CCvFD;AACA,CAAO,MAAM2R,iBAAiB,GAAG;GAChC3S,IAAI,EAAE,mBAAmB;GACzBC,UAAU,EAAE;KAAE2R;IAAgB;GAC9BpR,QAAQ,EACR;KACCwH,IAAI,GACJ;OACC,OAAO,IAAI,CAACzC,GAAG,CAAC,qCAAqC,CAAC;MACtD;KACDsM,OAAO,GACP;OACC,OAAO,IAAI,CAACtM,GAAG,CAAC,2CAA2C,CAAC;;IAE7D;GACD3C,OAAO,EACP;KACC2C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;CAGZ,CAAC;;CCjBD,MAAM4R,sBAAsB,GAAG,CAC9BlN,aAAG,CAACC,UAAU,CAAC,2CAA2C,CAAC,EAC3DD,aAAG,CAACC,UAAU,CAAC,2CAA2C,CAAC,EAC3DD,aAAG,CAACC,UAAU,CAAC,8CAA8C,CAAC,EAC9DD,aAAG,CAACC,UAAU,CAAC,0CAA0C,CAAC,EAC1DD,aAAG,CAACC,UAAU,CAAC,2CAA2C,CAAC,EAC3DD,aAAG,CAACC,UAAU,CAAC,8CAA8C,CAAC,EAC9DD,aAAG,CAACC,UAAU,CAAC,2CAA2C,CAAC,EAC3DD,aAAG,CAACC,UAAU,CAAC,4CAA4C,CAAC,CAC5D;;CAED;AACA,CAAO,MAAMkN,2BAA2B,GAAG;GAC1C7S,IAAI,EAAE,6BAA6B;GACnCQ,QAAQ,EAAE;KACToS,sBAAsB,EAAE,MAAMA,sBAAsB;KACpDE,cAAc,GACd;OACC,OAAOC,gCAAc,CAACC,kBAAkB,CAACC,yBAAO,CAACC,uBAAuB,CAAC;MACzE;KACDC,aAAa,GACb;OACC,OAAOzN,aAAG,CAACC,UAAU,CAAC,sCAAsC,EAAE;SAC7D,SAAS,EAAE,4DAA4D;SACvE,UAAU,EAAE;QACZ,CAAC;MACF;KACDyN,kBAAkB,GAClB;OACC,MAAMC,uBAAuB,GAAG,sDAAsD;OAEtF,OAAO3N,aAAG,CAACC,UAAU,CAAC,wDAAwD,EAAE;SAC/E,UAAU,EAAG,oEAAmE0N,uBAAwB,IAAG;SAC3G,WAAW,EAAE;QACb,CAAC;;IAEH;GACD/I,OAAO,GACP;KACC,KAAKG,4BAAY,CAACzB,WAAW,EAAE,CAACiD,aAAa,CAACtB,mBAAO,CAAC2I,sBAAsB,CAAC;IAC7E;GACD1Q,OAAO,EAAE;KACR2C,GAAG,CAACC,UAAkB,EAAEgM,YAAmC,GAAG,EAAE,EAChE;OACC,OAAO,IAAI,CAAC/L,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEgM,YAAY,CAAC;;IAE7D;GACDxQ,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCZ,CAAC;;CCnFD;AACA,CAAO,MAAMuS,sBAAsB,GAAG;GACrCvT,IAAI,EAAE,wBAAwB;GAC9BQ,QAAQ,EAAE;KACTsS,cAAc,GACd;OACC,OAAOC,gCAAc,CAACC,kBAAkB,CAACC,yBAAO,CAACC,uBAAuB,CAAC;;IAE1E;GACDtQ,OAAO,EAAE;KACR4Q,mBAAmB,GACnB;OACC,MAAMC,gBAAgB,GAAG1K,6BAAS,CAACC,WAAW,EAAE,CAAC0K,YAAY,CAACC,oBAAoB,EAAE;OACpFC,8BAAa,CAACC,gBAAgB,CAACJ,gBAAgB,CAAC;MAChD;KACDlO,GAAG,CAACC,UAAkB,EAAEgM,YAAmC,GAAG,EAAE,EAChE;OACC,OAAO,IAAI,CAAC/L,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEgM,YAAY,CAAC;;IAE7D;GACDxQ,QAAQ,EAAG;;;;;;;;;;;;;;;;CAgBZ,CAAC;;CC1CD;AACA,CAAO,MAAM8S,YAAY,GAAG;GAC3B9T,IAAI,EAAE,cAAc;GACpBG,KAAK,EACL;KACCH,IAAI,EAAE;OACLK,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDwH,KAAK,EAAE;OACN1H,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDyO,QAAQ,EAAE;OACT3O,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDS,QAAQ,EAAG;;;;;;;;;;;;;CAaZ,CAAC;;CCdD;AACA,CAAO,MAAM+S,gBAAgB,GAAG;GAC/B/T,IAAI,EAAE,kBAAkB;GACxBC,UAAU,EAAE;KAAE6T,YAAY;iBAAE/O;IAAY;GACxCvE,QAAQ,EACR;KACCwE,UAAU,EAAE,MAAMA,0CAAU;KAC5BgP,eAAe,GACf;OACC,MAAMC,WAAW,GAAGlB,gCAAc,CAACC,kBAAkB,CAACC,yBAAO,CAACiB,uBAAuB,CAAC;OACtF,MAAMC,SAAS,GAAGC,sCAAiB,CAACpL,WAAW,EAAE,CAACqL,0BAA0B,CAACC,4BAAgB,CAACC,YAAY,CAAC;OAE3G,OAAON,WAAW,IAAIE,SAAS;MAC/B;KACDK,uBAAuB,GACvB;OACC,OAAO;SACNC,WAAW,EAAEC,iBAAK,CAACC,WAAW;SAC9BC,eAAe,EAAEF,iBAAK,CAACG,KAAK;SAC5BC,SAAS,EAAEJ,iBAAK,CAACK,MAAM;SACvBC,SAAS,EAAEN,iBAAK,CAACK,MAAM;SACvBE,UAAU,EAAEP,iBAAK,CAACG,KAAK;SACvBK,cAAc,EAAER,iBAAK,CAACS;QACtB;MACD;KACDC,qBAAqB,GACrB;OACC,MAAMC,WAAW,GAAG,IAAI,CAAC7T,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC6N,2BAAI,CAACC,SAAS,EAAE,EAAE,IAAI,CAAC;OAE5E,OAAO8F,WAAW,CAAChV,IAAI,KAAKiV,oBAAQ,CAACC,QAAQ;MAC7C;KACDlD,eAAe,GACf;OACC,OAAOG,4BAAY,CAACC,sBAAsB,CAAC+C,iCAAiB,CAAC7G,MAAM,CAAC;;IAErE;GACD/L,OAAO,EACP;KACC6S,aAAa,GACb;OACC1M,6BAAS,CAACC,WAAW,EAAE,CAAC0M,UAAU,CAACC,6BAA6B,EAAE;OAClEC,mBAAS,CAACC,gBAAgB,CAACC,qDAAa,CAACnH,MAAM,CAAC;MAChD;KACDpJ,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoDZ,CAAC;;CCzGD,MAAM+U,uBAAuB,GAAG,MAAM;CACtC,MAAMC,kBAAkB,GAAG,MAAM;CACjC,MAAMC,iBAAiB,GAAG,wBAAwB;;CAElD;AACA,CAAO,MAAMC,iBAAiB,GAAG;GAChClW,IAAI,EAAE,mBAAmB;GACzBC,UAAU,EAAE;iBAAE8E,0CAAU;yBAAEoR;IAAoB;GAC9C9U,IAAI,GACJ;KACC,OAAO;OACN+U,cAAc,EAAE,KAAK;OACrBC,eAAe,EAAE;MACjB;IACD;GACD7V,QAAQ,EACR;KACCwE,UAAU,EAAE,MAAMA,0CAAU;KAC5BqN,eAAe,GACf;OACC,OAAOG,4BAAY,CAACC,sBAAsB,CAAC+C,iCAAiB,CAACc,OAAO,CAAC;MACrE;KACDrE,YAAY,GACZ;OACC,OAAO,IAAI,CAAC1M,GAAG,CAAC,iDAAiD,EAAE;SAClE,MAAM,EAAE;QACR,CAAC;MACF;KACDgR,iBAAiB,GACjB;OACC,OAAO;SACN9B,WAAW,EAAEC,iBAAK,CAACC,WAAW;SAC9BC,eAAe,EAAEmB,uBAAuB;SACxCjB,SAAS,EAAEmB,iBAAiB;SAC5BjB,SAAS,EAAEiB,iBAAiB;SAC5BhB,UAAU,EAAEe;QACZ;;IAEF;GACDpT,OAAO,EACP;KACC4T,iBAAiB,GACjB;OACC,IAAI,CAACH,eAAe,GAAG,IAAI;MAC3B;KACD,MAAMI,UAAU,CAAC7U,IAAI,EACrB;OACC,MAAM8U,QAAQ,GAAG9U,IAAI,CAAC+U,IAAI;OAC1B,IAAI,CAACP,cAAc,GAAG,IAAI;OAC1B,IAAI,CAACC,eAAe,GAAG,KAAK;OAE5B,MAAMO,WAAW,GAAG,MAAM,IAAI,CAACC,iBAAiB,EAAE,CAACJ,UAAU,CAAC;SAAEC;QAAU,CAAC,CACzEI,KAAK,CAAC,MAAM;SACZ,IAAI,CAACV,cAAc,GAAG,KAAK;QAC3B,CAAC;OAEH,IAAI,CAACA,cAAc,GAAG,KAAK;OAC3B,KAAKR,mBAAS,CAACmB,WAAW,CAACH,WAAW,CAAC;MACvC;KACDC,iBAAiB,GACjB;OACC,IAAI,CAAC,IAAI,CAACG,cAAc,EACxB;SACC,IAAI,CAACA,cAAc,GAAG,IAAIC,6CAAc,EAAE;;OAG3C,OAAO,IAAI,CAACD,cAAc;MAC1B;KACDzR,GAAG,CAACC,UAAkB,EAAEgM,YAAmC,GAAG,EAAE,EAChE;OACC,OAAO,IAAI,CAAC/L,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEgM,YAAY,CAAC;;IAE7D;GACDxQ,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;CAsBZ,CAAC;;CChGD,MAAM+U,yBAAuB,GAAG,MAAM;CACtC,MAAMC,oBAAkB,GAAG,MAAM;CACjC,MAAMC,mBAAiB,GAAG,wBAAwB;;CAElD;AACA,CAAO,MAAMiB,qBAAqB,GAAG;GACpClX,IAAI,EAAE,uBAAuB;GAC7BC,UAAU,EAAE;iBAAE8E;IAAY;GAC1B1D,IAAI,GACJ;KACC,OAAO;OACN+U,cAAc,EAAE;MAChB;IACD;GACD5V,QAAQ,EAAE;KACTwE,UAAU,EAAE,MAAMA,0CAAU;KAC5BqN,eAAe,GACf;OACC,OAAOG,4BAAY,CAACC,sBAAsB,CAAC+C,iCAAiB,CAACc,OAAO,CAAC;MACrE;KACDrE,YAAY,GACZ;OACC,OAAO,sBAAsB;;;;;MAK7B;;KACDsE,iBAAiB,GACjB;OACC,OAAO;SACN9B,WAAW,EAAEC,iBAAK,CAACC,WAAW;SAC9BC,eAAe,EAAEmB,yBAAuB;SACxCjB,SAAS,EAAEmB,mBAAiB;SAC5BjB,SAAS,EAAEiB,mBAAiB;SAC5BhB,UAAU,EAAEe;QACZ;;IAEF;GACDpT,OAAO,EAAE;KACR,MAAM4T,iBAAiB,GACvB;OACC,IAAI,CAACJ,cAAc,GAAG,IAAI;OAE1B,MAAMQ,WAAW,GAAG,MAAM,IAAI,CAACO,qBAAqB,EAAE,CAACV,UAAU,EAAE,CACjEK,KAAK,CAAC,MAAM;SACZ,IAAI,CAACV,cAAc,GAAG,KAAK;QAC3B,CAAC;OAEH,IAAI,CAACA,cAAc,GAAG,KAAK;OAC3B,KAAKR,mBAAS,CAACmB,WAAW,CAACH,WAAW,CAAC;MACvC;KACDO,qBAAqB,GACrB;OACC,IAAI,CAAC,IAAI,CAACC,kBAAkB,EAC5B;SACC,IAAI,CAACA,kBAAkB,GAAG,IAAIC,qDAAkB,EAAE;;OAGnD,OAAO,IAAI,CAACD,kBAAkB;MAC9B;KACD7R,GAAG,CAACC,UAAkB,EAAEgM,YAAmC,GAAG,EAAE,EAChE;OACC,OAAO,IAAI,CAAC/L,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEgM,YAAY,CAAC;;IAE7D;GACDxQ,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;CAmBZ,CAAC;;CC5FwC;CAAA;CAAA;CAAA;AAUzC,CAAO,MAAMsW,WAAW,CACxB;GAAA;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;;GACC,MAAMC,sBAAsB,CAACC,MAAc,EAC3C;KACC,4CAAI,IAAI,6EACR;OACC,MAAMC,gBAAgB,GAAG,8CAAM,IAAI,sDAA0BD,MAAM,CAAC;OACpE,IAAI,CAACC,gBAAgB,EACrB;SACC;;OAGD,4CAAI,sCAAkBD,MAAM,EAAE;SAAEC;QAAkB;OAElD;;KAGD,MAAMC,QAAQ,GAAG,8CAAM,IAAI,sCAAkBF,MAAM,CAAC;KAEpD,4CAAI,sCAAkBA,MAAM,EAAEE,QAAQ;;CA8CxC;CAAC,yCA3C+BF,MAAc,EAC7C;GACC,MAAMG,MAA8B,GAAG,MAAMrI,2BAAI,CAACsI,aAAa,EAAE,CAACC,gBAAgB,CAAC,CAACL,MAAM,CAAC,CAAC,CAC1FV,KAAK,CAAEhT,KAAK,IAAK;KACjBD,OAAO,CAACC,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;KACzE,MAAMA,KAAK;IACX,CAAC;GAEH,IAAI,CAAC8E,cAAI,CAAC2J,QAAQ,CAACoF,MAAM,CAACH,MAAM,CAAC,CAAC,EAClC;KACC,OAAO,IAAI;;GAGZ,MAAMM,eAAe,GAAGH,MAAM,CAACH,MAAM,CAAC,GAAG,IAAI;GAE7C,OAAO,IAAIO,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAGF,eAAe,CAAC;CAC9C;CAAC,iCAEsBN,MAAc,EACrC;GACCS,uBAAM,CAACC,IAAI,CAAE,2CAA0CV,MAAO,EAAC,CAAC;GAChE,MAAMW,MAAM,GAAG,MAAM7I,2BAAI,CAAC8I,aAAa,EAAE,CAACC,UAAU,CAACC,sBAAU,CAACC,SAAS,EAAE;KAAEC,EAAE,EAAEhB;IAAQ,CAAC,CACxFV,KAAK,CAAEa,MAAkB,IAAK;KAC9B9T,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAE6T,MAAM,CAAC7T,KAAK,EAAE,CAAC;IACrE,CAAC;GAEH,OAAOqU,MAAM,CAAC9W,IAAI,EAAE;CACrB;CAAC,iCAEsBmW,MAAc,EAAEiB,UAAsB,EAC7D;GACCR,uBAAM,CAACC,IAAI,CAAC,+BAA+B,EAAEO,UAAU,CAAC;GAExD,KAAKnJ,2BAAI,CAACoJ,QAAQ,EAAE,CAACC,QAAQ,CAAC,cAAc,EAAE;KAC7CC,EAAE,EAAEpB,MAAM;KACVqB,MAAM,EAAEJ;IACR,CAAC;CACH;CAAC,+CAGD;GACC,OAAOnJ,2BAAI,CAACsI,aAAa,EAAE,CAACkB,SAAS,EAAE;CACxC;;CCtCD;AACA,CAAO,MAAMC,UAAU,GAAG;GACzB/Y,IAAI,EAAE,YAAY;GAClBG,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDkM,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBjM,QAAQ,EACR;KACCkB,MAAM,GACN;OACC,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC;MACnD;KACDF,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACD6X,MAAM,GACN;OACC,OAAO,IAAI,CAACzX,MAAM,CAAClB,IAAI,KAAK4Y,oBAAQ,CAACC,IAAI;MACzC;KACDC,SAAS,GACT;OACC,OAAOC,gCAAc,CAACD,SAAS,CAAC,IAAI,CAAChY,QAAQ,CAAC;MAC9C;KACDkY,QAAQ,GACR;OACC,OAAO,IAAI,CAAC9X,MAAM,CAAClB,IAAI,KAAK4Y,oBAAQ,CAACtK,MAAM;MAC3C;KACD2K,aAAa,GACb;OACC,OAAO,IAAI,CAAC9X,MAAM,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC,IAAI,CAACN,QAAQ,CAAC;MAC1E;KACDoY,OAAO,GACP;OACC,OAAOjZ,MAAM,CAAC+O,QAAQ,CAAC,IAAI,CAAClO,QAAQ,EAAE,EAAE,CAAC,KAAKmO,2BAAI,CAACC,SAAS,EAAE;MAC9D;KACDiK,SAAS,GACT;OACC,OAAO,IAAI,CAACjY,MAAM,CAAClB,IAAI,KAAK4Y,oBAAQ,CAAC3C,OAAO;MAC5C;KACDmD,aAAa,GACb;OACC,MAAMC,gBAAgB,GAAG,IAAI,CAAClY,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAACN,QAAQ,CAAC;OACvF,MAAMwY,iBAAiB,GAAG,CAACV,oBAAQ,CAACW,WAAW,EAAEX,oBAAQ,CAACY,iBAAiB,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACvY,MAAM,CAAClB,IAAI,CAAC;OAEvG,OAAOqZ,gBAAgB,IAAIC,iBAAiB;MAC5C;KACDhY,OAAO,GACP;OACC,OAAO,IAAI,CAACJ,MAAM,CAACK,IAAI,KAAKC,oBAAQ,CAACC,KAAK;MAC1C;KACDiY,sBAAsB,GACtB;OACC,OAAO,CACN;SACCC,SAAS,EAAE,IAAI,CAACb,SAAS;SACzBc,SAAS,EAAElU;QACX,EACD;SACCiU,SAAS,EAAE,IAAI,CAACX,QAAQ;SACxBY,SAAS,EAAE7L;QACX,EACD;SACC4L,SAAS,EAAE,IAAI,CAACV,aAAa;SAC7BW,SAAS,EAAE/K;QACX,EACD;SACC8K,SAAS,EAAE,IAAI,CAACT,OAAO;SACvBU,SAAS,EAAE9K;QACX,EACD;SACC6K,SAAS,EAAE,IAAI,CAACR,SAAS;SACzBS,SAAS,EAAEvI;QACX,EACD;SACCsI,SAAS,EAAE,IAAI,CAACP,aAAa;SAC7BQ,SAAS,EAAEtI;QACX,CACD;MACD;KACDuI,gBAAgB,GAChB;OACC,MAAMC,YAAwC,GAAG,IAAI,CAACJ,sBAAsB,CAACK,IAAI,CAAEC,IAAI,IAAK;SAC3F,OAAOA,IAAI,CAACL,SAAS,KAAK,IAAI;QAC9B,CAAC;OAEF,OAAOG,YAAY,GAAGA,YAAY,CAACF,SAAS,GAAGjU,gDAAe;MAC9D;KACDsU,mBAAmB,GACnB;OAAA;OACC,MAAMC,2BAA2B,GAAG;SACnC,CAACvY,kBAAM,CAACwY,OAAO,GAAG7H,iBAAiB;SACnC,CAAC3Q,kBAAM,CAAC2M,MAAM,GAAGoF,gBAAgB;SACjC,CAAC/R,kBAAM,CAAC4X,WAAW,GAAG,IAAI,CAACa,qBAAqB;SAChD,CAACzY,kBAAM,CAACC,IAAI,GAAG,IAAI,CAACyY,uBAAuB;SAC3C5U,OAAO,EAAE6U;QACT;OAED,gCAAOJ,2BAA2B,CAAC,IAAI,CAAC7Y,MAAM,CAAC1B,IAAI,CAAC,oCAAIua,2BAA2B,CAACzU,OAAO;MAC3F;KACD4U,uBAAuB,GACvB;OACC,MAAME,cAAc,GAAGC,8BAAa,CAAC7R,WAAW,EAAE,CAAC4R,cAAc,EAAE;OACnE,MAAME,yBAAyB,GAAGrQ,4BAAY,CAACzB,WAAW,EAAE,CAAC6B,UAAU,CAACF,mBAAO,CAAC2I,sBAAsB,CAAC;OAEvG,IAAI,CAACsH,cAAc,EACnB;SACC,OAAOD,cAAU;;OAGlB,OAAOG,yBAAyB,GAAGjI,2BAA2B,GAAGU,sBAAsB;MACvF;KACDkH,qBAAqB,GACrB;OACC,IAAI,CAAC1H,gCAAc,CAACC,kBAAkB,CAACC,yBAAO,CAAC8H,wBAAwB,CAAC,EACxE;SACC,OAAO7E,iBAAiB;;OAGzB,OAAOgB,qBAAqB;;IAE7B;GACDrJ,KAAK,EACL;KACC1M,QAAQ,CAACmN,QAAQ,EAAEC,QAAQ,EAC3B;OACC0J,uBAAM,CAACC,IAAI,CAAE,+BAA8B3J,QAAQ,IAAI,OAAQ,OAAMD,QAAS,EAAC,CAAC;OAChF,IAAI,CAAC0M,YAAY,EAAE;;IAEpB;GACDlN,OAAO,GACP;KACC,IAAI,CAAC,IAAI,CAAC3M,QAAQ,EAClB;OACC;;KAGD,IAAI,CAAC6Z,YAAY,EAAE;IACnB;GACDpY,OAAO,EACP;KACC,MAAMoY,YAAY,GAClB;OACC,IAAI,IAAI,CAAC7Z,QAAQ,KAAK,EAAE,EACxB;SACC;;OAGD,IAAI8Z,qBAAK,CAAC1Z,MAAM,CAAC2Z,YAAY,CAAC,IAAI,CAAC/Z,QAAQ,CAAC,EAC5C;SACC,MAAMga,YAAY,GAAG,MAAM,IAAI,CAAChW,cAAc,EAAE,CAACiW,eAAe,CAAC,IAAI,CAACja,QAAQ,CAAC;SAE/E,KAAK0Z,8BAAa,CAAC7R,WAAW,EAAE,CAACqS,SAAS,CAAC;WAC1Crb,IAAI,EAAEgC,kBAAM,CAACC,IAAI;WACjBqZ,QAAQ,EAAEH,YAAY;WACtBI,SAAS,EAAE,IAAI,CAAC7Z,MAAM,CAAC6Z;UACvB,CAAC;SAEF;;OAGD,IAAI,IAAI,CAACha,MAAM,CAACqM,MAAM,EACtB;SACCqK,uBAAM,CAACC,IAAI,CAAE,qBAAoB,IAAI,CAAC/W,QAAS,oBAAmB,CAAC;SACnE,IAAI,IAAI,CAAC6X,MAAM,EACf;WACC,MAAMxB,MAAM,GAAGnI,QAAQ,CAAC,IAAI,CAAC9N,MAAM,CAACJ,QAAQ,EAAE,EAAE,CAAC;WACjD,IAAI,CAACqa,cAAc,EAAE,CAACjE,sBAAsB,CAACC,MAAM,CAAC;UACpD,MACI,IAAI,IAAI,CAAC2B,SAAS,IAAI,CAAC,IAAI,CAACxX,OAAO,EACxC;WACCsW,uBAAM,CAACC,IAAI,CAAE,wBAAuB,IAAI,CAAC/W,QAAS,uCAAsC,CAAC;WACzF,KAAK,IAAI,CAACgE,cAAc,EAAE,CAACsW,eAAe,CAAC,IAAI,CAACta,QAAQ,CAAC;;SAE1D4H,6BAAS,CAACC,WAAW,EAAE,CAAC0S,UAAU,CAAC,IAAI,CAACna,MAAM,CAAC;SAE/C;;OAGD,IAAI,IAAI,CAACA,MAAM,CAACoa,OAAO,EACvB;SACC1D,uBAAM,CAACC,IAAI,CAAE,qBAAoB,IAAI,CAAC/W,QAAS,aAAY,CAAC;SAE5D;;OAGD,IAAI,IAAI,CAACO,MAAM,CAAC6Z,SAAS,EACzB;SACC,MAAM,IAAI,CAACK,mBAAmB,EAAE;SAChC7S,6BAAS,CAACC,WAAW,EAAE,CAAC0S,UAAU,CAAC,IAAI,CAACna,MAAM,CAAC;SAE/C;;OAGD,MAAM,IAAI,CAACsa,QAAQ,EAAE;OACrB9S,6BAAS,CAACC,WAAW,EAAE,CAAC0S,UAAU,CAAC,IAAI,CAACna,MAAM,CAAC;MAC/C;KACD,MAAMqa,mBAAmB,GACzB;OACC3D,uBAAM,CAACC,IAAI,CAAE,6BAA4B,IAAI,CAAC/W,QAAS,mBAAkB,IAAI,CAACO,MAAM,CAAC6Z,SAAU,EAAC,CAAC;OAEjG,MAAM,IAAI,CAACpW,cAAc,EAAE,CAACyW,mBAAmB,CAAC,IAAI,CAACza,QAAQ,EAAE,IAAI,CAACO,MAAM,CAAC6Z,SAAS,CAAC,CACnFzE,KAAK,CAAEhT,KAAK,IAAK;SACjB,IAAI,CAACgY,aAAa,CAAChY,KAAK,CAAC;SACzB8R,mBAAS,CAACmG,QAAQ,EAAE;QACpB,CAAC;OAEH9D,uBAAM,CAACC,IAAI,CAAE,qBAAoB,IAAI,CAAC/W,QAAS,8BAA6B,IAAI,CAACO,MAAM,CAAC6Z,SAAU,EAAC,CAAC;MACpG;KACD,MAAMM,QAAQ,GACd;OACC5D,uBAAM,CAACC,IAAI,CAAE,6BAA4B,IAAI,CAAC/W,QAAS,EAAC,CAAC;OAEzD,MAAM,IAAI,CAACgE,cAAc,EAAE,CAAC6W,oBAAoB,CAAC,IAAI,CAAC7a,QAAQ,CAAC,CAC7D2V,KAAK,CAAC,MAAM;SACZlB,mBAAS,CAACmG,QAAQ,EAAE;QACpB,CAAC;OAEH9D,uBAAM,CAACC,IAAI,CAAE,qBAAoB,IAAI,CAAC/W,QAAS,YAAW,CAAC;MAC3D;KACD2a,aAAa,CAAChY,KAAY,EAC1B;OACC,IAAIA,KAAK,CAAC6S,IAAI,KAAKsF,qBAAS,CAACC,OAAO,CAACC,QAAQ,EAC7C;SACC;;OAGDpT,6BAAS,CAACC,WAAW,EAAE,CAACoT,aAAa,CAACC,sBAAsB,CAAC;SAAElb,QAAQ,EAAE,IAAI,CAACA;QAAU,CAAC;MACzF;KACDgE,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACE,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAIC,uCAAW,EAAE;;OAGrC,OAAO,IAAI,CAACD,WAAW;MACvB;KACDmW,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACc,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAIhF,WAAW,EAAE;;OAGrC,OAAO,IAAI,CAACgF,WAAW;MACvB;KACD/W,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;CAMZ,CAAC;;CCvSD;AACA,CAAO,MAAMub,eAAe,GAAG;GAC9Bvc,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;aAAEuc;IAAQ;GACtBrc,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDc,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACDb,QAAQ,EACR;KACCic,UAAU,EAAE,MAAMA,0CAAU;KAC5Blb,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDub,aAAa,GACb;OACC,OAAO,IAAI,CAAClb,MAAM,CAACC,OAAO,CAAC,wCAAwC,CAAC,CAAC,IAAI,CAACF,MAAM,CAACY,MAAM,CAAC;MACxF;KACDwa,YAAY,GACZ;OACC,OAAO,IAAI,CAACnb,MAAM,CAACC,OAAO,CAAC,oCAAoC,CAAC,CAAC,IAAI,CAACib,aAAa,CAAC;;IAErF;GACD9Z,OAAO,EACP;KACCga,aAAa,GACb;OACC,IAAI,IAAI,CAACD,YAAY,EACrB;SACC9X,+CAAe,CAACqJ,WAAW,CAAC,IAAI,CAACwO,aAAa,CAAC;SAE/C;;OAGD7X,+CAAe,CAACkJ,SAAS,CAAC,IAAI,CAAC2O,aAAa,CAAC;MAC7C;KACDnX,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;CAMZ,CAAC;;CClDD;AACA,CAAO,MAAM6b,cAAc,GAAG;GAC7B7c,IAAI,EAAE,gBAAgB;GACtBC,UAAU,EAAE;iBAAEuN,2CAAU;iBAAEsD,0CAAU;KAAEyL;IAAiB;GACvDpc,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;MACT;KACDgX,SAAS,EAAE;OACVzc,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCwQ,UAAU,EAAE,MAAMA,0CAAU;KAC5BwJ,OAAO,GACP;OACC,OAAO,IAAI,CAAChZ,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACqb,SAAS,EAAE,IAAI,CAAC;MAC7D;KACDC,mBAAmB,GACnB;OACC,OAAO3I,sCAAiB,CAACpL,WAAW,EAAE,CAACgU,sBAAsB,CAACC,wBAAY,CAACC,mBAAmB,EAAE,IAAI,CAAC/b,QAAQ,CAAC;;IAE/G;GACDyB,OAAO,EACP;KACCua,WAAW,GACX;OACClW,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAAC5F,MAAM,CAAC6b,aAAa,CAAC;MACjD;KACD7X,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;CAsBZ,CAAC;;CCrED;AACA,CAAO,MAAMqc,oBAAoB,GAAG;GACnCrd,IAAI,EAAE,sBAAsB;GAC5BqB,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACDuB,OAAO,EACP;KACC2C,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;CAKZ,CAAC;;CCPD;AACA,CAAO,MAAMsc,mBAAmB,GAAG;GAClCtd,IAAI,EAAE,qBAAqB;GAC3BC,UAAU,EAAE;kBAAEsd,uCAAW;KAAEF,oBAAoB;kBAAEG,uCAAW;KAAE,GAAGC;IAAmB;GACpFtd,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDuc,eAAe,GACf;OACC,OAAO,IAAI,CAACnc,MAAM,CAACqM,MAAM,IAAI,CAAC,IAAI,CAACrM,MAAM,CAACoc,WAAW;MACrD;KACDjB,aAAa,GACb;OACC,OAAO,IAAI,CAAClb,MAAM,CAACC,OAAO,CAAC,wCAAwC,CAAC,CAAC,IAAI,CAACF,MAAM,CAACY,MAAM,CAAC;MACxF;KACDyb,WAAW,GACX;OACC,OAAO,IAAI,CAACpc,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAACib,aAAa,CAAC;MAClE;KACDmB,eAAe,GACf;OACC,IAAI,CAAC,IAAI,CAACtc,MAAM,CAACqM,MAAM,EACvB;SACC,OAAO,IAAI;;OAGZ,MAAMkQ,iBAAiB,GAAG,IAAIC,6CAAiB,CAAC,IAAI,CAAC5c,QAAQ,CAAC;OAE9D,OAAO2c,iBAAiB,CAACE,iBAAiB,CAAC,IAAI,CAACJ,WAAW,CAAC;;IAE7D;GACDhb,OAAO,EACP;KACCqb,oBAAoB,CAAC/B,OAAuB,EAAEgC,KAAiB,EAC/D;OACC,IAAI,CAACjb,KAAK,CAACkb,WAAW,CAACC,gBAAgB,CAAClC,OAAO,EAAEgC,KAAK,CAAC;MACvD;KACDG,uBAAuB,CAACnC,OAAuB,EAC/C;OACC,OAAQ,IAAIoC,kDAAuB,CAACpC,OAAO,CAAC,CAAEqC,OAAO,EAAE;;IAExD;GACDvd,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0BZ,CAAC;;CCrFD;AACA,CAAO,MAAMwd,cAAc,GAAG;GAC7Bxe,IAAI,EAAE,gBAAgB;GACtBC,UAAU,EAAE;iBAAEiB,sCAAU;KAAEoc,mBAAmB;qBAAEmB;IAAgB;GAC/Dte,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAACN,QAAQ,EAAE,IAAI,CAAC;MAC5D;KACDkN,YAAY,GACZ;OACC,OAAO,IAAI,CAAC9M,MAAM,CAACqM,MAAM;MACzB;KACD8O,aAAa,GACb;OACC,OAAO,IAAI,CAAClb,MAAM,CAACC,OAAO,CAAC,wCAAwC,CAAC,CAAC,IAAI,CAACF,MAAM,CAACY,MAAM,CAAC;MACxF;KACDyb,WAAW,GACX;OACC,OAAO,IAAI,CAACpc,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAACib,aAAa,CAAC;;IAEnE;GACD9Z,OAAO,EACP;KACC,MAAM8b,sBAAsB,GAC5B;OACC,MAAMnd,MAAM,GAAG,IAAI,CAAC0B,KAAK,CAAC1B,MAAM;OAEhC,MAAMod,kBAAkB,GAAG,IAAI,CAACtQ,YAAY,IAAI,CAAC,IAAI,CAAC9M,MAAM,CAACoc,WAAW;OACxE,IAAIgB,kBAAkB,EACtB;SACC,MAAMpd,MAAM,CAACyC,gBAAgB,EAAE,CAAC4a,uBAAuB,CAAC,IAAI,CAAClC,aAAa,CAAC;SAC3Enb,MAAM,CAAC2C,gBAAgB,CAAC,IAAI,CAACwY,aAAa,CAAC;SAE3C;;OAGDnb,MAAM,CAACiC,cAAc,EAAE;OACvB,MAAMjC,MAAM,CAACmC,iBAAiB,EAAE,CAACmb,aAAa,EAAE;OAChD,MAAM,IAAI,CAAC9a,SAAS,EAAE;OACtBxC,MAAM,CAACqC,cAAc,EAAE;OACvBrC,MAAM,CAACyC,gBAAgB,EAAE,CAACC,eAAe,CAAC,IAAI,CAACyY,aAAa,CAAC;OAC7D,MAAM,IAAI,CAAC3Y,SAAS,EAAE;OACtBxC,MAAM,CAAC2C,gBAAgB,CAAC,IAAI,CAACwY,aAAa,CAAC;MAC3C;KACDoC,wBAAwB,GACxB;OACC,IAAI,CAACJ,sBAAsB,EAAE;;IAE9B;GACD1d,QAAQ,EAAG;;;;;;;;;;;;;;CAcZ,CAAC;;CC/ED;AACA,CAAO,MAAM+d,gBAAgB,GAAG;GAC/B/e,IAAI,EAAE,kBAAkB;GACxBC,UAAU,EAAE;mBAAE4F;IAAc;GAC5B1F,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACD9E,QAAQ,EAAG;;;;;;;;CAQZ,CAAC;;CClBD;AACA,CAAO,MAAM8D,WAAS,GAAG;GACxB7E,UAAU,EAAE;iBAAE8E;IAAY;GAC1B5E,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDC,QAAQ,EACR;KACCwE,UAAU,EAAE,MAAMA,0CAAU;KAC5BC,WAAW,EAAE,MAAMA;IACnB;GACDrC,OAAO,EACP;KACCsC,aAAa,GACb;OACC,IAAI,CAACC,cAAc,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACjE,QAAQ,CAAC;MAC7C;KACDgE,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACE,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAIC,uCAAW,EAAE;;OAGrC,OAAO,IAAI,CAACD,WAAW;MACvB;KACDE,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;;IAE/C;GACDxE,QAAQ,EAAG;;;;;;;;;;;CAWZ,CAAC;;CCxCM,MAAMge,eAAe,GAAG;GAC9Bhf,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;sBAAE+F,gDAAe;KAAE6W,cAAc;KAAE2B,cAAc;KAAEO,gBAAgB;gBAAEja;IAAW;GAC5F3E,KAAK,EACL;KACCgB,QAAQ,EAAE;OACTd,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;MACV;KACDuc,SAAS,EAAE;OACVzc,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDS,QAAQ,EAAG;;;;;;;;;;;;;;;;CAgBZ,CAAC;;CC9BD;AACA,CAAO,MAAMie,cAAc,GAAG;GAC7Bjf,IAAI,EAAE,gBAAgB;GACtBC,UAAU,EAAE;KAAE+e;IAAiB;GAC/B7e,KAAK,EACL;KACC+e,MAAM,EAAE;OACP7e,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;MACV;KACDuc,SAAS,EAAE;OACVzc,IAAI,EAAEe,MAAM;OACZb,QAAQ,EAAE;;IAEX;GACDkM,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBpL,IAAI,GACJ;KACC,OAAO,EAAE;IACT;GACDb,QAAQ,EACR;KACCe,MAAM,GACN;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC0d,cAAc,CAAC;MACpE;KACDC,WAAW,GACX;OACC,OAAO,IAAI,CAAC5d,MAAM,CAACC,OAAO,CAAC,kCAAkC,CAAC,CAAC,IAAI,CAACyd,MAAM,CAAC;MAC3E;KACDC,cAAc,GACd;OACC,OAAO,IAAI,CAACC,WAAW,CAACjd,MAAM;MAC9B;KACDkd,gBAAgB,GAChB;OACC,IAAI,CAAC,IAAI,CAAC9d,MAAM,EAChB;SACC,OAAO,EAAE;;OAGV,OAAO,IAAI,CAACA,MAAM,CAACJ,QAAQ;;IAE5B;GACD2M,OAAO,GACP;KACC,IAAI,CAACwR,SAAS,EAAE;IAChB;GACD1c,OAAO,EACP;KACC,MAAM0c,SAAS,GACf;OACC,MAAM,IAAI,CAACzD,QAAQ,EAAE;OACrB9S,6BAAS,CAACC,WAAW,EAAE,CAAC0S,UAAU,CAAC,IAAI,CAACna,MAAM,CAAC;MAC/C;KACD,MAAMsa,QAAQ,GACd;OACC5D,uBAAM,CAACC,IAAI,CAAE,8CAA6C,IAAI,CAACgH,MAAO,EAAC,CAAC;OAExE,MAAM,IAAI,CAAC/Z,cAAc,EAAE,CAACoa,YAAY,CAAC,IAAI,CAACL,MAAM,CAAC,CACnDpI,KAAK,CAAC,MAAM;SACZ,IAAI,CAAC/J,KAAK,CAAC,OAAO,CAAC;QACnB,CAAC;OAEHkL,uBAAM,CAACC,IAAI,CAAE,sCAAqC,IAAI,CAACgH,MAAO,aAAY,CAAC;MAC3E;KACD/Z,cAAc,GACd;OACC,IAAI,CAAC,IAAI,CAACE,WAAW,EACrB;SACC,IAAI,CAACA,WAAW,GAAG,IAAIC,uCAAW,EAAE;;OAGrC,OAAO,IAAI,CAACD,WAAW;;IAExB;GACDrE,QAAQ,EAAG;;;;;CAKZ,CAAC;;CC9ED;AACA,OAAawe,WAAW,GAAG;GAC1Bxf,IAAI,EAAE,aAAa;GACnBC,UAAU,EAAE;KAAE8Y,UAAU;KAAEkG;IAAgB;GAC1C9e,KAAK,EACL;KACCmb,QAAQ,EAAE;OACTjb,IAAI,EAAEe,MAAM;OACZ0E,OAAO,EAAE;;IAEV;GACDzE,IAAI,GACJ;KACC,OAAO;OACNoe,cAAc,EAAE,CAAC;OACjBC,qBAAqB,EAAE;MACvB;IACD;GACDlf,QAAQ,EACR;KACCkB,MAAM,GACN;OACC,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC;MACnD;KACDke,YAAY,GACZ;OACC,OAAO,IAAI,CAACne,MAAM,CAACC,OAAO,CAAC,6BAA6B,CAAC;;IAE1D;GACDoM,KAAK,EACL;KACCnM,MAAM,GACN;OACC,IAAI,CAAC0b,aAAa,EAAE;;IAErB;GACDtP,OAAO,GACP;KACC7G,6BAAY,CAAC8G,SAAS,CAAC5G,qBAAS,CAAC5F,MAAM,CAACqe,YAAY,EAAE,IAAI,CAACC,cAAc,CAAC;KAC1E5Y,6BAAY,CAAC8G,SAAS,CAAC5G,qBAAS,CAAC5F,MAAM,CAAC6b,aAAa,EAAE,IAAI,CAAC0C,eAAe,CAAC;IAC5E;GACDpd,aAAa,GACb;KACCuE,6BAAY,CAACiH,WAAW,CAAC/G,qBAAS,CAAC5F,MAAM,CAACqe,YAAY,EAAE,IAAI,CAACC,cAAc,CAAC;KAC5E5Y,6BAAY,CAACiH,WAAW,CAAC/G,qBAAS,CAAC5F,MAAM,CAAC6b,aAAa,EAAE,IAAI,CAAC0C,eAAe,CAAC;IAC9E;GACDld,OAAO,EACP;KACCid,cAAc,CAAC3B,KAAuC,EACtD;OACC,MAAM;SAAEza;QAAW,GAAGya,KAAK,CAAC6B,OAAO,EAAE;OACrC,IAAI,CAACN,cAAc,GAAGhc,SAAS;OAC/B,IAAI,CAACic,qBAAqB,GAAG,IAAI;OACjC,IAAI,CAACle,MAAM,CAACmX,QAAQ,CAAC,6BAA6B,EAAE;SACnDqH,eAAe,EAAE,IAAI,CAAC1E,QAAQ;SAC9BmE,cAAc,EAAE,IAAI,CAACA;QACrB,CAAC;MACF;KACDK,eAAe,GACf;OACC,IAAI,CAAC1C,aAAa,EAAE;MACpB;KACDA,aAAa,GACb;OACC,IAAI,CAACqC,cAAc,GAAG,CAAC;OACvB,IAAI,CAACje,MAAM,CAACmX,QAAQ,CAAC,6BAA6B,CAAC;MACnD;KACDsH,sBAAsB,GACtB;OACC,IAAI,CAACP,qBAAqB,GAAG,KAAK;;IAEnC;GACD1e,QAAQ,EAAG;;;;;;;;;;CAUZ,CAAC;;;;;;;;"}