this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,n,s,i,o,a,r,l,C,g,c,m,p,v,M,u,h,d,L,B,y,X,b,_,N,I,O,f,k,R){"use strict";const x={chat:{list:R.RecentListContainer,content:d.ChatContent},createChat:{list:R.RecentListContainer,content:L.CreateChatContent},updateChat:{list:R.RecentListContainer,content:L.UpdateChatContent},channel:{list:I.ChannelListContainer,content:d.ChatContent},notification:{list:R.RecentListContainer,content:y.NotificationContent},openlines:{content:X.OpenlinesContent},openlinesV2:{list:k.OpenlineListContainer,content:b.OpenlinesV2Content},conference:{list:R.RecentListContainer,content:d.ChatContent},settings:{content:_.SettingsContent},copilot:{list:f.CopilotListContainer,content:d.ChatContent},aiAssistant:{list:N.AiAssistantListRouter,content:d.ChatContent},collab:{list:O.CollabListContainer,content:d.ChatContent},market:{content:B.MarketContent}};const A={name:"MessengerRoot",components:{MessengerNavigation:l.MessengerNavigation,OpenlinesContent:X.OpenlinesContent},data(){return{openlinesContentOpened:false}},computed:{layout(){return this.$store.getters["application/getLayout"]},layoutName(){return this.layout.name},entityId(){return this.layout.entityId},hasListComponent(){return Boolean(this.listComponent)},listComponent(){return x[this.layoutName].list},contentComponent(){return x[this.layoutName].content},isOpenline(){return this.layout.name===m.Layout.openlines},containerClasses(){return{"--dark-theme":v.ThemeManager.isDarkTheme(),"--light-theme":v.ThemeManager.isLightTheme(),"--desktop":M.DesktopManager.isDesktop(),"--air":u.LayoutManager.getInstance().isAirDesignEnabled()}},callContainerClass(){return[p.CallManager.viewContainerClass]},hasNavigation(){const t=!u.LayoutManager.getInstance().isAirDesignEnabled();return t!=null?t:true}},watch:{layoutName:{handler(t){if(t!==m.Layout.openlines){return}this.openlinesContentOpened=true},immediate:true}},created(){c.InitManager.start();C.CounterManager.getInstance().emitCounters();u.LayoutManager.init();g.Logger.warn("MessengerRoot created");void this.getLayoutManager().prepareInitialLayout()},beforeUnmount(){this.getLayoutManager().destroy()},methods:{onNavigationClick(t){h.NavigationManager.open(t)},onEntitySelect({layoutName:t,entityId:e}){void this.getLayoutManager().setLayout({name:t,entityId:e})},getLayoutManager(){return u.LayoutManager.getInstance()}},template:`\n\t\t<div class="bx-im-messenger__scope bx-im-messenger__container" :class="containerClasses">\n\t\t\t<MessengerNavigation\n\t\t\t\tv-if="hasNavigation"\n\t\t\t\t:currentLayoutName="layoutName" \n\t\t\t\t@navigationClick="onNavigationClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-messenger__layout_container">\n\t\t\t\t<div class="bx-im-messenger__layout_content">\n\t\t\t\t\t<div v-if="hasListComponent" class="bx-im-messenger__list_container">\n\t\t\t\t\t\t<KeepAlive>\n\t\t\t\t\t\t\t<component :is="listComponent" @selectEntity="onEntitySelect" />\n\t\t\t\t\t\t</KeepAlive>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-messenger__content_container" :class="{'--with-list': hasListComponent}">\n\t\t\t\t\t\t<div v-if="openlinesContentOpened" class="bx-im-messenger__openlines_container" :class="{'--hidden': !isOpenline}">\n\t\t\t\t\t\t\t<OpenlinesContent v-show="isOpenline" :entityId="entityId" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<component v-if="!isOpenline" :is="contentComponent" :entityId="entityId" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div :class="callContainerClass"></div>\n\t`};t.Messenger=A})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX,BX.Messenger.Integration.Viewer,BX,BX,BX.Messenger.v2.Css,BX.Messenger.v2.Css,BX.Messenger.v2.Css,BX.Messenger.v2.Component,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.Content,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.List);
//# sourceMappingURL=messenger.bundle.map.js