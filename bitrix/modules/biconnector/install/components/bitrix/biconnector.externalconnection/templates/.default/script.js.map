{"version":3,"file":"script.js","sources":["script.es6.js"],"sourcesContent":["import { ajax as Ajax, Dom, Event, Loc, Tag, Text, Reflection } from 'main.core';\nimport { BaseEvent } from 'main.core.events';\nimport { Popup } from 'main.popup';\nimport { Button, ButtonColor, ButtonManager, ButtonState } from 'ui.buttons';\nimport { Dialog } from 'ui.entity-selector';\nimport { Slider as ImportSlider } from 'biconnector.dataset-import';\n\ntype SettingField = {\n\tname: string,\n\ttype: string,\n\tcode: string,\n\tplaceholder: string,\n}\n\ntype Props = {\n\tsourceFields: { id: number, title: string, type: string, code: string | null, active: boolean },\n\tfieldsConfig: { [key: string]: SettingField[] },\n\tsupportedDatabases: { code: string; name: string }[],\n\tcloseAfterCreate: boolean,\n}\n\nclass ExternalConnectionForm\n{\n\t#node: HTMLElement;\n\t#props: Props;\n\t#checkConnectButton: Button;\n\t#connectionStatusNode: HTMLElement;\n\n\tconstructor(props: Props)\n\t{\n\t\tthis.#props = props;\n\t\tthis.#initForm();\n\t}\n\n\t#initForm()\n\t{\n\t\tthis.#node = document.querySelector('#connection-form');\n\t\tconst hintNode = Tag.render`\n\t\t\t<div class=\"hint-wrapper\"></div>\n\t\t`;\n\t\tDom.append(hintNode, this.#node);\n\t\tthis.#initHint();\n\n\t\tconst fieldsNode = Tag.render`\n\t\t\t<div class=\"fields-wrapper\"></div>\n\t\t`;\n\t\tDom.append(fieldsNode, this.#node);\n\t\tthis.#initFields();\n\n\t\tconst buttonBlock = Tag.render`\n\t\t\t<div class=\"db-connection-button-block\">\n\t\t\t\t<div class=\"db-connection-button\"></div>\n\t\t\t\t<div class=\"db-connection-status\"></div>\n\t\t\t</div>\n\t\t`;\n\t\tDom.append(buttonBlock, this.#node);\n\n\t\tthis.#initCheckConnectButton();\n\t\tthis.#initConnectionStatusBlock();\n\t}\n\n\t#initHint()\n\t{\n\t\tconst node = this.#node.querySelector('.hint-wrapper');\n\n\t\tconst articleCodes = {\n\t\t\t'1c': '23508958',\n\t\t\trest: '24486426',\n\t\t};\n\n\t\tconst articleCode = articleCodes[this.#props.sourceFields?.type] ?? articleCodes['1c'];\n\t\tconst link = `redirect=detail&code=${articleCode}`;\n\n\t\tconst hint = Tag.render`\n\t\t\t<div class=\"db-connection-hint\">\n\t\t\t\t${Loc.getMessage('EXTERNAL_CONNECTION_HINT', {\n\t\t\t\t\t'[link]': `<a class=\"ui-link\" onclick=\"top.BX.Helper.show(\\`${link}\\`)\">`,\n\t\t\t\t\t'[/link]': '</a>',\n\t\t\t\t})}\n\t\t\t</div>\n\t\t`;\n\t\tDom.append(hint, node);\n\t}\n\n\t#initFields()\n\t{\n\t\tconst fieldsNode = this.#node.querySelector('.fields-wrapper');\n\t\tconst sourceFields = this.#props.sourceFields ?? {};\n\t\tconst fields = Tag.render`\n\t\t\t<div class=\"form-fields\">\n\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Loc.getMessage('EXTERNAL_CONNECTION_FIELD_TYPE')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ui-ctl ui-ctl-after-icon ui-ctl-dropdown ui-ctl-w100\">\n\t\t\t\t\t\t<div class=\"ui-ctl-after ui-ctl-icon-angle\"></div>\n\t\t\t\t\t\t<div class=\"ui-ctl-element\"  id=\"connection-type-button\">\n\t\t\t\t\t\t\t${sourceFields.code\n\t\t\t\t\t\t\t\t? Text.encode(this.#props.supportedDatabases.find((db) => db.code === sourceFields.code)?.name)\n\t\t\t\t\t\t\t\t: Text.encode(this.#props.supportedDatabases[0]?.name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"hidden\" \n\t\t\t\t\t\t\tid=\"connection-type-code\"\n\t\t\t\t\t\t\tdata-code=\"code\"\n\t\t\t\t\t\t\tvalue=\"${sourceFields.code\n\t\t\t\t\t\t\t\t\t? this.#props.supportedDatabases.find((db) => db.code === sourceFields.code)?.code\n\t\t\t\t\t\t\t\t\t: this.#props.supportedDatabases[0]?.code\n\t\t\t\t\t\t\t\t}\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Loc.getMessage('EXTERNAL_CONNECTION_FIELD_NAME')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ui-form-content\">\n\t\t\t\t\t\t<div class=\"ui-ctl ui-ctl-textbox ui-ctl-w100\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tclass=\"ui-ctl-element\" \n\t\t\t\t\t\t\t\tplaceholder=\"${Loc.getMessage('EXTERNAL_CONNECTION_FIELD_NAME_PLACEHOLDER')}\" \n\t\t\t\t\t\t\t\tdata-code=\"title\"\n\t\t\t\t\t\t\t\tvalue=\"${sourceFields.title ?? ''}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tDom.append(fields, fieldsNode);\n\n\t\tconst button = document.getElementById('connection-type-button');\n\t\tconst dialog = new Dialog({\n\t\t\ttargetNode: button,\n\t\t\twidth: 465,\n\t\t\theight: 400,\n\t\t\tautoHide: true,\n\t\t\tmultiple: false,\n\t\t\tshowAvatars: false,\n\t\t\tcompactView: true,\n\t\t\tdropdownMode: true,\n\t\t\tenableSearch: true,\n\t\t\titems: this.#props.supportedDatabases.map((database) => ({\n\t\t\t\tid: database.code,\n\t\t\t\tentityId: 'biconnector-external-connection',\n\t\t\t\ttitle: database.name,\n\t\t\t\ttabs: 'connections',\n\t\t\t})),\n\t\t\tevents: {\n\t\t\t\t'Item:onSelect': (event) => {\n\t\t\t\t\tconst item = event.getData().item;\n\t\t\t\t\tconst selectedDatabaseCode = item.getId();\n\t\t\t\t\tconst selectedDatabaseName = item.getTitle();\n\n\t\t\t\t\tbutton.textContent = Text.encode(selectedDatabaseName);\n\t\t\t\t\tthis.#onChangeType({ target: { value: selectedDatabaseCode } });\n\t\t\t\t},\n\t\t\t},\n\t\t\tentities: [{\n\t\t\t\tid: 'biconnector-external-connection',\n\t\t\t}],\n\t\t\ttabs: [\n\t\t\t\t{\n\t\t\t\t\tid: 'connections',\n\t\t\t\t\tshowInList: true,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tif (sourceFields.id)\n\t\t{\n\t\t\tDom.attr(button, 'disabled', true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tEvent.bind(button, 'click', () => {\n\t\t\t\tdialog.show();\n\t\t\t});\n\t\t}\n\n\t\tconst fieldConfig = this.#props.fieldsConfig;\n\t\tconst connectionType = sourceFields.code ?? this.#props.supportedDatabases[0].code;\n\t\tfieldConfig[connectionType].forEach((field: SettingField) => {\n\t\t\tlet fieldType = field.type;\n\t\t\tif (field.code === 'password')\n\t\t\t{\n\t\t\t\tfieldType = 'password';\n\t\t\t}\n\t\t\tconst fieldNode = Tag.render`\n\t\t\t\t<div class=\"ui-form-row\">\n\t\t\t\t\t<div class=\"ui-form-label\">\n\t\t\t\t\t\t<div class=\"ui-ctl-label-text\">${Text.encode(field.name)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ui-form-content\">\n\t\t\t\t\t\t<div class=\"ui-ctl ui-ctl-textbox ui-ctl-w100\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"${fieldType}\" \n\t\t\t\t\t\t\t\tclass=\"ui-ctl-element\" \n\t\t\t\t\t\t\t\tdata-code=\"${field.code}\"\n\t\t\t\t\t\t\t\tplaceholder=\"${field.placeholder}\" \n\t\t\t\t\t\t\t\tvalue=\"${sourceFields[field.code] ?? ''}\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\tDom.append(fieldNode, fields);\n\t\t\tEvent.bind(fieldNode, 'input', () => this.#clearConnectionStatus());\n\t\t});\n\t}\n\n\t#onChangeType(event)\n\t{\n\t\tconst value = event.target.value;\n\n\t\tconst connector = this.#props.supportedDatabases.find((database) => database.code === value);\n\t\tthis.#props.sourceFields.code = value;\n\t\tthis.#props.sourceFields.type = connector.type ?? null;\n\t\tDom.clean(this.#node.querySelector('.hint-wrapper'));\n\t\tthis.#initHint();\n\t\tDom.clean(this.#node.querySelector('.fields-wrapper'));\n\t\tthis.#initFields();\n\t\tthis.#clearConnectionStatus();\n\t}\n\n\t#initCheckConnectButton()\n\t{\n\t\tconst connectButton = new Button({\n\t\t\ttext: Loc.getMessage('EXTERNAL_CONNECTION_CHECK_BUTTON'),\n\t\t\tcolor: ButtonColor.PRIMARY,\n\t\t\tonclick: (button: Button, event: BaseEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.#onCheckConnectClick()\n\t\t\t\t\t.catch(() => {});\n\t\t\t},\n\t\t\tnoCaps: true,\n\t\t});\n\t\tconnectButton.renderTo(this.#node.querySelector('.db-connection-button'));\n\t\tthis.#checkConnectButton = connectButton;\n\t}\n\n\t#initConnectionStatusBlock()\n\t{\n\t\tthis.#connectionStatusNode = this.#node.querySelector('.db-connection-status');\n\t}\n\n\t#clearConnectionStatus()\n\t{\n\t\tDom.clean(this.#connectionStatusNode);\n\t}\n\n\t#updateConnectionStatus(succedeed: boolean, errorMessage: string)\n\t{\n\t\tDom.clean(this.#connectionStatusNode);\n\t\tlet status = null;\n\t\tif (succedeed)\n\t\t{\n\t\t\tstatus = Tag.render`\n\t\t\t\t<div class=\"db-connection-success\">\n\t\t\t\t\t<div class=\"ui-icon-set --check\" style=\"--ui-icon-set__icon-size: 18px; --ui-icon-set__icon-color: var(--ui-color-palette-green-50);\"></div>\n\t\t\t\t\t${Loc.getMessage('EXTERNAL_CONNECTION_CHECK_SUCCESS')}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstatus = Tag.render`\n\t\t\t\t<div class=\"db-connection-error\">\n\t\t\t\t\t<div class=\"ui-icon-set --warning\" style=\"--ui-icon-set__icon-size: 18px; --ui-icon-set__icon-color: var(--ui-color-palette-red-60);\"></div>\n\t\t\t\t\t${errorMessage.replaceAll(/\\s+/g, ' ')}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t\tDom.append(status, this.#connectionStatusNode);\n\t}\n\n\t#getConnectionValues(): Object\n\t{\n\t\tconst result = {};\n\t\tthis.#node.querySelectorAll('[data-code]').forEach((field) => {\n\t\t\tresult[field.getAttribute('data-code')] = field.value;\n\t\t});\n\n\t\tconst type = this.#props?.sourceFields?.type ?? this.#props.supportedDatabases[0]?.type ?? null;\n\t\tif (type)\n\t\t{\n\t\t\tresult.type = type;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t#onCheckConnectClick(): Promise\n\t{\n\t\tthis.#checkConnectButton.setState(ButtonState.WAITING);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tAjax.runAction('biconnector.externalsource.source.checkConnectionByData', {\n\t\t\t\tdata: {\n\t\t\t\t\tdata: this.#getConnectionValues(),\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.#updateConnectionStatus(true);\n\t\t\t\t\tthis.#checkConnectButton.setState(null);\n\n\t\t\t\t\tresolve(response);\n\t\t\t\t})\n\t\t\t\t.catch((response) => {\n\t\t\t\t\tthis.#updateConnectionStatus(false, response.errors[0].message);\n\t\t\t\t\tthis.#checkConnectButton.setState(null);\n\n\t\t\t\t\treject();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tonClickSave()\n\t{\n\t\tconst saveButton = ButtonManager.createFromNode(document.querySelector('#connection-button-save'));\n\t\tsaveButton.setWaiting(true);\n\t\tconst connectionValues = this.#getConnectionValues();\n\t\tif (this.#props.sourceFields.id)\n\t\t{\n\t\t\tconnectionValues.id = this.#props.sourceFields.id;\n\t\t}\n\n\t\tthis.#onCheckConnectClick()\n\t\t\t.then(() => {\n\t\t\t\treturn Ajax.runAction('biconnector.externalsource.source.save', {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdata: connectionValues,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tBX.SidePanel.Instance.postMessage(window, 'BIConnector:ExternalConnection:onConnectionSave', {\n\t\t\t\t\tconnection: response.data.connection,\n\t\t\t\t});\n\t\t\t\tif (this.#props.closeAfterCreate)\n\t\t\t\t{\n\t\t\t\t\tthis.#closeSlider();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.#showSaveSuccessPopup(response.data.connection, response.data.supersetIsReady);\n\t\t\t\t\tsaveButton.setWaiting(false);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((response) => {\n\t\t\t\tsaveButton.setWaiting(false);\n\t\t\t\tif (response?.errors?.length > 0)\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: response.errors[0].message,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tBX.SidePanel.Instance.postMessage(window, 'BIConnector:ExternalConnection:onConnectionCreationError');\n\t\t\t});\n\t}\n\n\t#showSaveSuccessPopup(connection: { id: any, name: string, type: string }, supersetIsReady: boolean)\n\t{\n\t\tlet popup: ?Popup = null;\n\n\t\t// show for (new or active sources) and ready superset only\n\t\tconst showCreateDatasetButton = supersetIsReady\n\t\t\t&& (\n\t\t\t\t!(Object.hasOwn(this.#props.sourceFields, 'id'))\n\t\t\t\t|| this.#props.sourceFields.active\n\t\t\t)\n\t\t;\n\t\tconst createDatasetButton = showCreateDatasetButton ? Tag.render`\n\t\t\t<a class=\"ui-btn ui-btn-md ui-btn-primary\">\n\t\t\t\t${Loc.getMessage('EXTERNAL_CONNECTION_CREATE_DATASET')}\n\t\t\t</a>\n\t\t` : false;\n\n\t\tconst closeButton = Tag.render`\n\t\t\t<a class=\"ui-btn ui-btn-md ui-btn-light-border\">\n\t\t\t\t${Loc.getMessage('EXTERNAL_CONNECTION_CLOSE')}\n\t\t\t</a>\n\t\t`;\n\n\t\tconst onPopupClose = () => {\n\t\t\tthis.#closeSlider();\n\t\t};\n\n\t\tconst sourceType = this.#props.sourceFields.type ?? this.#props.supportedDatabases[0].code;\n\n\t\tEvent.bind(createDatasetButton, 'click', () => {\n\t\t\tonPopupClose();\n\t\t\tImportSlider.open(sourceType, 0, {\n\t\t\t\tconnectionId: connection.id,\n\t\t\t\tconnectionType: connection.type,\n\t\t\t});\n\t\t});\n\n\t\tEvent.bind(closeButton, 'click', () => {\n\t\t\tonPopupClose();\n\t\t});\n\n\t\tconst isEditMode = Boolean(this.#props.sourceFields.id);\n\t\tconst popupMessageCode = isEditMode ? 'EXTERNAL_CONNECTION_EDIT_SUCCESS' : 'EXTERNAL_CONNECTION_SAVE_SUCCESS';\n\t\tconst popupText = Loc.getMessage(\n\t\t\tpopupMessageCode,\n\t\t\t{ '#CONNECTION_TITLE#': Text.encode(this.#getConnectionValues().title) },\n\t\t);\n\n\t\tconst popupContent = Tag.render`\n\t\t\t<div class=\"biconnector-popup--full-height\">\n\t\t\t\t<div class=\"biconnector-save-progress-popup\">\n\t\t\t\t\t<div class=\"biconnector-save-progress-popup__content\">\n\t\t\t\t\t\t<div class=\"biconnector-save-progress-popup__success-logo\"></div>\n\t\t\t\t\t\t<div class=\"biconnector-save-progress-popup__texts\">\n\t\t\t\t\t\t\t<h3 class=\"biconnector-save-progress-popup__header\">${popupText}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"biconnector-save-progress-popup__buttons\">\n\t\t\t\t\t\t\t${createDatasetButton}\n\t\t\t\t\t\t\t${closeButton}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tpopup = new Popup({\n\t\t\tcontent: popupContent,\n\t\t\tautoHide: true,\n\t\t\tevents: {\n\t\t\t\tonPopupClose,\n\t\t\t\tonPopupDestroy: onPopupClose,\n\t\t\t},\n\t\t\tfixed: true,\n\t\t\twidth: 500,\n\t\t\tminHeight: 299,\n\t\t\tcloseIcon: true,\n\t\t\tnoAllPaddings: true,\n\t\t\toverlay: true,\n\t\t});\n\n\t\tpopup.show();\n\t}\n\n\t#closeSlider()\n\t{\n\t\tBX.SidePanel.Instance.postMessage(window, 'BIConnector:ExternalConnection:onConnectionSliderClose');\n\t\tBX.SidePanel.Instance.getTopSlider().close();\n\t}\n}\n\nReflection.namespace('BX.BIConnector').ExternalConnectionForm = ExternalConnectionForm;\n"],"names":["ExternalConnectionForm","props","saveButton","ButtonManager","createFromNode","document","querySelector","setWaiting","connectionValues","sourceFields","id","then","Ajax","runAction","data","response","BX","SidePanel","Instance","postMessage","window","connection","closeAfterCreate","supersetIsReady","errors","length","UI","Notification","Center","notify","content","message","hintNode","Tag","render","Dom","append","fieldsNode","buttonBlock","node","articleCodes","rest","articleCode","type","link","hint","Loc","getMessage","fields","code","Text","encode","supportedDatabases","find","db","name","title","button","getElementById","dialog","Dialog","targetNode","width","height","autoHide","multiple","showAvatars","compactView","dropdownMode","enableSearch","items","map","database","entityId","tabs","events","event","item","getData","selectedDatabaseCode","getId","selectedDatabaseName","getTitle","textContent","target","value","entities","showInList","attr","Event","bind","show","fieldConfig","fieldsConfig","connectionType","forEach","field","fieldType","fieldNode","placeholder","connector","clean","connectButton","Button","text","color","ButtonColor","PRIMARY","onclick","preventDefault","noCaps","renderTo","succedeed","errorMessage","status","replaceAll","result","querySelectorAll","getAttribute","setState","ButtonState","WAITING","Promise","resolve","reject","popup","showCreateDatasetButton","Object","hasOwn","active","createDatasetButton","closeButton","onPopupClose","sourceType","ImportSlider","open","connectionId","isEditMode","Boolean","popupMessageCode","popupText","popupContent","Popup","onPopupDestroy","fixed","minHeight","closeIcon","noAllPaddings","overlay","getTopSlider","close","Reflection","namespace"],"mappings":"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"}